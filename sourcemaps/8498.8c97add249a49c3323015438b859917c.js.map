{"version":3,"file":"js/8498.aaf779f187fe9549c050.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_breakpoint_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useScreenSize/breakpoints.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useScreenSize/getVariant.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js","webpack:///./src/smart-components/role/ResourceDefinitionsFormTemplate.js","webpack:///./src/smart-components/role/edit-resource-definitions-modal.js","webpack:///./src/smart-components/role/role-resource-definitions.js","webpack:///./src/smart-components/role/role-row-wrapper.js","webpack:///./src/smart-components/role/roles.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useScreenSize/useScreenSize.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useScreenSize/isSmallScreen.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.global_breakpoint_xs = {\n  \"name\": \"--pf-global--breakpoint--xs\",\n  \"value\": \"0\",\n  \"var\": \"var(--pf-global--breakpoint--xs)\"\n};\nexports[\"default\"] = exports.global_breakpoint_xs;","import xsBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_xs';\nimport smBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_sm';\nimport mdBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_md';\nimport lgBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_lg';\nimport xlBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_xl';\nimport xxlBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_2xl';\nvar breakPoints = {\n    xs: parseInt(xsBreakpoint.value.replace('px', '')),\n    sm: parseInt(smBreakpoint.value.replace('px', '')),\n    md: parseInt(mdBreakpoint.value.replace('px', '')),\n    lg: parseInt(lgBreakpoint.value.replace('px', '')),\n    xl: parseInt(xlBreakpoint.value.replace('px', '')),\n    '2xl': parseInt(xxlBreakpoint.value.replace('px', '')),\n};\nexport default breakPoints;\n//# sourceMappingURL=breakpoints.js.map","import breakpoints from './breakpoints';\nvar getVariant = function () {\n    var width = window.innerWidth;\n    var result;\n    for (var _i = 0, _a = Object.entries(breakpoints); _i < _a.length; _i++) {\n        var _b = _a[_i], variant = _b[0], size = _b[1];\n        if (size >= width) {\n            break;\n        }\n        result = variant;\n    }\n    return result;\n};\nexport default getVariant;\n//# sourceMappingURL=getVariant.js.map","export const createRows = (data) =>\n  data.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n","import React from 'react';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { Alert } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitionsFormTemplate = ({ ModalProps, ...props }) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  return (\n    <ModalFormTemplate\n      {...props}\n      ModalProps={{\n        ...ModalProps,\n        onClose: () => ModalProps.onClose(values),\n      }}\n      alert={\n        values['dual-list-select']\n          ? undefined\n          : () => (\n              <div className=\"rbac-m-resource-definitions\">\n                <Alert className=\"pf-c-modal__alert\" variant=\"danger\" isInline title={intl.formatMessage(messages.defineAtLeastOneResource)} />\n              </div>\n            )\n      }\n    />\n  );\n};\n\nResourceDefinitionsFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ResourceDefinitionsFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { updateRole, fetchRole } from '../../redux/actions/role-actions';\nimport { getResource, getResourceDefinitions } from '../../redux/actions/cost-management-actions';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { WarningModal } from '../common/warningModal';\nimport { Spinner, Modal, ModalVariant, Bullseye } from '@patternfly/react-core';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport ResourceDefinitionsFormTemplate from './ResourceDefinitionsFormTemplate';\nimport flatten from 'lodash/flattenDeep';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst createOptions = (resources) =>\n  Object.entries(resources).reduce(\n    (acc, [key, value]) => [\n      ...acc,\n      ...value.map((r) => ({\n        value: r.value,\n        path: key,\n        label: r.value,\n      })),\n    ],\n    []\n  );\n\nconst initialState = {\n  changedResources: undefined,\n  cancelWarningVisible: false,\n  resourcesPath: undefined,\n  loadingStateVisible: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst createEditResourceDefinitionsSchema = (resources, resourcesPath, options) => {\n  const intl = useIntl();\n  return {\n    fields: [\n      {\n        component: componentTypes.DUAL_LIST_SELECT,\n        name: 'dual-list-select',\n        leftTitle: intl.formatMessage(messages.resourcesAvailable),\n        rightTitle: intl.formatMessage(messages.resourcesDefined),\n        filterOptionsTitle: intl.formatMessage(messages.filterByResource),\n        filterValueTitle: intl.formatMessage(messages.filterByResource),\n        options: [...(resourcesPath && resources ? options : [])],\n        validate: [{ type: 'validate-resources' }],\n        isSearchable: true,\n      },\n    ],\n  };\n};\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }, resourcesPath) => ({\n  resourceTypes: resourceTypes.data,\n  resources: resources[resourcesPath] ? { resourcesPath: resources[resourcesPath] } : resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst validatorMapper = {\n  'validate-resources': () => (value) => value && value.length > 0 ? undefined : 'At least one resource must be defined for this permission',\n};\n\nconst EditResourceDefinitionsModal = ({ cancelRoute }) => {\n  const intl = useIntl();\n  const { roleId, permissionId } = useParams();\n  const navigate = useAppNavigate();\n\n  const dispatch = useDispatch();\n  const fetchResourceDefinitions = () => dispatch(getResourceDefinitions());\n\n  const [state, dispatchLocally] = useReducer(reducer, initialState);\n\n  const { definedResources, role } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      definedResources: state.roleReducer.selectedRole?.access\n        ? flatten(\n            state.roleReducer.selectedRole.access\n              .filter((a) => a.permission === permissionId)\n              .map((access) => access.resourceDefinitions.map((resource) => resource.attributeFilter.value))\n          )\n        : [],\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector((props) => selector(props, state.resourcesPath), shallowEqual);\n\n  useEffect(() => {\n    fetchResourceDefinitions();\n  }, [permissionId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let path = resourceTypes.find((r) => r.value === permissionId.split(':')?.[1])?.path;\n      if (path) {\n        dispatchLocally({ type: 'update', payload: { resourcesPath: path.split('/')[5] } });\n        dispatch(getResource(path));\n      }\n    }\n  }, [resourceTypes]);\n\n  const onCancel = () => navigate(cancelRoute, { replace: true });\n\n  const handleCancel = (data) => {\n    if (data['dual-list-select'] === definedResources) {\n      onCancel();\n    } else {\n      dispatchLocally({\n        type: 'update',\n        payload: {\n          changedResources: data['dual-list-select'],\n          cancelWarningVisible: true,\n        },\n      });\n    }\n  };\n\n  const handleSubmit = (data) => {\n    dispatchLocally({ type: 'update', payload: { changedResources: data['dual-list-select'] } });\n    const newAccess = {\n      permission: permissionId,\n      resourceDefinitions: [\n        {\n          attributeFilter: {\n            key: `cost-management.${permissionId.split(':')?.[1]}`,\n            operation: data['dual-list-select'].length === 1 ? 'equal' : 'in',\n            value: data['dual-list-select'].length === 1 ? data['dual-list-select'][0] : data['dual-list-select'],\n          },\n        },\n      ],\n    };\n    dispatch(updateRole(roleId, { ...role, access: [...role.access.filter((item) => item.permission !== permissionId), newAccess] }), true).then(\n      () => {\n        dispatch(fetchRole(roleId));\n        navigate(cancelRoute);\n      }\n    );\n  };\n\n  const options = createOptions(resources);\n\n  return (\n    <React.Fragment>\n      <WarningModal\n        customTitle={intl.formatMessage(messages.exitEditResourceDefinitions)}\n        customDescription={intl.formatMessage(messages.changesWillBeLost)}\n        isOpen={state.cancelWarningVisible}\n        onModalCancel={() => dispatchLocally({ type: 'update', payload: { cancelWarningVisible: false } })}\n        onConfirmCancel={onCancel}\n      ></WarningModal>\n      {(isLoading || isLoadingResources) && state.loadingStateVisible ? (\n        <Modal\n          variant={ModalVariant.large}\n          className=\"rbac-m-resource-definitions\"\n          isOpen={true}\n          title={intl.formatMessage(messages.editResourceDefinitions)}\n          onClose={() => {\n            dispatchLocally({ type: 'update', payload: { loadingStateVisible: false } });\n            onCancel();\n          }}\n        >\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        </Modal>\n      ) : (\n        <FormRenderer\n          schema={createEditResourceDefinitionsSchema(resources, state.resourcesPath, options)}\n          componentMapper={componentMapper}\n          initialValues={{ 'dual-list-select': state.changedResources || definedResources || [] }}\n          onSubmit={handleSubmit}\n          onCancel={(data) => handleCancel(data)}\n          validatorMapper={validatorMapper}\n          FormTemplate={(props) => (\n            <ResourceDefinitionsFormTemplate\n              {...props}\n              ModalProps={{\n                onClose: handleCancel,\n                isOpen: !state.cancelWarningVisible,\n                variant: 'large',\n                title: intl.formatMessage(messages.editResourceDefinitions),\n                description: intl.formatMessage(messages.editPermissionsUsingArrows),\n              }}\n            />\n          )}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nEditResourceDefinitionsModal.propTypes = {\n  cancelRoute: PropTypes.string.isRequired,\n};\n\nexport default EditResourceDefinitionsModal;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants, Level, LevelItem, Button } from '@patternfly/react-core';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-resource-definitions-table-helpers';\nimport { useParams, Route, Routes } from 'react-router-dom';\nimport { TopToolbar } from '../../presentational-components/shared/top-toolbar';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { ToolbarTitlePlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport paths from '../../utilities/pathnames';\nimport AppLink, { mergeToBasename } from '../../presentational-components/shared/AppLink';\nimport EditResourceDefinitionsModal from './edit-resource-definitions-modal';\nimport { getBackRoute } from '../../helpers/shared/helpers';\nimport flatten from 'lodash/flatten';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitions = () => {\n  const intl = useIntl();\n  const [config, setConfig] = useState({\n    pagination: {\n      ...defaultSettings,\n      filter: '',\n    },\n  });\n\n  const { pagination, filter } = config;\n\n  const dispatch = useDispatch();\n\n  const { roleId, permissionId } = useParams();\n\n  const { role, permission, isRecordLoading, rolesPagination, rolesFilters } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      permission: state.roleReducer.selectedRole.access\n        ? {\n            ...state.roleReducer.selectedRole?.access.find((a) => a.permission === permissionId),\n          }\n        : {},\n      isRecordLoading: state.roleReducer.isRecordLoading,\n      rolesPagination: state.roleReducer?.roles?.pagination || defaultSettings,\n      rolesFilters: state.roleReducer?.roles?.filters || {},\n    }),\n    shallowEqual\n  );\n\n  const fetchData = () => {\n    dispatch(fetchRole(roleId));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [roleId]);\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0,\n      },\n    });\n  }, [role]);\n\n  const filteredRows = permission.resourceDefinitions\n    ? flatten(permission.resourceDefinitions.map((definition) => definition.attributeFilter.value)).filter((value) =>\n        filter ? value.includes(filter) : true\n      )\n    : [];\n\n  const routes = () => (\n    <Routes>\n      <Route\n        path={paths['role-detail-permission-edit'].path}\n        element={\n          <EditResourceDefinitionsModal\n            cancelRoute={paths['role-detail-permission'].link.replace(':roleId', roleId).replace(':permissionId', permissionId)}\n          />\n        }\n      />\n    </Routes>\n  );\n\n  const toolbarButtons = () =>\n    !role.system\n      ? [\n          <Fragment key=\"edit-resource-definitions\">\n            <AppLink to={paths['role-detail-permission-edit'].link.replace(':roleId', roleId).replace(':permissionId', permissionId)}>\n              <Button variant=\"primary\" aria-label=\"Edit\">\n                {intl.formatMessage(messages.edit)}\n              </Button>\n            </AppLink>\n          </Fragment>,\n        ]\n      : [];\n  const data = filteredRows.slice(pagination.offset, pagination.offset + pagination.limit);\n\n  return (\n    <Fragment>\n      <TopToolbar\n        breadcrumbs={[\n          { title: intl.formatMessage(messages.roles), to: getBackRoute(mergeToBasename(paths['roles'].link), rolesPagination, rolesFilters) },\n          {\n            title: isRecordLoading ? undefined : role && (role.display_name || role.name),\n            to: mergeToBasename(paths['role-detail'].link.replace(':groupId', roleId)),\n          },\n          { title: permissionId, isActive: true },\n        ]}\n      >\n        <Level>\n          <LevelItem>\n            <PageHeaderTitle title={permissionId || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n          </LevelItem>\n        </Level>\n      </TopToolbar>\n      <section className=\"pf-c-page__main-section rbac-c-role__permissions\">\n        <TextContent>\n          <Text component={TextVariants.h1}>{intl.formatMessage(messages.definedResources)}</Text>\n        </TextContent>\n        <TableToolbarView\n          columns={[{}]}\n          rows={createRows(data)}\n          data={data}\n          filterValue={filter}\n          fetchData={({ limit, offset, name }) =>\n            setConfig({\n              ...config,\n              filter: name,\n              pagination: {\n                ...config.pagination,\n                limit,\n                offset,\n              },\n            })\n          }\n          isCompact\n          routes={routes}\n          setFilterValue={({ name }) =>\n            setConfig({\n              ...config,\n              filter: name,\n            })\n          }\n          toolbarButtons={toolbarButtons}\n          isLoading={isRecordLoading}\n          pagination={{\n            ...pagination,\n            count: filteredRows.length,\n          }}\n          titlePlural={intl.formatMessage(messages.resources).toLowerCase()}\n          titleSingular={intl.formatMessage(messages.resource).toLowerCase()}\n          hideHeader\n          tableId=\"role-resource-definitions\"\n        />\n      </section>\n    </Fragment>\n  );\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst RoleRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={classnames(className, {\n        'rbac-c-role-default': row.system,\n      })}\n      row={row}\n      {...props}\n    />\n  );\n};\n\nRoleRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    system: PropTypes.bool,\n  }),\n  className: PropTypes.string,\n};\n\nexport default RoleRowWrapper;\n","import React, { Fragment, Suspense, useState, useEffect, lazy, useContext, useRef } from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport { cellWidth, compoundExpand, nowrap, sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport { useScreenSize, isSmallScreen } from '@redhat-cloud-services/frontend-components/useScreenSize';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport { createRows } from './role-table-helpers';\nimport { getBackRoute, mappedProps, removeQueryParams } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport RemoveRole from './remove-role-modal';\nimport Role from './role';\nimport EditRole from './edit-role-modal';\nimport PageActionRoute from '../common/page-action-route';\nimport ResourceDefinitions from './role-resource-definitions';\nimport PermissionsContext from '../../utilities/permissions-context';\nimport {\n  syncDefaultPaginationWithUrl,\n  applyPaginationToUrl,\n  isPaginationPresentInUrl,\n  defaultAdminSettings,\n  defaultSettings,\n} from '../../helpers/shared/pagination';\nimport { syncDefaultFiltersWithUrl, applyFiltersToUrl, areFiltersPresentInUrl } from '../../helpers/shared/filters';\nimport RoleRowWrapper from './role-row-wrapper';\nimport AppLink, { mergeToBasename } from '../../presentational-components/shared/AppLink';\nimport messages from '../../Messages';\nimport paths from '../../utilities/pathnames';\nimport './roles.scss';\n\nconst AddRoleWizard = lazy(() => import(/* webpackChunkname: \"AddRoleWizard\" */ './add-role/add-role-wizard'));\n\nconst Roles = () => {\n  const { orgAdmin, userAccessAdministrator } = useContext(PermissionsContext);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const textFilterRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const screenSize = useScreenSize();\n\n  const { roles, filters, pagination, isLoading } = useSelector(\n    ({\n      roleReducer: {\n        roles: { data, filters, pagination },\n        isLoading,\n      },\n    }) => ({\n      roles: data,\n      filters,\n      pagination: {\n        limit: pagination.limit ?? (orgAdmin ? defaultAdminSettings : defaultSettings).limit,\n        offset: pagination.offset ?? (orgAdmin ? defaultAdminSettings : defaultSettings).offset,\n        count: pagination.count,\n        redirected: pagination.redirected,\n      },\n      isLoading,\n    }),\n    shallowEqual\n  );\n\n  const columns = [\n    { title: intl.formatMessage(messages.name), key: 'display_name', transforms: [cellWidth(20), sortable] },\n    { title: intl.formatMessage(messages.description) },\n    { title: intl.formatMessage(messages.permissions), cellTransforms: [compoundExpand], transforms: [nowrap] },\n    { title: intl.formatMessage(messages.groups), cellTransforms: [compoundExpand], transforms: [nowrap] },\n    { title: intl.formatMessage(messages.lastModified), key: 'modified', transforms: [nowrap, sortable] },\n  ];\n  const fetchData = (options) => dispatch(fetchRolesWithPolicies({ ...options, usesMetaInURL: true }));\n\n  const isSelectable = orgAdmin || userAccessAdministrator;\n  const [filterValue, setFilterValue] = useState(filters.display_name || '');\n  const [sortByState, setSortByState] = useState({ index: Number(isSelectable), direction: 'asc' });\n  const [expanded, setExpanded] = useState({});\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index - Number(isSelectable)].key}`;\n\n  useEffect(() => {\n    applyPaginationToUrl(location, navigate, pagination.limit, pagination.offset);\n  }, [pagination.offset, pagination.limit, pagination.count, pagination.redirected]);\n\n  useEffect(() => {\n    const { limit, offset } = syncDefaultPaginationWithUrl(location, navigate, pagination);\n    const { display_name } = syncDefaultFiltersWithUrl(location, navigate, ['display_name'], { display_name: filterValue });\n    setFilterValue(display_name);\n    insights.chrome.appNavClick({ id: 'roles', secondaryNav: true });\n    fetchData({ limit, offset, orderBy, filters: { display_name } });\n  }, []);\n\n  useEffect(() => {\n    if (!location.pathname.includes('detail')) {\n      isPaginationPresentInUrl(location) || applyPaginationToUrl(location, navigate, pagination.limit, pagination.offset);\n      filterValue?.length > 0 &&\n        !areFiltersPresentInUrl(location, ['display_name']) &&\n        syncDefaultFiltersWithUrl(location, navigate, ['display_name'], { display_name: filterValue });\n    } else {\n      removeQueryParams(location, navigate);\n    }\n  }, [location.pathname]);\n\n  const routes = () => (\n    <Suspense fallback={<Fragment />}>\n      <Routes>\n        <Route exact path={paths['add-role'].path} element={<AddRoleWizard pagination={pagination} filters={{ display_name: filterValue }} />} />\n        <Route\n          exact\n          path={paths['remove-role'].path}\n          element={\n            <>\n              {!isLoading && (\n                <RemoveRole\n                  afterSubmit={() => {\n                    fetchData({ ...pagination, offset: 0, filters: { display_name: filterValue } }, true);\n                    setSelectedRows([]);\n                  }}\n                  routeMatch={paths['remove-role'].path}\n                  cancelRoute={mergeToBasename(getBackRoute(paths.roles.link, pagination, filters))}\n                  submitRoute={mergeToBasename(getBackRoute(paths.roles.link, { ...pagination, offset: 0 }, filters))}\n                />\n              )}\n            </>\n          }\n        />\n        <Route\n          exact\n          path={paths['edit-role'].path}\n          element={\n            <>\n              {!isLoading && (\n                <EditRole\n                  afterSubmit={() => {\n                    fetchData({ ...pagination, offset: 0, filters: { display_name: filterValue } }, true);\n                    setSelectedRows([]);\n                  }}\n                  cancelRoute={mergeToBasename(getBackRoute(paths.roles.link, pagination, filters))}\n                  submitRoute={mergeToBasename(getBackRoute(paths.roles.link, { ...pagination, offset: 0 }, filters))}\n                />\n              )}\n            </>\n          }\n        />\n      </Routes>\n    </Suspense>\n  );\n\n  const actionResolver = (row) =>\n    row.compoundParent\n      ? []\n      : [\n          {\n            title: intl.formatMessage(messages.edit),\n            onClick: (_event, _rowId, role) => navigate(mergeToBasename(paths['edit-role'].link.replace(':roleId', role.uuid))),\n          },\n          {\n            title: intl.formatMessage(messages.delete),\n            onClick: (_event, _rowId, role) => navigate(mergeToBasename(paths['remove-role'].link.replace(':roleId', role.uuid))),\n          },\n        ];\n\n  const toolbarButtons = () =>\n    orgAdmin || userAccessAdministrator\n      ? [\n          <AppLink to={paths['add-role'].link} key=\"add-role\" className=\"rbac-m-hide-on-sm\">\n            <Button ouiaId=\"create-role-button\" variant=\"primary\" aria-label=\"Create role\">\n              {intl.formatMessage(messages.createRole)}\n            </Button>\n          </AppLink>,\n          ...(isSmallScreen(screenSize)\n            ? [\n                {\n                  label: intl.formatMessage(messages.createRole),\n                  onClick: () => navigate(mergeToBasename(paths['add-role'].link)),\n                },\n              ]\n            : []),\n          {\n            label: intl.formatMessage(messages.edit),\n            props: {\n              isDisabled: !(selectedRows.length === 1),\n            },\n            onClick: () => navigate(mergeToBasename(paths['edit-role'].link.replace(':roleId', selectedRows[0].uuid))),\n          },\n          {\n            label: intl.formatMessage(messages.delete),\n            props: {\n              isDisabled: !selectedRows.length > 0,\n            },\n            onClick: () =>\n              navigate(\n                mergeToBasename(\n                  paths['remove-role'].link.replace(\n                    ':roleId',\n                    selectedRows.map(({ uuid }) => uuid)\n                  )\n                )\n              ),\n          },\n        ]\n      : [];\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) =>\n      newSelection(rows)\n        .filter(({ platform_default: isPlatformDefault, admin_default: isAdminDefault, system }) => !(isPlatformDefault || isAdminDefault || system))\n        .map(({ uuid, name }) => ({ uuid, label: name }))\n    );\n  };\n\n  const onExpand = (_event, _rowIndex, colIndex, isOpen, rowData) =>\n    setExpanded({ ...expanded, [rowData.uuid]: isOpen ? -1 : colIndex + Number(!isSelectable) });\n\n  const rows = createRows(roles, selectedRows, intl, expanded);\n  const renderRolesList = () => (\n    <Stack className=\"rbac-c-roles\">\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title={intl.formatMessage(messages.roles)} />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id=\"tab-roles\">\n          <TableToolbarView\n            isSelectable={isSelectable}\n            checkedRows={selectedRows}\n            textFilterRef={textFilterRef}\n            setCheckedItems={setCheckedItems}\n            actionResolver={actionResolver}\n            columns={columns}\n            areActionsDisabled={({ system }) => !!system}\n            rowWrapper={RoleRowWrapper}\n            rows={rows}\n            data={roles}\n            filterValue={filterValue}\n            fetchData={({ name, limit, offset, orderBy }) => {\n              applyFiltersToUrl(location, navigate, { display_name: name });\n              return fetchData(mappedProps({ limit, offset, orderBy, filters: { display_name: name } }));\n            }}\n            setFilterValue={({ name = '' }) => setFilterValue(name)}\n            isExpandable\n            onExpand={onExpand}\n            isLoading={!isLoading && roles?.length === 0 && filterValue?.length === 0 ? true : isLoading}\n            pagination={pagination}\n            routes={routes}\n            ouiaId=\"roles-table\"\n            titlePlural={intl.formatMessage(messages.roles).toLowerCase()}\n            titleSingular={intl.formatMessage(messages.role).toLowerCase()}\n            toolbarButtons={toolbarButtons}\n            filterPlaceholder={intl.formatMessage(messages.name).toLowerCase()}\n            tableId=\"roles\"\n            sortBy={sortByState}\n            onSort={(e, index, direction) => {\n              const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index - Number(isSelectable)].key}`;\n              setSortByState({ index, direction });\n              fetchData(\n                mappedProps({\n                  limit: pagination.limit,\n                  offset: 0,\n                  orderBy,\n                  filters: { display_name: filterValue },\n                })\n              );\n            }}\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n\n  return (\n    <Routes>\n      <Route\n        path={paths['role-detail-permission'].path}\n        element={\n          <PageActionRoute pageAction=\"role-detail-permission\">\n            <ResourceDefinitions />\n          </PageActionRoute>\n        }\n      />\n      <Route\n        path={paths['role-detail'].path}\n        element={\n          <PageActionRoute pageAction=\"role-detail\">\n            <Role onDelete={() => setFilterValue('')} />\n          </PageActionRoute>\n        }\n      />\n      <Route path=\"/*\" element={<PageActionRoute pageAction=\"roles-list\">{renderRolesList()}</PageActionRoute>} />\n    </Routes>\n  );\n};\n\nexport default Roles;\n","import { useEffect, useRef, useState } from 'react';\nimport getVariant from './getVariant';\nvar useScreen = function () {\n    var _a = useState(function () { return getVariant(); }), variant = _a[0], setVariant = _a[1];\n    var prev = useRef(variant);\n    useEffect(function () {\n        function handleResize() {\n            var newVariant = getVariant();\n            if (newVariant !== prev.current) {\n                prev.current = newVariant;\n                setVariant(newVariant);\n            }\n        }\n        window.addEventListener('resize', handleResize);\n        return function () { return window.removeEventListener('resize', handleResize); };\n    }, []);\n    return variant;\n};\nexport default useScreen;\n//# sourceMappingURL=useScreenSize.js.map","import React, { Fragment } from 'react';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Text } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport AppLink from '../../presentational-components/shared/AppLink';\nimport { getDateFormat } from '../../helpers/shared/helpers';\nimport messages from '../../Messages';\nimport pathnames from '../../utilities/pathnames';\n\nexport const createRows = (data, selectedRows, intl, expanded) =>\n  data.reduce(\n    (\n      acc,\n      { uuid, access = [], display_name, name, description, system, accessCount, groups_in_count: groupsCount, groups_in: groups, modified },\n      i\n    ) => [\n      ...acc,\n      {\n        uuid,\n        system,\n        disableSelection: !!system,\n        selected: Boolean(selectedRows?.find?.((row) => row.uuid === uuid)),\n        cells: [\n          { title: <AppLink to={pathnames['role-detail'].link.replace(':roleId', uuid)}>{display_name || name}</AppLink> },\n          { title: description },\n          { title: accessCount, props: { isOpen: expanded[uuid] === 3 } },\n          { title: groupsCount, props: { isOpen: expanded[uuid] === 4 } },\n          { title: <DateFormat date={modified} type={getDateFormat(modified)} /> },\n        ],\n      },\n      {\n        uuid: `${uuid}-permissions`,\n        parent: 3 * i,\n        compoundParent: 2,\n        fullWidth: true,\n        noPadding: true,\n        cells: [\n          {\n            props: { colSpan: 7, className: 'pf-m-no-padding' },\n            title:\n              access.length > 0 ? (\n                <Table\n                  ouiaId=\"groups-in-role-nested-table\"\n                  aria-label=\"Simple Table\"\n                  variant={TableVariant.compact}\n                  cells={[\n                    intl.formatMessage(messages.application),\n                    intl.formatMessage(messages.resourceType),\n                    intl.formatMessage(messages.operation),\n                    intl.formatMessage(messages.lastCommit),\n                  ]}\n                  rows={access.map((access) => {\n                    const [appName, type, operation] = access.permission.split(':');\n                    return {\n                      cells: [\n                        appName,\n                        type,\n                        operation,\n                        <Fragment key={`${appName}-modified`}>\n                          <DateFormat date={modified} type={getDateFormat(modified)} />\n                        </Fragment>,\n                      ],\n                    };\n                  })}\n                >\n                  <TableHeader />\n                  <TableBody />\n                </Table>\n              ) : (\n                <Text className=\"pf-u-mx-lg pf-u-my-sm\">{intl.formatMessage(messages.noPermissions)}</Text>\n              ),\n          },\n        ],\n      },\n      {\n        uuid: `${uuid}-groups`,\n        parent: 3 * i,\n        compoundParent: 3,\n        fullWidth: true,\n        noPadding: true,\n        cells: [\n          {\n            props: { colSpan: 7, className: 'pf-m-no-padding' },\n            title:\n              groupsCount > 0 ? (\n                <Table\n                  aria-label=\"Simple Table\"\n                  ouiaId=\"permissions-in-role-nested-table\"\n                  variant={TableVariant.compact}\n                  cells={[intl.formatMessage(messages.groupName), intl.formatMessage(messages.description)]}\n                  rows={groups.map((group) => ({ cells: [group.name, group.description] }))}\n                >\n                  <TableHeader />\n                  <TableBody />\n                </Table>\n              ) : (\n                <Text className=\"pf-u-mx-lg pf-u-my-sm\">{intl.formatMessage(messages.noGroups)}</Text>\n              ),\n          },\n        ],\n      },\n    ],\n    []\n  );\n","import breakpoints from './breakpoints';\nvar isSmallScreen = function (screenSize) { return (breakpoints === null || breakpoints === void 0 ? void 0 : breakpoints[screenSize]) <= breakpoints.sm; };\nexport default isSmallScreen;\n//# sourceMappingURL=isSmallScreen.js.map"],"names":["exports","xs","parseInt","sm","md","lg","xl","result","width","window","innerWidth","_i","_a","Object","entries","breakpoints","length","_b","variant","createRows","data","reduce","acc","value","cells","ResourceDefinitionsFormTemplate","ModalProps","props","intl","useIntl","values","useFormApi","getState","ModalFormTemplate","onClose","alert","undefined","className","Alert","isInline","title","formatMessage","messages","propTypes","PropTypes","initialState","changedResources","cancelWarningVisible","resourcesPath","loadingStateVisible","reducer","state","action","type","payload","Error","createEditResourceDefinitionsSchema","resources","options","fields","component","componentTypes","name","leftTitle","rightTitle","filterOptionsTitle","filterValueTitle","validate","isSearchable","validatorMapper","EditResourceDefinitionsModal","cancelRoute","useParams","roleId","permissionId","navigate","useAppNavigate","dispatch","useDispatch","useReducer","dispatchLocally","useSelector","role","roleReducer","selectedRole","definedResources","access","flatten","filter","a","permission","map","resourceDefinitions","resource","attributeFilter","isRecordLoading","shallowEqual","costReducer","resourceTypes","isLoading","loadingResources","isLoadingResources","selector","useEffect","getResourceDefinitions","path","find","r","split","getResource","onCancel","replace","handleCancel","key","label","createOptions","customTitle","customDescription","isOpen","onModalCancel","onConfirmCancel","Modal","ModalVariant","Bullseye","Spinner","schema","componentMapper","initialValues","onSubmit","newAccess","operation","updateRole","item","then","fetchRole","FormTemplate","description","useState","pagination","defaultSettings","config","setConfig","rolesPagination","roles","rolesFilters","filters","count","filteredRows","definition","includes","slice","offset","limit","Fragment","breadcrumbs","to","getBackRoute","mergeToBasename","paths","display_name","isActive","Level","LevelItem","PageHeaderTitle","TextContent","Text","TextVariants","columns","rows","filterValue","fetchData","isCompact","routes","Routes","Route","element","setFilterValue","toolbarButtons","system","AppLink","Button","titlePlural","toLowerCase","titleSingular","hideHeader","tableId","RoleRowWrapper","row","RowWrapper","classnames","AddRoleWizard","lazy","setVariant","prev","useContext","PermissionsContext","orgAdmin","userAccessAdministrator","selectedRows","setSelectedRows","textFilterRef","useRef","useNavigate","location","useLocation","screenSize","handleResize","newVariant","current","addEventListener","removeEventListener","defaultAdminSettings","redirected","transforms","cellWidth","sortable","cellTransforms","compoundExpand","nowrap","fetchRolesWithPolicies","usesMetaInURL","isSelectable","index","Number","direction","sortByState","setSortByState","expanded","setExpanded","orderBy","applyPaginationToUrl","syncDefaultPaginationWithUrl","syncDefaultFiltersWithUrl","insights","chrome","appNavClick","id","secondaryNav","pathname","removeQueryParams","isPaginationPresentInUrl","areFiltersPresentInUrl","i","uuid","accessCount","groupsCount","groups_in_count","groups","groups_in","modified","disableSelection","selected","Boolean","pathnames","DateFormat","date","getDateFormat","parent","compoundParent","fullWidth","noPadding","colSpan","Table","ouiaId","TableVariant","appName","TableHeader","TableBody","group","pageAction","onDelete","Stack","StackItem","Section","checkedRows","setCheckedItems","newSelection","isPlatformDefault","platform_default","isAdminDefault","admin_default","actionResolver","onClick","_event","_rowId","areActionsDisabled","rowWrapper","applyFiltersToUrl","mappedProps","isExpandable","onExpand","_rowIndex","colIndex","rowData","Suspense","fallback","exact","afterSubmit","routeMatch","submitRoute","isSmallScreen","isDisabled","filterPlaceholder","sortBy","onSort","e"],"sourceRoot":""}
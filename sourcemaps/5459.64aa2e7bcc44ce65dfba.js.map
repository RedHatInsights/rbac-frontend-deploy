{"version":3,"sources":["webpack:///./src/smart-components/group/validators.js","webpack:///./src/smart-components/group/add-group/review-template.js","webpack:///./src/smart-components/group/add-group/schema.js","webpack:///./src/smart-components/group/add-group/set-name.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/default-group-change-modal.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/remove-role-modal.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/group-row-wrapper.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/app-tabs/app-tabs.scss","webpack:///./src/smart-components/group/group.scss","webpack:///./src/smart-components/group/groups.scss","webpack:///./src/smart-components/group/remove-group-modal.scss","webpack:///./src/smart-components/group/role/group-roles.scss","webpack:///./src/smart-components/app-tabs/app-tabs.scss?033b","webpack:///./src/smart-components/group/group.scss?f07a","webpack:///./src/smart-components/group/groups.scss?9046","webpack:///./src/smart-components/group/remove-group-modal.scss?c04a","webpack:///./src/smart-components/group/role/group-roles.scss?7352"],"names":["asyncValidator","groupName","idKey","id","undefined","length","fetchGroups","limit","offset","name","nameMatch","error","console","response","data","some","item","debouncedAsyncValidator","asyncDebounce","value","ReviewTemplate","formFields","useContext","AddGroupWizardContext","submitting","setWizardError","getState","useFormApi","useEffect","values","then","Bullseye","Spinner","size","context","title","text","Title","headingLevel","className","propTypes","PropTypes","fields","component","isDynamic","inModal","showTitles","nextStep","validate","type","validatorTypes","componentTypes","hideField","threshold","buttons","props","StepTemplate","groupNameValidated","groupNameError","groupDescriptionValidated","groupDescription","SetName","input","useFieldApi","formOptions","description","useState","setGroupName","setGroupNameError","setGroupDescription","processGroupName","onChange","Stack","hasGutter","StackItem","FormGroup","label","helperTextInvalid","isRequired","validated","TextInput","onBlur","aria-label","TextArea","change","resizeOrientation","groups","createRows","expanded","checkedRows","reduce","acc","uuid","display_name","cells","selected","Boolean","find","row","RolesList","roles","fetchRoles","isLoading","pagination","selectedRoles","canSort","setSelectedRoles","filterValue","setFilterValue","columns","useRef","key","transforms","sortable","orderBy","current","isSelectable","isCompact","borders","filterPlaceholder","fetchData","config","mappedProps","ouiaId","setCheckedItems","newSelection","map","titlePlural","titleSingular","tableId","history","goBack","push","searchFilter","count","defaultProps","defaultCompactSettings","connect","roleReducer","meta","dispatch","apiProps","fetchRolesWithPolicies","addNotification","ExcludedRolesList","selectedGroup","groupReducer","addRoles","defaultSettings","loaded","groupId","fetchAddRolesForGroup","propsFromState","propsFromDispatch","ownProps","SetRoles","Fragment","TextContent","Text","fieldId","SetUsers","selectedUsers","setSelectedUsers","Form","Card","SummaryContent","Grid","GridItem","md","TextVariants","role","index","createContext","success","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","onCancel","emptyCallback","nonEmptyCallback","setGroupData","formData","Object","keys","AddGroupWizard","postMethod","useDispatch","useHistory","cancelWarningVisible","setCancelWarningVisible","groupData","hideForm","wizardContextValue","setWizardContextValue","redirectToGroups","variant","dismissDelay","dismissable","isOpen","onModalCancel","onConfirmCancel","Provider","prev","setWizardSuccess","setHideForm","schema","subscription","componentMapper","onSubmit","user_list","user","username","roles_list","addGroup","initialValues","EditGroupModal","updateGroup","closeUrl","group","onClose","setSelectedGroup","match","useRouteMatch","fetchGroup","params","payload","validateOnMount","validatorMapper","skeleton","Skeleton","user_data","ModalFormTemplate","ModalProps","inputValue","bindActionCreators","RemoveGroupModal","removeGroups","groupsUuid","isModalOpen","checked","setChecked","multipleGroups","Modal","ModalVariant","actions","Button","isDisabled","onClick","uuids","Checkbox","isChecked","DefaultPlatformPopover","isPopoverVisible","setPopoverVisible","popoverRootRef","ref","Popover","zIndex","position","isVisible","shouldClose","hideOnOutsideClick","bodyContent","appendTo","classNames","opened","selectedRows","roleCount","principalCount","modified","isPlatformDefault","platform_default","Link","to","DateFormat","date","AppTabs","pathname","location","tabItems","isHeader","activeTab","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","Tab","withRouter","_opened","isActive","is_active","email","firstName","first_name","lastName","last_name","Label","color","AddGroupMembers","addMembersToGroup","fetchMembersForGroup","userList","users","nowrap","selector","principals","members","userIdentity","identity","removeModalText","plural","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","useParams","useSelector","shallowEqual","usernames","options","removeMembers","userNames","removeMembersFromGroup","RemoveModal","confirmButtonLabel","Section","CardBody","is_org_admin","routes","Route","path","paths","render","args","actionResolver","_rowId","principal","rowWrapper","UsersRow","toolbarButtons","multipleMembersSelected","removeText","emptyProps","DefaultGroupChange","withCheckbox","AddGroupRoles","addRolesToGroup","isDefault","isChanged","onDefaultGroupChanged","fetchRolesForGroup","showConfirmModal","setShowConfirmModal","rolesList","RemoveRoles","groupUuid","GroupRoles","removeRoles","disableAddRoles","reloadGroup","descriptionValue","setDescriptionValue","selectedAddRoles","setSelectedAddRoles","addRoleButtonContent","isAriaDisabled","Tooltip","content","multipleRolesSelected","filters","reloadWrapper","event","callback","system","removeRolesFromGroup","Group","isFetching","onDelete","isDropdownOpen","setDropdownOpen","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","groupExists","state","BAD_UUID","breadcrumbsList","useLocation","insights","chrome","appObjectId","dropdownItems","DropdownItem","replace","breadcrumbs","Split","SplitItem","isFilled","style","display","Dropdown","toggle","KebabToggle","onToggle","isPlain","Alert","isInline","action","AlertActionCloseButton","GroupPrincipals","Redirect","isRecordLoading","isRecordRolesLoading","GroupRowWrapper","RowWrapper","classnames","setSelectedRows","removeGroupsList","setRemoveGroupsList","systemGroup","RegExp","filter","appNavClick","secondaryNav","fetchSystemGroup","rows","exact","ids","Switch","pageAction","paddingBottom","exports","___CSS_LOADER_API_IMPORT___","module","api","__esModule","default","update","locals","hot","invalidate","oldLocals","accept","a","b","p","isEqualLocals","dispose"],"mappings":"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","file":"js/5459.ff9bd09c5df5d7e6f4b2.js","sourcesContent":["import { fetchGroups } from '../../helpers/group/group-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\n\nexport const asyncValidator = async (groupName, idKey, id) => {\n  if (!groupName) {\n    return undefined;\n  }\n\n  if (groupName.length > 150) {\n    throw 'Can have maximum of 150 characters.';\n  }\n\n  const response = await fetchGroups({ limit: 10, offset: 0, name: groupName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (id ? response?.data?.some((item) => item[idKey] !== id) : response?.data?.length > 0) {\n    throw 'Name has already been taken.';\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce((value, idKey, id) => asyncValidator(value, idKey, id));\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner, Title } from '@patternfly/react-core';\nimport { AddGroupWizardContext } from './add-group-wizard';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { asyncValidator } from '../validators';\nimport WizardError from '../../common/wizard-error';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting, error, setWizardError } = useContext(AddGroupWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['group-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  if (error === true) {\n    return (\n      <WizardError\n        context={AddGroupWizardContext}\n        title=\"Group name already taken\"\n        text=\"Please return to Step 1: Group information and choose a unique group name for your group.\"\n      />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-lg\">\n        Review details\n      </Title>\n      {[[{ ...formFields?.[0]?.[0] }]]}\n    </React.Fragment>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport ReviewTemplate from './review-template';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddGroupWizardContext } from './add-group-wizard';\n\nexport default {\n  fields: [\n    {\n      component: 'wizard',\n      name: 'wizard',\n      isDynamic: true,\n      inModal: true,\n      showTitles: true,\n      title: 'Create group',\n      fields: [\n        {\n          name: 'name-and-description',\n          nextStep: 'add-roles',\n          title: 'Name and Description',\n          fields: [\n            {\n              component: 'set-name',\n              name: 'group-name',\n              validate: [\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n              ],\n            },\n            {\n              component: componentTypes.TEXTAREA,\n              name: 'group-description',\n              hideField: true,\n              validate: [\n                {\n                  type: validatorTypes.MAX_LENGTH,\n                  threshold: 150,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'add-roles',\n          nextStep: 'add-users',\n          title: 'Add roles',\n          fields: [\n            {\n              component: 'set-roles',\n              name: 'roles-list',\n            },\n          ],\n        },\n        {\n          name: 'add-users',\n          nextStep: 'review',\n          title: 'Add members',\n          fields: [\n            {\n              component: 'set-users',\n              name: 'users-list',\n            },\n          ],\n        },\n        {\n          name: 'review',\n          title: 'Review details',\n          // eslint-disable-next-line react/display-name\n          buttons: (props) => <ReviewStepButtons {...props} context={AddGroupWizardContext} />,\n          StepTemplate: ReviewTemplate,\n          fields: [\n            {\n              component: 'summary-content',\n              name: 'summary-content',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput/TextInput';\nimport { TextArea } from '@patternfly/react-core/dist/esm/components/TextArea/TextArea';\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { debouncedAsyncValidator } from '../validators';\n\nconst groupNameValidated = (groupName, groupNameError) => (groupName === undefined || groupNameError ? 'error' : 'default');\nconst groupDescriptionValidated = (groupDescription) => (groupDescription?.length > 150 ? 'error' : 'default');\n\nconst SetName = (props) => {\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const { 'group-name': name, 'group-description': description } = formOptions.getState().values;\n  const [groupName, setGroupName] = useState(name || '');\n  const [groupNameError, setGroupNameError] = useState();\n  const [groupDescription, setGroupDescription] = useState(description);\n\n  const processGroupName = (value) => {\n    input.onChange(undefined);\n    debouncedAsyncValidator(value)\n      .then(() => {\n        input.onChange(value);\n        setGroupNameError(undefined);\n      })\n      .catch((error) => {\n        setGroupNameError(error);\n      });\n    setGroupName(value);\n  };\n\n  useEffect(() => {\n    groupName?.length > 0 && processGroupName(groupName);\n  }, []);\n\n  return (\n    <Stack hasGutter>\n      <StackItem className=\"ins-c-rbac__summary\">\n        <FormGroup\n          label=\"Group name\"\n          helperTextInvalid={groupName ? groupNameError : 'Required'}\n          isRequired\n          validated={groupNameValidated(groupName, groupNameError)}\n        >\n          <TextInput\n            value={groupName}\n            type=\"text\"\n            validated={groupNameValidated(groupName, groupNameError)}\n            onBlur={() => groupName === '' && setGroupName(undefined)}\n            onChange={(value) => processGroupName(value)}\n            aria-label=\"Group name\"\n          />\n        </FormGroup>\n      </StackItem>\n      <StackItem>\n        <FormGroup\n          label=\"Group description\"\n          helperTextInvalid=\"Can have maximum of 150 characters.\"\n          validated={groupDescriptionValidated(groupDescription)}\n        >\n          <TextArea\n            value={groupDescription}\n            validated={groupDescriptionValidated(groupDescription)}\n            onChange={(value) => {\n              setGroupDescription(value);\n              formOptions.change('group-description', value);\n            }}\n            aria-label=\"Group description\"\n            resizeOrientation=\"vertical\"\n          />\n        </FormGroup>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSetName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SetName;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { sortable } from '@patternfly/react-table';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description }) => [\n          ...acc,\n          {\n            uuid,\n            cells: [display_name || name, description],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, canSort, setSelectedRoles }) => {\n  const [filterValue, setFilterValue] = useState('');\n  const { current: columns } = useRef([\n    { title: 'Name', key: 'display_name', ...(canSort ? { transforms: [sortable] } : { orderBy: 'name' }) },\n    { title: 'Description' },\n  ]);\n\n  useEffect(() => {\n    fetchRoles({ orderBy: 'display_name' });\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact\n      borders={false}\n      createRows={createRows}\n      data={roles}\n      filterValue={filterValue}\n      filterPlaceholder=\"role name\"\n      fetchData={(config) => fetchRoles(mappedProps(config))}\n      setFilterValue={({ name }) => setFilterValue(name)}\n      isLoading={isLoading}\n      ouiaId=\"roles-table\"\n      pagination={pagination}\n      checkedRows={selectedRoles}\n      setCheckedItems={setCheckedItems}\n      titlePlural=\"roles\"\n      titleSingular=\"role\"\n      tableId=\"roles-list\"\n    />\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading } }) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  canSort: PropTypes.bool,\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  canSort: true,\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup } }) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid,\n  };\n};\n\nconst mapDispatchToPropsGroup = (dispatch) => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    canSort: false,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { FormGroup, Stack, StackItem, Text, TextContent } from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = (props) => {\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedRoles(formOptions.getState().values['roles-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedRoles);\n    formOptions.change('roles-list', selectedRoles);\n  }, [selectedRoles]);\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text>Select one or more roles to add to this group.</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <FormGroup fieldId=\"select-role\">\n            <RolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </FormGroup>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetRoles;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Form, FormGroup, Stack, StackItem, TextContent } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { CompactUsersList } from './users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport '../../../App.scss';\n\nconst SetUsers = (props) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedUsers(formOptions.getState().values['users-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedUsers);\n    formOptions.change('users-list', selectedUsers);\n  }, [selectedUsers]);\n\n  return (\n    <Fragment>\n      <Form>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <ActiveUser description={'These are all of the users in your Red Hat organization. To manage users, go to your'} />\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup fieldId=\"select-user\">\n              <Card>\n                <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst SummaryContent = () => {\n  const formOptions = useFormApi();\n  const {\n    'group-name': name,\n    'group-description': description,\n    'users-list': selectedUsers,\n    'roles-list': selectedRoles,\n  } = formOptions.getState().values;\n\n  return (\n    <div className=\"rbac\">\n      <Stack hasGutter>\n        <StackItem>\n          <Stack hasGutter>\n            <StackItem className=\"ins-c-rbac__summary\">\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Group name\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{name}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Group description\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{description}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Roles\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedRoles.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Members\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedUsers.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SummaryContent;\n","import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useHistory } from 'react-router-dom';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/esm/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/esm/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\nimport { WarningModal } from '../../common/warningModal';\nimport schema from './schema';\nimport { addGroup } from '../../../redux/actions/group-actions';\nimport SetName from './set-name';\nimport SetRoles from './set-roles';\nimport SetUsers from './set-users';\nimport SummaryContent from './summary-content';\n\nexport const AddGroupWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  description: Description,\n  'set-name': SetName,\n  'set-roles': SetRoles,\n  'set-users': SetUsers,\n  'summary-content': SummaryContent,\n};\n\nexport const onCancel = (emptyCallback, nonEmptyCallback, setGroupData) => (formData) => {\n  setGroupData(formData);\n  if (Object.keys(formData).length > 0) {\n    nonEmptyCallback(true);\n  } else {\n    emptyCallback();\n  }\n};\n\nconst AddGroupWizard = ({ postMethod, pagination }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [groupData, setGroupData] = useState({});\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n\n  const redirectToGroups = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        title: 'Adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'Adding group was canceled by the user.',\n      })\n    );\n    history.push('/groups');\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    const groupData = {\n      name: formData['group-name'],\n      description: formData['group-description'],\n      user_list: formData['users-list'].map((user) => ({ username: user.label })),\n      roles_list: formData['roles-list'].map((role) => role.uuid),\n    };\n    history.push('/groups');\n    dispatch(addGroup(groupData))\n      .then(() => postMethod({ limit: pagination.limit }))\n      .then(() => {\n        dispatch(\n          addNotification({\n            variant: 'success',\n            title: 'Success adding group',\n            dismissDelay: 8000,\n            dismissable: false,\n            description: 'The group was added successfully.',\n          })\n        );\n      });\n  };\n\n  return cancelWarningVisible ? (\n    <WarningModal\n      type=\"group\"\n      isOpen={cancelWarningVisible}\n      onModalCancel={() => setCancelWarningVisible(false)}\n      onConfirmCancel={redirectToGroups}\n    />\n  ) : (\n    <AddGroupWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <FormRenderer\n        schema={schema}\n        subscription={{ values: true }}\n        FormTemplate={FormTemplate}\n        componentMapper={{ ...componentMapper, ...mapperExtension }}\n        onSubmit={onSubmit}\n        initialValues={groupData}\n        onCancel={onCancel(redirectToGroups, setCancelWarningVisible, setGroupData)}\n      />\n    </AddGroupWizardContext.Provider>\n  );\n};\n\nAddGroupWizard.propTypes = {\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default AddGroupWizard;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nimport { Skeleton } from '@patternfly/react-core';\nimport { debouncedAsyncValidator } from './validators';\n\nconst EditGroupModal = ({ addNotification, updateGroup, postMethod, pagination, closeUrl, group, onClose }) => {\n  const [selectedGroup, setSelectedGroup] = useState(undefined);\n\n  const history = useHistory();\n  const match = useRouteMatch('/groups/edit/:id');\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    match &&\n      fetchGroup(match.params.id)\n        .payload.then((data) => setGroupData(data))\n        .catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [group]);\n\n  const onSubmit = (data) => {\n    const user_data = { ...data };\n    postMethod\n      ? updateGroup(user_data)\n          .then(() => postMethod({ limit: pagination.limit }))\n          .then(history.push(closeUrl))\n      : updateGroup(user_data).then(() => history.push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      dismissable: false,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was canceled by the user.' : 'Adding group was canceled by the user.',\n    });\n    onClose();\n    history.push(closeUrl);\n  };\n\n  const schema = {\n    fields: [\n      {\n        name: 'name',\n        label: 'Name',\n        component: selectedGroup ? componentTypes.TEXT_FIELD : 'skeleton',\n        ...(selectedGroup ? { validateOnMount: true } : {}),\n        validate: [\n          { type: 'validate-group-name', id: match ? match.params.id : group.id, idKey: 'uuid' },\n          {\n            type: validatorTypes.REQUIRED,\n          },\n        ],\n      },\n      {\n        name: 'description',\n        label: 'Description',\n        component: selectedGroup ? componentTypes.TEXTAREA : 'skeleton',\n        validate: [\n          {\n            type: validatorTypes.MAX_LENGTH,\n            threshold: 150,\n          },\n        ],\n      },\n    ],\n  };\n\n  const validatorMapper = {\n    'validate-group-name': ({ idKey, id }) => (value) => debouncedAsyncValidator(value, idKey, id),\n  };\n\n  return (\n    <FormRenderer\n      schema={schema}\n      componentMapper={{\n        ...componentMapper,\n        skeleton: Skeleton,\n      }}\n      onCancel={onCancel}\n      onSubmit={onSubmit}\n      validatorMapper={validatorMapper}\n      initialValues={{ ...selectedGroup }}\n      FormTemplate={(props) => (\n        <ModalFormTemplate {...props} ModalProps={{ onClose: onCancel, isOpen: true, variant: 'medium', title: `Edit group's information` }} />\n      )}\n    />\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null,\n};\n\nEditGroupModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  closeUrl: PropTypes.string,\n  group: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      updateGroup,\n      fetchGroup,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button, Checkbox, Modal, ModalVariant, Text, TextContent } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\nimport './remove-group-modal.scss';\n\nconst RemoveGroupModal = ({ removeGroups, group, isLoading, fetchGroup, groupsUuid, isModalOpen, postMethod, pagination, closeUrl }) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const history = useHistory();\n\n  const [checked, setChecked] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids)\n      .then(() => postMethod(uuids, { limit: pagination.limit }))\n      .then(history.push(closeUrl));\n  };\n\n  const onCancel = () => history.goBack();\n\n  return (\n    <Modal\n      className=\"rbac\"\n      isOpen={isModalOpen}\n      variant={ModalVariant.small}\n      title={\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n          &nbsp; {multipleGroups ? 'Delete groups?' : 'Delete group?'}\n        </Text>\n      }\n      onClose={onCancel}\n      actions={[\n        <Button key=\"submit\" isDisabled={!checked} variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {multipleGroups ? 'Delete groups' : 'Delete group'}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        {multipleGroups ? (\n          <Text>\n            Deleting these <b>{groupsUuid.length}</b> groups removes all roles from the members inside the group.\n          </Text>\n        ) : isLoading ? (\n          <FormItemLoader />\n        ) : (\n          <Text>\n            Deleting the <b>{group.name}</b> group removes all roles from the members inside the group.\n          </Text>\n        )}\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={checked}\n        onChange={() => setChecked(!checked)}\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  closeUrl: '/groups',\n};\n\nRemoveGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  closeUrl: PropTypes.string,\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup } }) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n      removeGroups,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal);\n","import React, { Fragment, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Popover } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst DefaultPlatformPopover = ({ uuid }) => {\n  const [isPopoverVisible, setPopoverVisible] = useState(false);\n  const popoverRootRef = useRef(null);\n\n  return (\n    <span ref={popoverRootRef} key={`${uuid}-popover`} id=\"default-group-popover\">\n      <Popover\n        zIndex=\"110\"\n        position=\"right\"\n        isVisible={isPopoverVisible}\n        shouldClose={() => setPopoverVisible(false)}\n        hideOnOutsideClick\n        bodyContent=\"This group contains the roles that all users in your organization inherit by default.\"\n        appendTo={popoverRootRef.current}\n      >\n        <OutlinedQuestionCircleIcon\n          onClick={() => setPopoverVisible(!isPopoverVisible)}\n          className={classNames('pf-c-question-circle-icon', { 'icon-active': isPopoverVisible })}\n        />\n      </Popover>\n    </span>\n  );\n};\n\nDefaultPlatformPopover.propTypes = {\n  uuid: PropTypes.string.isRequired,\n};\n\nexport const createRows = (data, opened, selectedRows = []) => {\n  return data.reduce(\n    (acc, { uuid, name, roleCount, principalCount, modified, platform_default: isPlatformDefault }) => [\n      ...acc,\n      {\n        uuid,\n        isPlatformDefault,\n        cells: [\n          <Fragment key={uuid}>\n            <div className=\"pf-m-inline-flex\">\n              <Link key={`${uuid}-link`} to={`/groups/detail/${uuid}`}>\n                {name}\n              </Link>\n              {isPlatformDefault && <DefaultPlatformPopover uuid={uuid} />}\n            </div>\n          </Fragment>,\n          roleCount,\n          principalCount,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type=\"relative\" />\n          </Fragment>,\n        ],\n        selected: Boolean(selectedRows && selectedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems, isHeader }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className={isHeader ? `ins-rbac-page-header__tabs` : ''} activeKey={activeTab ? activeTab.eventKey : 0} onSelect={handleTabClick}>\n      {tabItems.map((item) => (\n        <Tab title={item.title} key={item.eventKey} eventKey={item.eventKey} name={item.name} />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool,\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\n\nexport const createRows = (data, _opened, checkedRows = []) => {\n  return data.reduce(\n    (acc, { is_active: isActive, username, email, first_name: firstName, last_name: lastName }) => [\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [\n          {\n            title: <Label color={isActive && 'green'}>{isActive ? 'Active' : 'Inactive'}</Label>,\n            props: {\n              data: { isActive },\n            },\n          },\n          username,\n          email,\n          lastName,\n          firstName,\n        ],\n        selected: checkedRows.find((row) => row.uuid === username),\n      },\n    ],\n    []\n  );\n};\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant, StackItem, Stack, TextContent } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, addMembersToGroup, fetchMembersForGroup } from '../../../redux/actions/group-actions';\nimport { CompactUsersList } from '../add-group/users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchMembersForGroup,\n}) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const onSubmit = () => {\n    const userList = selectedUsers.map((user) => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        dismissDelay: 8000,\n        dismissable: false,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`,\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchMembersForGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      dismissable: false,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was canceled by the user.`,\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members\"\n      variant={ModalVariant.medium}\n      isOpen\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={selectedUsers.length === 0} variant=\"primary\" onClick={onSubmit}>\n          Add to group\n        </Button>,\n        <Button id=\"add-groups-cancel\" ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <ActiveUser description=\"These are all of the users in your Red Hat organization. To manage users, go to your\" />\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} inModal />\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: [],\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func,\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchMembersForGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      addGroup,\n      addMembersToGroup,\n      fetchMembersForGroup,\n    },\n    dispatch\n  );\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","/* eslint-disable camelcase */\nimport { nowrap } from '@patternfly/react-table';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, Route, useHistory, useParams } from 'react-router-dom';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchMembersForGroup, removeMembersFromGroup } from '../../../redux/actions/group-actions';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport { routes as paths } from '../../../../package.json';\n\nconst columns = [\n  { title: 'Status', transforms: [nowrap] },\n  { title: 'Username' },\n  { title: 'Email' },\n  { title: 'Last name' },\n  { title: 'First name' },\n];\n\nconst selector = ({ groupReducer: { groups, selectedGroup } }) => ({\n  principals: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  userIdentity: groups.identity,\n  groupName: selectedGroup.name,\n  platform_default: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading,\n});\n\nconst removeModalText = (name, group, plural) =>\n  plural ? (\n    <p>\n      These <b> {`${name}`}</b> members will lose all the roles associated with the <b>{`${group}`}</b> group.\n    </p>\n  ) : (\n    <p>\n      <b>{`${name}`}</b> will lose all the roles associated with the <b> {`${group}`}</b> group.\n    </p>\n  );\n\nconst GroupPrincipals = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedPrincipals, setSelectedPrincipals] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  const { uuid } = useParams();\n  const { principals, pagination, groupName, userIdentity, isLoading, platform_default } = useSelector(selector, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options = pagination) => {\n    dispatch(fetchMembersForGroup(uuid, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(uuid, userNames)).then(() => {\n      setSelectedPrincipals([]);\n      fetchData(undefined, { ...pagination, offset: 0 });\n    });\n  };\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin)\n      ? null\n      : [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, principal) => {\n              setConfirmDelete(() => () => removeMembers([principal.username.title]));\n              setDeleteInfo({\n                title: 'Remove member?',\n                text: removeModalText(principal.username.title, groupName, false),\n                confirmButtonLabel: 'Remove member',\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-members']}\n        render={(args) => <AddGroupMembers fetchData={fetchData} closeUrl={`/groups/detail/${uuid}/members`} {...args} />}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link to={`/groups/detail/${uuid}/members/add_members`} key=\"remove-from-group\" className=\"ins-m-hide-on-sm\">\n            <Button variant=\"primary\" aria-label=\"Add member\">\n              Add member\n            </Button>\n          </Link>,\n          {\n            label: 'Add member',\n            props: {\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/members/add_members`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleMembersSelected = selectedPrincipals.length > 1;\n              const removeText = multipleMembersSelected ? 'Remove members?' : 'Remove member?';\n              setConfirmDelete(() => () => removeMembers(selectedPrincipals.map((user) => user.uuid)));\n              setDeleteInfo({\n                title: removeText,\n                confirmButtonLabel: removeText,\n                text: removeModalText(\n                  multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].uuid,\n                  groupName,\n                  multipleMembersSelected\n                ),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        isOpen={showRemoveModal}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        }}\n      />\n      <Section type=\"content\" id={'tab-principals'}>\n        {platform_default ? (\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={TextVariants.h1}>All users in this organization are members of this group.</Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card>\n        ) : (\n          <TableToolbarView\n            data={(principals || []).map((user) => ({ ...user, uuid: user.username }))}\n            isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n            createRows={createRows}\n            columns={columns}\n            routes={routes}\n            actionResolver={actionResolver}\n            filterPlaceholder=\"username\"\n            titlePlural=\"members\"\n            titleSingular=\"member\"\n            ouiaId=\"members-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={({ limit, offset, name }) => fetchData(name, { limit, offset })}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            checkedRows={selectedPrincipals}\n            isLoading={isLoading}\n            rowWrapper={UsersRow}\n            setCheckedItems={setCheckedPrincipals}\n            toolbarButtons={toolbarButtons}\n            emptyProps={{ title: 'There are no members in this group', description: ['Add a user to configure user access.', ''] }}\n            tableId=\"group-members\"\n          />\n        )}\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default GroupPrincipals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  return (\n    <RemoveModal\n      text={\n        <TextContent>\n          <Text>\n            Once you edit the <b>Default access</b> group, the system will no longer update it with new default access roles. The group name will\n            change to <b>Custom default access</b>.\n          </Text>\n        </TextContent>\n      }\n      title={'Warning'}\n      withCheckbox\n      isOpen={isOpen}\n      confirmButtonLabel={'Continue'}\n      onClose={onClose}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DefaultGroupChange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Modal, ModalVariant, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport DefaultGroupChange from './default-group-change-modal';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  name,\n  isDefault,\n  isChanged,\n  addNotification,\n  onDefaultGroupChanged,\n  fetchRolesForGroup,\n  fetchGroup,\n}) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const onCancel = () => {\n    setSelectedRoles && setSelectedRoles([]);\n    addNotification({\n      variant: 'warning',\n      title: 'Adding roles to group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding roles to group was canceled by the user.',\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map((role) => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => {\n      fetchRolesForGroup();\n      fetchGroup();\n    });\n    if (isDefault && !isChanged) {\n      onDefaultGroupChanged(true);\n    }\n\n    return push(closeUrl);\n  };\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange isOpen={showConfirmModal} onClose={onCancel} onSubmit={onSubmit} />\n  ) : (\n    <Modal\n      title=\"Add roles to group\"\n      variant={ModalVariant.medium}\n      isOpen\n      onClose={() => {\n        onCancel();\n        setShowConfirmModal(true);\n      }}\n      actions={[\n        <Button\n          aria-label=\"Save\"\n          ouiaId=\"primary-save-button\"\n          variant=\"primary\"\n          key=\"confirm\"\n          isDisabled={selectedRoles.length === 0}\n          onClick={() => {\n            setShowConfirmModal(true);\n            (!isDefault || isChanged) && onSubmit();\n          }}\n        >\n          Add to group\n        </Button>,\n        <Button aria-label=\"Cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" key=\"cancel\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        {title && (\n          <StackItem>\n            <Title headingLevel=\"h4\" size=\"xl\">\n              {title}\n            </Title>\n          </StackItem>\n        )}\n        <StackItem>\n          <TextContent>\n            <Text component={TextVariants.p}>\n              This role list has been filtered to only show roles that are not currently in <b> {name}</b>.\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </Card>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.any,\n    goBack: PropTypes.func.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  addNotification: PropTypes.func,\n  onDefaultGroupChanged: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  fetchGroup: PropTypes.func,\n};\n\nexport default AddGroupRoles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange\n      isOpen={showConfirmModal && isOpen}\n      onClose={() => {\n        onClose();\n        setShowConfirmModal(false);\n      }}\n      onSubmit={() => {\n        onSubmit();\n      }}\n    />\n  ) : (\n    <RemoveModal\n      text={text}\n      title={title}\n      isOpen={isOpen}\n      confirmButtonLabel={confirmButtonLabel}\n      onClose={() => {\n        onClose();\n      }}\n      onSubmit={() => {\n        setShowConfirmModal(true);\n        (!isDefault || isChanged) && onSubmit();\n      }}\n    />\n  );\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.node,\n  title: PropTypes.node,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false,\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup, fetchAddRolesForGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport RemoveRole from './remove-role-modal';\nimport { routes as paths } from '../../../../package.json';\nimport './group-roles.scss';\n\nconst columns = [{ title: 'Name', orderBy: 'name' }, { title: 'Description' }, { title: 'Last modified' }];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description, modified }) => [\n          ...acc,\n          {\n            uuid,\n            title: display_name || name,\n            cells: [\n              <Fragment key={`${uuid}-name`}>\n                <Link to={`/groups/detail/${groupUuid}/roles/detail/${uuid}`}>{display_name || name}</Link>\n              </Fragment>,\n              description,\n              <Fragment key={`${uuid}-modified`}>\n                <DateFormat date={modified} type=\"relative\" />\n              </Fragment>,\n            ],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst addRoleButton = (isDisabled) => {\n  const addRoleButtonContent = (\n    <Button variant=\"primary\" className=\"ins-m-hide-on-sm\" aria-label=\"Add role\" isAriaDisabled={isDisabled}>\n      Add role\n    </Button>\n  );\n\n  return isDisabled ? (\n    <Tooltip content=\"All available roles have already been added to the group\">{addRoleButtonContent}</Tooltip>\n  ) : (\n    addRoleButtonContent\n  );\n};\n\nconst GroupRoles = ({\n  roles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: {\n    params: { uuid },\n  },\n  userIdentity,\n  name,\n  isDefault,\n  isChanged,\n  onDefaultGroupChanged,\n  fetchAddRolesForGroup,\n  disableAddRoles,\n  addNotification,\n  reloadGroup,\n}) => {\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [selectedAddRoles, setSelectedAddRoles] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n\n  useEffect(() => {\n    fetchAddRolesForGroup(uuid);\n  }, [roles]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{name}</b> group will lose the permissions in {plural ? 'these' : 'the'}\n      <b> {role}</b> role{plural ? `s` : ''}.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, role) => {\n              setConfirmDelete(() => () => removeRoles(uuid, [role.uuid], () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)));\n              setDeleteInfo({\n                title: 'Remove role?',\n                confirmButtonLabel: 'Remove role',\n                text: removeModalText(name, role.title, false),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-roles']}\n        render={(args) => (\n          <AddGroupRoles\n            fetchGroup={() => reloadGroup(uuid)}\n            fetchRolesForGroup={() => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)}\n            selectedRoles={selectedAddRoles}\n            setSelectedRoles={setSelectedAddRoles}\n            closeUrl={`/groups/detail/${uuid}/roles`}\n            addRolesToGroup={addRoles}\n            name={name}\n            isDefault={isDefault}\n            isChanged={isChanged}\n            addNotification={addNotification}\n            onDefaultGroupChanged={onDefaultGroupChanged}\n            {...args}\n          />\n        )}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link\n            className={`pf-m-visible-on-md ins-c-button__add-role${disableAddRoles && '-disabled'}`}\n            to={`/groups/detail/${uuid}/roles/add_roles`}\n            key=\"add-to-group\"\n          >\n            {addRoleButton(disableAddRoles)}\n          </Link>,\n          {\n            label: 'Add role',\n            props: {\n              isDisabled: disableAddRoles,\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/roles/add_roles`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedRoles || !selectedRoles.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleRolesSelected = selectedRoles.length > 1;\n              setConfirmDelete(() => () =>\n                removeRoles(\n                  uuid,\n                  selectedRoles.map((role) => role.uuid),\n                  () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)\n                )\n              );\n              setDeleteInfo({\n                title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n                confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n                text: removeModalText(\n                  name,\n                  multipleRolesSelected ? selectedRoles.length : roles.find((role) => role.uuid === selectedRoles[0].uuid).name,\n                  multipleRolesSelected\n                ),\n              });\n\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        isOpen={showRemoveModal}\n        isChanged={isChanged}\n        isDefault={isDefault}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isDefault && !isChanged);\n        }}\n      />\n\n      <Section type=\"content\" id={'tab-roles'}>\n        <TableToolbarView\n          columns={columns}\n          isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n          createRows={(...props) => createRows(uuid, ...props)}\n          data={roles}\n          filterValue={filterValue}\n          fetchData={(config) => {\n            fetchRolesForGroup(config)(uuid);\n          }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedRoles}\n          setCheckedItems={setCheckedItems}\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          routes={routes}\n          ouiaId=\"roles-table\"\n          emptyProps={{ title: 'There are no roles in this group', description: ['Add a role to configure user access.', ''] }}\n          filters={[\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue },\n          ]}\n          tableId=\"group-roles\"\n        />\n      </Section>\n    </React.Fragment>\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups } }) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name,\n    isDefault: selectedGroup.platform_default,\n    isChanged: !selectedGroup.system,\n    disableAddRoles: !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options)),\n    fetchAddRolesForGroup: (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {})),\n    addNotification: (...props) => dispatch(addNotification(...props)),\n    reloadGroup: (apiProps) => dispatch(fetchGroup(apiProps)),\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  fetchAddRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool,\n    }),\n  }),\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  onDefaultGroupChanged: PropTypes.func,\n  disableAddRoles: PropTypes.bool.isRequired,\n  addNotification: PropTypes.func,\n  reloadGroup: PropTypes.func,\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, Link, useLocation, useHistory } from 'react-router-dom';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup, fetchGroups } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Alert, AlertActionCloseButton, Popover, Split, SplitItem, DropdownItem, Dropdown, KebabToggle, Button } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { routes } from '../../../package.json';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport EmptyWithAction from '../../presentational-components/shared/empty-state';\nimport RbacBreadcrumbs from '../../presentational-components/shared/breadcrubms';\nimport { BAD_UUID } from '../../helpers/shared/helpers';\nimport './group.scss';\n\nconst Group = ({\n  match: {\n    params: { uuid },\n  },\n  group,\n  fetchGroup,\n  isFetching,\n  onDelete,\n}) => {\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` },\n  ];\n\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo] = useState(false);\n\n  const history = useHistory();\n\n  const groupExists = useSelector((state) => {\n    const {\n      groupReducer: { error },\n    } = state;\n    return error !== BAD_UUID;\n  });\n\n  const breadcrumbsList = () => [\n    { title: 'Groups', to: '/groups' },\n    groupExists ? { title: isFetching ? undefined : group.name, isActive: true } : { title: 'Invalid group', isActive: true },\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchData(uuid);\n    insights.chrome.appObjectId(uuid);\n    return () => insights.chrome.appObjectId(undefined);\n  }, []);\n\n  const defaultGroupChangedIcon = (name) => (\n    <div style={{ display: 'inline-flex' }}>\n      {name}\n      <div className=\"pf-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={\n            <div>\n              Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n              name has changed to <b>Custom default access</b>.\n            </div>\n          }\n        >\n          <InfoCircleIcon className=\"ins-c-rbac__default-group-info-icon\" />\n        </Popover>\n      </div>\n    </div>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <Link\n          to={(location.pathname.includes('members') ? routes['group-detail-members-edit'] : routes['group-detail-roles-edit']).replace(\n            ':uuid',\n            uuid\n          )}\n        >\n          Edit\n        </Link>\n      }\n      key=\"edit-group\"\n    />,\n    <DropdownItem\n      component={\n        <Link\n          onClick={onDelete}\n          to={() =>\n            (location.pathname.includes('members') ? routes['group-detail-members-remove'] : routes['group-detail-roles-remove']).replace(\n              ':uuid',\n              uuid\n            )\n          }\n        >\n          Delete\n        </Link>\n      }\n      className=\"ins-c-group__action\"\n      key=\"delete-group\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      {groupExists ? (\n        <Fragment>\n          <TopToolbar breadcrumbs={breadcrumbsList()}>\n            <Split hasGutter>\n              <SplitItem isFilled>\n                <TopToolbarTitle\n                  title={\n                    !isFetching && group ? (\n                      <Fragment>{group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name}</Fragment>\n                    ) : undefined\n                  }\n                  description={!isFetching && group ? group.description : undefined}\n                />\n              </SplitItem>\n              <SplitItem>\n                {group.platform_default ? null : (\n                  <Dropdown\n                    ouiaId=\"group-title-actions-dropdown\"\n                    toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"group-actions-dropdown\" />}\n                    isOpen={isDropdownOpen}\n                    isPlain\n                    position=\"right\"\n                    dropdownItems={dropdownItems}\n                  />\n                )}\n              </SplitItem>\n            </Split>\n            {showDefaultGroupChangedInfo ? (\n              <Alert\n                variant=\"info\"\n                isInline\n                title=\"Default access group has changed\"\n                action={<AlertActionCloseButton onClose={() => setShowDefaultGroupChangedInfo(false)} />}\n                className=\"pf-u-mb-lg pf-u-mt-sm\"\n              >\n                Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n                name has changed to <b>Custom default access</b>.\n              </Alert>\n            ) : null}\n          </TopToolbar>\n          <AppTabs isHeader tabItems={tabItems} />\n          <Route\n            path={[routes['group-detail-roles-remove'], routes['group-detail-members-remove']]}\n            render={(props) => (\n              <RemoveGroup\n                {...props}\n                postMethod={() => {\n                  dispatch(fetchGroups());\n                }}\n                isModalOpen\n                groupsUuid={[group]}\n              />\n            )}\n          />\n          <Route\n            path={[routes['group-detail-roles-edit'], routes['group-detail-members-edit']]}\n            render={(props) => (\n              <EditGroup\n                {...props}\n                group={group}\n                closeUrl={`group/detail/${uuid}`}\n                postMethod={() => {\n                  fetchData(uuid);\n                }}\n              />\n            )}\n          />\n          <Route\n            path={routes['group-detail-roles']}\n            render={(props) => <GroupRoles {...props} onDefaultGroupChanged={setShowDefaultGroupChangedInfo} />}\n          />\n          <Route path={routes['group-detail-members']} component={GroupPrincipals} />\n          <Route render={() => <Redirect to={`/groups/detail/${uuid}/roles`} />} />\n          {!group && <ListLoader />}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <section className=\"pf-c-page__main-breadcrumb pf-u-pb-md\">\n            <RbacBreadcrumbs {...breadcrumbsList()} />\n          </section>\n          <EmptyWithAction\n            title=\"Group not found\"\n            description={[`Group with ID ${uuid} does not exist.`]}\n            actions={[\n              <Button\n                key=\"back-button\"\n                className=\"pf-u-mt-xl\"\n                ouiaId=\"back-button\"\n                variant=\"primary\"\n                aria-label=\"Back to previous page\"\n                onClick={() => history.goBack()}\n              >\n                Back to previous page\n              </Button>,\n            ]}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isRecordLoading, isRecordRolesLoading } }) => ({\n  group: selectedGroup,\n  isFetching: isRecordLoading || isRecordRolesLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n    },\n    dispatch\n  );\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    platform_default: PropTypes.bool,\n    system: PropTypes.bool,\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nGroup.defaultProps = {\n  isFetching: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst GroupRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={classnames(className, {\n        'ins-c-rbac__group-default': row.isPlatformDefault,\n      })}\n      row={row}\n      {...props}\n    />\n  );\n};\n\nGroupRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    isPlatformDefault: PropTypes.bool,\n  }),\n  className: PropTypes.string,\n};\n\nexport default GroupRowWrapper;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups, fetchSystemGroup } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\nimport GroupRowWrapper from './group-row-wrapper';\nimport { routes as paths } from '../../../package.json';\nimport './groups.scss';\nimport PageActionRoute from '../common/page-action-route';\n\nconst columns = [\n  { title: 'Name', key: 'name', transforms: [sortable] },\n  { title: 'Roles' },\n  { title: 'Members' },\n  { title: 'Last modified', key: 'modified', transforms: [sortable] },\n];\n\nconst Groups = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [removeGroupsList, setRemoveGroupsList] = useState([]);\n\n  const dispatch = useDispatch();\n  const { groups, pagination, userIdentity, isLoading } = useSelector(\n    ({ groupReducer: { groups, isLoading, systemGroup } }) => ({\n      groups: [\n        ...(systemGroup?.name?.match(new RegExp(filterValue, 'i')) ? [systemGroup] : []),\n        ...(groups?.data?.filter(({ platform_default } = {}) => !platform_default) || []),\n      ],\n      pagination: groups.meta,\n      userIdentity: groups.identity,\n      isLoading,\n      systemGroup,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'groups', secondaryNav: true });\n    dispatch(fetchGroups({ ...pagination, name: filterValue }));\n    dispatch(fetchSystemGroup(filterValue));\n  }, []);\n\n  const history = useHistory();\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) =>\n      newSelection(rows)\n        .filter(({ platform_default: isPlatformDefault }) => !isPlatformDefault)\n        .map(({ uuid, name }) => ({ uuid, label: name }))\n    );\n  };\n\n  const routes = () => (\n    <Fragment>\n      <Route exact path={paths['add-group']}>\n        <AddGroupWizard\n          pagination={pagination}\n          postMethod={(config) => {\n            dispatch(fetchGroups(config));\n            setFilterValue('');\n          }}\n        />\n      </Route>\n      <Route exact path={paths['group-edit'].path}>\n        <EditGroup\n          pagination={pagination}\n          postMethod={(config) => {\n            dispatch(fetchGroups(config));\n            setFilterValue('');\n          }}\n        />\n      </Route>\n      <Route exact path={paths['remove-group']}>\n        <RemoveGroup\n          pagination={pagination}\n          postMethod={(ids, config) => {\n            dispatch(fetchGroups(config));\n            setSelectedRows(selectedRows.filter((row) => !ids.includes(row.uuid)));\n            setFilterValue('');\n          }}\n          isModalOpen\n          groupsUuid={removeGroupsList}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const actionResolver = ({ isPlatformDefault }) =>\n    isPlatformDefault || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin)\n      ? null\n      : [\n          {\n            title: 'Edit',\n            onClick: (_event, _rowId, group) => {\n              history.push(`/groups/edit/${group.uuid}`);\n            },\n          },\n          {\n            title: 'Delete',\n            onClick: (_event, _rowId, group) => {\n              setRemoveGroupsList([group]);\n              history.push(paths['remove-group']);\n            },\n          },\n        ];\n\n  // TODO check this later\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link to={paths['add-group']} key=\"add-group\" className=\"ins-m-hide-on-sm\">\n            <Button ouiaId=\"create-group-button\" variant=\"primary\" aria-label=\"Create group\">\n              Create group\n            </Button>\n          </Link>,\n          {\n            label: 'Create group',\n            props: {\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(paths['add-group']);\n            },\n          },\n          {\n            label: 'Edit',\n            props: {\n              isDisabled: !(selectedRows.length === 1),\n            },\n            onClick: () => history.push(`/groups/edit/${selectedRows[0].uuid}`),\n          },\n          {\n            label: 'Delete',\n            props: {\n              isDisabled: !selectedRows.length > 0,\n            },\n            onClick: () => {\n              setRemoveGroupsList(selectedRows);\n              history.push(paths['remove-group']);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const renderGroupsList = () => (\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottom>\n          <TopToolbarTitle title=\"Groups\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={'tab-groups'}>\n          <TableToolbarView\n            data={groups.map((group) => (group.platform_default ? { ...group, principalCount: 'All' } : group))}\n            createRows={createRows}\n            columns={columns}\n            isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n            checkedRows={selectedRows}\n            setCheckedItems={setCheckedItems}\n            routes={routes}\n            actionResolver={actionResolver}\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            ouiaId=\"groups-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={(config) => dispatch(fetchGroups(config))}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            toolbarButtons={toolbarButtons}\n            isLoading={isLoading}\n            filterPlaceholder=\"name\"\n            rowWrapper={GroupRowWrapper}\n            tableId=\"groups\"\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n  return (\n    <Switch>\n      <PageActionRoute pageAction=\"role-detail\" path={paths['group-detail-role-detail']} render={(props) => <Role {...props} />} />\n      <PageActionRoute\n        pageAction=\"group-detail\"\n        path={paths['group-detail']}\n        render={(props) => <Group {...props} onDelete={() => setFilterValue('')} />}\n      />\n      <PageActionRoute pageAction=\"group-list\" path={paths.groups} render={() => renderGroupsList()} />\n    </Switch>\n  );\n};\n\nexport default Groups;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .pf-c-tabs.ins-rbac-page-header__tabs,.my-user-access .pf-c-tabs.ins-rbac-page-header__tabs{padding:0 var(--pf-c-page__main-section--PaddingRight) 0 var(--pf-c-page__main-section--PaddingLeft);background:white}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .ins-c-rbac__default-group-info-icon,.my-user-access .ins-c-rbac__default-group-info-icon{color:var(--pf-global--info-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .pf-c-table tbody tr.ins-c-rbac__group-default .pf-c-table__check:first-of-type input,.my-user-access .pf-c-table tbody tr.ins-c-rbac__group-default .pf-c-table__check:first-of-type input{display:none}.rbac .pf-c-question-circle-icon,.my-user-access .pf-c-question-circle-icon{color:var(--pf-global--palette--black-600);margin-left:var(--pf-global--spacer--sm);cursor:pointer}.rbac .pf-c-question-circle-icon.icon-active,.my-user-access .pf-c-question-circle-icon.icon-active{color:var(--pf-global--palette--blue-400)}.rbac .pf-c-popover,.my-user-access .pf-c-popover{min-width:350px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .delete-group-warning-icon,.my-user-access .delete-group-warning-icon{color:var(--pf-global--warning-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .ins-c-button__add-role-disabled:hover,.my-user-access .ins-c-button__add-role-disabled:hover{text-decoration:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};"],"sourceRoot":""}
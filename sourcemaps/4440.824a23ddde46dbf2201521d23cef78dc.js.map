{"version":3,"file":"js/4440.9af39a42f40dc4fde6db.js","mappings":"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","sources":["webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/helpers/role/inventory-helper.js","webpack:///./src/redux/actions/inventory-actions.js","webpack:///./src/smart-components/role/add-role/add-permissions-template.js","webpack:///./src/helpers/permission/permission-helper.js","webpack:///./src/redux/actions/permission-action.js","webpack:///./src/smart-components/role/add-role/DisabledRowWrapper.js","webpack:///./src/smart-components/role/add-role/add-permissions.js","webpack:///./src/smart-components/role/add-role/cost-resources.js","webpack:///./src/smart-components/role/add-role/inventory-groups-role-template.js","webpack:///./src/smart-components/role/add-role/inventory-groups-role.js","webpack:///./src/smart-components/role/permission-wizard-helper.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <ListLoader isCompact={isCompact} items={pagination?.limit} />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const fetchResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const fetchResource = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import { getInventoryGroupsApi } from '../shared/user-login';\n\nconst inventoryGroupsApi = getInventoryGroupsApi();\n\nexport const getInventoryGroups = async (apiProps) => {\n  return await inventoryGroupsApi.getInventoryGroups(apiProps);\n};\n","import * as ActionTypes from '../action-types';\nimport * as InventoryHelper from '../../helpers/role/inventory-helper';\n\nexport const fetchInventoryGroups = (permissions, config) => ({\n  type: ActionTypes.FETCH_INVENTORY_GROUP,\n  meta: { permissions, config },\n  payload: InventoryHelper.getInventoryGroups(config),\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Text, TextContent, Title, Button, Popover, Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './add-role-wizard.scss';\n\nconst AddPermissionTemplate = ({ formFields }) => {\n  const formOptions = useFormApi();\n  const [selectedPermissions, setSelectedPermissions] = useState(formOptions.getState().values['add-permissions-table'] || []);\n  const [alertClosed, setAlertClosed] = useState(false);\n  const notAllowedBasePermissions = formOptions.getState().values['not-allowed-permissions'];\n  const intl = useIntl();\n\n  const unresolvedSplats =\n    formOptions.getState().values?.['copy-base-role']?.applications?.filter((app) => !selectedPermissions?.find(({ uuid }) => uuid.includes(app))) ||\n    [];\n  const addPermissions = formFields[0][0];\n  return (\n    <div className=\"rbac\">\n      {selectedPermissions.length > 0 ? (\n        <div className=\"rbac-c-selected-chips\">\n          <ChipGroup categoryName={intl.formatMessage(messages.selectedPermissions)}>\n            {/* immutable reverse */}\n            {selectedPermissions\n              .reduce((acc, i) => [i, ...acc], [])\n              .map(({ uuid }) => (\n                <Chip key={uuid} color=\"blue\" isTruncated onClick={() => setSelectedPermissions(selectedPermissions.filter((p) => p.uuid !== uuid))}>\n                  {uuid}\n                </Chip>\n              ))}\n          </ChipGroup>\n        </div>\n      ) : null}\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"rbac-c-add-permission-title\">\n        {intl.formatMessage(messages.addPermissions)}\n      </Title>\n      <TextContent>\n        <Text>\n          {intl.formatMessage(messages.selectPermissionsForRole)}\n          {unresolvedSplats.length !== 0 && (\n            <Popover\n              headerContent={intl.formatMessage(messages.onlyGranularPermissions)}\n              bodyContent={intl.formatMessage(messages.noWildcardPermissions)}\n            >\n              <Button variant=\"link\">\n                {intl.formatMessage(messages.whyNotSeeingAllPermissions)} <QuestionCircleIcon />\n              </Button>\n            </Popover>\n          )}\n        </Text>\n      </TextContent>\n      {notAllowedBasePermissions?.length > 0 && !alertClosed ? (\n        <Alert\n          variant=\"custom\"\n          isInline\n          title={`${intl.formatMessage(messages.followingPermissionsCannotBeAdded)} ${notAllowedBasePermissions.join(', ')}`}\n          actionClose={<AlertActionCloseButton onClose={() => setAlertClosed(true)} />}\n        />\n      ) : null}\n      {[\n        [\n          {\n            ...addPermissions,\n            props: {\n              ...addPermissions.props,\n              selectedPermissions,\n              setSelectedPermissions,\n            },\n          },\n        ],\n      ]}\n    </div>\n  );\n};\n\nAddPermissionTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default AddPermissionTemplate;\n","import { getPermissionApi } from '../shared/user-login';\n\nconst accessApi = getPermissionApi();\n\nconst disallowedPermissions = ['inventory:staleness'];\n\nexport async function listPermissions(\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  excludeGlobals,\n  excludeRoles,\n  allowedOnly,\n  options\n) {\n  const response = await accessApi.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    excludeGlobals,\n    excludeRoles,\n    allowedOnly,\n    options\n  );\n\n  return {\n    ...response,\n    data: response.data.filter(({ permission }) => !disallowedPermissions.some((item) => permission.includes(item))),\n  };\n}\n\nexport async function listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options) {\n  return await accessApi.listPermissionOptions(field, limit, offset, application, resourceType, verb, undefined, allowedOnly, options);\n}\n","import * as ActionTypes from '../action-types';\nimport * as PermissionsHelper from '../../helpers/permission/permission-helper';\n\nexport const listPermissions = ({\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  exclude_roles,\n  allowed_only,\n  options,\n}) => ({\n  type: ActionTypes.LIST_PERMISSIONS,\n  payload: PermissionsHelper.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    exclude_globals,\n    exclude_roles,\n    allowed_only,\n    options\n  ),\n});\n\nconst fieldToAction = {\n  application: ActionTypes.LIST_APPLICATION_OPTIONS,\n  resource_type: ActionTypes.LIST_RESOURCE_OPTIONS,\n  verb: ActionTypes.LIST_OPERATION_OPTIONS,\n};\n\nexport const listPermissionOptions = ({ field, limit, offset, application, resourceType, verb, allowedOnly, options }) => ({\n  type: fieldToAction[field],\n  payload: PermissionsHelper.listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options),\n});\n\nexport const expandSplats = ({\n  limit = 1000,\n  offset = 0,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  options,\n}) => ({\n  type: ActionTypes.EXPAND_SPLATS,\n  payload: PermissionsHelper.listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, exclude_globals, options),\n});\n\nexport const resetExpandSplats = () => ({\n  type: ActionTypes.RESET_EXPAND_SPLATS,\n  payload: {\n    data: [],\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '@patternfly/react-core';\nimport { RowWrapper } from '@patternfly/react-table';\n\nexport const DisabledRowWrapper = ({ row, ...props }) =>\n  row.disableSelection ? (\n    <Tooltip content={row.disabledContent} exitDelay={1500} entryDelay={1500}>\n      <RowWrapper className=\"rbac-c-disabled-row\" row={row} {...props} />\n    </Tooltip>\n  ) : (\n    <RowWrapper row={row} {...props} />\n  );\n\nDisabledRowWrapper.propTypes = {\n  props: PropTypes.object,\n  row: PropTypes.object,\n};\n","import React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport debouncePromise from '@redhat-cloud-services/frontend-components-utilities/debounce';\nimport usePermissions from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { listPermissions, listPermissionOptions, expandSplats, resetExpandSplats } from '../../../redux/actions/permission-action';\nimport { fetchResourceDefinitions } from '../../../redux/actions/cost-management-actions';\nimport { fetchRole } from '../../../redux/actions/role-actions';\nimport { DisabledRowWrapper } from './DisabledRowWrapper';\nimport { isEqual } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport '../role-permissions.scss';\n\nconst selector = ({\n  permissionReducer: {\n    permission,\n    isLoading,\n    options: { application, operation, resource },\n    expandSplats,\n    isLoadingExpandSplats,\n  },\n  roleReducer: { isRecordLoading, selectedRole },\n  costReducer: { resourceTypes },\n}) => ({\n  permissions: permission.data.map(({ application, resource_type: resource, verb, permission, requires } = {}) => ({\n    application,\n    resource,\n    operation: verb,\n    uuid: permission,\n    requires,\n  })),\n  pagination: permission.meta,\n  isLoading: isLoading || isRecordLoading,\n  baseRole: selectedRole,\n  applicationOptions: application.data.filter((app) => app !== '*'),\n  resourceOptions: resource.data.filter((app) => app !== '*'),\n  operationOptions: operation.data.filter((app) => app !== '*'),\n  expandedPermissions: expandSplats.data.map(({ permission }) => permission),\n  isLoadingExpandSplats,\n  resourceTypes: resourceTypes.data,\n});\n\nconst AddPermissionsTable = ({ selectedPermissions, setSelectedPermissions, ...props }) => {\n  const [isOrgAdmin, setIsOrgAdmin] = useState(null);\n  const { auth } = useChrome();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { hasAccess: hasCostAccess } = usePermissions('cost-management', ['cost-management:*:*']);\n  const { hasAccess: hasRbacAccess } = usePermissions('rbac', ['rbac:*:*']);\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n\n  useEffect(() => {\n    const setOrgAdmin = async () => {\n      const {\n        identity: { user },\n      } = await auth.getUser();\n      setIsOrgAdmin(user.is_org_admin);\n    };\n    if (auth) {\n      setOrgAdmin();\n    }\n  }, [auth]);\n\n  const fetchData = (apiProps) =>\n    dispatch(\n      listPermissions({\n        ...apiProps,\n        ...(existingRoleId ? { exclude_roles: existingRoleId } : {}),\n        allowed_only: true,\n      })\n    );\n  const fetchOptions = (apiProps) => dispatch(listPermissionOptions({ ...apiProps, allowedOnly: true }));\n  const {\n    permissions,\n    isLoading,\n    pagination,\n    baseRole,\n    applicationOptions,\n    resourceOptions,\n    operationOptions,\n    expandedPermissions,\n    isLoadingExpandSplats,\n    resourceTypes,\n  } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  // TODO: use reducer when cleaning this code\n  const [filters, setFilters] = useState({ applications: [], resources: [], operations: [] });\n  const roleType = formOptions.getState().values['role-type']; // create/copy\n  const existingRoleId = formOptions.getState().values['role-uuid'];\n  const [isToggled, setIsToggled] = useState(false);\n  const [filterBy, setFilterBy] = useState('');\n  const [value, setValue] = useState();\n  const maxFilterItems = 10;\n\n  const inventoryAccess = useMemo(() => isOrgAdmin || (hasRbacAccess ?? false), [hasRbacAccess, isOrgAdmin]);\n\n  const getResourceType = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1]);\n  const createRows = (permissions) =>\n    permissions.map(({ application, resource, operation, uuid, requires }) => ({\n      uuid: `${application}:${resource}:${operation}`,\n      requires,\n      cells: [\n        {\n          title: application,\n        },\n        resource,\n        operation,\n      ],\n      selected: Boolean(selectedPermissions && selectedPermissions.find((row) => row.uuid === uuid)),\n      disableSelection:\n        (application === 'cost-management' && ((getResourceType(uuid) || { count: 0 }).count === 0 || !hasCostAccess)) ||\n        (application === 'inventory' && !inventoryAccess),\n      disabledContent:\n        application === 'cost-management' ? (\n          <div>\n            {intl.formatMessage(hasCostAccess ? messages.configureResourcesForPermission : messages.noCostManagementPermissions)}{' '}\n            {hasCostAccess ? <a href=\"./settings/sources\">{intl.formatMessage(messages.configureCostSources)}</a> : null}\n          </div>\n        ) : (\n          <div>{intl.formatMessage(messages.noRbacPermissions)}</div>\n        ),\n    }));\n\n  const debouncedGetApplicationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'application',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetResourceOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'resource_type',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetOperationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({ field: 'verb', limit: 50, application: applications.join(), resourceType: resources.join(), verb: operations.join() }),\n      2000\n    ),\n    []\n  );\n\n  useEffect(() => {\n    const baseRoleUuid = formOptions.getState().values['copy-base-role']?.uuid;\n    if (roleType === 'copy' && baseRoleUuid) {\n      dispatch(fetchRole(baseRoleUuid));\n    }\n\n    formOptions.change('has-cost-resources', false);\n    fetchData(pagination);\n    fetchOptions({ field: 'application', limit: 50 });\n    fetchOptions({ field: 'resource_type', limit: 50 });\n    fetchOptions({ field: 'verb', limit: 50 });\n\n    return () => dispatch(resetExpandSplats());\n  }, []);\n\n  useEffect(() => {\n    hasCostAccess && dispatch(fetchResourceDefinitions());\n  }, [hasCostAccess]);\n\n  useEffect(() => {\n    debouncedGetResourceOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.applications]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.resources]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetResourceOptions(filters);\n  }, [filters.operations]);\n\n  useEffect(() => {\n    input.onChange(selectedPermissions);\n  }, [selectedPermissions]);\n\n  useEffect(() => {\n    if (\n      !baseRole ||\n      roleType !== 'copy' ||\n      formOptions.getState().values['base-permissions-loaded'] ||\n      selectedPermissions.length > 0 ||\n      formOptions.getState().values['copy-base-role']?.uuid !== baseRole?.uuid ||\n      isLoadingExpandSplats ||\n      isLoading\n    ) {\n      return;\n    }\n\n    let notAllowed = [];\n\n    const basePermissions =\n      baseRole?.access.filter((item) => {\n        if (applicationOptions.includes(item?.permission?.split(':')[0])) {\n          return true;\n        }\n        notAllowed.push(item);\n\n        return false;\n      }) || [];\n    formOptions.change(\n      'not-allowed-permissions',\n      notAllowed.map(({ permission }) => permission)\n    );\n    if (expandedPermissions.length === 0 && typeof isLoadingExpandSplats === 'undefined') {\n      const applications = [...new Set(basePermissions.map(({ permission }) => permission.split(':')[0]))];\n      dispatch(expandSplats({ application: applications.join() }));\n    } else {\n      const patterns = basePermissions.map(({ permission }) => permission.replace('*', '.*'));\n      setSelectedPermissions(() =>\n        expandedPermissions\n          .filter((p) => p.split(':')[0] !== 'cost-management' || (getResourceType(p) || { count: 0 }).count !== 0) // filter disabled rows\n          .filter((p) => patterns.some((f) => p.match(f))) // filter permissions with unresolved splats\n          .map((permission) => ({ uuid: permission }))\n      );\n      formOptions.change('base-permissions-loaded', true);\n    }\n  }, [permissions, baseRole]);\n\n  const setCheckedItems = (newSelection) => {\n    const newSelected = newSelection(selectedPermissions)\n      .filter(({ uuid, application }) => application !== 'cost-management' || getResourceType(uuid)?.count > 0)\n      .map(({ uuid, requires }) => ({ uuid, requires }));\n\n    setSelectedPermissions(isEqual(newSelected, selectedPermissions) ? [] : newSelected);\n  };\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const preparedFilterItems = {\n    applications: [...applicationOptions].filter((item) => item.includes(filterBy)).map((app) => ({ label: app, value: app })),\n    resources: [...resourceOptions].filter((item) => item.includes(filterBy)).map((res) => ({ label: res, value: res })),\n    operations: [...operationOptions].filter((item) => item.includes(filterBy)).map((op) => ({ label: op, value: op })),\n  };\n\n  const emptyItem = {\n    label: <div>{intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const filterItemOverflow = preparedFilterItems[Object.keys(preparedFilterItems)[value ? value : 0]].length > maxFilterItems;\n  return (\n    <div className=\"rbac-c-permissions-table\">\n      <TableToolbarView\n        columns={columns}\n        isSelectable={true}\n        isCompact={true}\n        borders={false}\n        rows={createRows(permissions)}\n        data={permissions}\n        filterValue=\"\"\n        noData={permissions?.length === 0}\n        noDataDescription={[intl.formatMessage(messages.permissionNotDisplayedDescription)]}\n        fetchData={({ limit, offset, applications, resources, operations }) => {\n          fetchData({\n            limit,\n            offset,\n            application: (applications || filters.applications).join(),\n            resourceType: (resources || filters.resources).join(),\n            verb: (operations || filters.operations).join(),\n          });\n        }}\n        setFilterValue={({ applications, resources, operations }) => {\n          setFilters({\n            ...filters,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        isLoading={isLoading || isLoadingExpandSplats}\n        pagination={{ ...pagination, count: pagination.count }}\n        checkedRows={selectedPermissions}\n        setCheckedItems={setCheckedItems}\n        titlePlural={intl.formatMessage(messages.permissions).toLowerCase()}\n        titleSingular={intl.formatMessage(messages.permission).toLowerCase()}\n        showMoreTitle={intl.formatMessage(isToggled ? messages.seeLess : messages.seeMore)}\n        onFilter={(filterBy) => setFilterBy(filterBy)}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                setIsToggled(() => !isToggled);\n              }\n            : undefined\n        }\n        onChange={(e, value) => {\n          setFilterBy('');\n          setValue(value);\n        }}\n        value={value}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: preparedFilterItems.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.applications.length > 0\n                    ? [...preparedFilterItems.applications].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: preparedFilterItems.resources.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.resources.length > 0\n                    ? [...preparedFilterItems.resources].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: preparedFilterItems.operations.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.operations.length > 0\n                    ? [...preparedFilterItems.operations].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        isFilterable={true}\n        rowWrapper={DisabledRowWrapper}\n        tableId=\"add-role-permissions\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nAddPermissionsTable.propTypes = {\n  selectedPermissions: PropTypes.array,\n  setSelectedPermissions: PropTypes.func,\n};\n\nexport default AddPermissionsTable;\n","import React, { useEffect, useReducer } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem, Text, TextVariants, FormGroup, Tooltip } from '@patternfly/react-core';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core/deprecated';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { fetchResourceDefinitions, fetchResource } from '../../../redux/actions/cost-management-actions';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }) => ({\n  resourceTypes: resourceTypes.data,\n  resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: !prevState.isOpen,\n        },\n      };\n    case 'select':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.selected.includes(action.selection)\n            ? prevState.selected.filter((item) => item !== action.selection)\n            : [...prevState.selected, action.selection],\n        },\n      };\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.options.map((option) => option.value),\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    case 'setOptions':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          options: action.options,\n          filteredOptions: action.options,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filteredOptions: prevState.options.filter(({ value }) => value.includes(action.filtervalue)),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst CostResources = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (apiProps) => dispatch(fetchResourceDefinitions(apiProps));\n  const getResource = (apiProps) => dispatch(fetchResource(apiProps));\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const permissions = formOptions.getState().values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('cost-management'));\n\n  const [state, dispatchLocaly] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission.uuid]: {\n          selected: [],\n          options: [],\n          filteredOptions: [],\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n  const onToggle = (key, isOpen) => dispatchLocaly({ type: 'toggle', key, isOpen });\n  const clearSelection = (key) => dispatchLocaly({ type: 'clear', key });\n  const onSelect = (event, selection, selectAll, key) =>\n    selectAll ? dispatchLocaly({ type: 'selectAll', selection, key }) : dispatchLocaly({ type: 'select', selection, key });\n\n  const permissionToResource = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1])?.path.split('/')?.[5];\n\n  useEffect(() => {\n    (formOptions.getState().values['resource-definitions'] || []).map(({ permission, resources }) =>\n      resources.map(\n        (resource) =>\n          permissions.find((item) => item?.uuid === permission) && dispatchLocaly({ type: 'select', selection: resource, key: permission })\n      )\n    );\n    fetchData();\n    formOptions.change('has-cost-resources', true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      const resourcePaths = [\n        ...new Set(permissions.map((permission) => resourceTypes.find((r) => r.value === permission.uuid.split(':')?.[1])?.path)),\n      ].filter((path) => path); // remove undefined\n      resourcePaths.map((path) => getResource(path));\n    }\n  }, [resourceTypes]);\n\n  useEffect(() => {\n    if (!isLoadingResources) {\n      permissions.map((p) => dispatchLocaly({ type: 'setOptions', key: p.uuid, options: resources[permissionToResource(p.uuid)] || [] }));\n    }\n  }, [isLoadingResources]);\n\n  useEffect(() => {\n    const resourceDefinitions = Object.entries(state).map(([permission, resources]) => ({ permission, resources: resources.selected }));\n    input.onChange(resourceDefinitions);\n    formOptions.change('resource-definitions', resourceDefinitions);\n  }, [state]);\n\n  // eslint-disable-next-line react/prop-types\n  const makeRow = ({ uuid: permission }) => {\n    const options = state[permission].filteredOptions;\n    return (\n      <React.Fragment>\n        <GridItem md={4} sm={12}>\n          <Tooltip content={<div>{permission}</div>}>\n            <FormGroup label={permission.replace(/^cost-management:/, '')} isRequired></FormGroup>\n          </Tooltip>\n        </GridItem>\n        <GridItem md={8} sm={12}>\n          <Select\n            className=\"rbac-m-resource-type-select\"\n            variant={SelectVariant.checkbox}\n            typeAheadAriaLabel={intl.formatMessage(messages.selectState)}\n            onToggle={(_event, isOpen) => {\n              dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: '' });\n              onToggle(permission, isOpen);\n            }}\n            onSelect={(event, selection) => {\n              onSelect(event, selection, selection === intl.formatMessage(messages.selectAll, { length: options.length }), permission);\n            }}\n            onClear={() => clearSelection(permission)}\n            selections={state[permission].selected}\n            isOpen={state[permission].isOpen}\n            onFilter={(e) => e && dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: e.target.value })}\n            aria-labelledby={permission}\n            placeholderText={intl.formatMessage(messages.selectResources)}\n            hasInlineFilter\n          >\n            {[\n              <SelectOption key={0} value={intl.formatMessage(messages.selectAll, { length: options.length })} />,\n              ...options.map((option, index) => <SelectOption key={index + 1} value={option.value} />),\n            ]}\n          </Select>\n        </GridItem>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={4} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem md={8} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.resourceDefinitions)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default CostResources;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst InventoryGroupsRoleTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-lg\">\n        {intl.formatMessage(messages.inventoryGroupsAccessTitle)}\n      </Title>\n      {formFields}\n    </div>\n  );\n};\n\nInventoryGroupsRoleTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default InventoryGroupsRoleTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport { Button, Grid, GridItem, Text, TextVariants, FormGroup, Tooltip, Divider } from '@patternfly/react-core';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core/deprecated';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { fetchInventoryGroups } from '../../../redux/actions/inventory-actions';\nimport { debouncedFetch } from '../../../helpers/shared/helpers';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\n\nconst selector = ({ inventoryReducer: { resourceTypes, total, isLoading } }) => ({\n  resourceTypes,\n  totalCount: total,\n  isLoading,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: action.isOpen,\n          filterValue: action.filterValue ?? prevState.filterValue,\n          page: action.page ?? prevState.page,\n        },\n      };\n    case 'select':\n      if (prevState.selected.some((item) => item?.id === action.processedSelection?.id)) {\n        return {\n          ...state,\n          [action.key]: {\n            ...prevState,\n            selected: prevState.selected.filter((item) => item.id !== action.processedSelection?.id),\n          },\n        };\n      } else if (action.processedSelection?.id !== undefined && action.processedSelection?.name !== undefined) {\n        return {\n          ...state,\n          [action.key]: {\n            ...prevState,\n            selected: [...prevState.selected, action.processedSelection],\n          },\n        };\n      } else {\n        return state;\n      }\n    case 'copyToAll': {\n      const firstPermissionSelection = state[action.permissions[0]].selected;\n      return {\n        ...state,\n        ...action.permissions.reduce((acc, permission) => {\n          acc[permission] = {\n            ...state[permission],\n            selected: !permission.includes('inventory:hosts') ? firstPermissionSelection.filter(({ id }) => id !== null) : firstPermissionSelection,\n          };\n          return acc;\n        }, {}),\n      };\n    }\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: action.selectionArray,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filterValue: action.filterValue,\n          page: 1,\n        },\n      };\n    case 'setPage':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          page: action.page,\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst InventoryGroupsRole = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  const { resourceTypes, totalCount, isLoading } = useSelector(selector, shallowEqual);\n  const permissions =\n    formOptions\n      .getState()\n      .values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('inventory'))\n      .map(({ uuid }) => uuid) || [];\n\n  const fetchData = (permissions, apiProps) => dispatch(fetchInventoryGroups(permissions, apiProps));\n\n  // eslint-disable-next-line\n  const onSelect = (event, selection, selectAll, key) => {\n    const ungroupedSystems = { id: null, name: 'null' };\n    return (\n      (selectAll && dispatchLocally({ type: 'selectAll', selectionArray: [ungroupedSystems, ...Object.values(resourceTypes[key])], key })) ||\n      dispatchLocally({ type: 'select', processedSelection: selection === 'null' ? ungroupedSystems : resourceTypes[key][selection], key })\n    );\n  };\n  const clearSelection = (key) => dispatchLocally({ type: 'clear', key });\n\n  const [state, dispatchLocally] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission]: {\n          page: 1,\n          selected: [],\n          filterValue: '',\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n\n  useEffect(() => {\n    fetchData(permissions, {});\n    formOptions.change('inventory-group-permissions', []);\n  }, []);\n\n  useEffect(() => {\n    const groupsPermissionsDefinition = Object.entries(state).map(([permission, { selected }]) => ({ permission, groups: selected }));\n    input.onChange(groupsPermissionsDefinition);\n    formOptions.change('inventory-group-permissions', groupsPermissionsDefinition);\n  }, [state]);\n\n  const makeRow = (permissionID, index) => {\n    const ungroupedSystems = intl\n      .formatMessage(messages.ungroupedSystems)\n      .toLocaleLowerCase()\n      .includes(state[permissionID].filterValue.toLocaleLowerCase())\n      ? [\n          <SelectOption key={`${permissionID}-ungrouped`} value=\"null\">\n            <FormattedMessage {...messages.ungroupedSystems} />\n          </SelectOption>,\n          <Divider component=\"li\" key={`${permissionID}-divider`} />,\n        ]\n      : [];\n    const options = Object.values(resourceTypes?.[permissionID] ?? {});\n\n    return (\n      <React.Fragment key={permissionID}>\n        <Grid>\n          <GridItem lg={3} md={3} sm={4}>\n            <FormGroup label={permissionID?.replace('inventory:', '')} isRequired />\n          </GridItem>\n          <GridItem lg={7} md={6} sm={5}>\n            <Tooltip content={<div>{intl.formatMessage(messages.inventoryGroupsTooltip)}</div>}>\n              <Select\n                className=\"rbac-m-resource-type-select\"\n                variant={SelectVariant.checkbox}\n                typeAheadAriaLabel={intl.formatMessage(messages.inventoryGroupsTypeAheadLabel)}\n                aria-labelledby={permissionID}\n                selections={state[permissionID].selected.map(({ name }) => name)}\n                placeholderText={intl.formatMessage(messages.selectGroups)}\n                onSelect={(event, selection) => onSelect(event, selection, selection === 'select-all', permissionID)}\n                onToggle={(_event, isOpen) => {\n                  // TODO: persist filter state when https://github.com/patternfly/patternfly-react/issues/9490 is resolved\n                  !isOpen && state[permissionID].filterValue?.length > 0 && fetchData([permissionID]);\n                  dispatchLocally({ type: 'toggle', key: permissionID, filterValue: '', page: 1, isOpen });\n                }}\n                onClear={() => clearSelection(permissionID)}\n                onFilter={(event) => {\n                  if (event) {\n                    dispatchLocally({ type: 'setFilter', key: permissionID, filterValue: event.target.value });\n                    debouncedFetch(() => fetchData([permissionID], { name: event.target.value }), 2000);\n                  }\n                }}\n                isOpen={state[permissionID].isOpen}\n                hasInlineFilter\n                {...(!isLoading &&\n                  resourceTypes[permissionID] &&\n                  Object.values(resourceTypes[permissionID]).length < totalCount && {\n                    loadingVariant: {\n                      text: intl.formatMessage(messages.seeMore),\n                      onClick: () => {\n                        fetchData([permissionID], { page: state[permissionID].page + 1, name: state[permissionID].filterValue });\n                        dispatchLocally({ type: 'setPage', key: permissionID, page: state[permissionID].page++ });\n                      },\n                    },\n                  })}\n                {...(isLoading && { loadingVariant: 'spinner' })}\n              >\n                {[\n                  ...(options?.length > 0\n                    ? [\n                        <SelectOption key={`${permissionID}-all`} value=\"select-all\">\n                          <FormattedMessage\n                            {...messages.selectAll}\n                            values={{\n                              length: options?.length,\n                            }}\n                          />\n                        </SelectOption>,\n                      ]\n                    : []),\n                  ...(permissionID.includes('hosts:') ? ungroupedSystems : []),\n                  ...(options?.map((option, index) => (\n                    <SelectOption key={`${permissionID}-${index + 1}`} value={option?.name}>\n                      {option.children}\n                    </SelectOption>\n                  )) || []),\n                ]}\n              </Select>\n            </Tooltip>\n          </GridItem>\n          <GridItem lg={2} md={4} sm={2}>\n            {index <= 0 && permissions.length > 1 && (\n              <Button key={`${permissionID}-copy`} variant=\"link\" isInLink onClick={() => dispatchLocally({ type: 'copyToAll', permissions })}>\n                {intl.formatMessage(messages.copyToAll)}\n              </Button>\n            )}\n          </GridItem>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem lg={3} md={6} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text pf-v5-u-mt-sm\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem lg={9} md={6} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text pf-v5-u-mt-sm\">\n          {intl.formatMessage(messages.groupDefinition)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default InventoryGroupsRole;\n","import { isCostPermission, isInventoryPermission } from './role-resource-definitions-table-helpers';\n\nexport const validateNextAddRolePermissionStep = (currentStep, values) => {\n  const permissions = (values && values['add-permissions-table']) || [];\n  const hasCostPermissions = permissions.some(({ uuid }) => isCostPermission(uuid));\n  const hasInventoryPermissions = permissions.some(({ uuid }) => isInventoryPermission(uuid));\n\n  if (currentStep === 'inventory-groups-role' && hasCostPermissions) return 'cost-resources-definition';\n\n  if (currentStep === 'add-permissions' && hasInventoryPermissions) {\n    return 'inventory-groups-role';\n  }\n\n  if (currentStep === 'add-permissions' && hasCostPermissions) {\n    return 'cost-resources-definition';\n  }\n\n  return 'review';\n};\n\n// TODO: add step dictionary to replace literal strings across both add-role and add-role-permission\n","import messages from '../../Messages';\n\nconst INVENTORY_PREFIX = 'inventory';\nconst COST_MANAGEMENT_PREFIX = 'cost-management';\nconst HOSTS_TYPE = 'hosts';\n\nexport const isInventoryPermission = (permissionId) => permissionId.split(':')[0].includes(INVENTORY_PREFIX);\nexport const isInventoryHostsPermission = (permissionId) => isInventoryPermission(permissionId) && permissionId.split(':')[1].includes(HOSTS_TYPE);\n\nexport const isCostPermission = (permissionId) => permissionId.split(':')[0].includes(COST_MANAGEMENT_PREFIX);\n\nexport const createRows = (data, permissionId, intl) => {\n  let finalData = data.filter(Boolean);\n  if (isInventoryHostsPermission(permissionId) && data.includes(null)) {\n    finalData.unshift(intl.formatMessage(messages.ungroupedSystems));\n  }\n  return finalData.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n};\n"],"names":["linkBasename","navigate","useNavigate","to","options","title","icon","description","actions","props","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","className","map","text","key","EmptyStateFooter","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","value","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","intl","Fragment","length","every","formatMessage","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","item","orderBy","direction","index","limit","canSelectAll","toLowerCase","compact","onSelect","_e","isSelected","_idx","uuid","cells","name","requires","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","undefined","EmptyStateActions","Button","onClick","offset","clearAllFilters","colSpan","e","noBottom","Pagination","dropDirection","propTypes","directions","isRequired","count","toggleTemplate","defaultProps","paginationBuilder","itemCount","perPage","page","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","checked","id","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","innerRef","filterValues","filterByKey","filterBy","newFilter","Array","isArray","Object","keys","pickBy","reduce","acc","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","costApi","async","getResourceDefinitions","apiProps","getResourceTypes","getResource","fetchResourceDefinitions","payload","fetchResource","inventoryGroupsApi","getInventoryGroups","fetchInventoryGroups","permissions","config","meta","AddPermissionTemplate","formFields","formOptions","selectedPermissions","setSelectedPermissions","useState","getState","values","alertClosed","setAlertClosed","notAllowedBasePermissions","unresolvedSplats","applications","app","find","includes","addPermissions","ChipGroup","categoryName","i","Chip","color","isTruncated","p","Title","size","TextContent","Text","selectPermissionsForRole","Popover","headerContent","onlyGranularPermissions","bodyContent","noWildcardPermissions","whyNotSeeingAllPermissions","Alert","isInline","followingPermissionsCannotBeAdded","join","actionClose","AlertActionCloseButton","onClose","accessApi","disallowedPermissions","listPermissions","application","resourceType","verb","permission","excludeGlobals","excludeRoles","allowedOnly","response","some","listPermissionOptions","field","fieldToAction","resource_type","DisabledRowWrapper","row","disableSelection","Tooltip","content","disabledContent","exitDelay","entryDelay","RowWrapper","selector","permissionReducer","operation","resource","expandSplats","isLoadingExpandSplats","roleReducer","isRecordLoading","selectedRole","costReducer","resourceTypes","baseRole","applicationOptions","resourceOptions","operationOptions","expandedPermissions","AddPermissionsTable","isOrgAdmin","setIsOrgAdmin","auth","useChrome","dispatch","useDispatch","hasAccess","hasCostAccess","hasRbacAccess","useEffect","identity","user","getUser","is_org_admin","setOrgAdmin","exclude_globals","exclude_roles","allowed_only","existingRoleId","fetchOptions","useSelector","shallowEqual","input","setFilters","resources","operations","roleType","isToggled","setIsToggled","setFilterBy","setValue","inventoryAccess","useMemo","getResourceType","r","split","debouncedGetApplicationOptions","useCallback","debounce","debouncedGetResourceOptions","debouncedGetOperationOptions","baseRoleUuid","change","notAllowed","basePermissions","access","push","Set","patterns","replace","f","match","calculateSelected","preparedFilterItems","res","op","emptyItem","noResultsFound","filterItemOverflow","configureResourcesForPermission","noCostManagementPermissions","href","configureCostSources","noRbacPermissions","createRows","permissionNotDisplayedDescription","newSelection","newSelected","isEqual","seeLess","seeMore","slice","loadingResources","isLoadingResources","reducer","state","action","prevState","isOpen","selection","option","filteredOptions","filtervalue","dispatchLocaly","useReducer","path","resourceDefinitions","entries","Grid","hasGutter","GridItem","md","component","TextVariants","h4","FormGroup","checkbox","typeAheadAriaLabel","selectState","onToggle","event","selectAll","onClear","selections","target","placeholderText","selectResources","hasInlineFilter","InventoryGroupsRoleTemplate","inventoryGroupsAccessTitle","inventoryReducer","total","totalCount","processedSelection","firstPermissionSelection","selectionArray","dispatchLocally","groupsPermissionsDefinition","lg","groupDefinition","permissionID","ungroupedSystems","toLocaleLowerCase","Divider","inventoryGroupsTooltip","inventoryGroupsTypeAheadLabel","selectGroups","loadingVariant","children","isInLink","copyToAll","validateNextAddRolePermissionStep","currentStep","hasCostPermissions","hasInventoryPermissions","isInventoryPermission","permissionId","isInventoryHostsPermission","isCostPermission","finalData","unshift"],"sourceRoot":""}
{"version":3,"file":"js/5608.1661153316375.46e18921276b30e93922.js","mappings":"8PA2BA,QAhBqB,kBACnB,kBAAC,IAAD,CAAcA,OAHC,KAGiBC,SAAUA,EAAQ,IAChD,kBAAC,aAAD,CACEC,MAAO,CACLC,YAAa,kBAAMC,EAAAA,KAGrB,kBAAC,EAAAC,SAAD,CAAUC,MAAOF,EAAAA,EAAAA,YACf,kBAAC,gBAAD,CAAQG,UAAUC,EAAAA,EAAAA,IAAYC,SAASC,SAAU,GAAGC,SAAS,SAAUH,EAAAA,EAAAA,IAAYC,SAASC,SAAU,IAAKF,EAAAA,EAAAA,IAAYC,SAASC,SAAU,IACxI,kBAACE,EAAA,EAAD,WChBVC,IAAAA,OAAgB,kBAAC,EAAD,MAAkBC,SAASC,eAAe","sources":["webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport registry, { RegistryContext } from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { IntlProvider } from 'react-intl';\nimport messages from './locales/data.json';\n\nconst language = 'en';\n\nconst InsightsRbac = () => (\n  <IntlProvider locale={language} messages={messages[language]}>\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <Router basename={getBaseName(location.pathname, 2).includes('rbac') ? getBaseName(location.pathname, 2) : getBaseName(location.pathname, 1)}>\n          <App />\n        </Router>\n      </Provider>\n    </RegistryContext.Provider>\n  </IntlProvider>\n);\n\nexport default InsightsRbac;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InsightsRbac from './AppEntry';\n\nReactDOM.render(<InsightsRbac />, document.getElementById('root'));\n"],"names":["locale","messages","value","getRegistry","registry","Provider","store","basename","getBaseName","location","pathname","includes","App","ReactDOM","document","getElementById"],"sourceRoot":""}
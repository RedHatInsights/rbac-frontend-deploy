{"version":3,"file":"js/2916.3e4f0528a6b08df39383.js","mappings":";4MACA,gzMACA,IAAMA,GAAUC,WAAAA,MAET,SAAeC,EAAtB,0EAAO,WAAsCC,GAAtC,iFACQH,EAAQI,iBAAiBD,GADjC,0GAIA,SAAeE,EAAtB,0EAAO,WAA2BF,GAA3B,iFACQH,EAAQK,YAAYF,GAD5B,0GCLA,IAAMD,EAAyB,SAACC,GAAD,MAAe,CACnDG,KAAMC,EAAAA,GACNC,QAASC,EAAkCN,KAGhCE,EAAc,SAACF,GAAD,MAAe,CACxCG,KAAMC,EAAAA,GACNC,QAASC,EAAuBN,6dCKlC,IAAMO,EAAwB,aACxBC,EAAoB,SAACC,GAAD,OAAW,kBAAC,KAAD,UAAUA,EAAV,CAAiBC,GAAIH,MAEpDI,EAAgB,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAC1BC,GAAaC,EAAAA,EAAAA,WAAbD,SAER,OACE,kBAAC,IAAD,MACG,gBAAGE,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,WAAlC,OACC,yBAAKC,UAAU,aACb,kBAAC,IAAD,CAAaA,UAAU,aACrB,kBAAC,EAAAC,OAAD,CACEC,OAAO,sBACPC,QAAQ,UACRC,KAAMjB,EACNJ,KAAK,SACLsB,WAAYT,GAAYE,GAAcC,GAAcF,GAEnDL,GAEH,kBAAC,EAAAS,OAAD,CAAQC,OAAO,0BAA0BC,QAAQ,OAAOG,QAASZ,EAAUJ,GAAG,gBAC3EG,SASfF,EAAcgB,UAAY,CACxBf,UAAWgB,IAAAA,KACXf,YAAae,IAAAA,MAGfjB,EAAckB,aAAe,CAC3BjB,UAAW,OACXC,YAAa,UAGf,IAAMiB,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYnB,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,YAAamB,EAAvC,EAAuCA,MAAUvB,GAAjD,mBACxB,kBAAC,EAAAwB,OAAD,UAAWF,EAAX,CAAuBG,OAAQ,kBAACvB,EAAD,CAAeC,UAAWA,EAAWC,YAAaA,MAC9EmB,MAAAA,OADH,EACGA,IACD,kBAAC,MAAD,UAAkBvB,EAAlB,CAAyB0B,kBAAkB,EAAOC,YAAa5B,OAInEsB,EAAkBH,+WAAlB,EACEI,WAAYH,IAAAA,QACTjB,EAAcgB,WAGnB,qTChDMU,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,WAAYf,EAA/B,EAA+BA,WAAYgB,EAA3C,EAA2CA,WAAeC,GAA1D,mBACb,kBAAC,EAAAC,YAAD,UAAgBL,EAAWI,EAA3B,CAAiCjB,WAAYA,GAAce,IAdvC,SAACD,EAASK,EAAYH,GAC1C,IAAMI,GAAOC,EAAAA,EAAAA,KAEb,GAAIF,GAAcH,EAChB,OAAOF,EAGT,IAAIQ,GAAgB,OAAIR,GACxB,OAAOQ,EAAcC,MAAK,wBAAyBC,IAAzB,EAAGC,UAAtB,OACCH,GADD,CAEF,CAAEI,MAAON,EAAKO,cAAcC,EAAAA,EAASZ,EAAa,eAAiB,WAFjE,eAEgFM,IAKpFO,CAAcf,EAASD,EAAMY,MAAOT,GAAYc,KAAI,SAAC9C,GAAD,OACnD,kBAAC,EAAA+C,kBAAD,QAAkBC,IAAKhD,EAAMyC,OAASzC,EAAM0C,OAAW1C,EAAvD,CAA8D0C,MAAO1C,EAAM0C,MAAMO,mBAKvFrB,EAAOV,UAAY,CACjBW,MAAOV,IAAAA,OAAAA,WACPW,QAASX,IAAAA,QACPA,IAAAA,MAAgB,CACdsB,MAAOtB,IAAAA,IACPuB,MAAOvB,IAAAA,OAAAA,cAETa,WACFD,WAAYZ,IAAAA,KACZH,WAAYG,IAAAA,KACZa,WAAYb,IAAAA,KACZ+B,cAAe/B,IAAAA,KAGjB,IAAMgC,EAAmB,SAAC,GAA6E,IAA3ET,EAA2E,EAA3EA,MAAOV,EAAoE,EAApEA,WAAYoB,EAAwD,EAAxDA,WAAYC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,UAActB,GAAW,YAC7FuB,EAAmBH,EAAnBG,MACFC,EADqBJ,EAAZK,SACcF,EAE7B,OACE,kBAAC,EAAAG,UAAD,CACE3B,WAAYA,EACZU,OAAQa,GAAab,EACrBkB,QAAS3B,EAAKhC,GACd4D,SAAUJ,EACVL,WAAYA,EACZU,kBAAmBT,EAAKG,OAEvBF,GACC,kBAAC,EAAAS,YAAD,KACE,kBAAC,EAAAC,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,OAAqBZ,IAG1C,kBAAC1B,GAAD,QAAQc,MAAOA,EAAOmB,SAAUJ,EAAWzB,WAAYA,GAAgBC,MAK7EkB,EAAiBjC,UAAY,CAC3BiD,cAAehD,IAAAA,OACfuB,MAAOvB,IAAAA,OACPa,WAAYb,IAAAA,KACZiC,WAAYjC,IAAAA,OACZkC,KAAMlC,IAAAA,OACNmC,YAAanC,IAAAA,OACboC,UAAWpC,IAAAA,MAGb,wDCjEMiD,EAAc,SAAC,GAA8D,IAA5DC,EAA4D,EAA5DA,2BAA4BC,EAAgC,EAAhCA,gBAAiB/D,EAAe,EAAfA,SAC1DF,GAAaC,EAAAA,EAAAA,WAAbD,SACFkE,EAAY,IAAQF,KAAiCC,GAAmB/D,EACxE6B,GAAOC,EAAAA,EAAAA,KACb,OACE,kBAAC,EAAAmC,YAAD,CAAa7D,UAAU,aACrB,kBAAC,EAAAC,OAAD,CAAQC,OAAO,wBAAwBnB,KAAK,SAASsB,WAAYuD,EAAWzD,QAAQ,WACjFsB,EAAKO,cAAcC,EAAAA,EAAAA,OAEtB,kBAAC,EAAAhC,OAAD,CAAQC,OAAO,0BAA0BC,QAAQ,OAAOG,QAAS,kBAAMZ,MACpE+B,EAAKO,cAAcC,EAAAA,EAAAA,WAM5BwB,EAAYlD,UAAY,CACtBmD,2BAA4BlD,IAAAA,OAAA,UACzBA,IAAAA,OAAmBA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,OAAkBA,IAAAA,SAE/EmD,gBAAiBnD,IAAAA,KACjBZ,SAAUY,IAAAA,KACVd,SAAUc,IAAAA,MAeZ,QAZ4B,SAACsD,GAAD,OAC1B,kBAAC,IAAD,CACEC,aAAc,CACZnE,UAAU,EACV+D,iBAAiB,EACjBD,4BAA4B,KAG7B,SAACrE,GAAD,OAAW,kBAACoE,GAAD,UAAiBpE,EAAWyE,2FChCtCE,EAAe,SAAC,GAAD,MAAGC,EAAH,EAAGA,kBAAsB5E,GAAzB,mBACnB,kBAAC,KAAD,QACE6E,iBAAe,eACZC,EAAAA,EAAAA,WAA4BC,EAAAA,IADhB,SAEZD,EAAAA,EAAAA,SAA0BE,EAAAA,IAFd,SAGZF,EAAAA,EAAAA,OAAwB3B,GAHZ,GAKf8B,aAAc,SAACjF,GAAD,OAAW,kBAAC,MAAD,UAAkB4E,EAAuB5E,EAAzC,CAAgDoE,YAAaA,OAClFpE,KAIR2E,EAAazD,UAAY,CACvB0D,kBAAmBzD,IAAAA,QAGrB,iwBCjBA,IAAM+D,EAAwB,SAAC,GAAmB,UAAjBC,EAAiB,EAAjBA,WACzBC,GAAc9E,EAAAA,EAAAA,WACpB,GAAsD+E,EAAAA,EAAAA,UAASD,EAAYE,WAAWC,OAAO,0BAA4B,IAAzH,eAAOC,EAAP,KAA4BC,EAA5B,KACA,GAAsCJ,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACMC,EAA4BR,EAAYE,WAAWC,OAAO,2BAC1DnD,GAAOC,EAAAA,EAAAA,KAEPwD,GACJ,UAAAT,EAAYE,WAAWC,cAAvB,mBAAgC,yBAAhC,mBAAmDO,oBAAnD,eAAiEC,QAAO,SAACC,GAAD,QAAUR,MAAAA,GAAAA,EAAqBjD,MAAK,qBAAG0D,KAAgBC,SAASF,YACxI,GACIG,EAAiBhB,EAAW,GAAG,GACrC,OACE,yBAAKxE,UAAU,QACZ6E,EAAoBY,OAAS,EAC5B,yBAAKzF,UAAU,yBACb,kBAAC,EAAA0F,UAAD,CAAWC,aAAclE,EAAKO,cAAcC,EAAAA,EAAAA,sBAEzC4C,EACEe,QAAO,SAACC,EAAKC,GAAN,OAAaA,GAAb,eAAmBD,MAAM,IAChC1D,KAAI,gBAAGmD,EAAH,EAAGA,KAAH,OACH,kBAAC,EAAAS,KAAD,CAAM1D,IAAKiD,EAAMU,MAAM,OAAOC,aAAW,EAAC3F,QAAS,kBAAMwE,EAAuBD,EAAoBO,QAAO,SAACc,GAAD,OAAOA,EAAEZ,OAASA,QAC1HA,QAKT,KACJ,kBAAC,EAAAa,MAAD,CAAOC,aAAa,KAAKC,KAAK,KAAKrG,UAAU,+BAC1CyB,EAAKO,cAAcC,EAAAA,EAAAA,iBAEtB,kBAAC,EAAAmB,YAAD,KACE,kBAAC,EAAAC,KAAD,KACG5B,EAAKO,cAAcC,EAAAA,EAAAA,0BACS,IAA5BiD,EAAiBO,QAChB,kBAAC,EAAAa,QAAD,CACEC,cAAe9E,EAAKO,cAAcC,EAAAA,EAAAA,yBAClCuE,YAAa/E,EAAKO,cAAcC,EAAAA,EAAAA,wBAEhC,kBAAC,EAAAhC,OAAD,CAAQE,QAAQ,QACbsB,EAAKO,cAAcC,EAAAA,EAAAA,4BADtB,IAC4D,kBAAC,KAAD,WAMnEgD,MAAAA,OAAA,EAAAA,EAA2BQ,QAAS,IAAMV,EACzC,kBAAC,EAAA0B,MAAD,CACEtG,QAAQ,UACRuG,UAAQ,EACRC,MAAK,UAAKlF,EAAKO,cAAcC,EAAAA,EAAAA,mCAAxB,YAAuEgD,EAA0B2B,KAAK,OAC3GC,YAAa,kBAAC,EAAAC,uBAAD,CAAwBC,QAAS,kBAAM/B,GAAe,QAEnE,KACH,CACC,CAAC,EAAD,KAEOQ,GAFP,IAGInG,MAAO,EAAF,KACAmG,EAAenG,OADf,IAEHwF,oBAAAA,EACAC,uBAAAA,UASdP,EAAsBhE,UAAY,CAChCiE,WAAYhE,IAAAA,OAGd,oRCjFA,gzMACA,IAAMwG,GAAYC,WAAAA,MAEX,SAAeC,EAAtB,8FAAO,WACLC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAzG,GAXK,iFAaQ6F,EAAUE,gBACrBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAzG,GAxBG,0GA4BA,SAAe0G,EAAtB,wFAAO,WAAqCC,EAAOX,EAAOC,EAAQE,EAAaC,EAAcC,EAAMI,EAAazG,GAAzG,iFACQ6F,EAAUa,sBAAsBC,EAAOX,EAAOC,EAAQE,EAAaC,EAAcC,OAAM3F,EAAW+F,EAAazG,GADvH,0GC7BA,IA6BD4G,EAAgB,CACpBT,YAAatI,EAAAA,GACbgJ,cAAehJ,EAAAA,GACfwI,KAAMxI,EAAAA,yDC9BKiJ,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAQ7I,GAAX,mBAChC6I,EAAIC,iBACF,kBAAC,EAAAC,QAAD,CAASC,QAASH,EAAII,gBAAiBC,UAAW,KAAMC,WAAY,MAClE,kBAAC,EAAAC,YAAD,QAAYzI,UAAU,sBAAsBkI,IAAKA,GAAS7I,KAG5D,kBAAC,EAAAoJ,YAAD,QAAYP,IAAKA,GAAS7I,KAG9B4I,EAAmB1H,UAAY,CAC7BlB,MAAOmB,IAAAA,OACP0H,IAAK1H,IAAAA,qqBCAP,IAAMkI,EAAW,SAAC,GAAD,QACfC,kBACElB,EAFa,EAEbA,WACAmB,EAHa,EAGbA,UAHa,IAIbzH,QAAWmG,EAJE,EAIFA,YAAauB,EAJX,EAIWA,UAAWC,EAJtB,EAIsBA,SACnCC,EALa,EAKbA,aACAC,EANa,EAMbA,sBANa,IAQfC,YAAeC,EARA,EAQAA,gBAAiBC,EARjB,EAQiBA,aACjBC,EATA,EASfC,YAAeD,cATA,MAUV,CACLE,YAAa7B,EAAW8B,KAAKpH,KAAI,wEAAwE,GAArEmF,EAAH,EAAGA,YAA4BwB,EAA/B,EAAgBd,cAAyBR,EAAzC,EAAyCA,KAAMC,EAA/C,EAA+CA,WAAY+B,EAA3D,EAA2DA,SAA3D,MAAgF,CAC/GlC,YAAAA,EACAwB,SAAAA,EACAD,UAAWrB,EACXlC,KAAMmC,EACN+B,SAAAA,MAEFC,WAAYhC,EAAW/E,KACvBkG,UAAWA,GAAaM,EACxBQ,SAAUP,EACVQ,mBAAoBrC,EAAYiC,KAAKnE,QAAO,SAACC,GAAD,MAAiB,MAARA,KACrDuE,gBAAiBd,EAASS,KAAKnE,QAAO,SAACC,GAAD,MAAiB,MAARA,KAC/CwE,iBAAkBhB,EAAUU,KAAKnE,QAAO,SAACC,GAAD,MAAiB,MAARA,KACjDyE,oBAAqBf,EAAaQ,KAAKpH,KAAI,qBAAGsF,cAC9CuB,sBAAAA,EACAI,cAAeA,EAAcG,OAGzBQ,EAAsB,SAAC,GAA8D,IAA5DlF,EAA4D,EAA5DA,oBAAqBC,EAAuC,EAAvCA,uBAA2BzF,GAAY,YACnF2K,GAAWC,EAAAA,EAAAA,eACXxI,GAAOC,EAAAA,EAAAA,KACLwI,GAAcC,EAAAA,EAAAA,IAAe,kBAAmB,CAAC,wBAAjDD,UACFE,EAAU,CAAC3I,EAAKO,cAAcC,EAAAA,EAAAA,aAAuBR,EAAKO,cAAcC,EAAAA,EAAAA,cAAwBR,EAAKO,cAAcC,EAAAA,EAAAA,YAEnHoI,EAAY,SAACzL,GAAD,OAChBoL,GFhDF7C,GAD8B,EEkDV,EAAD,OACVvI,GACC0L,GAAiB,CAAEC,cAAeD,IAAmB,IAF5C,IAGbE,cAAc,KFpDpBrD,MACAC,EAF6B,EAE7BA,OACAC,EAH6B,EAG7BA,QACAC,EAJ6B,EAI7BA,YACAC,EAL6B,EAK7BA,aACAC,EAN6B,EAM7BA,KACAC,EAP6B,EAO7BA,WACAgD,OAR6B,SAQ7BA,kBAR6B,EAS7BF,EAT6B,EAS7BA,cACAC,EAV6B,EAU7BA,aACArJ,EAX6B,EAW7BA,QACK,CACLpC,KAAMC,EAAAA,GACNC,QAASyL,EACPvD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAgD,EACAF,EACAC,EACArJ,MAzB2B,IAAC,EAC9BgG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAP6B,EAQ7BgD,EACAF,EACAC,EACArJ,GE6CMwJ,EAAe,SAAC/L,GAAD,OAAcoL,GFrBGlC,GAAF,EEqB8B,EAAD,KAAMlJ,GAAN,IAAgBgJ,aAAa,KFrBxDE,MAAOX,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,OAAQE,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,aAAcC,EAApD,EAAoDA,KAAMI,EAA1D,EAA0DA,YAAazG,EAAvE,EAAuEA,QAAe,CACzHpC,KAAMgJ,EAAcD,GACpB7I,QAASyL,EAAwC5C,EAAOX,EAAOC,EAAQE,EAAaC,EAAcC,EAAMI,EAAazG,MAFlF,IAAC,EAAE2G,EAAOX,EAAOC,EAAQE,EAAaC,EAAcC,EAAMI,EAAazG,GEsB1G,GAWIyJ,EAAAA,EAAAA,aAAYlC,EAAUmC,EAAAA,cAVxBvB,EADF,EACEA,YACAV,EAFF,EAEEA,UACAa,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,mBACAC,EANF,EAMEA,gBACAC,EAPF,EAOEA,iBACAC,EARF,EAQEA,oBACAd,EATF,EASEA,sBACAI,EAVF,EAUEA,cAEMlI,GAAU4J,EAAAA,EAAAA,GAAYzL,GAAtB6B,MACFuD,GAAc9E,EAAAA,EAAAA,WAEpB,GAA8B+E,EAAAA,EAAAA,UAAS,CAAES,aAAc,GAAI4F,UAAW,GAAIC,WAAY,KAAtF,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAW1G,EAAYE,WAAWC,OAAO,aACzC0F,GAAiB7F,EAAYE,WAAWC,OAAO,aACrD,IAAkCF,EAAAA,EAAAA,WAAS,GAA3C,iBAAO0G,GAAP,MAAkBC,GAAlB,MACA,IAAgC3G,EAAAA,EAAAA,UAAS,IAAzC,iBAAO4G,GAAP,MAAiBC,GAAjB,MACA,IAA0B7G,EAAAA,EAAAA,YAA1B,iBAAO5C,GAAP,MAAc0J,GAAd,MAGMC,GAAkB,SAAChE,GAAD,OAAgB2B,EAAcxH,MAAK,SAAC8J,GAAD,aAAOA,EAAE5J,SAAF,UAAY2F,EAAWkE,MAAM,YAA7B,aAAY,EAAwB,QAsBhGC,IAAiCC,EAAAA,EAAAA,cACrCC,EAAAA,EAAAA,IACE,gBAAG3G,EAAH,EAAGA,aAAc4F,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,WAA5B,OACEL,EAAa,CACX7C,MAAO,cACPX,MAAO,GACPG,YAAanC,EAAayB,OAC1BW,aAAcwD,EAAUnE,OACxBY,KAAMwD,EAAWpE,WAErB,KAEF,IAEImF,IAA8BF,EAAAA,EAAAA,cAClCC,EAAAA,EAAAA,IACE,gBAAG3G,EAAH,EAAGA,aAAc4F,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,WAA5B,OACEL,EAAa,CACX7C,MAAO,gBACPX,MAAO,GACPG,YAAanC,EAAayB,OAC1BW,aAAcwD,EAAUnE,OACxBY,KAAMwD,EAAWpE,WAErB,KAEF,IAEIoF,IAA+BH,EAAAA,EAAAA,cACnCC,EAAAA,EAAAA,IACE,gBAAG3G,EAAH,EAAGA,aAAc4F,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,WAA5B,OACEL,EAAa,CAAE7C,MAAO,OAAQX,MAAO,GAAIG,YAAanC,EAAayB,OAAQW,aAAcwD,EAAUnE,OAAQY,KAAMwD,EAAWpE,WAC9H,KAEF,KAGFqF,EAAAA,EAAAA,YAAU,WAAM,MACRC,EAAY,UAAGzH,EAAYE,WAAWC,OAAO,yBAAjC,aAAG,EAAiDU,KAWtE,MAViB,SAAb6F,GAAuBe,GACzBlC,GAASmC,EAAAA,EAAAA,IAAUD,IAGrBzH,EAAY2H,OAAO,sBAAsB,GACzC/B,EAAUZ,GACVkB,EAAa,CAAE7C,MAAO,cAAeX,MAAO,KAC5CwD,EAAa,CAAE7C,MAAO,gBAAiBX,MAAO,KAC9CwD,EAAa,CAAE7C,MAAO,OAAQX,MAAO,KAE9B,kBAAM6C,EFhGuB,CACtCjL,KAAMC,EAAAA,GACNC,QAAS,CACPsK,KAAM,SE8FL,KAEH0C,EAAAA,EAAAA,YAAU,WACR/B,GAAaF,GAASrL,EAAAA,EAAAA,QACrB,CAACuL,KAEJ+B,EAAAA,EAAAA,YAAU,WACRF,GAA4Bd,GAC5Be,GAA6Bf,KAC5B,CAACA,EAAQ9F,gBAEZ8G,EAAAA,EAAAA,YAAU,WACRL,GAA+BX,GAC/Be,GAA6Bf,KAC5B,CAACA,EAAQF,aAEZkB,EAAAA,EAAAA,YAAU,WACRL,GAA+BX,GAC/Bc,GAA4Bd,KAC3B,CAACA,EAAQD,cAEZiB,EAAAA,EAAAA,YAAU,WACR/K,EAAMmL,SAASxH,KACd,CAACA,KAEJoH,EAAAA,EAAAA,YAAU,WAAM,MACd,MACGvC,GACY,SAAbyB,GACA1G,EAAYE,WAAWC,OAAO,4BAC9BC,EAAoBY,OAAS,IAC7B,UAAAhB,EAAYE,WAAWC,OAAO,yBAA9B,eAAiDU,SAASoE,MAAAA,OAA1D,EAA0DA,EAAUpE,OACpE0D,GACAJ,GAPF,CAYA,IFtJyB,EAAD,EAC1BzB,EAD0B,EAE1BC,EACAC,EACAC,EACAC,EACAC,EACAC,EAP0B,EAQ1BgD,EACAtJ,EE6IMmL,EAAa,GAEXC,GACJ7C,MAAAA,OAAA,EAAAA,EAAU8C,OAAOpH,QAAO,SAACqH,GAAS,MAChC,QAAI9C,EAAmBpE,SAASkH,MAAAA,GAA5B,UAA4BA,EAAMhF,kBAAlC,aAA4B,EAAkBkE,MAAM,KAAK,MAG7DW,EAAWI,KAAKD,IAET,QACH,GAKR,GAJAhI,EAAY2H,OACV,0BACAE,EAAWnK,KAAI,qBAAGsF,eAEe,IAA/BqC,EAAoBrE,aAAiD,IAA1BuD,EAAuC,CACpF,IAAM7D,GAAe,OAAI,IAAIwH,IAAIJ,EAAgBpK,KAAI,qBAAGsF,WAA4BkE,MAAM,KAAK,QAC/F3B,GFtKJ7C,OAD0B,QAAC,EEuKD,CAAEG,YAAanC,EAAayB,SFtKtDO,OAAQ,IADkB,EAE1BC,OAF0B,SAE1BA,QAAS,EAFiB,EAG1BC,EAH0B,EAG1BA,QACAC,EAJ0B,EAI1BA,YACAC,EAL0B,EAK1BA,aACAC,EAN0B,EAM1BA,KACAC,EAP0B,EAO1BA,WACAgD,OAR0B,SAQ1BA,kBAR0B,EAS1BtJ,EAT0B,EAS1BA,QACK,CACLpC,KAAMC,EAAAA,EACNC,QAASyL,EAAkCvD,EAAOC,EAAQC,EAASC,EAAaC,EAAcC,EAAMC,EAAYgD,EAAiBtJ,UE4JxH,CACL,IAAMyL,EAAWL,EAAgBpK,KAAI,qBAAGsF,WAA4BoF,QAAQ,IAAK,SACjF/H,GAAuB,kBACrBgF,EACG1E,QAAO,SAACc,GAAD,MAA2B,oBAApBA,EAAEyF,MAAM,KAAK,IAA2E,KAA9CF,GAAgBvF,IAAM,CAAE4G,MAAO,IAAKA,SAC5F1H,QAAO,SAACc,GAAD,OAAO0G,EAASG,MAAK,SAACC,GAAD,OAAO9G,EAAE+G,MAAMD,SAC3C7K,KAAI,SAACsF,GAAD,MAAiB,CAAEnC,KAAMmC,SAElChD,EAAY2H,OAAO,2BAA2B,OAE/C,CAAC9C,EAAaI,IAEjB,IAQMwD,GAAoB,SAAC9H,GAAD,OACxBA,EAAOQ,QACL,SAACC,EAAKsH,GAAN,MAAgB,CACd,GAAI,EAAJ,KACKtH,MAAAA,OADL,EACKA,EAAM,KADX,cAEGsH,GAAO,OAGZ,CAAE,GAAI,MAGJC,GAAsB,CAC1BjI,cAAc,OAAIwE,GAAoBvE,QAAO,SAACqH,GAAD,OAAUA,EAAKlH,SAAS+F,OAAWnJ,KAAI,SAACkD,GAAD,MAAU,CAAEtD,MAAOsD,EAAKvD,MAAOuD,MACnH0F,WAAW,OAAInB,GAAiBxE,QAAO,SAACqH,GAAD,OAAUA,EAAKlH,SAAS+F,OAAWnJ,KAAI,SAACkL,GAAD,MAAU,CAAEtL,MAAOsL,EAAKvL,MAAOuL,MAC7GrC,YAAY,OAAInB,GAAkBzE,QAAO,SAACqH,GAAD,OAAUA,EAAKlH,SAAS+F,OAAWnJ,KAAI,SAACmL,GAAD,MAAS,CAAEvL,MAAOuL,EAAIxL,MAAOwL,OAGzGC,GAAY,CAChBxL,MAAO,6BAAMN,EAAKO,cAAcC,EAAAA,EAAAA,iBAChC5B,YAAY,GAGRmN,GAAqBJ,GAAoBK,OAAOC,KAAKN,IAAqBtL,IAAgB,IAAI2D,OA5K7E,GA6KvB,OACE,yBAAKzF,UAAU,4BACb,kBAAC,KAAD,QACEoK,QAASA,EACTuD,cAAc,EACdC,WAAW,EACXC,SAAS,EACTC,WAjLa,SAACxE,GAAD,OACjBA,EAAYnH,KAAI,gBAAGmF,EAAH,EAAGA,YAAawB,EAAhB,EAAgBA,SAAUD,EAA1B,EAA0BA,UAAWvD,EAArC,EAAqCA,KAAMkE,EAA3C,EAA2CA,SAA3C,MAA2D,CACzElE,KAAM,GAAF,OAAKgC,EAAL,YAAoBwB,EAApB,YAAgCD,GACpCW,SAAAA,EACAuE,MAAO,CACL,CACEpH,MAAOW,GAETwB,EACAD,GAEFmF,SAAUC,QAAQpJ,GAAuBA,EAAoBjD,MAAK,SAACsG,GAAD,OAASA,EAAI5C,OAASA,MACxF6C,iBAAkC,oBAAhBb,IAAwF,KAAjDmE,GAAgBnG,IAAS,CAAEwH,MAAO,IAAKA,QAAgB5C,GAChH5B,gBACE,6BACG7G,EAAKO,cAAckI,EAAYjI,EAAAA,EAAAA,gCAA2CA,EAAAA,EAAAA,6BAAuC,IACjHiI,EAAY,uBAAGgE,KAAK,sBAAsBzM,EAAKO,cAAcC,EAAAA,EAAAA,uBAAsC,WAkKtGsH,KAAMD,EACN6E,YAAa,GACbC,OAAgC,KAAxB9E,MAAAA,OAAA,EAAAA,EAAa7D,QACrB4I,kBAAmB,CAAC5M,EAAKO,cAAcC,EAAAA,EAAAA,oCACvCoI,UAAW,YAA4D,IAAzDlD,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,OAAQjC,EAA0C,EAA1CA,aAAc4F,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACpDX,EAAU,CACRlD,MAAAA,EACAC,OAAAA,EACAE,aAAcnC,GAAgB8F,EAAQ9F,cAAcyB,OACpDW,cAAewD,GAAaE,EAAQF,WAAWnE,OAC/CY,MAAOwD,GAAcC,EAAQD,YAAYpE,UAG7C0H,eAAgB,YAA6C,IAA1CnJ,EAA0C,EAA1CA,aAAc4F,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC1CE,EAAW,EAAD,SACLD,GACC9F,EAAe,CAAEA,aAAAA,GAAiB8F,EAAQ9F,cAC1C4F,EAAY,CAAEA,UAAAA,GAAcE,EAAQF,WACpCC,EAAa,CAAEA,WAAAA,GAAeC,EAAQD,cAG9CpC,UAAWA,GAAaI,EACxBS,WAAU,OAAOA,GAAP,IAAmBqD,MAAOrD,EAAWqD,QAC/CyB,YAAa1J,EACb2J,gBA/DkB,SAACC,GACvB,IAAMC,EAAcD,EAAa5J,GAC9BO,QAAO,kBAAGE,EAAH,EAAGA,KAAH,MAA2C,oBAA3C,EAASgC,cAAuD,UAAAmE,GAAgBnG,UAAhB,eAAuBwH,OAAQ,KACtG3K,KAAI,kBAAyB,CAAEmD,KAA3B,EAAGA,KAA8BkE,SAAjC,EAASA,aAEhB1E,EAAuB,IAAQ4J,EAAa7J,GAAuB,GAAK6J,IA2DpEC,YAAalN,EAAKO,cAAcC,EAAAA,EAAAA,aAAsB2M,cACtDC,cAAepN,EAAKO,cAAcC,EAAAA,EAAAA,YAAqB2M,cACvDE,cAAerN,EAAKO,cAAcoJ,GAAYnJ,EAAAA,EAAAA,QAAmBA,EAAAA,EAAAA,SACjE8M,SAAU,SAACzD,GAAD,OAAcC,GAAYD,IACpC0D,WACExB,GACI,WACEnC,IAAa,kBAAOD,YAEtBvJ,EAENwK,SAAU,SAAC4C,EAAGnN,GACZyJ,GAAY,IACZC,GAAS1J,IAEXA,MAAOA,GACPmJ,QAAS,CACP,CACE5I,IAAK,eACLP,MAAOmJ,EAAQ9F,aACf+J,YAAazN,EAAKO,cAAcC,EAAAA,EAAAA,YAAsB,CAAEI,IAAKZ,EAAKO,cAAcC,EAAAA,EAAAA,aAAsB2M,gBACtG7P,KAAM,QACNiP,SAAUd,GAAkBjC,EAAQ9F,cACpCgK,OAAQ,CACN,CACEpQ,KAAMqO,GAAoBjI,aAAaM,OAAS,EAAI,WAAa,QACjE2J,MACEhC,GAAoBjI,aAAaM,OAAS,GACtC,OAAI2H,GAAoBjI,cAAckK,MAAM,EAAGjE,QAAYvJ,EA1OxD,IA2OH,CAAC0L,OAIb,CACElL,IAAK,YACLP,MAAOmJ,EAAQF,UACfmE,YAAazN,EAAKO,cAAcC,EAAAA,EAAAA,YAAsB,CAAEI,IAAKZ,EAAKO,cAAcC,EAAAA,EAAAA,cAAuB2M,gBACvG7P,KAAM,QACNiP,SAAUd,GAAkBjC,EAAQF,WACpCoE,OAAQ,CACN,CACEpQ,KAAMqO,GAAoBrC,UAAUtF,OAAS,EAAI,WAAa,QAC9D2J,MACEhC,GAAoBrC,UAAUtF,OAAS,GACnC,OAAI2H,GAAoBrC,WAAWsE,MAAM,EAAGjE,QAAYvJ,EA1PrD,IA2PH,CAAC0L,OAIb,CACElL,IAAK,aACLP,MAAOmJ,EAAQD,WACfkE,YAAazN,EAAKO,cAAcC,EAAAA,EAAAA,YAAsB,CAAEI,IAAKZ,EAAKO,cAAcC,EAAAA,EAAAA,WAAoB2M,gBACpG7P,KAAM,QACNiP,SAAUd,GAAkBjC,EAAQD,YACpCmE,OAAQ,CACN,CACEpQ,KAAMqO,GAAoBpC,WAAWvF,OAAS,EAAI,WAAa,QAC/D2J,MACEhC,GAAoBpC,WAAWvF,OAAS,GACpC,OAAI2H,GAAoBpC,YAAYqE,MAAM,EAAGjE,QAAYvJ,EA1QtD,IA2QH,CAAC0L,QAKf+B,cAAc,EACdC,WAAYtH,EACZuH,QAAQ,wBACJnQ,MAMZ0K,EAAoBxJ,UAAY,CAC9BsE,oBAAqBrE,IAAAA,MACrBsE,uBAAwBtE,IAAAA,MAG1B,mwBCrWA,IAAMkI,EAAW,SAAC,GAAD,QAAGW,YAAeD,EAAlB,EAAkBA,cAAeR,EAAjC,EAAiCA,UAAW6G,EAA5C,EAA4CA,iBAAkB1E,EAA9D,EAA8DA,UAA9D,MAAiF,CAChG3B,cAAeA,EAAcG,KAC7BwB,UAAAA,EACAnC,UAAAA,EACA8G,mBAAoBD,EAAmB,IAGnCE,EAAU,SAACC,EAAOC,GACtB,IAAMC,EAAYF,EAAMC,EAAOxN,KAC/B,OAAQwN,EAAO9Q,MACb,IAAK,SACH,OAAO,EAAP,KACK6Q,GADL,cAEGC,EAAOxN,IAFV,OAGOyN,GAHP,IAIIC,QAASD,EAAUC,WAGzB,IAAK,SACH,OAAO,EAAP,KACKH,GADL,cAEGC,EAAOxN,IAFV,OAGOyN,GAHP,IAII9B,SAAU8B,EAAU9B,SAASzI,SAASsK,EAAOG,WACzCF,EAAU9B,SAAS5I,QAAO,SAACqH,GAAD,OAAUA,IAASoD,EAAOG,aAD9C,kBAEFF,EAAU9B,UAFR,CAEkB6B,EAAOG,gBAGzC,IAAK,YACH,OAAO,EAAP,KACKJ,GADL,cAEGC,EAAOxN,IAFV,OAGOyN,GAHP,IAII9B,SAAU8B,EAAU3O,QAAQgB,KAAI,SAAC8N,GAAD,OAAYA,EAAOnO,aAGzD,IAAK,QACH,OAAO,EAAP,KACK8N,GADL,cAEGC,EAAOxN,IAFV,OAGOyN,GAHP,IAII9B,SAAU,OAGhB,IAAK,aACH,OAAO,EAAP,KACK4B,GADL,cAEGC,EAAOxN,IAFV,OAGOyN,GAHP,IAII3O,QAAS0O,EAAO1O,QAChB+O,gBAAiBL,EAAO1O,YAG9B,IAAK,YACH,OAAO,EAAP,KACKyO,GADL,cAEGC,EAAOxN,IAFV,OAGOyN,GAHP,IAIII,gBAAiBJ,EAAU3O,QAAQiE,QAAO,qBAAGtD,MAAkByD,SAASsK,EAAOM,oBAGrF,QACE,OAAOP,IA4Hb,QAxHsB,SAACvQ,GACrB,IAAMoC,GAAOC,EAAAA,EAAAA,KACPsI,GAAWC,EAAAA,EAAAA,eAGjB,GAAoEW,EAAAA,EAAAA,aAAYlC,EAAUmC,EAAAA,cAAlFzB,EAAR,EAAQA,cAAeR,EAAvB,EAAuBA,UAAW8G,EAAlC,EAAkCA,mBAAoB3E,EAAtD,EAAsDA,UAC9C7J,GAAU4J,EAAAA,EAAAA,GAAYzL,GAAtB6B,MACFuD,GAAc9E,EAAAA,EAAAA,WACd2J,EAAc7E,EAAYE,WAAWC,OAAO,yBAAyBQ,QAAO,qBAAGE,KAAgBqG,MAAM,KAAK,GAAGpG,SAAS,sBAC5H,GAAgC6K,EAAAA,EAAAA,YAC9BT,EACArG,EAAY1D,QACV,SAACC,EAAK4B,GAAN,cACK5B,GADL,cAEG4B,EAAWnC,KAAO,CACjB0I,SAAU,GACV7M,QAAS,GACT+O,gBAAiB,GACjBH,QAAQ,OAGZ,KAZJ,eAAOH,EAAP,KAAcS,EAAd,KA8FA,OAxEApE,EAAAA,EAAAA,YAAU,YACPxH,EAAYE,WAAWC,OAAO,yBAA2B,IAAIzC,KAAI,gBAAGsF,EAAH,EAAGA,WAAH,SAAesD,UACrE5I,KACR,SAAC2G,GAAD,OACEQ,EAAY1H,MAAK,SAAC6K,GAAD,OAAUA,MAAAA,OAAA,EAAAA,EAAMnH,QAASmC,MAAe4I,EAAe,CAAEtR,KAAM,SAAUiR,UAAWlH,EAAUzG,IAAKoF,UAhC5FuC,GAASrL,EAAAA,EAAAA,GAAtBC,YAoCjB6F,EAAY2H,OAAO,sBAAsB,KACxC,KAEHH,EAAAA,EAAAA,YAAU,WACHrD,IACmB,OACjB,IAAI+D,IAAIrD,EAAYnH,KAAI,SAACsF,GAAD,uBAAgB2B,EAAcxH,MAAK,SAAC8J,GAAD,aAAOA,EAAE5J,SAAF,UAAY2F,EAAWnC,KAAKqG,MAAM,YAAlC,aAAY,EAA6B,cAAnF,aAAgB,EAAwE2E,UACnHlL,QAAO,SAACkL,GAAD,OAAUA,KACLnO,KAAI,SAACmO,GAAD,OA3CC1R,EA2CuB0R,EA3CVtG,GAASlL,EAAAA,EAAAA,GAAYF,IAAnC,IAACA,OA6CpB,CAACwK,KAEJ6C,EAAAA,EAAAA,YAAU,WACHyD,GACHpG,EAAYnH,KAAI,SAAC+D,GAAD,OAAOmK,EAAe,CAAEtR,KAAM,aAAcsD,IAAK6D,EAAEZ,KAAMnE,QAAS4J,GAxBxDtD,EAwBuFvB,EAAEZ,KAxB1F,UAAgB8D,EAAcxH,MAAK,SAAC8J,GAAD,aAAOA,EAAE5J,SAAF,UAAY2F,EAAWkE,MAAM,YAA7B,aAAY,EAAwB,cAA9E,iBAAgB,EAAmE2E,KAAK3E,MAAM,YAA9F,aAAgB,EAAqF,MAwBD,KAxBpG,IAAClE,EAAD,SA0B1B,CAACiI,KAEJzD,EAAAA,EAAAA,YAAU,WACR,IAAMsE,EAAsB9C,OAAO+C,QAAQZ,GAAOzN,KAAI,qCAA8B,CAAEsF,WAAhC,KAA4CsD,UAA5C,KAAiEiD,aACvH9M,EAAMmL,SAASkE,GACf9L,EAAY2H,OAAO,uBAAwBmE,KAC1C,CAACX,IA2CF,kBAAC,EAAAa,KAAD,CAAMC,WAAS,GACb,kBAAC,EAAAC,SAAD,CAAUC,GAAI,EAAG5Q,UAAU,qBACzB,kBAAC,EAAAqD,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBvD,UAAU,kBACzCyB,EAAKO,cAAcC,EAAAA,EAAAA,eAGxB,kBAAC,EAAA0O,SAAD,CAAUC,GAAI,EAAG5Q,UAAU,qBACzB,kBAAC,EAAAqD,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBvD,UAAU,kBACzCyB,EAAKO,cAAcC,EAAAA,EAAAA,uBAGvBqH,EAAYnH,KAnDD,SAAC,GAAyB,IAAjBsF,EAAiB,EAAvBnC,KACXnE,EAAUyO,EAAMnI,GAAYyI,gBAClC,OACE,kBAAC,aAAD,KACE,kBAAC,EAAAS,SAAD,CAAUC,GAAI,EAAGC,GAAI,IACnB,kBAAC,EAAAzI,QAAD,CAASC,QAAS,6BAAMZ,IACtB,kBAAC,EAAAzE,UAAD,CAAWjB,MAAO0F,EAAWoF,QAAQ,oBAAqB,IAAKxL,YAAU,MAG7E,kBAAC,EAAAsP,SAAD,CAAUC,GAAI,EAAGC,GAAI,IACnB,kBAAC,EAAA5P,OAAD,CACEjB,UAAU,8BACVG,QAAS2Q,EAAAA,cAAAA,SACTC,mBAAoBtP,EAAKO,cAAcC,EAAAA,EAAAA,aACvC+O,SAAU,SAACjB,GACTM,EAAe,CAAEtR,KAAM,YAAasD,IAAKoF,EAAY0I,YAAa,KAvD7D,SAAC9N,EAAK0N,GAAWM,EAAe,CAAEtR,KAAM,SAAUsD,IAAAA,EAAK0N,OAAAA,IAwD5DiB,CAASvJ,EAAYsI,IAEvBkB,SAAU,SAACC,EAAOlB,IAxDX,SAACkB,EAAOlB,EAAWmB,EAAW9O,GACjCgO,EAAZc,EAA2B,CAAEpS,KAAM,YAAaiR,UAAAA,EAAW3N,IAAAA,GAAwB,CAAEtD,KAAM,SAAUiR,UAAAA,EAAW3N,IAAAA,IAwDtG4O,CAASC,EAAOlB,EAAWA,IAAcvO,EAAKO,cAAcC,EAAAA,EAAAA,UAAoB,CAAEwD,OAAQtE,EAAQsE,SAAWgC,IAE/G2J,QAAS,kBA5Daf,EAAe,CAAEtR,KAAM,QAASsD,IA4DxBoF,KAC9B4J,WAAYzB,EAAMnI,GAAYuG,SAC9B+B,OAAQH,EAAMnI,GAAYsI,OAC1BhB,SAAU,SAACE,GAAD,OAAOA,GAAKoB,EAAe,CAAEtR,KAAM,YAAasD,IAAKoF,EAAY0I,YAAalB,EAAEqC,OAAOxP,SACjG,kBAAiB2F,EACjB8J,gBAAiB9P,EAAKO,cAAcC,EAAAA,EAAAA,iBACpCuP,iBAAe,GAjBjB,CAoBI,kBAAC,EAAAC,aAAD,CAAcpP,IAAK,EAAGP,MAAOL,EAAKO,cAAcC,EAAAA,EAAAA,UAAoB,CAAEwD,OAAQtE,EAAQsE,YApB1F,eAqBOtE,EAAQgB,KAAI,SAAC8N,EAAQyB,GAAT,OAAmB,kBAAC,EAAAD,aAAD,CAAcpP,IAAKqP,EAAQ,EAAG5P,MAAOmO,EAAOnO,uRC1JtF6P,EAAgB,SAAC,GAAwE,IAAtEC,EAAsE,EAAtEA,WAAYC,EAA0D,EAA1DA,YAA0D,IAA7CC,YAAAA,OAA6C,MAA/BD,EAA+B,EAAlBE,EAAkB,EAAlBA,YACrEtQ,GAAOC,EAAAA,EAAAA,KACPsQ,ECjBa,WACnB,IAAMA,GAAYC,EAAAA,EAAAA,SAAO,GAOzB,OANAhG,EAAAA,EAAAA,YAAU,WAER,OADA+F,EAAUE,SAAU,EACb,WACLF,EAAUE,SAAU,KAErB,IACIF,EDSWG,GAClB,GAA0BC,EAAAA,EAAAA,cAAlBvF,EAAR,EAAQA,QAASH,EAAjB,EAAiBA,KACX1C,GAAWC,EAAAA,EAAAA,eAGL3K,GACR+S,EAAAA,EAAAA,eAAcT,GADhBU,OAAUhT,GAENiT,GAAO3H,EAAAA,EAAAA,cAAY,SAACgF,GAAD,OAAW4C,EAAAA,EAAAA,GAAa5C,EAAOtQ,MACxD,GAA0CoF,EAAAA,EAAAA,UAAS6N,GAAnD,eAAOE,EAAP,KAAsBC,EAAtB,MAEAzG,EAAAA,EAAAA,YAAU,YACPwG,IACCtG,EAAAA,EAAAA,IAAU7M,GAAIqT,MAAK,SAACJ,GACdP,EAAUE,SACZQ,EAAiBH,QAGtB,CAACjT,IAEJ,IAAMsT,EAAoB,SAACC,EAAMC,EAAOxT,GACtC,OAAOuT,EAAKpN,OAAS,KACjBsN,EAAAA,EAAAA,IAAW,CAAEF,KAAAA,IAAQF,MAAK,YAAc,IAAXpJ,EAAW,EAAXA,KAC3B,GAAoB,IAAhBA,EAAK9D,QAIK8D,EAAKwD,MAAK,SAACN,GAAD,OAAUA,EAAKqG,KAAWxT,GAAMmN,EAAKuG,eAAiBH,KAE5E,MAAMpR,EAAKO,cAAcC,EAAAA,EAAAA,uBAG7BgR,QAAQC,OAAOzR,EAAKO,cAAcC,EAAAA,EAAAA,qBAA+B,CAAEkR,OAAQ,QA4B3EC,GAAsBC,EAAAA,EAAAA,IAAc,SAACvR,EAAOgR,EAAOxT,EAAIsT,GAAnB,OACvC9Q,GAA0B,IAAjBA,EAAM2D,OAAuEmN,EAAkB9Q,EAAOgR,EAAOxT,GAAxF2T,QAAQC,OAAOzR,EAAKO,cAAcC,EAAAA,EAAAA,cAG7DqR,EAAkB,CACtB,qBACE,gBAAGR,EAAH,EAAGA,MAAOxT,EAAV,EAAUA,GAAIsT,EAAd,EAAcA,kBAAd,OACA,SAAC9Q,GAAD,OACEsR,EAAoBtR,EAAOgR,EAAOxT,EAAIsT,MAGtClT,EAAW,WACfsK,GACEuJ,EAAAA,EAAAA,iBAAgB,CACdpT,QAAS,UACTqT,aAAc,IACd7M,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,kBAC1BU,YAAalB,EAAKO,cAAcC,EAAAA,EAAAA,mCAGpC4K,EAAQgF,IASV,OAAOY,EACL,kBAAC,IAAD,CACEgB,OAxDyB,SAACnU,GAC5B,MAAO,CACLoU,OAAQ,CACN,CACEb,KAAM,OACNvP,UAAWa,EAAAA,EAAAA,WACXpC,MAAON,EAAKO,cAAcC,EAAAA,EAAAA,MAC1BZ,YAAY,EACZsS,SAAU,CAAC,CAAE5U,KAAM,qBAAsBO,GAAAA,EAAIwT,MAAO,OAAQF,kBAAAA,KAE9D,CACEC,KAAM,cACNvP,UAAWa,EAAAA,EAAAA,SACXpC,MAAON,EAAKO,cAAcC,EAAAA,EAAAA,aAC1B0R,SAAU,CACR,CACE5U,KAAM6U,EAAAA,EAAAA,WACNC,UAAW,SAuCXC,CAAqBxU,GAC7BmT,cAAeA,EACfsB,SAViB,SAACxK,GAAD,OACnBS,GAASgK,EAAAA,EAAAA,IAAU1U,EAAI,CAAEuT,KAAMtJ,EAAKsJ,KAAMG,aAAczJ,EAAKsJ,KAAMlQ,YAAa4G,EAAK5G,eAAgBgQ,MAAK,WACxGZ,IACArF,EAAKoF,OAQLpS,SAAUA,EACV4T,gBAAiBA,EACjBhP,aAAc,SAACjF,GAAD,OACZ,kBAACqB,EAAA,GAAD,UAAuBrB,EAAvB,CAA8BsB,WAAY,CAAEoG,QAASrH,EAAUqQ,QAAQ,EAAM5P,QAAS,QAASwG,MAAO,+BAGxG,MAGNgL,EAAcpR,UAAY,CACxBqR,WAAYpR,IAAAA,OAAAA,WACZqR,YAAarR,IAAAA,UAAoB,CAC/BA,IAAAA,OACAA,IAAAA,MAAgB,CACdyT,SAAUzT,IAAAA,OAAAA,WACV0T,OAAQ1T,IAAAA,OACR2T,KAAM3T,IAAAA,WAEPa,WACHyQ,YAAatR,IAAAA,UAAoB,CAC/BA,IAAAA,OACAA,IAAAA,MAAgB,CACdyT,SAAUzT,IAAAA,OAAAA,WACV0T,OAAQ1T,IAAAA,OACR2T,KAAM3T,IAAAA,WAGVuR,YAAavR,IAAAA,KAAAA,YAGf,kPEjIM4T,EAAkB,SAAC,GAAwE,IAAtExC,EAAsE,EAAtEA,WAAYC,EAA0D,EAA1DA,YAA0D,IAA7CC,YAAAA,OAA6C,MAA/BD,EAA+B,EAAlBE,EAAkB,EAAlBA,YACvEtQ,GAAOC,EAAAA,EAAAA,KAIP2S,GADFhC,EAAAA,EAAAA,eAAcT,GADhBU,OAAUhT,GAEKqM,MAAM,KACjB2I,GAAW1J,EAAAA,EAAAA,cAAY,SAACgF,GAC5B,OAAqB,IAAjByE,EAAM5O,QACD8O,EAAAA,EAAAA,GAAiB3E,EAAOyE,EAAM,IAGhCA,EAAM5O,UAEf,GAAoCf,EAAAA,EAAAA,WAAS,GAA7C,eAAOrE,EAAP,KAAmBmU,EAAnB,KACA,GAAgD9P,EAAAA,EAAAA,UAAS4P,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACM1K,GAAWC,EAAAA,EAAAA,eACjB,GAA0BmI,EAAAA,EAAAA,cAAlB1F,EAAR,EAAQA,KAAMG,EAAd,EAAcA,SAEdZ,EAAAA,EAAAA,YAAU,WACJoI,GAASC,EACXI,EAAoBJ,GACXD,GAA0B,IAAjBA,EAAM5O,SACxB0G,EAAAA,EAAAA,IAAUkI,EAAM,IACb1B,MAAK,SAACJ,GAAD,OAAUmC,EAAoBnC,EAAKS,iBAD3C,OAES,SAACnQ,GAAD,eAAWmH,GAASuJ,EAAAA,EAAAA,IAAgB,CAAEpT,QAAS,SAAUwG,MAAO,qBAAsBhE,YAAaE,MAAAA,GAAF,UAAEA,EAAO8R,cAAT,iBAAE,EAAgB,UAAlB,aAAE,EAAoBC,eAEjI,CAACN,EAAUD,IAEd,IAKM3U,EAAW,kBAAMmN,EAAQgF,IAC/B,OAAK4C,EAKH,kBAAC,EAAA5T,MAAD,CACEb,UAAU,OACV,aAAW,cACX6U,OACE,kBAAC,EAAAzR,YAAD,KACE,kBAAC,EAAA0R,MAAD,CAAOpE,WAAS,GACd,kBAAC,EAAAqE,UAAD,KACE,kBAAC,KAAD,CAAyB1O,KAAK,KAAK2O,MAAO,CAAEC,KAAM,cAEpD,kBAAC,EAAAF,UAAD,KACE,kBAAC,EAAA1R,KAAD,CAAMC,UAAU,MAAM7B,EAAKO,cAAcC,EAAAA,EAAAA,wBAKjD8N,QAAM,EACN5P,QAAQ,QACR4G,QAASrH,EACTwV,QAAS,CACP,kBAAC,EAAAjV,OAAD,CAAQI,WAAYA,EAAYgC,IAAI,SAASlC,QAAQ,SAASpB,KAAK,SAASO,GAAG,2BAA2BgB,QA9B/F,WACf2S,QAAQkC,IAAId,EAAMlS,KAAI,SAAC7C,GAAD,OAAQ0K,GAASoL,EAAAA,EAAAA,IAAW9V,QAAOqT,MAAK,kBAAMZ,OACpErF,EAAKoF,KA6BErQ,EAAKO,cAAcC,EAAAA,EAAAA,UAEtB,kBAAC,EAAAhC,OAAD,CAAQoC,IAAI,SAASlC,QAAQ,OAAOpB,KAAK,SAASuB,QAASZ,GACxD+B,EAAKO,cAAcC,EAAAA,EAAAA,WAIxB,kBAAC,EAAAmB,YAAD,KACE,kBAAC,EAAAC,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GACf,kBAAC,KAAD,UACMtB,EAAAA,EAAAA,gCADN,CAEE2C,OAAQ,CACNyQ,OAAQ,SAACC,GAAD,OAAU,gCAASA,IAC3BzC,KAAM4B,EACN3H,MAAOuH,EAAM5O,YAInB,kBAAC,EAAA8P,SAAD,CACEjW,GAAG,uBACHyC,MAAON,EAAKO,cAAcC,EAAAA,EAAAA,8BAC1BuT,WAAYnV,EACZgM,SAAU,kBAAMmI,GAAc,SAACiB,GAAD,OAAWA,UA9CxC,MAqDXrB,EAAgB7T,UAAY,CAC1BqR,WAAYpR,IAAAA,OAAAA,WACZqR,YAAarR,IAAAA,UAAoB,CAC/BA,IAAAA,OACAA,IAAAA,MAAgB,CACdyT,SAAUzT,IAAAA,OAAAA,WACV0T,OAAQ1T,IAAAA,OACR2T,KAAM3T,IAAAA,WAEPa,WACHyQ,YAAatR,IAAAA,UAAoB,CAC/BA,IAAAA,OACAA,IAAAA,MAAgB,CACdyT,SAAUzT,IAAAA,OAAAA,WACV0T,OAAQ1T,IAAAA,OACR2T,KAAM3T,IAAAA,WAGVuR,YAAavR,IAAAA,KAAAA,YAGf,iEC1HO,IAAMgS,EAAe,SAAC5C,EAAO8F,GAClC,MAEI9F,EADF3G,YADF,IACiBoL,MAAAA,OADjB,MACyB,CAAE9K,KAAM,IADjC,EACuCJ,EADvC,EACuCA,aAEvC,OAAIA,MAAAA,OAAA,EAAAA,EAAc7D,QAASoQ,EAClBvM,EAGFkL,EAAM9K,KAAK3H,MAAK,qBAAG0D,OAAoBoQ,MAGnCnB,EAAmB,SAAC3E,EAAO8F,GAAR,uBAAmBlD,EAAa5C,EAAO8F,UAAvC,aAAmB,EAA6B1C,y6BCFzE,IAAMlF,EAAa,SAAC6H,EAAoBrQ,GAC7C,IAAM7D,GAAOC,EAAAA,EAAAA,KACb,OAAO,SAAC6H,EAAMqM,GAAP,IAAeC,EAAf,uDAA8B,GAA9B,OACLtM,EAAK3D,QAAO,SAACC,EAAD,GAAwD,IAAhD0K,EAAgD,EAAhDA,oBAAqB9I,EAA2B,EAA3BA,WAAYqO,EAAe,EAAfA,SACnD,EAAmCrO,EAAWkE,MAAM,KAApD,eAAOoK,EAAP,KAAgBhX,EAAhB,KAAsB8J,EAAtB,KACA,MAAO,GAAP,eACKhD,GADL,CAEE,CACEP,KAAMmC,EACNsG,MAAO,CACLgI,EACAhX,EACA8J,GAHG,eAIC8M,EACA,CACElO,EAAWlC,SAAS,oBAAsBgL,EAAoB9K,OAAS,EACrE,kBAAC,EAAAuQ,SAAD,CAAU3T,IAAI,wBACZ,kBAAC,EAAA4T,KAAD,CAAMC,GAAE,wBAAmB5Q,EAAnB,uBAAsCmC,IAC3C0O,GAAAA,CAAQ5F,EAAoBpO,KAAI,SAACiU,GAAD,OAAgBA,EAAWC,gBAAgBvU,UAAQ2D,SAIxF,0BAAMzF,UAAU,yBAAyByB,EAAKO,cAAcC,EAAAA,EAAAA,iBAGhE,IAhBD,CAiBH,kBAAC,EAAA+T,SAAD,CAAU3T,IAAG,UAAK0T,EAAL,cACX,kBAACO,EAAA,EAAD,CAAYC,KAAMT,EAAU/W,MAAMyX,EAAAA,EAAAA,IAAcV,QAGpD9H,SAAUC,QAAQ4H,MAAAA,OAAD,EAACA,EAAcjU,MAAK,qBAAG0D,OAAoBmC,WAG/D,MAGMgP,EAAqC,CAChDhN,WAAYiN,EAAAA,GACZ7R,oBAAqB,GACrB8R,iBAAiB,EACjBC,cAAe,kBAAM,MACrBC,WAAY,GACZ5L,QAAS,CACP9F,aAAc,GACd4F,UAAW,GACXC,WAAY,IAEdI,WAAW,EACXL,UAAW,GACXC,WAAY,IAED8L,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAA6B,6BAC7BC,EAAc,cACdC,EAAc,cAEdC,EAAkB,kBACzBC,GAAe,eAClBR,GAAiB,SAAClH,EAAOnG,GAAR,cAA6BmG,GAA7B,IAAoCnG,WAAY,EAAF,KAAOmG,EAAMnG,YAAeA,SADzE,SAElBsN,GAAqB,SAACnH,EAAD,OAAUI,EAAV,EAAUA,UAAV,cAAgCJ,GAAhC,IAAuC/K,oBAAqBmL,QAF/D,SAGlBgH,GAAoB,SAACpH,EAAD,OAAU+G,EAAV,EAAUA,gBAAV,cAAsC/G,GAAtC,IAA6C+G,gBAAAA,QAH/C,SAIlBM,GAAsB,SAACrH,GAAD,cAAiBA,GAAjB,IAAwB/K,oBAAqB,GAAI8R,iBAAiB,QAJtE,SAKlBO,GAA6B,SAACtH,EAAD,OAAUgH,EAAV,EAAUA,cAAeC,EAAzB,EAAyBA,WAAzB,cAAgDjH,GAAhD,IAAuDgH,cAAAA,EAAeD,iBAAiB,EAAME,WAAAA,QALxG,SAMlBM,GAAc,SAACvH,EAAO3E,GAAR,cAA0B2E,GAA1B,IAAiC3E,QAAS,EAAF,KAAO2E,EAAM3E,SAAYA,SAN7D,SAOlBmM,GAAc,SAACxH,GAAD,cAAiBA,GAAjB,IAAwBxE,WAAYwE,EAAMxE,gBAPtC,SAQlBiM,GAAkB,SAACzH,EAAD,OAAU9C,EAAV,EAAUA,MAAU3L,GAApB,4BAAwCyO,GAAUzO,GAAlD,IAA2DsI,WAAY,EAAF,KAAOmG,EAAMnG,YAAb,IAAyBqD,MAAAA,SAR9F,GAURyK,EAAyB,SAAC3H,EAAD,GAAgC,IAAtB7Q,EAAsB,EAAtBA,KAAS8Q,GAAa,YACpE,OAAKyH,EAAgBvY,GAIduY,EAAgBvY,GAAM6Q,EAAOC,GAH3BD,6DCvEL4H,EAA2B,SAAC,GAAsB,IAApBC,EAAoB,EAApBA,cAC5BhW,GAAOC,EAAAA,EAAAA,KACPsI,GAAWC,EAAAA,EAAAA,eACjB,OACE,oCACE,kBAAC,EAAAyN,WAAD,KACE,kBAAC,EAAAC,eAAD,CAAgB3R,MAAM,QAAQ4R,KAAMC,EAAAA,KACpC,kBAAC,EAAA1R,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3B5E,EAAKO,cAAcC,EAAAA,EAAAA,+BAEtB,kBAAC,EAAA6V,eAAD,MACA,kBAAC,EAAA7B,KAAD,CAAMC,GAAE,wBAAmBuB,IACzB,kBAAC,EAAAxX,OAAD,CAAQK,QAAS,kBAAM0J,GAASmC,EAAAA,EAAAA,IAAUsL,MAAkBhW,EAAKO,cAAcC,EAAAA,EAAAA,WAOzF,UAEAuV,EAAyBjX,UAAY,CACnCkX,cAAejX,IAAAA,OAAAA,2qBC1BjB,IAAMuX,GAAiB,SAAC,GAAmB,MAAjBvT,EAAiB,EAAjBA,WAGxB,OAFuBwT,EAAAA,EAAAA,YAAWC,IAA1BlY,WAIJ,kBAAC,EAAAmY,SAAD,KACE,kBAAC,EAAAC,QAAD,CAAS9R,KAAK,QAKb,yBAAKrG,UAAU,QAAQ,CAAC,CAAC,MAAKwE,MAAAA,GAAN,UAAMA,EAAa,UAAnB,aAAM,EAAkB,QAGzDuT,GAAexX,UAAY,CACzBiE,WAAYhE,IAAAA,OAGd,6ECvBA,qiGAAAsF,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+0BAiBA,IAAMxB,GAAe,SAACjF,GAAD,OAAW,kBAAC,OAAD,UAAqBA,EAArB,CAA4B0B,kBAAkB,MAEjEqX,GAAkB,CAC7B,wBAAyBrO,GAAAA,EACzB,iBAAkBsO,GAAAA,EAClBC,OCjBsC,WACtC,IAAM7W,GAAOC,EAAAA,EAAAA,KAEb,GADoB/B,EAAAA,EAAAA,WAOJgF,WAAWC,OALZiO,EADf,EACE,aACoBlQ,EAFtB,EAEE,oBACyBkC,EAH3B,EAGE,yBACwB0L,EAJ1B,EAIE,wBACsBgI,EALxB,EAKE,sBAGF,OACE,kBAAC,EAAAC,MAAD,CAAO9H,WAAS,GACd,kBAAC,EAAA+H,UAAD,KACE,kBAAC,EAAArV,YAAD,KACE,kBAAC,EAAA+C,MAAD,CAAOC,aAAa,KAAKC,KAAK,KAAKrG,UAAU,cAC1CyB,EAAKO,cAAcC,EAAAA,EAAAA,kBAI1B,kBAAC,EAAAwW,UAAD,CAAWzY,UAAU,8BACnB,kBAAC,EAAAyQ,KAAD,CAAMC,WAAS,GACb,kBAAC,EAAAC,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAArV,KAAD,CAAMrD,UAAU,aAAasD,UAAWC,EAAAA,aAAAA,IACrC9B,EAAKO,cAAcC,EAAAA,EAAAA,YAGxB,kBAAC,EAAA0O,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAArV,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBsP,IAEpC,kBAAC,EAAAlC,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAArV,KAAD,CAAMrD,UAAU,aAAasD,UAAWC,EAAAA,aAAAA,IACrC9B,EAAKO,cAAcC,EAAAA,EAAAA,mBAGxB,kBAAC,EAAA0O,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAArV,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBZ,IAEpC,kBAAC,EAAAgO,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAArV,KAAD,CAAMrD,UAAU,aAAasD,UAAWC,EAAAA,aAAAA,IACrC9B,EAAKO,cAAcC,EAAAA,EAAAA,oBAGxB,kBAAC,EAAA0O,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAAtV,YAAD,CAAaE,UAAWC,EAAAA,aAAAA,GACrBsB,EAAoB1C,KAAI,SAACsF,EAAYiK,GAAb,OACvB,kBAAC,EAAArO,KAAD,CAAMhB,IAAKqP,GAAX,IAAoBjK,EAAWnC,KAA/B,UAILiT,GACC,kBAAC,aAAD,KACE,kBAAC,EAAA5H,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAArV,KAAD,CAAMrD,UAAU,aAAasD,UAAWC,EAAAA,aAAAA,IACrC9B,EAAKO,cAAcC,EAAAA,EAAAA,uBAGxB,kBAAC,EAAA0O,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAAtV,YAAD,CAAaE,UAAWC,EAAAA,aAAAA,GACrBgN,EAAoBpO,KAAI,qBAAG4I,UAA0B5I,KAAI,SAAC2G,EAAU4I,GAAX,OAAqB,kBAAC,EAAArO,KAAD,CAAMhB,IAAKqP,GAAX,IAAoB5I,EAApB,mBDvCpFmP,IAAiCU,EAAAA,EAAAA,eAAc,CAC1DC,SAAS,EACT7Y,YAAY,EACZ8C,WAAOhB,IAGHgX,GAA0B,SAAC,GAAa,IAAXtG,EAAW,EAAXA,KAC3B9Q,GAAOC,EAAAA,EAAAA,KACb,GAAwDgD,EAAAA,EAAAA,WAAS,GAAjE,eAAOoU,EAAP,KAA6BC,EAA7B,KACA,GAA0CrU,EAAAA,EAAAA,UAAS,IAAnD,eAAO+S,EAAP,KAAsBuB,EAAtB,KACMC,GAAU7G,EAAAA,EAAAA,cACVpI,GAAWC,EAAAA,EAAAA,eACjB,GAAoDvF,EAAAA,EAAAA,UAAS,CAC3DkU,SAAS,EACT7Y,YAAY,EACZ8C,WAAOhB,EACPqX,UAAU,IAJZ,eAAOC,EAAP,KAA2BC,EAA3B,KAMMC,GAAYpH,EAAAA,EAAAA,QAAOqH,SAASC,cAAc,QAI1C9F,GAAS+F,EAAAA,EAAAA,UAAQ,kBExCI,SAACH,GAC5B,IAAMI,GAAQC,EAAAA,GAAAA,MACRjY,GAAOkY,EAAAA,GAAAA,GAAW,CAAEC,OAAAA,GAAAA,OAAQ3X,SAAU4X,IAAoBJ,GAChE,MAAO,CACL/F,OAAQ,CACN,CACEpQ,UAAW,SACXuP,KAAM,SACNiH,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,WAAY,CAAC,aACbtT,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,gBAC1BoX,UAAAA,EACA3F,OAAQ,CACN,CACEb,KAAM,kBACNlM,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,gBAC1BiY,aAAc3V,GAAAA,EACd4V,SAAU,gBAAGvV,EAAH,EAAGA,OAAH,OACRA,GACAA,EAAO,0BACPA,EAAO,yBAAyBmI,MAAK,qBAAGzH,KAAgBqG,MAAM,KAAK,GAAGpG,SAAS,sBAC3E,4BACA,UACNmO,OAAQ,CACN,CACEpQ,UAAW,wBACXuP,KAAM,2BAIZ,CACEA,KAAM,4BACNlM,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,qBAC1BkY,SAAU,SACVzG,OAAQ,CACN,CACEpQ,UAAW,aACXuP,KAAM,mBACN9Q,MAAO,2BAAIN,EAAKO,cAAcC,EAAAA,EAAAA,2BAEhC,CACEqB,UAAW,iBACXuP,KAAM,iBACNc,SAAU,CACR,yEAAS,IAAcyG,OAAM,SAAClU,GAAD,OAAOA,EAAE6E,UAAUtF,OAAS,UAAK5D,EAAYJ,EAAKO,cAAcC,EAAAA,EAAAA,+BAKrG,CACE4Q,KAAM,SACNlM,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,eAC1BiY,aAAcnC,GACdrE,OAAQ,CACN,CACEpQ,UAAW,SACXuP,KAAM,gBFlBSwH,CAAchB,EAAUnH,WAAU,KAE/DjG,EAAAA,EAAAA,YAAU,WACR+M,EAAiBzG,EAAKjN,UAGxB2G,EAAAA,EAAAA,YAAU,WACRoN,EAAUnH,QAAQoI,OAASxB,IAC1B,CAACA,IAEJ,IAIMyB,EAAsB,WAC1BtB,EAAQvM,KAAR,wBAA8B6F,EAAKjN,QAG/ByO,EAAQ,oCAAG,WAAOyG,GAAP,8EACkB3V,EAA+D2V,EAAxF,yBAAgEjK,EAAwBiK,EAA1C,kBAEhDC,EAHS,kBAGmBlI,EAAK/F,OAAOrK,KAAI,SAACuY,GAAD,OAAYA,EAAOjT,gBAHtD,OAGsE5C,EAAoB1C,KAAI,SAACuY,GAAD,OAAYA,EAAOpV,UAC1HqV,EAJS,SAKVpI,GALU,IAMb/F,QAAQ,OACH3H,EAAoBe,QACrB,SAACC,EAAD,OAAc4B,EAAd,EAAQnC,KAAkBkE,EAA1B,EAA0BA,SAA1B,wBACK3D,IADL,OAEK,CAAC4B,GAAD,eAAgB+B,EAASpE,QAAO,SAACwV,GAAD,OAAcH,EAAsBlV,SAASqV,QAAWzY,KAAI,SAACsF,GAAD,MAAiB,CAC9GA,WAAAA,EACA8I,oBAAqBA,MAAAA,GAAAA,EAAqB3O,MAAK,SAAC8J,GAAD,OAAOA,EAAEjE,aAAeA,KACnE,CACE,CACE4O,gBAAiB,CACfhU,IAAK,mBAAF,OAAqBoF,EAAWkE,MAAM,KAAK,IAC9C9C,UAAW,KACX/G,MAAOyO,MAAAA,OAAF,EAAEA,EAAqB3O,MAAK,SAAC8J,GAAD,OAAOA,EAAEjE,aAAeA,KAAYsD,aAI3E,WAGRwH,EAAK/F,SAGTqO,YAAatI,EAAKsI,YAAchW,EAAoBY,SAGtD2T,GAAsB,SAAC3D,GAAD,UAAC,MAAeA,GAAhB,IAAsB1V,YAAY,OACxDiK,GAAS8Q,EAAAA,EAAAA,IAAWrD,EAAekD,IAChChI,MAAK,kBAAMyG,GAAsB,SAAC3D,GAAD,UAAC,MAAeA,GAAhB,IAAsB1V,YAAY,EAAO6Y,SAAS,EAAMM,UAAU,UADtG,OAES,WACLE,GAAsB,SAAC3D,GAAD,UAAC,MAAeA,GAAhB,IAAsB1V,YAAY,EAAO6Y,SAAS,EAAOM,UAAU,OACzFD,EAAQvM,KAAR,wBAA8B6F,EAAKjN,UApCxB,2CAAH,sDAwCd,OACE,kBAAC2S,GAA+B8C,SAAhC,CACEjZ,MAAK,SAAOqX,GAAP,IAA2B6B,eA/Db,SAACnY,GAAD,OAAWuW,GAAsB,SAAC3D,GAAD,UAAC,MAAeA,GAAhB,IAAsB5S,MAAAA,QA+D1BoY,iBA9D3B,SAACrC,GAAD,OAAaQ,GAAsB,SAAC3D,GAAD,UAAC,MAAeA,GAAhB,IAAsBmD,QAAAA,QA8DZsC,YA7DlD,SAAChC,GAAD,OAAcE,GAAsB,SAAC3D,GAAD,UAAC,MAAeA,GAAhB,IAAsByD,SAAAA,QA6DKiC,gBAAiB5I,EAAK/F,UAErG,kBAAC,IAAD,CACEzN,KAAM0C,EAAKO,cAAcC,EAAAA,EAAAA,YACzB8N,OAAQ+I,EACRsC,cAAe,kBAAMrC,GAAwB,IAC7CsC,gBAAiBd,IAElBpB,EAAmBD,SAClBC,EAAmBP,QACjB,kBAAC,EAAA0C,OAAD,CACE3U,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,gBAC1B8N,QAAM,EACNwL,MAAO,CACL,CACE1I,KAAM,UACNvP,UAAW,IAAIkU,EAAyB,CAAEC,cAAAA,IAC1C+D,gBAAgB,MAIpB,KAEJ,kBAAC,IAAD,CACEnC,UAAWA,EACX5F,OAAQA,EACR1P,aAAc,CAAEa,QAAQ,GACxBN,aAAcA,GACdmO,cAAe,CACb,YAAaF,EAAKjN,KAClB,YAAa,SACb,YAAaiN,EAAKS,aAClB,mBAAoBT,EAAK5P,aAE3BuB,gBAAe,SAAOA,GAAAA,IAAoBkU,IAC1CrE,SAAUA,EACVrU,SAAU,SAACkF,GAAW,MAChBA,IAAU,UAAAA,EAAO,gCAAP,eAAiCa,QAAS,EAtFhEsT,GAAwB,GAyFdwB,SASd1B,GAAwBpY,aAAe,CACrC8R,KAAM,IAGRsG,GAAwBtY,UAAY,CAClCgS,KAAM/R,IAAAA,QAGR,gnBGxIA,IAEMib,GAAkB,SAACnS,EAAaiJ,EAAMmJ,GAC1C,OACE,kBAAC,MAAD,UACOA,EAASzZ,EAAAA,EAAAA,uCAAkDA,EAAAA,EAAAA,sCADlE,CAEE2C,OAAM,OACJ+W,EAAG,SAACrG,GAAD,OAAU,2BAAIA,KACboG,EACA,CACEpS,YAAAA,GAEF,CACE7B,WAAY6B,IAPd,IASJiJ,KAAMA,EAAKM,WAMb+I,GAAc,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,mBACfpa,GAAOC,EAAAA,EAAAA,KACb,GAAkCkJ,EAAAA,EAAAA,cAChC,SAACgF,GAAD,MAAY,CACV2C,KAAM3C,EAAM3G,YAAYE,aACxBD,gBAAiB0G,EAAM3G,YAAYC,mBAErC2B,EAAAA,cALM0H,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,gBAQR+P,GAAU7G,EAAAA,EAAAA,cAChB,GAGIhC,EAAAA,EAAAA,YAAWmH,EAAwBd,GAHvC,sBACIhN,EADJ,EACIA,WAAY5E,EADhB,EACgBA,oBAAqB8R,EADrC,EACqCA,gBAAiBC,EADtD,EACsDA,cAAeC,EADrE,EACqEA,WAAY5L,EADjF,EACiFA,QAASG,EAD1F,EAC0FA,UAAWL,EADrG,EACqGA,UAAWC,EADhH,EACgHA,WAC9G8Q,EAFF,KAKA,GAA8DpX,EAAAA,EAAAA,WAAS,GAAvE,eAAOqX,EAAP,KAAgCC,EAAhC,KAEMhS,GAAWC,EAAAA,EAAAA,eAEXG,EAAU,CACd,CAAEzD,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,cAC5B,CAAE0E,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,eAC5B,CAAE0E,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,YAC5B,CACE0E,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,qBAC1Bga,WAAY,EACVC,EAAAA,EAAAA,MAAK,CACHC,QAAS1a,EAAKO,cAAcC,EAAAA,EAAAA,gCAC5Bma,UAAW3a,EAAKO,cAAcC,EAAAA,EAAAA,oCAIpC,CAAE0E,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,YAAsBga,WAAY,EAACI,EAAAA,EAAAA,WAAU,OAMrEC,EAAwBT,EAC1B,CAAC,IACD,CAAC,4CAA6C,4CAA6C,KAE/F5P,EAAAA,EAAAA,YAAU,WAAM,MACd,GAAIwB,OAAOC,KAAK6E,GAAM9M,OAAS,EAAG,CAChC,MAAkCgI,OAAO+C,QACvC+B,EAAK/F,OAAO5G,QACV,cAA+C,IAA5CmF,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,WACZ,EAD6C,EAAjBvD,WACekE,MAAM,KAAjD,eAAS7C,EAAT,KAAmBD,EAAnB,KACA,MAAO,CACLkC,UAAWA,EAAUxF,SAASuD,GAAYiC,EAA/B,kBAA+CA,GAA/C,CAA0DjC,IACrEkC,WAAYA,EAAWzF,SAASsD,GAAamC,EAAjC,kBAAkDA,GAAlD,CAA8DnC,OAG9E,CAAEkC,UAAW,GAAIC,WAAY,MAE/BpF,QAAO,SAACC,EAAD,sBAAOxD,EAAP,KAAYP,EAAZ,eAAC,MAA4B+D,GAA7B,cAAmCxD,EAAMP,EAAMK,KAAI,SAACsK,GAAD,MAAW,CAAE1K,MAAO0K,EAAM3K,MAAO2K,UAAa,IAXlG1B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAYnB8Q,EAAiB,CAAE/c,KAAMsY,EAAiBtM,UAAAA,EAAWC,WAAAA,EAAY8B,MAAOyF,EAAK/F,OAAS+F,EAAK/F,OAAO/G,OAAS,IAG7GuW,EAA2BzJ,MAAAA,GAAD,UAACA,EAAM/F,cAAP,aAAC,EAAc5K,MAAK,SAAC2a,GAAD,OAAOA,EAAE9U,WAAWlC,SAAS,yBAC1E,CAACgN,IAEJ,IAAMiK,EACJjK,GAAQA,EAAK/F,QACR+F,EAAK/F,QAAU,IACbpH,QAAO,YAAoB,IAC1B,EAD0B,EAAjBqC,WAC6CkE,MAAM,KAA5D,eAAOrE,EAAP,KAAoBwB,EAApB,KAA8BD,EAA9B,KACQ1D,EAAwC8F,EAAxC9F,aAAc4F,EAA0BE,EAA1BF,UAAWC,EAAeC,EAAfD,WACjC,SACG7F,EAAaM,OAAS,IAAIN,EAAaI,SAAS+B,QAChDyD,EAAUtF,OAAS,IAAIsF,EAAUxF,SAASuD,QAC1CkC,EAAWvF,OAAS,IAAIuF,EAAWzF,SAASsD,OAGhD1G,KAAI,SAAC0D,GAAD,UAAC,IAAWP,KAAMO,EAAI4B,YAAe5B,GAArC,IAA0CiQ,SAAUvD,EAAKuD,cAChE,GAEA2G,EAAoB,SAACnT,GACzB,IAAMoT,EAAsBpT,EAAY1D,QAAO,SAACC,EAAKsH,GAAN,wBAAmBtH,GAAnB,CAAwBsH,EAAK7H,SAAO,IACnF,OAAO0E,GAAS2S,EAAAA,EAAAA,IAAsBpK,EAAMmK,IAAsB/J,MAAK,WACrE3I,GAASmC,EAAAA,EAAAA,IAAUoG,EAAKjN,OACxBwW,EAAiB,CAAE/c,KAAMgY,EAAoB/G,UAAW,SAoEtD9C,GAAoB,SAAC9H,GAAD,OACxBA,EAAOQ,QACL,SAACC,EAAKsH,GAAN,MAAgB,CACd,GAAI,SACCtH,MAAAA,OADL,EACKA,EAAM,KADX,cAEGsH,GAAO,OAGZ,CAAE,GAAI,MAGJI,GAAY,CAChBxL,MAAO,iCAAON,EAAKO,cAAcC,EAAAA,EAAAA,iBACjC5B,YAAY,GAGRuc,GAAgB,IACpBpQ,OAAQ,GACRrH,aAAc,IACXoN,GAGC/E,GAAqBC,OAAO7I,OAAO,CAAEO,aAAcyX,GAAczX,aAAc6F,WAAAA,EAAYD,UAAAA,IAAanJ,MAC5G,SAACE,GAAD,OAAWA,EAAM2D,OAlME,MAqMrB,OACE,6BAASzF,UAAU,oDAChB2W,GACC,kBAACkG,GAAA,EAAD,CACEvH,KAAMuB,EAAWvB,KACjB3O,MAAOkQ,EAAWlQ,MAClBoJ,OAAQ4G,EACRmG,mBAAoBjG,EAAWiG,mBAC/B/V,QAAS,kBAAM+U,EAAiB,CAAE/c,KAAMiY,EAAmBL,iBAAiB,KAC5E5C,SAAU,WACR6C,IACAkF,EAAiB,CAAE/c,KAAMkY,OAI/B,kBAAC,IAAD,CACE7M,QAAS2R,EAA0B3R,EAAUA,EAAQhF,QAAO,SAAC2X,GAAD,OAAOA,EAAEpW,QAAUlF,EAAKO,cAAcC,EAAAA,EAAAA,wBAClG6L,WAAYA,EAAWiO,EAAyBxJ,MAAAA,OAA1B,EAA0BA,EAAMjN,MACtD0X,eAAgBzK,EAAK0K,YAASpb,EA5Gb,iBAAM,CAC3B,CACE8E,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,QAC1B3B,QAAS,SAAC4c,EAAQC,EAAQ1V,GAAjB,OACPqU,EAAiB,CACf/c,KAAMmY,EACNN,cAAe,kBAAM6F,EAAkB,CAAChV,KACxCoP,WAAY,CACVlQ,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,0BAC1BqT,KAAMmG,GAAgBhU,EAAWnC,KAAMiN,GAAM,GAC7CuK,mBAAoBrb,EAAKO,cAAcC,EAAAA,EAAAA,yBAmG3CsH,KAAMiT,EAAanN,MAAM5F,EAAWrC,OAAQqC,EAAWrC,OAASqC,EAAWtC,OAC3EgH,YAAY,GACZjO,OAAO,yBACPmK,UAAW,gBAAGlD,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OAAuB0U,EAAiB,CAAE/c,KAAM+X,EAAgB3P,MAAAA,EAAOC,OAAAA,KAClFuG,cAAe4E,EAAK0K,OACpBzO,gBApKkB,SAACC,GACvBqN,EAAiB,CAAE/c,KAAMgY,EAAoB/G,UAAWvB,EAAa5J,GAAqB1C,KAAI,kBAAe,CAAEmD,KAAjB,EAAGA,YAoK7FiJ,YAAa1J,EACbmK,WACExB,GACI,WACEsO,EAAiB,CAAE/c,KAAMqY,UAE3BvV,EAENyM,eAAgB,YAA6C,IAA1CnJ,EAA0C,EAA1CA,aAAc4F,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC1C8Q,EAAiB,UACf/c,KAAMoY,GACFhS,EAAe,CAAEA,aAAAA,GAAiB8F,EAAQ9F,cAC1C4F,EAAY,CAAEA,UAAAA,GAAcE,EAAQF,WACpCC,EAAa,CAAEA,WAAAA,GAAeC,EAAQD,cAG9CoS,eAnHiB,kBACrBvB,EACI,GACA,CACE,kBAAC,EAAA5F,KAAD,CAAMC,GAAE,wBAAmB3D,EAAKjN,KAAxB,wBAAoDjD,IAAI,sBAAsBrC,UAAU,qBAC9F,kBAAC,EAAAC,OAAD,CAAQE,QAAQ,UAAU,aAAW,kBAClCsB,EAAKO,cAAcC,EAAAA,EAAAA,kBAGxB,CACEF,MAAON,EAAKO,cAAcC,EAAAA,EAAAA,eAC1B5C,MAAO,CACLW,UAAW,qBAEbM,QAAS,WACP2Y,EAAQvM,KAAR,wBAA8B6F,EAAKjN,KAAnC,2BAGJ,CACEvD,MAAON,EAAKO,cAAcC,EAAAA,EAAAA,QAC1B5C,MAAO,CACLgB,YAAawE,EAAoBY,OAAS,GAE5CnF,QAAS,WACP,IAAM+c,EAA8BxY,EAAoBY,OAAS,EACjEqW,EAAiB,CACf/c,KAAMmY,EACNN,cAAe,kBAAM6F,GAAkB,OAAI5X,KAC3CgS,WAAY,CACVlQ,MAAOlF,EAAKO,cAAcqb,EAA8Bpb,EAAAA,EAAAA,0BAAqCA,EAAAA,EAAAA,0BAC7FqT,KAAMmG,GACJ4B,EAA8BxY,EAAoBY,OAASZ,EAAoB,GAAGS,KAClFiN,EACA1N,EAAoBY,OAAS,GAE/BqX,mBAAoBrb,EAAKO,cAAcqb,EAA8Bpb,EAAAA,EAAAA,kBAA6BA,EAAAA,EAAAA,yBAiF5G2G,UAAWM,EACXO,WAAU,SACLA,GADK,IAERqD,MAAO0P,EAAa/W,SAEtBkJ,YAAalN,EAAKO,cAAcC,EAAAA,EAAAA,aAChC4M,cAAepN,EAAKO,cAAcC,EAAAA,EAAAA,YAClCqb,OAjFS,kBACb,kBAAC,EAAAC,MAAD,CAAOC,OAAK,EAAClN,KAAMmN,EAAAA,EAAAA,uBAAAA,MACjB,kBAAC,GAAD,CAAyB1N,QAAQ,EAAMwC,KAAMA,MAgF3CmL,WAAY,CACV/W,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,mBAC1BU,YAAa2Z,GAEfrR,QAAS,CACP,CACE5I,IAAK,eACLP,MAAuC,IAAhCmJ,EAAQ9F,aAAaM,OAAe,GAAKwF,EAAQ9F,aACxD+J,YAAazN,EAAKO,cAAcC,EAAAA,EAAAA,YAAsB,CAAEI,IAAKZ,EAAKO,cAAcC,EAAAA,EAAAA,aAAsB2M,gBACtG7P,KAAM,QACNiP,SAAUd,GAAkBjC,EAAQ9F,cACpCgK,OAAQ,CACN,CACEpQ,KAAM6d,GAAczX,aAAaM,OAAS,EAAI,WAAa,QAC3D2J,MACEwN,GAAczX,aAAaM,OAAS,EAChCmX,GAAczX,aAAakK,MAAM,EAAGjE,OAAYvJ,EAvQ/C,IAuQ2EM,KAAI,SAACsK,GAAD,MAAW,CAAE1K,MAAO0K,EAAM3K,MAAO2K,MACjH,CAACc,OAIb,CACElL,IAAK,YACLP,MAAoC,IAA7BmJ,EAAQF,UAAUtF,OAAe,GAAKwF,EAAQF,UACrDmE,YAAazN,EAAKO,cAAcC,EAAAA,EAAAA,YAAsB,CAAEI,IAAKZ,EAAKO,cAAcC,EAAAA,EAAAA,cAAuB2M,gBACvG7P,KAAM,QACNiP,SAAUd,GAAkBjC,EAAQF,WACpCoE,OAAQ,CACN,CACEpQ,KAAMgM,EAAUtF,OAAS,EAAI,WAAa,QAC1C2J,MAAOrE,EAAUtF,OAAS,EAAIsF,EAAUsE,MAAM,EAAGjE,OAAYvJ,EArRtD,IAqRoF,CAAC0L,OAIlG,CACElL,IAAK,aACLP,MAAqC,IAA9BmJ,EAAQD,WAAWvF,OAAe,GAAKwF,EAAQD,WACtDkE,YAAazN,EAAKO,cAAcC,EAAAA,EAAAA,YAAsB,CAAEI,IAAKZ,EAAKO,cAAcC,EAAAA,EAAAA,WAAoB2M,gBACpG7P,KAAM,QACNiP,SAAUd,GAAkBjC,EAAQD,YACpCmE,OAAQ,CACN,CACEpQ,KAAMiM,EAAWvF,OAAS,EAAI,WAAa,QAC3C2J,MAAOpE,EAAWvF,OAAS,EAAIuF,EAAWqE,MAAM,EAAGjE,OAAYvJ,EAlSxD,IAkSsF,CAAC0L,QAKtGiC,QAAQ,uBAMhBoM,GAAYrb,UAAY,CACtBsb,mBAAoBrb,IAAAA,MAGtB,qpBCvTA,IAAMmd,GAAO,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACRnc,GAAOC,EAAAA,EAAAA,KACPuX,GAAU7G,EAAAA,EAAAA,cAChB,GAA0C1N,EAAAA,EAAAA,WAAS,GAAnD,eAAOmZ,EAAP,KAAuBC,EAAvB,KACA,GAAkEpZ,EAAAA,EAAAA,WAAS,GAA3E,eAAOqZ,EAAP,KAAkCC,EAAlC,KACA,GAA4BC,EAAAA,EAAAA,aAApB3Y,EAAR,EAAQA,KAAM4Y,EAAd,EAAcA,UACd,GAA0HtT,EAAAA,EAAAA,cACxH,SAACgF,GAAD,gCAAC,IACC2C,KAAM3C,EAAM3G,YAAYE,aACxBD,gBAAiB0G,EAAM3G,YAAYC,iBAC/BgV,GAAa,CAAEC,MAAOvO,EAAMwO,aAAaC,gBAH/C,IAIEC,gBAAe,UAAE1O,EAAMwO,aAAaG,mBAArB,aAAE,EAAgCjZ,KACjDkZ,iBAAiB,UAAA5O,EAAM3G,mBAAN,mBAAmBoL,aAAnB,eAA0B5K,aAAciN,EAAAA,GACzD+H,cAAc,UAAA7O,EAAM3G,mBAAN,mBAAmBoL,aAAnB,eAA0BpJ,UAAW,GACnDyT,kBAAkB,UAAA9O,EAAMwO,oBAAN,mBAAoBjP,cAApB,eAA4B1F,aAAciN,EAAAA,GAC5DiI,eAAe,UAAA/O,EAAMwO,oBAAN,mBAAoBjP,cAApB,eAA4BlE,UAAW,OAExDJ,EAAAA,cAXM0H,EAAR,EAAQA,KAAM4L,EAAd,EAAcA,MAAOjV,EAArB,EAAqBA,gBAAiBsV,EAAtC,EAAsCA,gBAAiBC,EAAvD,EAAuDA,aAAcC,EAArE,EAAqEA,iBAAkBC,EAAvF,EAAuFA,cAAeL,EAAtG,EAAsGA,gBAchGM,GAAahU,EAAAA,EAAAA,cAAY,SAACgF,GAI9B,OADIA,EADF3G,YAAepG,QAEAgc,EAAAA,MAGbC,GAAclU,EAAAA,EAAAA,cAAY,SAACgF,GAI/B,OADIA,EADFwO,aAAgBvb,QAEDgc,EAAAA,MAGb7U,GAAWC,EAAAA,EAAAA,eACXI,EAAY,WAEhB,GADAL,GAASmC,EAAAA,EAAAA,IAAU7G,IACf4Y,EACF,GAAkB,mBAAdA,EACFlU,GAAS+U,EAAAA,GAAAA,IAAWb,QACf,CACL,GAAII,EAGF,OAFAtU,GAASgV,EAAAA,GAAAA,IAAmBV,EAAiB,KAC7CW,SAASC,OAAOC,YAAYb,GACrB,kBAAMW,SAASC,OAAOC,iBAAYtd,IAEzCmI,GAASoV,EAAAA,GAAAA,UAMjBnT,EAAAA,EAAAA,YAAU,WAGR,OAFA5B,IACA4U,SAASC,OAAOC,YAAY7Z,GACrB,kBAAM2Z,SAASC,OAAOC,iBAAYtd,MACxC,CAACyD,EAAM4Y,EAAWI,KAErBrS,EAAAA,EAAAA,YAAU,WACkB,KAAtBsG,MAAAA,OAAA,EAAAA,EAAMsI,cAA+C,MAA1BtI,MAAAA,OAAA,EAAAA,EAAM8M,kBAAqD,MAA3B9M,MAAAA,OAAA,EAAAA,EAAM+M,mBAAjE,MAA4F/M,GAAAA,EAAM0K,QACpGe,GAA6B,KAE9B,CAACzL,IAEJ,IAAMgN,EAAkB,kBACtBrB,EACI,CACEvX,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,QAC1BiU,IAAIsJ,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,OAAAA,KAAuBf,EAAkBC,IAE5D,CACEhY,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,OAC1BiU,IAAIsJ,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,MAAAA,KAAsBjB,EAAiBC,KARxC,eAWlBK,GAAeZ,IAA4B,mBAAdA,EAAiCI,EAAkBQ,GAChFX,EACE,CACE,CACExX,MAAOwX,GAASA,EAAMtL,KACtBqD,GAAI,kBAAF,OAAoBgI,EAApB,UACFtV,UAAWuV,GAASA,EAAMuB,SAG9B,MAAC7d,GACHid,IAAgBZ,EAChB,GACA,CAAC,CAAEvX,MAAOlF,EAAKO,cAAcC,EAAAA,EAAAA,cAAwB0d,UAAU,MAvB7C,OAyBlBb,IAAgBZ,EAChB,CACE,CACEvX,MAAOuC,OAAkBrH,EAAY+c,GAAarM,MAAAA,OAAA,EAAAA,EAAMS,gBAAgBT,MAAAA,OAAtB,EAAsBA,EAAMM,MAAOpR,EAAKO,cAAcC,EAAAA,EAAAA,aACxG0d,UAAU,IAGd,MAGAhZ,GAASuC,GAAmBqJ,EAAOA,EAAKS,cAAgBT,EAAKM,UAAOhR,EACpEc,GAAeuG,GAAmBqJ,EAAOA,EAAK5P,iBAAcd,EAC5D+d,EAAgB,CACpB,kBAAC,EAAAC,aAAD,CACEvc,UACE,kBAAC,EAAA2S,KAAD,CAAM3V,QAAS,kBAAMwd,GAAgB,IAAQ5H,GAAIuJ,EAAAA,EAAAA,oBAAAA,KAAAA,QAA2C,MAAOna,IAChG7D,EAAKO,cAAcC,EAAAA,EAAAA,OAGxBI,IAAI,cAEN,kBAAC,EAAAwd,aAAD,CACEvc,UACE,kBAAC,EAAA2S,KAAD,CAAM3V,QAASsd,EAAU1H,GAAIuJ,EAAAA,EAAAA,sBAAAA,KAAAA,QAA6C,MAAOna,IAC9E7D,EAAKO,cAAcC,EAAAA,EAAAA,SAGxBjC,UAAU,sBACVqC,IAAI,iBAIR,OACE,kBAAC,EAAA2T,SAAD,MACI8I,GAAgBZ,IAAcU,EAkD9B,kBAAC,EAAA5I,SAAD,KACE,6BAAShW,UAAU,yCACjB,kBAAC,KAAoBuf,MAEvB,kBAAC,KAAD,CACE5Y,MAAK,UAAKmY,EAAc,OAAS,QAA5B,cACLnc,YAAa,CAAC,GAAD,OAAImc,EAAc,OAAS,QAA3B,oBAA8CA,EAAcxZ,EAAO4Y,EAAnE,qBACbhJ,QAAS,CACP,kBAAC,EAAAjV,OAAD,CACEoC,IAAI,cACJrC,UAAU,aACVE,OAAO,cACPC,QAAQ,UACR,aAAW,wBACXG,QAAS,kBAAM2Y,EAAQ6G,WAEtBre,EAAKO,cAAcC,EAAAA,EAAAA,yBAjE5B,kBAAC,EAAA+T,SAAD,KACE,kBAAC,IAAD,CAAY+J,YAAaR,KACvB,kBAAC,EAAAS,MAAD,KACE,kBAAC,EAAAC,UAAD,KACE,kBAACC,EAAA,EAAD,CAAiBvZ,MAAOA,GAAS,kBAAC,KAAD,MAA6B3G,UAAU,8BAExEkJ,GAAmBqJ,IAASA,EAAK0K,QACjC,kBAAC,EAAAgD,UAAD,KACE,kBAAC,EAAAE,SAAD,CACEjgB,OAAO,8BACPkgB,OAAQ,kBAAC,EAAAC,YAAD,CAAarP,SAAU,SAACjB,GAAD,OAAY+N,EAAgB/N,IAASzQ,GAAG,0BACvEyQ,OAAQ8N,EACRyC,SAAO,EACPC,SAAS,QACTX,cAAeA,MAKtBjd,GACC,kBAAC,EAAAS,YAAD,CAAapD,UAAU,iCACrB,kBAAC,EAAAqD,KAAD,CAAMC,UAAU,KAAKX,KAI1BuG,IAAoBqJ,EAAO,kBAAC,KAAD,MAAiB,kBAAC,GAAD,CAAasJ,mBAAoBkC,IAC9E,kBAAC,EAAAR,MAAD,CAAOjN,KAAMmP,EAAAA,EAAAA,sBAAAA,OACTvW,GACA,kBAAC,KAAD,CACE6I,YAAa,WACX/H,GAASwW,EAAAA,EAAAA,IAAuB,SAAKhC,GAAN,IAAuBpX,OAAQ,EAAG6D,QAASwT,EAAc1E,SAAS,OAEnGlI,YAAa4N,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,QAASna,GAC5DwM,aAAa0N,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,MAAAA,KAAD,GAAC,MAA2BjB,GAA5B,IAA6CpX,OAAQ,IAAKqX,GACnF7M,WAAY6N,EAAAA,EAAAA,sBAAAA,QAIlB,kBAAC,EAAAlC,MAAD,CAAOjN,KAAMmP,EAAAA,EAAAA,oBAAAA,OACTvW,GACA,kBAAC,KAAD,CACE6I,YAAa1H,EACbwH,YAAa4N,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,QAASna,GAC5DsM,WAAY6N,EAAAA,EAAAA,oBAAAA,WAgC5B9B,GAAKpd,UAAY,CACfqd,SAAUpd,IAAAA,MAGZ,0EChOA,SAAgBigB,EAAiDC,EAAe,IAAKvf,EAAU,CAAEwf,kBAAkB,MACjH,OAAuBF,EAAeC,EAAcvf","sources":["webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/smart-components/common/ModalFormTemplate.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/FormButtons.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/role/add-role/add-permissions-template.js","webpack:///./src/helpers/permission/permission-helper.js","webpack:///./src/redux/actions/permission-action.js","webpack:///./src/smart-components/role/add-role/DisabledRowWrapper.js","webpack:///./src/smart-components/role/add-role/add-permissions.js","webpack:///./src/smart-components/role/add-role/cost-resources.js","webpack:///./src/smart-components/role/edit-role-modal.js","webpack:///./src/hooks/useIsMounted.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/role-selectors.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-success.js","webpack:///./src/smart-components/role/add-role-permissions/review-template.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-wizard.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permissions-summary-content.js","webpack:///./src/smart-components/role/add-role-permissions/schema.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/utilities/async-debounce.ts"],"sourcesContent":["import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const getResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const getResource = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\n/**\n * This id is requried to submit form by a button outside of the form element\n */\nconst MODAL_FORM_IDENTIFIER = 'modal-form';\nconst CustomFormWrapper = (props) => <Form {...props} id={MODAL_FORM_IDENTIFIER} />;\n\nconst CustomButtons = ({ saveLabel, cancelLabel }) => {\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy>\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-c-form\">\n          <ActionGroup className=\"pf-u-mt-0\">\n            <Button\n              ouiaId=\"primary-save-button\"\n              variant=\"primary\"\n              form={MODAL_FORM_IDENTIFIER}\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {saveLabel}\n            </Button>\n            <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {cancelLabel}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  saveLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n};\n\nCustomButtons.defaultProps = {\n  saveLabel: 'Save',\n  cancelLabel: 'Cancel',\n};\n\nconst ModalFormTemplate = ({ ModalProps, saveLabel, cancelLabel, alert, ...props }) => (\n  <Modal {...ModalProps} footer={<CustomButtons saveLabel={saveLabel} cancelLabel={cancelLabel} />}>\n    {alert?.()}\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n  ...CustomButtons.propTypes,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  const intl = useIntl();\n\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [...selectOptions]\n    : [{ label: intl.formatMessage(messages[isRequired ? 'pleaseChoose' : 'none']) }, ...selectOptions];\n};\n\nconst Select = ({ input, options, isReadOnly, isDisabled, isRequired, ...rest }) => (\n  <FormSelect {...input} {...rest} isDisabled={isDisabled || isReadOnly}>\n    {createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={props.value || props.label} {...props} label={props.label.toString()} /> // eslint-disable-line react/prop-types\n    ))}\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.any,\n      label: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any,\n};\n\nconst Pf4SelectWrapper = ({ label, isRequired, helperText, meta, description, hideLabel, ...rest }) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={rest.id}\n      isValid={!showError}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select label={label} isValid={!showError} isRequired={isRequired} {...rest} />\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool,\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst FormButtons = ({ dirtyFieldsSinceLastSubmit, submitSucceeded, pristine }) => {\n  const { onCancel } = useFormApi();\n  const noChanges = isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  const intl = useIntl();\n  return (\n    <ActionGroup className=\"pf-u-mt-0\">\n      <Button ouiaId=\"primary-submit-button\" type=\"submit\" isDisabled={noChanges} variant=\"primary\">\n        {intl.formatMessage(messages.save)}\n      </Button>\n      <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={() => onCancel()}>\n        {intl.formatMessage(messages.cancel)}\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport FormButtons from './FormButtons';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nconst FormRenderer = ({ formTemplateProps, ...props }) => (\n  <ReactFormRender\n    componentMapper={{\n      [componentTypes.TEXT_FIELD]: TextField,\n      [componentTypes.TEXTAREA]: Textarea,\n      [componentTypes.SELECT]: Pf4SelectWrapper,\n    }}\n    FormTemplate={(props) => <FormTemplate {...formTemplateProps} {...props} FormButtons={FormButtons} />}\n    {...props}\n  />\n);\n\nFormRenderer.propTypes = {\n  formTemplateProps: PropTypes.object,\n};\n\nexport default FormRenderer;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Text, TextContent, Title, Button, Popover, Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './add-role-wizard.scss';\n\nconst AddPermissionTemplate = ({ formFields }) => {\n  const formOptions = useFormApi();\n  const [selectedPermissions, setSelectedPermissions] = useState(formOptions.getState().values['add-permissions-table'] || []);\n  const [alertClosed, setAlertClosed] = useState(false);\n  const notAllowedBasePermissions = formOptions.getState().values['not-allowed-permissions'];\n  const intl = useIntl();\n\n  const unresolvedSplats =\n    formOptions.getState().values?.['copy-base-role']?.applications?.filter((app) => !selectedPermissions?.find(({ uuid }) => uuid.includes(app))) ||\n    [];\n  const addPermissions = formFields[0][0];\n  return (\n    <div className=\"rbac\">\n      {selectedPermissions.length > 0 ? (\n        <div className=\"rbac-c-selected-chips\">\n          <ChipGroup categoryName={intl.formatMessage(messages.selectedPermissions)}>\n            {/* immutable reverse */}\n            {selectedPermissions\n              .reduce((acc, i) => [i, ...acc], [])\n              .map(({ uuid }) => (\n                <Chip key={uuid} color=\"blue\" isTruncated onClick={() => setSelectedPermissions(selectedPermissions.filter((p) => p.uuid !== uuid))}>\n                  {uuid}\n                </Chip>\n              ))}\n          </ChipGroup>\n        </div>\n      ) : null}\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"rbac-c-add-permission-title\">\n        {intl.formatMessage(messages.addPermissions)}\n      </Title>\n      <TextContent>\n        <Text>\n          {intl.formatMessage(messages.selectPermissionsForRole)}\n          {unresolvedSplats.length !== 0 && (\n            <Popover\n              headerContent={intl.formatMessage(messages.onlyGranularPermissions)}\n              bodyContent={intl.formatMessage(messages.noWildcardPermissions)}\n            >\n              <Button variant=\"link\">\n                {intl.formatMessage(messages.whyNotSeeingAllPermissions)} <QuestionCircleIcon />\n              </Button>\n            </Popover>\n          )}\n        </Text>\n      </TextContent>\n      {notAllowedBasePermissions?.length > 0 && !alertClosed ? (\n        <Alert\n          variant=\"default\"\n          isInline\n          title={`${intl.formatMessage(messages.followingPermissionsCannotBeAdded)} ${notAllowedBasePermissions.join(', ')}`}\n          actionClose={<AlertActionCloseButton onClose={() => setAlertClosed(true)} />}\n        />\n      ) : null}\n      {[\n        [\n          {\n            ...addPermissions,\n            props: {\n              ...addPermissions.props,\n              selectedPermissions,\n              setSelectedPermissions,\n            },\n          },\n        ],\n      ]}\n    </div>\n  );\n};\n\nAddPermissionTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default AddPermissionTemplate;\n","import { getPermissionApi } from '../shared/user-login';\n\nconst accessApi = getPermissionApi();\n\nexport async function listPermissions(\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  excludeGlobals,\n  excludeRoles,\n  allowedOnly,\n  options\n) {\n  return await accessApi.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    excludeGlobals,\n    excludeRoles,\n    allowedOnly,\n    options\n  );\n}\n\nexport async function listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options) {\n  return await accessApi.listPermissionOptions(field, limit, offset, application, resourceType, verb, undefined, allowedOnly, options);\n}\n","import * as ActionTypes from '../action-types';\nimport * as PermissionsHelper from '../../helpers/permission/permission-helper';\n\nexport const listPermissions = ({\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  exclude_roles,\n  allowed_only,\n  options,\n}) => ({\n  type: ActionTypes.LIST_PERMISSIONS,\n  payload: PermissionsHelper.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    exclude_globals,\n    exclude_roles,\n    allowed_only,\n    options\n  ),\n});\n\nconst fieldToAction = {\n  application: ActionTypes.LIST_APPLICATION_OPTIONS,\n  resource_type: ActionTypes.LIST_RESOURCE_OPTIONS,\n  verb: ActionTypes.LIST_OPERATION_OPTIONS,\n};\n\nexport const listPermissionOptions = ({ field, limit, offset, application, resourceType, verb, allowedOnly, options }) => ({\n  type: fieldToAction[field],\n  payload: PermissionsHelper.listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options),\n});\n\nexport const expandSplats = ({\n  limit = 1000,\n  offset = 0,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  options,\n}) => ({\n  type: ActionTypes.EXPAND_SPLATS,\n  payload: PermissionsHelper.listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, exclude_globals, options),\n});\n\nexport const resetExpandSplats = () => ({\n  type: ActionTypes.RESET_EXPAND_SPLATS,\n  payload: {\n    data: [],\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '@patternfly/react-core';\nimport { RowWrapper } from '@patternfly/react-table';\n\nexport const DisabledRowWrapper = ({ row, ...props }) =>\n  row.disableSelection ? (\n    <Tooltip content={row.disabledContent} exitDelay={1500} entryDelay={1500}>\n      <RowWrapper className=\"rbac-c-disabled-row\" row={row} {...props} />\n    </Tooltip>\n  ) : (\n    <RowWrapper row={row} {...props} />\n  );\n\nDisabledRowWrapper.propTypes = {\n  props: PropTypes.object,\n  row: PropTypes.object,\n};\n","import React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport debouncePromise from '@redhat-cloud-services/frontend-components-utilities/debounce';\nimport { TableToolbarViewOld } from '../../../presentational-components/shared/table-toolbar-view-old';\nimport { listPermissions, listPermissionOptions, expandSplats, resetExpandSplats } from '../../../redux/actions/permission-action';\nimport { getResourceDefinitions } from '../../../redux/actions/cost-management-actions';\nimport { fetchRole } from '../../../redux/actions/role-actions';\nimport { DisabledRowWrapper } from './DisabledRowWrapper';\nimport { isEqual } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport usePermissions from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst selector = ({\n  permissionReducer: {\n    permission,\n    isLoading,\n    options: { application, operation, resource },\n    expandSplats,\n    isLoadingExpandSplats,\n  },\n  roleReducer: { isRecordLoading, selectedRole },\n  costReducer: { resourceTypes },\n}) => ({\n  permissions: permission.data.map(({ application, resource_type: resource, verb, permission, requires } = {}) => ({\n    application,\n    resource,\n    operation: verb,\n    uuid: permission,\n    requires,\n  })),\n  pagination: permission.meta,\n  isLoading: isLoading || isRecordLoading,\n  baseRole: selectedRole,\n  applicationOptions: application.data.filter((app) => app !== '*'),\n  resourceOptions: resource.data.filter((app) => app !== '*'),\n  operationOptions: operation.data.filter((app) => app !== '*'),\n  expandedPermissions: expandSplats.data.map(({ permission }) => permission),\n  isLoadingExpandSplats,\n  resourceTypes: resourceTypes.data,\n});\n\nconst AddPermissionsTable = ({ selectedPermissions, setSelectedPermissions, ...props }) => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { hasAccess } = usePermissions('cost-management', ['cost-management:*:*']);\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n\n  const fetchData = (apiProps) =>\n    dispatch(\n      listPermissions({\n        ...apiProps,\n        ...(existingRoleId ? { exclude_roles: existingRoleId } : {}),\n        allowed_only: true,\n      })\n    );\n  const fetchOptions = (apiProps) => dispatch(listPermissionOptions({ ...apiProps, allowedOnly: true }));\n  const {\n    permissions,\n    isLoading,\n    pagination,\n    baseRole,\n    applicationOptions,\n    resourceOptions,\n    operationOptions,\n    expandedPermissions,\n    isLoadingExpandSplats,\n    resourceTypes,\n  } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  // TODO: use reducer when cleaning this code\n  const [filters, setFilters] = useState({ applications: [], resources: [], operations: [] });\n  const roleType = formOptions.getState().values['role-type']; // create/copy\n  const existingRoleId = formOptions.getState().values['role-uuid'];\n  const [isToggled, setIsToggled] = useState(false);\n  const [filterBy, setFilterBy] = useState('');\n  const [value, setValue] = useState();\n  const maxFilterItems = 10;\n\n  const getResourceType = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1]);\n  const createRows = (permissions) =>\n    permissions.map(({ application, resource, operation, uuid, requires }) => ({\n      uuid: `${application}:${resource}:${operation}`,\n      requires,\n      cells: [\n        {\n          title: application,\n        },\n        resource,\n        operation,\n      ],\n      selected: Boolean(selectedPermissions && selectedPermissions.find((row) => row.uuid === uuid)),\n      disableSelection: application === 'cost-management' && ((getResourceType(uuid) || { count: 0 }).count === 0 || !hasAccess),\n      disabledContent: (\n        <div>\n          {intl.formatMessage(hasAccess ? messages.configureResourcesForPermission : messages.noCostManagementPermissions)}{' '}\n          {hasAccess ? <a href=\"./settings/sources\">{intl.formatMessage(messages.configureCostSources)}</a> : null}\n        </div>\n      ),\n    }));\n\n  const debouncedGetApplicationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'application',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetResourceOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'resource_type',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetOperationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({ field: 'verb', limit: 50, application: applications.join(), resourceType: resources.join(), verb: operations.join() }),\n      2000\n    ),\n    []\n  );\n\n  useEffect(() => {\n    const baseRoleUuid = formOptions.getState().values['copy-base-role']?.uuid;\n    if (roleType === 'copy' && baseRoleUuid) {\n      dispatch(fetchRole(baseRoleUuid));\n    }\n\n    formOptions.change('has-cost-resources', false);\n    fetchData(pagination);\n    fetchOptions({ field: 'application', limit: 50 });\n    fetchOptions({ field: 'resource_type', limit: 50 });\n    fetchOptions({ field: 'verb', limit: 50 });\n\n    return () => dispatch(resetExpandSplats());\n  }, []);\n\n  useEffect(() => {\n    hasAccess && dispatch(getResourceDefinitions());\n  }, [hasAccess]);\n\n  useEffect(() => {\n    debouncedGetResourceOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.applications]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.resources]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetResourceOptions(filters);\n  }, [filters.operations]);\n\n  useEffect(() => {\n    input.onChange(selectedPermissions);\n  }, [selectedPermissions]);\n\n  useEffect(() => {\n    if (\n      !baseRole ||\n      roleType !== 'copy' ||\n      formOptions.getState().values['base-permissions-loaded'] ||\n      selectedPermissions.length > 0 ||\n      formOptions.getState().values['copy-base-role']?.uuid !== baseRole?.uuid ||\n      isLoadingExpandSplats ||\n      isLoading\n    ) {\n      return;\n    }\n\n    let notAllowed = [];\n\n    const basePermissions =\n      baseRole?.access.filter((item) => {\n        if (applicationOptions.includes(item?.permission?.split(':')[0])) {\n          return true;\n        }\n        notAllowed.push(item);\n\n        return false;\n      }) || [];\n    formOptions.change(\n      'not-allowed-permissions',\n      notAllowed.map(({ permission }) => permission)\n    );\n    if (expandedPermissions.length === 0 && typeof isLoadingExpandSplats === 'undefined') {\n      const applications = [...new Set(basePermissions.map(({ permission }) => permission.split(':')[0]))];\n      dispatch(expandSplats({ application: applications.join() }));\n    } else {\n      const patterns = basePermissions.map(({ permission }) => permission.replace('*', '.*'));\n      setSelectedPermissions(() =>\n        expandedPermissions\n          .filter((p) => p.split(':')[0] !== 'cost-management' || (getResourceType(p) || { count: 0 }).count !== 0) // filter disabled rows\n          .filter((p) => patterns.some((f) => p.match(f))) // filter permissions with unresolved splats\n          .map((permission) => ({ uuid: permission }))\n      );\n      formOptions.change('base-permissions-loaded', true);\n    }\n  }, [permissions, baseRole]);\n\n  const setCheckedItems = (newSelection) => {\n    const newSelected = newSelection(selectedPermissions)\n      .filter(({ uuid, application }) => application !== 'cost-management' || getResourceType(uuid)?.count > 0)\n      .map(({ uuid, requires }) => ({ uuid, requires }));\n\n    setSelectedPermissions(isEqual(newSelected, selectedPermissions) ? [] : newSelected);\n  };\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const preparedFilterItems = {\n    applications: [...applicationOptions].filter((item) => item.includes(filterBy)).map((app) => ({ label: app, value: app })),\n    resources: [...resourceOptions].filter((item) => item.includes(filterBy)).map((res) => ({ label: res, value: res })),\n    operations: [...operationOptions].filter((item) => item.includes(filterBy)).map((op) => ({ label: op, value: op })),\n  };\n\n  const emptyItem = {\n    label: <div>{intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const filterItemOverflow = preparedFilterItems[Object.keys(preparedFilterItems)[value ? value : 0]].length > maxFilterItems;\n  return (\n    <div className=\"rbac-c-permissions-table\">\n      <TableToolbarViewOld\n        columns={columns}\n        isSelectable={true}\n        isCompact={true}\n        borders={false}\n        createRows={createRows}\n        data={permissions}\n        filterValue={''}\n        noData={permissions?.length === 0}\n        noDataDescription={[intl.formatMessage(messages.permissionNotDisplayedDescription)]}\n        fetchData={({ limit, offset, applications, resources, operations }) => {\n          fetchData({\n            limit,\n            offset,\n            application: (applications || filters.applications).join(),\n            resourceType: (resources || filters.resources).join(),\n            verb: (operations || filters.operations).join(),\n          });\n        }}\n        setFilterValue={({ applications, resources, operations }) => {\n          setFilters({\n            ...filters,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        isLoading={isLoading || isLoadingExpandSplats}\n        pagination={{ ...pagination, count: pagination.count }}\n        checkedRows={selectedPermissions}\n        setCheckedItems={setCheckedItems}\n        titlePlural={intl.formatMessage(messages.permissions).toLowerCase()}\n        titleSingular={intl.formatMessage(messages.permission).toLowerCase()}\n        showMoreTitle={intl.formatMessage(isToggled ? messages.seeLess : messages.seeMore)}\n        onFilter={(filterBy) => setFilterBy(filterBy)}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                setIsToggled(() => !isToggled);\n              }\n            : undefined\n        }\n        onChange={(e, value) => {\n          setFilterBy('');\n          setValue(value);\n        }}\n        value={value}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: preparedFilterItems.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.applications.length > 0\n                    ? [...preparedFilterItems.applications].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: preparedFilterItems.resources.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.resources.length > 0\n                    ? [...preparedFilterItems.resources].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: preparedFilterItems.operations.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.operations.length > 0\n                    ? [...preparedFilterItems.operations].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        isFilterable={true}\n        rowWrapper={DisabledRowWrapper}\n        tableId=\"add-role-permissions\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nAddPermissionsTable.propTypes = {\n  selectedPermissions: PropTypes.array,\n  setSelectedPermissions: PropTypes.func,\n};\n\nexport default AddPermissionsTable;\n","import React, { useEffect, useReducer } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Select, SelectOption, SelectVariant, Grid, GridItem, Text, TextVariants, FormGroup, Tooltip } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { getResourceDefinitions, getResource } from '../../../redux/actions/cost-management-actions';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }) => ({\n  resourceTypes: resourceTypes.data,\n  resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: !prevState.isOpen,\n        },\n      };\n    case 'select':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.selected.includes(action.selection)\n            ? prevState.selected.filter((item) => item !== action.selection)\n            : [...prevState.selected, action.selection],\n        },\n      };\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.options.map((option) => option.value),\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    case 'setOptions':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          options: action.options,\n          filteredOptions: action.options,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filteredOptions: prevState.options.filter(({ value }) => value.includes(action.filtervalue)),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst CostResources = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (apiProps) => dispatch(getResourceDefinitions(apiProps));\n  const fetchResource = (apiProps) => dispatch(getResource(apiProps));\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const permissions = formOptions.getState().values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('cost-management'));\n  const [state, dispatchLocaly] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission.uuid]: {\n          selected: [],\n          options: [],\n          filteredOptions: [],\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n  const onToggle = (key, isOpen) => dispatchLocaly({ type: 'toggle', key, isOpen });\n  const clearSelection = (key) => dispatchLocaly({ type: 'clear', key });\n  const onSelect = (event, selection, selectAll, key) =>\n    selectAll ? dispatchLocaly({ type: 'selectAll', selection, key }) : dispatchLocaly({ type: 'select', selection, key });\n\n  const permissionToResource = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1])?.path.split('/')?.[5];\n\n  useEffect(() => {\n    (formOptions.getState().values['resource-definitions'] || []).map(({ permission, resources }) =>\n      resources.map(\n        (resource) =>\n          permissions.find((item) => item?.uuid === permission) && dispatchLocaly({ type: 'select', selection: resource, key: permission })\n      )\n    );\n    fetchData();\n    formOptions.change('has-cost-resources', true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      const resourcePaths = [\n        ...new Set(permissions.map((permission) => resourceTypes.find((r) => r.value === permission.uuid.split(':')?.[1])?.path)),\n      ].filter((path) => path); // remove undefined\n      resourcePaths.map((path) => fetchResource(path));\n    }\n  }, [resourceTypes]);\n\n  useEffect(() => {\n    if (!isLoadingResources) {\n      permissions.map((p) => dispatchLocaly({ type: 'setOptions', key: p.uuid, options: resources[permissionToResource(p.uuid)] || [] }));\n    }\n  }, [isLoadingResources]);\n\n  useEffect(() => {\n    const resourceDefinitions = Object.entries(state).map(([permission, resources]) => ({ permission, resources: resources.selected }));\n    input.onChange(resourceDefinitions);\n    formOptions.change('resource-definitions', resourceDefinitions);\n  }, [state]);\n\n  // eslint-disable-next-line react/prop-types\n  const makeRow = ({ uuid: permission }) => {\n    const options = state[permission].filteredOptions;\n    return (\n      <React.Fragment>\n        <GridItem md={4} sm={12}>\n          <Tooltip content={<div>{permission}</div>}>\n            <FormGroup label={permission.replace(/^cost-management:/, '')} isRequired></FormGroup>\n          </Tooltip>\n        </GridItem>\n        <GridItem md={8} sm={12}>\n          <Select\n            className=\"rbac-m-cost-resource-select\"\n            variant={SelectVariant.checkbox}\n            typeAheadAriaLabel={intl.formatMessage(messages.selectState)}\n            onToggle={(isOpen) => {\n              dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: '' });\n              onToggle(permission, isOpen);\n            }}\n            onSelect={(event, selection) => {\n              onSelect(event, selection, selection === intl.formatMessage(messages.selectAll, { length: options.length }), permission);\n            }}\n            onClear={() => clearSelection(permission)}\n            selections={state[permission].selected}\n            isOpen={state[permission].isOpen}\n            onFilter={(e) => e && dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: e.target.value })}\n            aria-labelledby={permission}\n            placeholderText={intl.formatMessage(messages.selectResources)}\n            hasInlineFilter\n          >\n            {[\n              <SelectOption key={0} value={intl.formatMessage(messages.selectAll, { length: options.length })} />,\n              ...options.map((option, index) => <SelectOption key={index + 1} value={option.value} />),\n            ]}\n          </Select>\n        </GridItem>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={4} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem md={8} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.resourceDefinitions)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default CostResources;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport FormRenderer from '../common/form-renderer';\nimport useIsMounted from '../../hooks/useIsMounted';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { roleSelector } from './role-selectors';\nimport { fetchRole, fetchRoles } from '../../helpers/role/role-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { patchRole } from '../../redux/actions/role-actions';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst EditRoleModal = ({ routeMatch, cancelRoute, submitRoute = cancelRoute, afterSubmit }) => {\n  const intl = useIntl();\n  const isMounted = useIsMounted();\n  const { replace, push } = useHistory();\n  const dispatch = useDispatch();\n\n  const {\n    params: { id },\n  } = useRouteMatch(routeMatch);\n  const role = useSelector((state) => roleSelector(state, id));\n  const [initialValues, setInitialValues] = useState(role);\n\n  useEffect(() => {\n    !initialValues &&\n      fetchRole(id).then((role) => {\n        if (isMounted.current) {\n          setInitialValues(role);\n        }\n      });\n  }, [id]);\n\n  const validationPromise = (name, idKey, id) => {\n    return name.length < 150\n      ? fetchRoles({ name }).then(({ data }) => {\n          if (data.length === 0) {\n            return undefined;\n          }\n\n          const taken = data.some((item) => item[idKey] !== id && item.display_name === name);\n          if (taken) {\n            throw intl.formatMessage(messages.roleWithNameExists);\n          }\n        })\n      : Promise.reject(intl.formatMessage(messages.maxCharactersWarning, { number: 150 }));\n  };\n\n  const createEditRoleSchema = (id) => {\n    return {\n      fields: [\n        {\n          name: 'name',\n          component: componentTypes.TEXT_FIELD,\n          label: intl.formatMessage(messages.name),\n          isRequired: true,\n          validate: [{ type: 'validate-role-name', id, idKey: 'uuid', validationPromise }],\n        },\n        {\n          name: 'description',\n          component: componentTypes.TEXTAREA,\n          label: intl.formatMessage(messages.description),\n          validate: [\n            {\n              type: validatorTypes.MAX_LENGTH,\n              threshold: 150,\n            },\n          ],\n        },\n      ],\n    };\n  };\n\n  const uniqueNameValidator = asyncDebounce((value, idKey, id, validationPromise) =>\n    !value || value.length === 0 ? Promise.reject(intl.formatMessage(messages.required)) : validationPromise(value, idKey, id)\n  );\n\n  const validatorMapper = {\n    'validate-role-name':\n      ({ idKey, id, validationPromise }) =>\n      (value) =>\n        uniqueNameValidator(value, idKey, id, validationPromise),\n  };\n\n  const onCancel = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        dismissDelay: 8000,\n        title: intl.formatMessage(messages.editingRoleTitle),\n        description: intl.formatMessage(messages.editingRoleCanceledDescription),\n      })\n    );\n    replace(cancelRoute);\n  };\n\n  const handleSubmit = (data) =>\n    dispatch(patchRole(id, { name: data.name, display_name: data.name, description: data.description })).then(() => {\n      afterSubmit();\n      push(submitRoute);\n    });\n\n  return initialValues ? (\n    <FormRenderer\n      schema={createEditRoleSchema(id)}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onCancel={onCancel}\n      validatorMapper={validatorMapper}\n      FormTemplate={(props) => (\n        <ModalFormTemplate {...props} ModalProps={{ onClose: onCancel, isOpen: true, variant: 'small', title: 'Edit role information' }} />\n      )}\n    />\n  ) : null;\n};\n\nEditRoleModal.propTypes = {\n  routeMatch: PropTypes.string.isRequired,\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]).isRequired,\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  afterSubmit: PropTypes.func.isRequired,\n};\n\nexport default EditRoleModal;\n","import { useEffect, useRef } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { removeRole } from '../../redux/actions/role-actions';\nimport { fetchRole } from '../../helpers/role/role-helper';\nimport { roleNameSelector } from './role-selectors';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RemoveRoleModal = ({ routeMatch, cancelRoute, submitRoute = cancelRoute, afterSubmit }) => {\n  const intl = useIntl();\n  const {\n    params: { id },\n  } = useRouteMatch(routeMatch);\n  const roles = id.split(',');\n  const roleName = useSelector((state) => {\n    if (roles.length === 1) {\n      return roleNameSelector(state, roles[0]);\n    }\n\n    return roles.length;\n  });\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [internalRoleName, setInternalRoleName] = useState(roleName);\n  const dispatch = useDispatch();\n  const { push, replace } = useHistory();\n\n  useEffect(() => {\n    if (roles && roleName) {\n      setInternalRoleName(roleName);\n    } else if (roles && roles.length === 1) {\n      fetchRole(roles[0])\n        .then((role) => setInternalRoleName(role.display_name))\n        .catch((error) => dispatch(addNotification({ variant: 'danger', title: 'Could not get role', description: error?.errors?.[0]?.detail })));\n    }\n  }, [roleName, roles]);\n\n  const onSubmit = () => {\n    Promise.all(roles.map((id) => dispatch(removeRole(id)))).then(() => afterSubmit());\n    push(submitRoute);\n  };\n\n  const onCancel = () => replace(cancelRoute);\n  if (!internalRoleName) {\n    return null;\n  }\n\n  return (\n    <Modal\n      className=\"rbac\"\n      aria-label=\"remove-role\"\n      header={\n        <TextContent>\n          <Split hasGutter>\n            <SplitItem>\n              <ExclamationTriangleIcon size=\"lg\" style={{ fill: '#f0ab00' }} />\n            </SplitItem>\n            <SplitItem>\n              <Text component=\"h1\">{intl.formatMessage(messages.deleteRoleQuestion)}</Text>\n            </SplitItem>\n          </Split>\n        </TextContent>\n      }\n      isOpen\n      variant=\"small\"\n      onClose={onCancel}\n      actions={[\n        <Button isDisabled={isDisabled} key=\"submit\" variant=\"danger\" type=\"button\" id=\"confirm-delete-portfolio\" onClick={onSubmit}>\n          {intl.formatMessage(messages.confirm)}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <FormattedMessage\n            {...messages.roleWilBeRemovedWithPermissions}\n            values={{\n              strong: (text) => <strong>{text}</strong>,\n              name: internalRoleName,\n              count: roles.length,\n            }}\n          />\n        </Text>\n        <Checkbox\n          id=\"remove-role-checkbox\"\n          label={intl.formatMessage(messages.understandActionIrreversible)}\n          isChecked={!isDisabled}\n          onChange={() => setIsDisabled((prev) => !prev)}\n        />\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.propTypes = {\n  routeMatch: PropTypes.string.isRequired,\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]).isRequired,\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  afterSubmit: PropTypes.func.isRequired,\n};\n\nexport default RemoveRoleModal;\n","export const roleSelector = (state, roleId) => {\n  const {\n    roleReducer: { roles = { data: [] }, selectedRole },\n  } = state;\n  if (selectedRole?.uuid === roleId) {\n    return selectedRole;\n  }\n\n  return roles.data.find(({ uuid }) => uuid === roleId);\n};\n\nexport const roleNameSelector = (state, roleId) => roleSelector(state, roleId)?.display_name;\n","import React, { Fragment } from 'react';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { getDateFormat } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Link } from 'react-router-dom';\nimport flatten from 'lodash/flatten';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nexport const createRows = (showResDefinitions, uuid) => {\n  const intl = useIntl();\n  return (data, opened, selectedRows = []) =>\n    data.reduce((acc, { resourceDefinitions, permission, modified }) => {\n      const [appName, type, operation] = permission.split(':');\n      return [\n        ...acc,\n        {\n          uuid: permission,\n          cells: [\n            appName,\n            type,\n            operation,\n            ...(showResDefinitions\n              ? [\n                  permission.includes('cost-management') && resourceDefinitions.length > 0 ? (\n                    <Fragment key=\"resource-definitions\">\n                      <Link to={`/roles/detail/${uuid}/permission/${permission}`}>\n                        {flatten(resourceDefinitions.map((definition) => definition.attributeFilter.value)).length}\n                      </Link>\n                    </Fragment>\n                  ) : (\n                    <span className=\"rbac-c-text__disabled\">{intl.formatMessage(messages.notApplicable)}</span>\n                  ),\n                ]\n              : []),\n            <Fragment key={`${appName}-modified`}>\n              <DateFormat date={modified} type={getDateFormat(modified)} />\n            </Fragment>,\n          ],\n          selected: Boolean(selectedRows?.find(({ uuid }) => uuid === permission)),\n        },\n      ];\n    }, []);\n};\n\nexport const rolePermissionsReducerInitialState = {\n  pagination: defaultSettings,\n  selectedPermissions: [],\n  showRemoveModal: false,\n  confirmDelete: () => null,\n  deleteInfo: {},\n  filters: {\n    applications: [],\n    resources: [],\n    operations: [],\n  },\n  isToggled: false,\n  resources: [],\n  operations: [],\n};\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SELECT_PERMISSIONS = 'SELECT_PERMISSIONS';\nexport const SHOW_REMOVE_MODAL = 'SHOW_REMOVE_MODAL';\nexport const SUBMIT_REMOVE_MODAL = 'SUBMIT_REMOVE_MODAL';\nexport const INITIATE_REMOVE_PERMISSION = 'INITIATE_REMOVE_PERMISSION';\nexport const SET_FILTERS = 'SET_FILTERS';\nexport const SET_TOGGLED = 'SET_TOGGLED';\nexport const SET_FILTER_OPTIONS = 'SET_FILTER_OPTIONS';\nexport const INITIALIZE_ROLE = 'INITIALIZE_ROLE';\nconst reducerHandlers = {\n  [SET_PAGINATION]: (state, pagination) => ({ ...state, pagination: { ...state.pagination, ...pagination } }),\n  [SELECT_PERMISSIONS]: (state, { selection }) => ({ ...state, selectedPermissions: selection }),\n  [SHOW_REMOVE_MODAL]: (state, { showRemoveModal }) => ({ ...state, showRemoveModal }),\n  [SUBMIT_REMOVE_MODAL]: (state) => ({ ...state, selectedPermissions: [], showRemoveModal: false }),\n  [INITIATE_REMOVE_PERMISSION]: (state, { confirmDelete, deleteInfo }) => ({ ...state, confirmDelete, showRemoveModal: true, deleteInfo }),\n  [SET_FILTERS]: (state, filters) => ({ ...state, filters: { ...state.filters, ...filters } }),\n  [SET_TOGGLED]: (state) => ({ ...state, isToggled: !state.isToggled }),\n  [INITIALIZE_ROLE]: (state, { count, ...options }) => ({ ...state, ...options, pagination: { ...state.pagination, count } }),\n};\nexport const rolePermissionsReducer = (state, { type, ...action }) => {\n  if (!reducerHandlers[type]) {\n    return state;\n  }\n\n  return reducerHandlers[type](state, action);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, Button, EmptyState, EmptyStateIcon, EmptyStateBody } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { fetchRole } from '../../../redux/actions/role-actions.js';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRolePermissionSuccess = ({ currentRoleID }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <EmptyState>\n        <EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />\n        <Title headingLevel=\"h4\" size=\"lg\">\n          {intl.formatMessage(messages.permissionsAddedSuccessfully)}\n        </Title>\n        <EmptyStateBody></EmptyStateBody>\n        <Link to={`/roles/detail/${currentRoleID}`}>\n          <Button onClick={() => dispatch(fetchRole(currentRoleID))}>{intl.formatMessage(messages.exit)}</Button>\n        </Link>\n      </EmptyState>\n    </>\n  );\n};\n\nexport default AddRolePermissionSuccess;\n\nAddRolePermissionSuccess.propTypes = {\n  currentRoleID: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { AddRolePermissionWizardContext } from './add-role-permission-wizard';\nimport '../add-role/review.scss';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting } = useContext(AddRolePermissionWizardContext);\n\n  if (submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  return <div className=\"rbac\">{[[{ ...formFields?.[0]?.[0] }]]}</div>;\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React, { useState, useEffect, useRef, createContext, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AddRolePermissionSummaryContent from './add-role-permissions-summary-content';\nimport AddRolePermissionSuccess from './add-role-permission-success';\nimport PropTypes from 'prop-types';\nimport { WarningModal } from '../../common/warningModal';\nimport { useHistory } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { updateRole } from '../../../redux/actions/role-actions.js';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport AddPermissionsTable from '../add-role/add-permissions';\nimport CostResources from '../add-role/cost-resources';\nimport { schemaBuilder } from './schema';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nexport const mapperExtension = {\n  'add-permissions-table': AddPermissionsTable,\n  'cost-resources': CostResources,\n  review: AddRolePermissionSummaryContent,\n};\n\nexport const AddRolePermissionWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst AddRolePermissionWizard = ({ role }) => {\n  const intl = useIntl();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [currentRoleID, setCurrentRoleID] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const container = useRef(document.createElement('div'));\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n  const schema = useMemo(() => schemaBuilder(container.current), []);\n\n  useEffect(() => {\n    setCurrentRoleID(role.uuid);\n  });\n\n  useEffect(() => {\n    container.current.hidden = cancelWarningVisible;\n  }, [cancelWarningVisible]);\n\n  const handleWizardCancel = () => {\n    setCancelWarningVisible(true);\n  };\n\n  const handleConfirmCancel = () => {\n    history.push(`/roles/detail/${role.uuid}`);\n  };\n\n  const onSubmit = async (formData) => {\n    const { 'add-permissions-table': selectedPermissions, 'cost-resources': resourceDefinitions } = formData;\n\n    const selectedPermissionIds = [...role.access.map((record) => record.permission), ...selectedPermissions.map((record) => record.uuid)];\n    const roleData = {\n      ...role,\n      access: [\n        ...selectedPermissions.reduce(\n          (acc, { uuid: permission, requires }) => [\n            ...acc,\n            ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => ({\n              permission,\n              resourceDefinitions: resourceDefinitions?.find((r) => r.permission === permission)\n                ? [\n                    {\n                      attributeFilter: {\n                        key: `cost-management.${permission.split(':')[1]}`,\n                        operation: 'in',\n                        value: resourceDefinitions?.find((r) => r.permission === permission).resources,\n                      },\n                    },\n                  ]\n                : [],\n            })),\n          ],\n          role.access\n        ),\n      ],\n      accessCount: role.accessCount + selectedPermissions.length,\n    };\n\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    dispatch(updateRole(currentRoleID, roleData))\n      .then(() => setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true })))\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        history.push(`/roles/detail/${role.uuid}`);\n      });\n  };\n\n  return (\n    <AddRolePermissionWizardContext.Provider\n      value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm, rolePermissions: role.access }}\n    >\n      <WarningModal\n        type={intl.formatMessage(messages.permission)}\n        isOpen={cancelWarningVisible}\n        onModalCancel={() => setCancelWarningVisible(false)}\n        onConfirmCancel={handleConfirmCancel}\n      />\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.addPermissions)}\n            isOpen\n            steps={[\n              {\n                name: 'success',\n                component: new AddRolePermissionSuccess({ currentRoleID }),\n                isFinishedStep: true,\n              },\n            ]}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          container={container}\n          schema={schema}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-uuid': role.uuid,\n            'role-type': 'create',\n            'role-name': role.display_name,\n            'role-description': role.description,\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            if (values && values['add-permissions-table']?.length > 0) {\n              handleWizardCancel();\n            } else {\n              handleConfirmCancel();\n            }\n          }}\n        />\n      )}\n    </AddRolePermissionWizardContext.Provider>\n  );\n};\n\nAddRolePermissionWizard.defaultProps = {\n  role: {},\n};\n\nAddRolePermissionWizard.propTypes = {\n  role: PropTypes.object,\n};\n\nexport default AddRolePermissionWizard;\n","import React from 'react';\nimport { Grid, GridItem, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRolePermissionSummaryContent = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'add-permissions-table': selectedPermissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n  } = formOptions.getState().values;\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <TextContent>\n          <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-sm\">\n            {intl.formatMessage(messages.reviewDetails)}\n          </Title>\n        </TextContent>\n      </StackItem>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <Grid hasGutter>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleName)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{name}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleDescription)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{description}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.addedPermissions)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <TextContent component={TextVariants.p}>\n              {selectedPermissions.map((permission, index) => (\n                <Text key={index}> {permission.uuid} </Text>\n              ))}\n            </TextContent>\n          </GridItem>\n          {hasCostResources && (\n            <React.Fragment>\n              <GridItem span={3}>\n                <Text className=\"pf-c-title\" component={TextVariants.h6}>\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem span={9}>\n                <TextContent component={TextVariants.p}>\n                  {resourceDefinitions.map(({ resources }) => resources.map((resource, index) => <Text key={index}> {resource} </Text>))}\n                </TextContent>\n              </GridItem>\n            </React.Fragment>\n          )}\n        </Grid>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default AddRolePermissionSummaryContent;\n","import React from 'react';\nimport AddPermissionTemplate from '../add-role/add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const schemaBuilder = (container) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.addPermissions),\n        container,\n        fields: [\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) =>\n              values &&\n              values['add-permissions-table'] &&\n              values['add-permissions-table'].some(({ uuid }) => uuid.split(':')[0].includes('cost-management'))\n                ? 'cost-resources-definition'\n                : 'review',\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) => (value.every((p) => p.resources.length > 0) ? undefined : intl.formatMessage(messages.assignAtLeastOneResource)),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n","import React, { useEffect, useReducer, useState } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarViewOld } from '../../presentational-components/shared/table-toolbar-view-old';\nimport {\n  createRows,\n  INITIALIZE_ROLE,\n  INITIATE_REMOVE_PERMISSION,\n  rolePermissionsReducer,\n  rolePermissionsReducerInitialState,\n  SELECT_PERMISSIONS,\n  SET_FILTERS,\n  SET_PAGINATION,\n  SET_TOGGLED,\n  SHOW_REMOVE_MODAL,\n  SUBMIT_REMOVE_MODAL,\n} from './role-permissions-table-helpers';\nimport { cellWidth } from '@patternfly/react-table';\nimport './role-permissions.scss';\nimport { removeRolePermissions, fetchRole } from '../../redux/actions/role-actions';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { info } from '@patternfly/react-table';\nimport AddRolePermissionWizard from './add-role-permissions/add-role-permission-wizard';\nimport paths from '../../utilities/pathnames';\nimport RemoveModal from '../../presentational-components/shared/RemoveModal';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\n\nconst maxFilterItems = 10;\n\nconst removeModalText = (permissions, role, plural) => {\n  return (\n    <FormattedMessage\n      {...(plural ? messages.permissionsWillNotBeGrantedThroughRole : messages.permissionWillNotBeGrantedThroughRole)}\n      values={{\n        b: (text) => <b>{text}</b>,\n        ...(plural\n          ? {\n              permissions,\n            }\n          : {\n              permission: permissions,\n            }),\n        role: role.name,\n      }}\n    />\n  );\n};\n\nconst Permissions = ({ cantAddPermissions }) => {\n  const intl = useIntl();\n  const { role, isRecordLoading } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const history = useHistory();\n  const [\n    { pagination, selectedPermissions, showRemoveModal, confirmDelete, deleteInfo, filters, isToggled, resources, operations },\n    internalDispatch,\n  ] = useReducer(rolePermissionsReducer, rolePermissionsReducerInitialState);\n\n  const [showResourceDefinitions, setShowResourceDefinitions] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const columns = [\n    { title: intl.formatMessage(messages.application) },\n    { title: intl.formatMessage(messages.resourceType) },\n    { title: intl.formatMessage(messages.operation) },\n    {\n      title: intl.formatMessage(messages.resourceDefinitions),\n      transforms: [\n        info({\n          popover: intl.formatMessage(messages.resourceDefinitionsApplyToCost),\n          ariaLabel: intl.formatMessage(messages.resourceDefinitionsApplyToCost),\n        }),\n      ],\n    },\n    { title: intl.formatMessage(messages.lastCommit), transforms: [cellWidth(15)] },\n  ];\n\n  const setCheckedItems = (newSelection) => {\n    internalDispatch({ type: SELECT_PERMISSIONS, selection: newSelection(selectedPermissions).map(({ uuid }) => ({ uuid })) });\n  };\n  const emptyPropsDescription = cantAddPermissions\n    ? ['']\n    : ['To configure user access to applications,', 'add at least one permission to this role.', ''];\n\n  useEffect(() => {\n    if (Object.keys(role).length > 0) {\n      const { resources, operations } = Object.entries(\n        role.access.reduce(\n          ({ resources, operations }, { permission }) => {\n            const [, resource, operation] = permission.split(':');\n            return {\n              resources: resources.includes(resource) ? resources : [...resources, resource],\n              operations: operations.includes(operation) ? operations : [...operations, operation],\n            };\n          },\n          { resources: [], operations: [] }\n        )\n      ).reduce((acc, [key, value]) => ({ ...acc, [key]: value.map((item) => ({ label: item, value: item })) }), {});\n      internalDispatch({ type: INITIALIZE_ROLE, resources, operations, count: role.access ? role.access.length : 0 });\n    }\n\n    setShowResourceDefinitions(role?.access?.find((a) => a.permission.includes('cost-management')));\n  }, [role]);\n\n  const filteredRows =\n    role && role.access\n      ? (role.access || [])\n          .filter(({ permission }) => {\n            const [application, resource, operation] = permission.split(':');\n            const { applications, resources, operations } = filters;\n            return (\n              (applications.length > 0 ? applications.includes(application) : true) &&\n              (resources.length > 0 ? resources.includes(resource) : true) &&\n              (operations.length > 0 ? operations.includes(operation) : true)\n            );\n          })\n          .map((acc) => ({ uuid: acc.permission, ...acc, modified: role.modified }))\n      : [];\n\n  const removePermissions = (permissions) => {\n    const permissionsToRemove = permissions.reduce((acc, curr) => [...acc, curr.uuid], []);\n    return dispatch(removeRolePermissions(role, permissionsToRemove)).then(() => {\n      dispatch(fetchRole(role.uuid));\n      internalDispatch({ type: SELECT_PERMISSIONS, selection: [] });\n    });\n  };\n\n  const actionResolver = () => [\n    {\n      title: intl.formatMessage(messages.remove),\n      onClick: (_event, _rowId, permission) =>\n        internalDispatch({\n          type: INITIATE_REMOVE_PERMISSION,\n          confirmDelete: () => removePermissions([permission]),\n          deleteInfo: {\n            title: intl.formatMessage(messages.removePermissionQuestion),\n            text: removeModalText(permission.uuid, role, false),\n            confirmButtonLabel: intl.formatMessage(messages.removePermission),\n          },\n        }),\n    },\n  ];\n\n  const toolbarButtons = () =>\n    cantAddPermissions\n      ? []\n      : [\n          <Link to={`/roles/detail/${role.uuid}/role-add-permission`} key=\"role-add-permission\" className=\"rbac-m-hide-on-sm\">\n            <Button variant=\"primary\" aria-label=\"Add Permission\">\n              {intl.formatMessage(messages.addPermissions)}\n            </Button>\n          </Link>,\n          {\n            label: intl.formatMessage(messages.addPermission),\n            props: {\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => {\n              history.push(`/roles/detail/${role.uuid}/role-add-permission`);\n            },\n          },\n          {\n            label: intl.formatMessage(messages.remove),\n            props: {\n              isDisabled: !selectedPermissions.length > 0,\n            },\n            onClick: () => {\n              const multiplePermissionsSelected = selectedPermissions.length > 1;\n              internalDispatch({\n                type: INITIATE_REMOVE_PERMISSION,\n                confirmDelete: () => removePermissions([...selectedPermissions]),\n                deleteInfo: {\n                  title: intl.formatMessage(multiplePermissionsSelected ? messages.removePermissionsQuestion : messages.removePermissionQuestion),\n                  text: removeModalText(\n                    multiplePermissionsSelected ? selectedPermissions.length : selectedPermissions[0].uuid,\n                    role,\n                    selectedPermissions.length > 1\n                  ),\n                  confirmButtonLabel: intl.formatMessage(multiplePermissionsSelected ? messages.removePermissions : messages.removePermission),\n                },\n              });\n            },\n          },\n        ];\n\n  const routes = () => (\n    <Route exact path={paths['role-add-permission'].path}>\n      <AddRolePermissionWizard isOpen={true} role={role} />\n    </Route>\n  );\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const emptyItem = {\n    label: <div> {intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const sanitizedRole = {\n    access: [],\n    applications: [],\n    ...role,\n  };\n\n  const filterItemOverflow = Object.values({ applications: sanitizedRole.applications, operations, resources }).find(\n    (value) => value.length > maxFilterItems\n  );\n\n  return (\n    <section className=\"pf-c-page__main-section rbac-c-role__permissions\">\n      {showRemoveModal && (\n        <RemoveModal\n          text={deleteInfo.text}\n          title={deleteInfo.title}\n          isOpen={showRemoveModal}\n          confirmButtonLabel={deleteInfo.confirmButtonLabel}\n          onClose={() => internalDispatch({ type: SHOW_REMOVE_MODAL, showRemoveModal: false })}\n          onSubmit={() => {\n            confirmDelete();\n            internalDispatch({ type: SUBMIT_REMOVE_MODAL });\n          }}\n        />\n      )}\n      <TableToolbarViewOld\n        columns={showResourceDefinitions ? columns : columns.filter((c) => c.title !== intl.formatMessage(messages.resourceDefinitions))}\n        createRows={createRows(showResourceDefinitions, role?.uuid)}\n        actionResolver={role.system ? undefined : actionResolver}\n        data={filteredRows.slice(pagination.offset, pagination.offset + pagination.limit)}\n        filterValue=\"\"\n        ouiaId=\"role-permissions-table\"\n        fetchData={({ limit, offset }) => internalDispatch({ type: SET_PAGINATION, limit, offset })}\n        isSelectable={!role.system}\n        setCheckedItems={setCheckedItems}\n        checkedRows={selectedPermissions}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                internalDispatch({ type: SET_TOGGLED });\n              }\n            : undefined\n        }\n        setFilterValue={({ applications, resources, operations }) => {\n          internalDispatch({\n            type: SET_FILTERS,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        toolbarButtons={toolbarButtons}\n        isLoading={isRecordLoading}\n        pagination={{\n          ...pagination,\n          count: filteredRows.length,\n        }}\n        titlePlural={intl.formatMessage(messages.permissions)}\n        titleSingular={intl.formatMessage(messages.permission)}\n        routes={routes}\n        emptyProps={{\n          title: intl.formatMessage(messages.noRolePermissions),\n          description: emptyPropsDescription,\n        }}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications.length === 0 ? '' : filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: sanitizedRole.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  sanitizedRole.applications.length > 0\n                    ? sanitizedRole.applications.slice(0, isToggled ? undefined : maxFilterItems).map((item) => ({ label: item, value: item }))\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources.length === 0 ? '' : filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: resources.length > 0 ? 'checkbox' : 'plain',\n                items: resources.length > 0 ? resources.slice(0, isToggled ? undefined : maxFilterItems) : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations.length === 0 ? '' : filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: operations.length > 0 ? 'checkbox' : 'plain',\n                items: operations.length > 0 ? operations.slice(0, isToggled ? undefined : maxFilterItems) : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        tableId=\"role-permissions\"\n      />\n    </section>\n  );\n};\n\nPermissions.propTypes = {\n  cantAddPermissions: PropTypes.bool,\n};\n\nexport default Permissions;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Route, useHistory, useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Button, Dropdown, DropdownItem, KebabToggle, Level, LevelItem, Text, TextContent } from '@patternfly/react-core';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport pathnames from '../../utilities/pathnames';\nimport { fetchRole, fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup, fetchRolesForGroup, fetchSystemGroup } from '../../redux/actions/group-actions';\nimport { ToolbarTitlePlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport RemoveRoleModal from './remove-role-modal';\nimport EditRoleModal from './edit-role-modal';\nimport EmptyWithAction from '../../presentational-components/shared/empty-state';\nimport RbacBreadcrumbs from '../../presentational-components/shared/breadcrumbs';\nimport { BAD_UUID, getBackRoute } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role.scss';\n\nconst Role = ({ onDelete }) => {\n  const intl = useIntl();\n  const history = useHistory();\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [isNonPermissionAddingRole, setIsNonPermissionAddingRole] = useState(false);\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading, rolesPagination, rolesFilters, groupsPagination, groupsFilters, systemGroupUuid } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      isRecordLoading: state.roleReducer.isRecordLoading,\n      ...(groupUuid && { group: state.groupReducer.selectedGroup }),\n      systemGroupUuid: state.groupReducer.systemGroup?.uuid,\n      rolesPagination: state.roleReducer?.roles?.pagination || defaultSettings,\n      rolesFilters: state.roleReducer?.roles?.filters || {},\n      groupsPagination: state.groupReducer?.groups?.pagination || defaultSettings,\n      groupsFilters: state.groupReducer?.groups?.filters || {},\n    }),\n    shallowEqual\n  );\n\n  const roleExists = useSelector((state) => {\n    const {\n      roleReducer: { error },\n    } = state;\n    return error !== BAD_UUID;\n  });\n\n  const groupExists = useSelector((state) => {\n    const {\n      groupReducer: { error },\n    } = state;\n    return error !== BAD_UUID;\n  });\n\n  const dispatch = useDispatch();\n  const fetchData = () => {\n    dispatch(fetchRole(uuid));\n    if (groupUuid) {\n      if (groupUuid !== 'default-access') {\n        dispatch(fetchGroup(groupUuid));\n      } else {\n        if (systemGroupUuid) {\n          dispatch(fetchRolesForGroup(systemGroupUuid, {}));\n          insights.chrome.appObjectId(systemGroupUuid);\n          return () => insights.chrome.appObjectId(undefined);\n        } else {\n          dispatch(fetchSystemGroup());\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    insights.chrome.appObjectId(uuid);\n    return () => insights.chrome.appObjectId(undefined);\n  }, [uuid, groupUuid, systemGroupUuid]);\n\n  useEffect(() => {\n    if (role?.accessCount === 0 && role?.external_tenant !== '' && role?.external_role_id !== '' && role?.system) {\n      setIsNonPermissionAddingRole(true);\n    }\n  }, [role]);\n\n  const breadcrumbsList = () => [\n    groupUuid\n      ? {\n          title: intl.formatMessage(messages.groups),\n          to: getBackRoute(pathnames.groups.path, groupsPagination, groupsFilters),\n        }\n      : {\n          title: intl.formatMessage(messages.roles),\n          to: getBackRoute(pathnames.roles.path, rolesPagination, rolesFilters),\n        },\n\n    ...(groupExists && groupUuid && (groupUuid === 'default-access' ? systemGroupUuid : groupExists)\n      ? group\n        ? [\n            {\n              title: group && group.name,\n              to: `/groups/detail/${groupUuid}/roles`,\n              isLoading: group && group.loaded,\n            },\n          ]\n        : [undefined]\n      : groupExists || !groupUuid\n      ? []\n      : [{ title: intl.formatMessage(messages.invalidGroup), isActive: true }]),\n\n    ...(groupExists || !groupUuid\n      ? [\n          {\n            title: isRecordLoading ? undefined : roleExists ? role?.display_name || role?.name : intl.formatMessage(messages.invalidRole),\n            isActive: true,\n          },\n        ]\n      : []),\n  ];\n\n  const title = !isRecordLoading && role ? role.display_name || role.name : undefined;\n  const description = !isRecordLoading && role ? role.description : undefined;\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <Link onClick={() => setDropdownOpen(false)} to={pathnames['role-detail-edit'].path.replace(':id', uuid)}>\n          {intl.formatMessage(messages.edit)}\n        </Link>\n      }\n      key=\"edit-role\"\n    />,\n    <DropdownItem\n      component={\n        <Link onClick={onDelete} to={pathnames['role-detail-remove'].path.replace(':id', uuid)}>\n          {intl.formatMessage(messages.delete)}\n        </Link>\n      }\n      className=\"rbac-c-role__action\"\n      key=\"delete-role\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      {(groupExists || !groupUuid) && roleExists ? (\n        <Fragment>\n          <TopToolbar breadcrumbs={breadcrumbsList()}>\n            <Level>\n              <LevelItem>\n                <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n              </LevelItem>\n              {!isRecordLoading && role && !role.system && (\n                <LevelItem>\n                  <Dropdown\n                    ouiaId=\"role-title-actions-dropdown\"\n                    toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"role-actions-dropdown\" />}\n                    isOpen={isDropdownOpen}\n                    isPlain\n                    position=\"right\"\n                    dropdownItems={dropdownItems}\n                  />\n                </LevelItem>\n              )}\n            </Level>\n            {description && (\n              <TextContent className=\"rbac-page-header__description\">\n                <Text component=\"p\">{description}</Text>\n              </TextContent>\n            )}\n          </TopToolbar>\n          {isRecordLoading || !role ? <ListLoader /> : <Permissions cantAddPermissions={isNonPermissionAddingRole} />}\n          <Route path={pathnames['role-detail-remove'].path}>\n            {!isRecordLoading && (\n              <RemoveRoleModal\n                afterSubmit={() => {\n                  dispatch(fetchRolesWithPolicies({ ...rolesPagination, offset: 0, filters: rolesFilters, inModal: false }));\n                }}\n                cancelRoute={pathnames['role-detail'].path.replace(':uuid', uuid)}\n                submitRoute={getBackRoute(pathnames.roles.path, { ...rolesPagination, offset: 0 }, rolesFilters)}\n                routeMatch={pathnames['role-detail-remove'].path}\n              />\n            )}\n          </Route>\n          <Route path={pathnames['role-detail-edit'].path}>\n            {!isRecordLoading && (\n              <EditRoleModal\n                afterSubmit={fetchData}\n                cancelRoute={pathnames['role-detail'].path.replace(':uuid', uuid)}\n                routeMatch={pathnames['role-detail-edit'].path}\n              />\n            )}\n          </Route>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <section className=\"pf-c-page__main-breadcrumb pf-u-pb-md\">\n            <RbacBreadcrumbs {...breadcrumbsList()} />\n          </section>\n          <EmptyWithAction\n            title={`${groupExists ? 'Role' : 'Group'} not found`}\n            description={[`${groupExists ? 'Role' : 'Group'} with ID ${groupExists ? uuid : groupUuid} does not exist.`]}\n            actions={[\n              <Button\n                key=\"back-button\"\n                className=\"pf-u-mt-xl\"\n                ouiaId=\"back-button\"\n                variant=\"primary\"\n                aria-label=\"Back to previous page\"\n                onClick={() => history.goBack()}\n              >\n                {intl.formatMessage(messages.backToPreviousPage)}\n              </Button>,\n            ]}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nRole.propTypes = {\n  onDelete: PropTypes.func,\n};\n\nexport default Role;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction: (...args: any[]) => Promise<any>, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"names":["costApi","getCostApi","getResourceDefinitions","apiProps","getResourceTypes","getResource","type","ActionTypes","payload","CostHelper","MODAL_FORM_IDENTIFIER","CustomFormWrapper","props","id","CustomButtons","saveLabel","cancelLabel","onCancel","useFormApi","pristine","invalid","validating","submitting","className","Button","ouiaId","variant","form","isDisabled","onClick","propTypes","PropTypes","defaultProps","ModalFormTemplate","ModalProps","alert","Modal","footer","showFormControls","FormWrapper","Select","input","options","isReadOnly","isRequired","rest","FormSelect","inputValue","intl","useIntl","selectOptions","find","undefined","value","label","formatMessage","messages","createOptions","map","FormSelectOption","key","toString","FieldProvider","Pf4SelectWrapper","helperText","meta","description","hideLabel","error","showError","touched","FormGroup","fieldId","isValid","helperTextInvalid","TextContent","Text","component","TextVariants","componentType","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","noChanges","ActionGroup","formProps","subscription","FormRenderer","formTemplateProps","componentMapper","componentTypes","TextField","Textarea","FormTemplate","AddPermissionTemplate","formFields","formOptions","useState","getState","values","selectedPermissions","setSelectedPermissions","alertClosed","setAlertClosed","notAllowedBasePermissions","unresolvedSplats","applications","filter","app","uuid","includes","addPermissions","length","ChipGroup","categoryName","reduce","acc","i","Chip","color","isTruncated","p","Title","headingLevel","size","Popover","headerContent","bodyContent","Alert","isInline","title","join","actionClose","AlertActionCloseButton","onClose","accessApi","getPermissionApi","listPermissions","limit","offset","orderBy","application","resourceType","verb","permission","excludeGlobals","excludeRoles","allowedOnly","listPermissionOptions","field","fieldToAction","resource_type","DisabledRowWrapper","row","disableSelection","Tooltip","content","disabledContent","exitDelay","entryDelay","RowWrapper","selector","permissionReducer","isLoading","operation","resource","expandSplats","isLoadingExpandSplats","roleReducer","isRecordLoading","selectedRole","resourceTypes","costReducer","permissions","data","requires","pagination","baseRole","applicationOptions","resourceOptions","operationOptions","expandedPermissions","AddPermissionsTable","dispatch","useDispatch","hasAccess","usePermissions","columns","fetchData","existingRoleId","exclude_roles","allowed_only","exclude_globals","PermissionsHelper","fetchOptions","useSelector","shallowEqual","useFieldApi","resources","operations","filters","setFilters","roleType","isToggled","setIsToggled","filterBy","setFilterBy","setValue","getResourceType","r","split","debouncedGetApplicationOptions","useCallback","debouncePromise","debouncedGetResourceOptions","debouncedGetOperationOptions","useEffect","baseRoleUuid","fetchRole","change","onChange","notAllowed","basePermissions","access","item","push","Set","patterns","replace","count","some","f","match","calculateSelected","curr","preparedFilterItems","res","op","emptyItem","filterItemOverflow","Object","keys","isSelectable","isCompact","borders","createRows","cells","selected","Boolean","href","filterValue","noData","noDataDescription","setFilterValue","checkedRows","setCheckedItems","newSelection","newSelected","titlePlural","toLowerCase","titleSingular","showMoreTitle","onFilter","onShowMore","e","placeholder","groups","items","slice","isFilterable","rowWrapper","tableId","loadingResources","isLoadingResources","reducer","state","action","prevState","isOpen","selection","option","filteredOptions","filtervalue","useReducer","dispatchLocaly","path","resourceDefinitions","entries","Grid","hasGutter","GridItem","md","sm","SelectVariant","typeAheadAriaLabel","onToggle","onSelect","event","selectAll","onClear","selections","target","placeholderText","hasInlineFilter","SelectOption","index","EditRoleModal","routeMatch","cancelRoute","submitRoute","afterSubmit","isMounted","useRef","current","useIsMounted","useHistory","useRouteMatch","params","role","roleSelector","initialValues","setInitialValues","then","validationPromise","name","idKey","fetchRoles","display_name","Promise","reject","number","uniqueNameValidator","asyncDebounce","validatorMapper","addNotification","dismissDelay","schema","fields","validate","validatorTypes","threshold","createEditRoleSchema","onSubmit","patchRole","pathname","search","hash","RemoveRoleModal","roles","roleName","roleNameSelector","setIsDisabled","internalRoleName","setInternalRoleName","errors","detail","header","Split","SplitItem","style","fill","actions","all","removeRole","strong","text","Checkbox","isChecked","prev","roleId","showResDefinitions","opened","selectedRows","modified","appName","Fragment","Link","to","flatten","definition","attributeFilter","DateFormat","date","getDateFormat","rolePermissionsReducerInitialState","defaultSettings","showRemoveModal","confirmDelete","deleteInfo","SET_PAGINATION","SELECT_PERMISSIONS","SHOW_REMOVE_MODAL","SUBMIT_REMOVE_MODAL","INITIATE_REMOVE_PERMISSION","SET_FILTERS","SET_TOGGLED","INITIALIZE_ROLE","reducerHandlers","rolePermissionsReducer","AddRolePermissionSuccess","currentRoleID","EmptyState","EmptyStateIcon","icon","CheckCircleIcon","EmptyStateBody","ReviewTemplate","useContext","AddRolePermissionWizardContext","Bullseye","Spinner","mapperExtension","CostResources","review","hasCostResources","Stack","StackItem","span","createContext","success","AddRolePermissionWizard","cancelWarningVisible","setCancelWarningVisible","setCurrentRoleID","history","hideForm","wizardContextValue","setWizardContextValue","container","document","createElement","useMemo","cache","createIntlCache","createIntl","locale","providerMessages","isDynamic","inModal","showTitles","crossroads","StepTemplate","nextStep","every","schemaBuilder","hidden","handleConfirmCancel","formData","selectedPermissionIds","record","roleData","require","accessCount","updateRole","Provider","setWizardError","setWizardSuccess","setHideForm","rolePermissions","onModalCancel","onConfirmCancel","Wizard","steps","isFinishedStep","removeModalText","plural","b","Permissions","cantAddPermissions","internalDispatch","showResourceDefinitions","setShowResourceDefinitions","transforms","info","popover","ariaLabel","cellWidth","emptyPropsDescription","a","filteredRows","removePermissions","permissionsToRemove","removeRolePermissions","sanitizedRole","RemoveModal","confirmButtonLabel","c","actionResolver","system","_event","_rowId","toolbarButtons","multiplePermissionsSelected","routes","Route","exact","paths","emptyProps","Role","onDelete","isDropdownOpen","setDropdownOpen","isNonPermissionAddingRole","setIsNonPermissionAddingRole","useParams","groupUuid","group","groupReducer","selectedGroup","systemGroupUuid","systemGroup","rolesPagination","rolesFilters","groupsPagination","groupsFilters","roleExists","BAD_UUID","groupExists","fetchGroup","fetchRolesForGroup","insights","chrome","appObjectId","fetchSystemGroup","external_tenant","external_role_id","breadcrumbsList","getBackRoute","pathnames","loaded","isActive","dropdownItems","DropdownItem","goBack","breadcrumbs","Level","LevelItem","PageHeaderTitle","Dropdown","toggle","KebabToggle","isPlain","position","fetchRolesWithPolicies","asyncFunction","debounceTime","onlyResolvesLast"],"sourceRoot":""}
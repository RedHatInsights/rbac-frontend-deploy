{"version":3,"file":"js/4124.1666597967899.ce726f4522aa7059b46a.js","mappings":"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","sources":["webpack:///./src/presentational-components/shared/empty-state.js","webpack:///./src/presentational-components/shared/table-toolbar-view-old.js","webpack:///./src/presentational-components/shared/toolbar.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }) => (\n  <EmptyState variant={EmptyStateVariant.small} {...props}>\n    <EmptyStateIcon icon={icon || SearchIcon} />\n    <Title headingLevel=\"h4\" size=\"lg\">\n      {title}\n    </Title>\n    <EmptyStateBody className=\"pf-u-mb-md\">\n      {description.map((text, key) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    {actions}\n  </EmptyState>\n);\n\nEmptyWithAction.propTypes = {\n  icon: PropTypes.func,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n  className: PropTypes.string,\n};\n\nexport default EmptyWithAction;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStatePrimary } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarViewOld = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  isCollapsible,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n}) => {\n  const intl = useIntl();\n  const [opened, openRow] = useState({});\n  const [sortByState, setSortByState] = useState({ index: undefined, direction: undefined });\n  useEffect(() => {\n    setSortByState({\n      ...sortBy,\n      ...(sortByState.index !== undefined && sortByState),\n    });\n  }, [sortBy]);\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) =>\n    openRow((opened) => ({\n      ...opened,\n      [uuid]: isOpen,\n    }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStatePrimary key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStatePrimary>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse),\n    },\n  });\n\n  const renderTable = () => {\n    const selectColumnOffset = isSelectable && data?.length > 0;\n    const sortByIndex = Math.min((sortByState?.index || selectColumnOffset) - selectColumnOffset, columns?.length - 1);\n    const sortBy =\n      (sortByState.index !== undefined &&\n        sortByIndex >= 0 &&\n        sortByIndex < columns.length &&\n        `${sortByState.direction === 'desc' ? '-' : ''}${columns[sortByIndex].key}`) ||\n      undefined;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={sortBy}\n          pagination={pagination}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n        />\n        {isLoading ? (\n          <ListLoader />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isCollapsible && { onCollapse })}\n            {...(isSelectable &&\n              rows.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows.length > 0 && { actionResolver })}\n            className={rows.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortByState}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction) => {\n              const sortByIndex = Math.min((index || selectColumnOffset) - selectColumnOffset, columns?.length - 1);\n              const orderBy = `${direction === 'desc' ? '-' : ''}${columns[sortByIndex].key}`;\n              setSortByState({ index, direction });\n              filters && filters.length > 0\n                ? fetchData({\n                    ...pagination,\n                    offset: 0,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    orderBy,\n                  })\n                : fetchData({\n                    ...pagination,\n                    offset: 0,\n                    name: filterValue,\n                    orderBy,\n                  });\n            }}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy)} variant=\"bottom\" dropDirection=\"up\" />}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows.length === 0 && filterValue.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarViewOld.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarViewOld.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '', sortBy = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = [], setCheckedItems = () => undefined, data = [], tableId) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, { length: data.length }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items }) => ({\n            label: label || firstUpperCase(key),\n            type,\n            filterValues: {\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                );\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  );\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy\n    )}\n    useMobileLayout\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n"],"names":["EmptyWithAction","title","icon","description","actions","props","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","SearchIcon","Title","headingLevel","size","EmptyStateBody","className","map","text","key","propTypes","PropTypes","TableToolbarViewOld","isCompact","createRows","borders","columns","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","fetchData","setCheckedItems","isCollapsible","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","value","sortBy","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","intl","useIntl","useState","opened","openRow","index","undefined","direction","sortByState","setSortByState","useEffect","rows","onCollapse","_event","_index","isOpen","uuid","Fragment","length","every","formatMessage","messages","items","PlusCircleIcon","item","selectColumnOffset","sortByIndex","Math","min","Table","canSelectAll","toLowerCase","TableVariant","onSelect","_e","isSelected","_idx","name","cells","requires","selectedRows","fullWidth","EmptyStatePrimary","Button","onClick","offset","colSpan","Boolean","onSort","e","orderBy","reduce","acc","curr","TableHeader","TableBody","noBottom","Pagination","paginationBuilder","dropDirection","renderTable","Toolbar","directions","defaultProps","itemCount","count","perPage","limit","page","calculatePage","onSetPage","calculateOffset","perPageOptions","onPerPageSelect","bulkSelectBuilder","checked","calculateChecked","id","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","firstUpperCase","filterValues","filterBy","newFilter","Array","isArray","Object","keys","debouncedFetch","isDisabled","activeFiltersConfigBuilder","options","category","chips","filter","onDelete","isAll","deleted","filtersValue","setKeyValue","bulkSelect","filterConfig","useMobileLayout","actionsConfig","activeFiltersConfig","defaultSettings"],"sourceRoot":""}
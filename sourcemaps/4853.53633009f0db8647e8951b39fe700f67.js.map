{"version":3,"file":"js/4853.d1e0922e8ecca4c08ab9.js","mappings":"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","sources":["webpack:///./src/smart-components/common/review-step-buttons.js","webpack:///./src/smart-components/common/wizard-error.js","webpack:///./src/smart-components/role/add-role/validators.js","webpack:///./src/smart-components/role/add-role/review-template.js","webpack:///./src/smart-components/role/add-role/cost-resources-template.js","webpack:///./src/smart-components/role/add-role/add-role-success.js","webpack:///./src/smart-components/role/add-role/base-role-table.js","webpack:///./src/smart-components/role/add-role/review.js","webpack:///./src/smart-components/common/silent-error-boundary.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/add-role/type-selector.js","webpack:///./src/smart-components/role/add-role/schema.js"],"sourcesContent":["import { Button } from '@patternfly/react-core';\nimport React, { useContext, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst selectNext = (nextStep, getState) =>\n  ({\n    string: nextStep,\n    function: nextStep({ values: getState().values }),\n  }?.[typeof nextStep] || nextStep.stepMapper?.[get(getState().values, nextStep.when)]);\n\nconst NextButton = ({ nextStep, valid, handleNext, nextLabel, getState, handleSubmit, submitLabel }) => (\n  <Button\n    variant=\"primary\"\n    type=\"button\"\n    isDisabled={!valid || getState().validating}\n    onClick={() => (nextStep ? handleNext(selectNext(nextStep, getState)) : handleSubmit())}\n  >\n    {nextStep ? nextLabel : submitLabel}\n  </Button>\n);\n\nNextButton.propTypes = {\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n  handleSubmit: PropTypes.func.isRequired,\n  submitLabel: PropTypes.node.isRequired,\n  valid: PropTypes.bool,\n  handleNext: PropTypes.func.isRequired,\n  nextLabel: PropTypes.node.isRequired,\n  getState: PropTypes.func.isRequired,\n};\n\nconst ReviewStepButtons = ({ renderNextButton, disableBack, handlePrev, buttonLabels: { cancel, back }, context }) => {\n  const formOptions = useFormApi();\n  const { success, error, submitting } = useContext(context);\n  if (success || typeof error === 'undefined' || error || submitting) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {renderNextButton()}\n      <Button type=\"button\" variant=\"secondary\" isDisabled={disableBack} onClick={handlePrev}>\n        {back}\n      </Button>\n      <Button type=\"button\" variant=\"link\" onClick={formOptions.onCancel}>\n        {cancel}\n      </Button>\n    </Fragment>\n  );\n};\n\nReviewStepButtons.propTypes = {\n  disableBack: PropTypes.bool,\n  handlePrev: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  nextStep: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      when: PropTypes.string.isRequired,\n      stepMapper: PropTypes.object.isRequired,\n    }),\n    PropTypes.func,\n  ]),\n  buttonLabels: PropTypes.shape({\n    submit: PropTypes.node.isRequired,\n    cancel: PropTypes.node.isRequired,\n    back: PropTypes.node.isRequired,\n    next: PropTypes.node.isRequired,\n  }).isRequired,\n  context: PropTypes.object.isRequired,\n  renderNextButton: PropTypes.func,\n};\n\nexport default ReviewStepButtons;\n","import React, { useContext } from 'react';\nimport { Title, Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody } from '@patternfly/react-core';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\n\nconst WizardError = ({ context, title, text }) => {\n  const intl = useIntl();\n  const { jumpToStep } = useContext(WizardContext);\n  const { setWizardError } = useContext(context);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon color=\"red\" icon={ExclamationCircleIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{text}</EmptyStateBody>\n      <Button\n        onClick={() => {\n          setWizardError(undefined);\n          jumpToStep(0);\n        }}\n        variant=\"primary\"\n      >\n        {intl.formatMessage(messages.returnToStepNumber, { number: 1 })}\n      </Button>\n    </EmptyState>\n  );\n};\n\nWizardError.propTypes = {\n  context: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default WizardError;\n","import { useEffect } from 'react';\nimport { fetchRoles } from '../../../helpers/role/role-helper';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const asyncValidator = async (roleName) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  if (!roleName) {\n    return undefined;\n  }\n\n  const response = await fetchRoles({ limit: 10, offset: 0, name: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  // it has to be here twice because API is using AND instead of OR\n  const responseName = await fetchRoles({ limit: 10, offset: 0, displayName: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (response?.data?.length > 0 || responseName?.data?.length > 0) {\n    throw intl.formatMessage(messages.nameAlreadyTaken);\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce(asyncValidator);\n\nexport const ValidatorReset = ({ name }) => {\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setTimeout(() => formOptions.change(name, '1'));\n\n    return () => formOptions.change(name, '');\n  }, []);\n\n  return null;\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner, Text, TextContent, Title } from '@patternfly/react-core';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { asyncValidator } from './validators';\nimport './review.scss';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport WizardError from '../../common/wizard-error';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  const { submitting, error, setWizardError } = useContext(AddRoleWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['role-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  if (error === true) {\n    return (\n      <WizardError\n        context={AddRoleWizardContext}\n        title={intl.formatMessage(messages.roleNameTakenTitle)}\n        text={intl.formatMessage(messages.roleNameTakenText)}\n      />\n    );\n  }\n\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-sm\">\n        {intl.formatMessage(messages.reviewDetails)}\n      </Title>\n      <TextContent className=\"pf-u-mb-md\">\n        <Text>{intl.formatMessage(messages.reviewRoleDetails)}</Text>\n      </TextContent>\n      {formFields?.[0]?.[0]}\n    </div>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CostResourcesTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-lg\">\n        {intl.formatMessage(messages.reviewDetails)}\n      </Title>\n      {formFields}\n    </div>\n  );\n};\n\nCostResourcesTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default CostResourcesTemplate;\n","import React, { useContext } from 'react';\nimport { Title, Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, EmptyStateSecondaryActions } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRoleSuccess = ({ onClose }) => {\n  const { setHideForm, setWizardSuccess } = useContext(AddRoleWizardContext);\n  const intl = useIntl();\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {intl.formatMessage(messages.roleCreatedSuccessfully)}\n      </Title>\n      <EmptyStateBody></EmptyStateBody>\n      <Button onClick={onClose} variant=\"primary\">\n        {intl.formatMessage(messages.exit)}\n      </Button>\n      <EmptyStateSecondaryActions>\n        <Button\n          onClick={() => {\n            setHideForm(false);\n            setWizardSuccess(false);\n          }}\n          variant=\"link\"\n        >\n          {intl.formatMessage(messages.createAnotherRole)}\n        </Button>\n        <Button component={(props) => <Link to=\"/groups\" {...props} />} variant=\"link\">\n          {intl.formatMessage(messages.addRoleToGroup)}\n        </Button>\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  );\n};\n\nAddRoleSuccess.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddRoleSuccess;\n","import React, { useState, useEffect } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Radio, Alert } from '@patternfly/react-core';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesForWizard } from '../../../redux/actions/role-actions';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { sortable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst selector = ({ roleReducer: { rolesForWizard, isWizardLoading } }) => ({\n  roles: rolesForWizard.data,\n  pagination: rolesForWizard.meta,\n  isWizardLoading,\n});\n\nconst BaseRoleTable = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (options) => dispatch(fetchRolesForWizard(options));\n  const [filterValue, setFilterValue] = useState('');\n  const { roles, pagination, isWizardLoading } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const columns = [\n    '',\n    { title: intl.formatMessage(messages.name), key: 'display_name', transforms: [sortable] },\n    intl.formatMessage(messages.description),\n  ];\n\n  const [sortByState, setSortByState] = useState({ index: 1, direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n\n  useEffect(() => {\n    fetchData({\n      limit: 50,\n      offset: 0,\n      itemCount: 0,\n      orderBy,\n    });\n  }, []);\n\n  const createRows = (roles) =>\n    roles.map((role) => ({\n      cells: [\n        {\n          title: (\n            <Radio\n              id={`${role.uuid}-radio`}\n              name={`${role.name}-radio`}\n              aria-label={`${role.name}-radio`}\n              ouiaId={`${role.name}-radio`}\n              value={role.uuid}\n              isChecked={input.value.uuid === role.uuid}\n              onChange={() => {\n                formOptions.batch(() => {\n                  input.onChange(role);\n                  formOptions.change('role-copy-name', `Copy of ${role.display_name || role.name}`);\n                  formOptions.change('role-copy-description', role.description);\n                  formOptions.change('add-permissions-table', []);\n                  formOptions.change('base-permissions-loaded', false);\n                  formOptions.change('not-allowed-permissions', []);\n                });\n              }}\n            />\n          ),\n          props: { className: 'pf-c-table__check' },\n        },\n        role.display_name || role.name,\n        role.description,\n      ],\n    }));\n  return (\n    <div>\n      <Alert variant=\"info\" isInline title={intl.formatMessage(messages.granularPermissionsWillBeCopied)} />\n      <TableToolbarView\n        columns={columns}\n        rows={createRows(roles)}\n        data={roles}\n        fetchData={(config) => {\n          fetchData(mappedProps(config));\n        }}\n        filterValue={filterValue}\n        setFilterValue={({ name }) => setFilterValue(name)}\n        isLoading={isWizardLoading}\n        sortBy={sortByState}\n        onSort={(e, index, direction) => {\n          const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n          setSortByState({ index, direction });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            orderBy,\n          });\n        }}\n        pagination={pagination}\n        titlePlural={intl.formatMessage(messages.roles)}\n        titleSingular={intl.formatMessage(messages.role)}\n        filterPlaceholder={intl.formatMessage(messages.roleName).toLowerCase()}\n        ouiaId=\"roles-table\"\n        isCompact\n        tableId=\"base-role\"\n      />\n    </div>\n  );\n};\n\nexport default BaseRoleTable;\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Stack, StackItem, Grid, GridItem, Text, TextVariants } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './review.scss';\n\nconst stickyTable = (columns, rows) => (\n  <div className=\"rbac-c-sticky\">\n    <Grid className=\"rbac-c-sticky--title\">\n      {columns.map((col) => (\n        <GridItem span={12 / columns.length} key={col}>\n          {col}\n        </GridItem>\n      ))}\n    </Grid>\n    <Grid className=\"rbac-c-sticky--data\">\n      {rows.map((row) =>\n        row.cells.map((cell) => (\n          <GridItem span={12 / columns.length} key={cell}>\n            {cell}\n          </GridItem>\n        ))\n      )}\n    </Grid>\n  </div>\n);\n\nconst ReviewStep = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'role-copy-name': copyName,\n    'role-copy-description': copyDescription,\n    'add-permissions-table': permissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n    'role-type': type,\n  } = formOptions.getState().values;\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n  const rows = permissions.map((permission) => ({\n    cells: permission.uuid.split(':'),\n  }));\n\n  const resourceDefinitionsRows = (resourceDefinitions || []).map(({ permission, resources }) => ({\n    cells: [permission, resources.join(', ')],\n  }));\n\n  return (\n    <React.Fragment>\n      <Stack>\n        <StackItem className=\"rbac-l-stack__item-summary\">\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.name)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? name : copyName}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.description)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? description : copyDescription}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.permissions)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              {stickyTable(columns, rows)}\n            </GridItem>\n          </Grid>\n          {hasCostResources && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable([intl.formatMessage(messages.permission), intl.formatMessage(messages.resourceDefinitions)], resourceDefinitionsRows)}\n              </GridItem>\n            </Grid>\n          )}\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SilentErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error) {\n    /**\n     * Propagate error if it does not match the configuration\n     */\n    if (!error.message.includes(this.props.silentErrorString)) {\n      this.setState({ hasError: false });\n      throw error;\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Silently fail\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n\nSilentErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n  silentErrorString: PropTypes.string.isRequired,\n};\n\nexport default SilentErrorBoundary;\n","import React, { useState, useEffect, useRef, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { Wizard } from '@patternfly/react-core';\nimport { schemaBuilder } from './schema';\nimport { createRole, fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { WarningModal } from '../../common/warningModal';\nimport AddRoleSuccess from './add-role-success';\nimport BaseRoleTable from './base-role-table';\nimport AddPermissionsTable from './add-permissions';\nimport ReviewStep from './review';\nimport CostResources from './cost-resources';\nimport TypeSelector from './type-selector';\nimport { useHistory } from 'react-router-dom';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport paths from '../../../utilities/pathnames';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nimport './add-role-wizard.scss';\nimport SilentErrorBoundary from '../../common/silent-error-boundary';\n\nexport const AddRoleWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  'base-role-table': BaseRoleTable,\n  'add-permissions-table': AddPermissionsTable,\n  'cost-resources': CostResources,\n  review: ReviewStep,\n  description: Description,\n  'type-selector': TypeSelector,\n};\n\nconst AddRoleWizard = ({ pagination, filters, orderBy }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const container = useRef(document.createElement('div'));\n  const [schema, setSchema] = useState();\n\n  useEffect(() => {\n    setSchema(schemaBuilder(container.current));\n  }, []);\n\n  const onClose = () =>\n    push({\n      pathname: paths.roles.path,\n      search: createQueryParams({ page: 1, per_page: pagination.limit }),\n    });\n\n  const onCancel = () => {\n    if (!wizardContextValue.success) {\n      dispatch(\n        addNotification({\n          variant: 'warning',\n          title: intl.formatMessage(messages.creatingRoleCanceled),\n          dismissDelay: 8000,\n        })\n      );\n    }\n\n    setCancelWarningVisible(false);\n    /**\n     * This timeout should force React to wait for the modal close and push to history afterwards.\n     * That should fix the runtime error we are seeing in the production version of the code.\n     */\n    setTimeout(() => {\n      push({\n        pathname: paths.roles.path,\n        search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n      });\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    const {\n      'role-name': name,\n      'role-description': description,\n      'role-copy-name': copyName,\n      'role-copy-description': copyDescription,\n      'add-permissions-table': permissions,\n      'cost-resources': resourceDefinitions,\n      'role-type': type,\n    } = formData;\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n\n    const selectedPermissionIds = permissions.map((record) => record.uuid);\n    const roleData = {\n      applications: [...new Set(permissions.map(({ uuid: permission }) => permission.split(':')[0]))],\n      description: (type === 'create' ? description : copyDescription) || null,\n      name: type === 'create' ? name : copyName,\n      access: permissions.reduce(\n        (acc, { uuid: permission, requires = [] }) => [\n          ...acc,\n          ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => ({\n            permission,\n            resourceDefinitions: resourceDefinitions?.find((r) => r.permission === permission)\n              ? [\n                  {\n                    attributeFilter: {\n                      key: `cost-management.${permission.split(':')[1]}`,\n                      operation: 'in',\n                      value: resourceDefinitions?.find((r) => r.permission === permission).resources,\n                    },\n                  },\n                ]\n              : [],\n          })),\n        ],\n        []\n      ),\n    };\n    return dispatch(createRole(roleData))\n      .then(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true }));\n        dispatch(fetchRolesWithPolicies({ limit: pagination.limit, orderBy, inModal: false }));\n      })\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        dispatch(fetchRolesWithPolicies({ limit: pagination.limit, orderBy, inModal: false }));\n        onClose();\n      });\n  };\n\n  if (!schema) {\n    return null;\n  }\n  return (\n    <AddRoleWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <SilentErrorBoundary silentErrorString=\"focus-trap\">\n        <WarningModal\n          type=\"role\"\n          isOpen={cancelWarningVisible}\n          onModalCancel={() => {\n            container.current.hidden = false;\n            setCancelWarningVisible(false);\n          }}\n          onConfirmCancel={onCancel}\n        />\n      </SilentErrorBoundary>\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.createRole)}\n            isOpen\n            onClose={onClose}\n            steps={[\n              {\n                name: 'success',\n                component: <AddRoleSuccess onClose={onClose} />,\n                isFinishedStep: true,\n              },\n            ]}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          schema={schema}\n          container={container}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-type': 'create',\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            const showWarning = Boolean((values && values['role-name']) || values['role-description'] || values['copy-base-role']);\n            if (showWarning) {\n              container.current.hidden = true;\n              setCancelWarningVisible(true);\n            } else {\n              onCancel();\n            }\n          }}\n        />\n      )}\n    </AddRoleWizardContext.Provider>\n  );\n};\n\nAddRoleWizard.propTypes = {\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  orderBy: PropTypes.string,\n};\n\nexport default AddRoleWizard;\n","import React, { useState } from 'react';\nimport { Radio } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst TypeSelector = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const [checked, setChecked] = useState(formOptions.getState().values['role-type']);\n  const handleChange = (val) => {\n    setChecked(val);\n    input.onChange(val);\n    formOptions.change('add-permissions-table', []);\n    formOptions.change('base-permissions-loaded', false);\n    formOptions.change('not-allowed-permissions', []);\n  };\n\n  return (\n    <div>\n      <Radio\n        isChecked={checked === 'create'}\n        className=\"pf-u-mb-sm\"\n        name=\"role-type-create\"\n        onChange={() => handleChange('create')}\n        label={intl.formatMessage(messages.createRoleFromScratch)}\n        id=\"role-type-create\"\n        value=\"create\"\n      />\n      <Radio\n        isChecked={checked === 'copy'}\n        name=\"role-type-copy\"\n        onChange={() => handleChange('copy')}\n        label={intl.formatMessage(messages.copyAnExistingRole)}\n        id=\"role-type-copy\"\n        value=\"copy\"\n      />\n    </div>\n  );\n};\n\nexport default TypeSelector;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport AddPermissionTemplate from './add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport CostResourcesTemplate from './cost-resources-template';\nimport { debouncedAsyncValidator, ValidatorReset } from './validators';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const schemaBuilder = (container) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.createRole),\n        style: { overflow: 'hidden' },\n        container,\n        fields: [\n          {\n            title: intl.formatMessage(messages.createRole),\n            name: 'step-1',\n            nextStep: {\n              when: 'role-type',\n              stepMapper: {\n                copy: 'name-and-description',\n                create: 'add-permissions',\n              },\n            },\n            fields: [\n              {\n                component: 'type-selector',\n                name: 'role-type',\n                isRequired: true,\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                component: 'text-field',\n                name: 'role-name',\n                type: 'text',\n                label: intl.formatMessage(messages.roleName),\n                isRequired: true,\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n                validate: [\n                  debouncedAsyncValidator,\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                  {\n                    type: validatorTypes.MAX_LENGTH,\n                    threshold: 150,\n                  },\n                ],\n              },\n              {\n                component: 'text-field',\n                name: 'role-description',\n                type: 'text',\n                label: intl.formatMessage(messages.roleDescription),\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n                validate: [\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n              {\n                component: 'base-role-table',\n                name: 'copy-base-role',\n                label: intl.formatMessage(messages.baseRole),\n                isRequired: true,\n                condition: {\n                  when: 'role-type',\n                  is: 'copy',\n                },\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n                component: 'description',\n                name: 'fixasyncvalidation',\n                Content: ValidatorReset,\n              },\n              {\n                condition: {\n                  when: 'role-type',\n                  is: 'copy',\n                },\n                component: 'description',\n                name: 'fixasyncvalidation2',\n                Content: ValidatorReset,\n              },\n            ],\n          },\n          {\n            title: intl.formatMessage(messages.nameAndDescription),\n            name: 'name-and-description',\n            nextStep: 'add-permissions',\n            fields: [\n              {\n                component: 'text-field',\n                name: 'role-copy-name',\n                type: 'text',\n                label: intl.formatMessage(messages.roleName),\n                isRequired: true,\n                validate: [\n                  debouncedAsyncValidator,\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n              {\n                component: 'text-field',\n                name: 'role-copy-description',\n                type: 'text',\n                label: intl.formatMessage(messages.roleDescription),\n                validate: [\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) =>\n              values &&\n              values['add-permissions-table'] &&\n              values['add-permissions-table'].some(({ uuid }) => uuid.split(':')[0].includes('cost-management'))\n                ? 'cost-resources-definition'\n                : 'review',\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            StepTemplate: CostResourcesTemplate,\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p className=\"pf-u-mb-md\">{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) => (value.every((p) => p.resources.length > 0) ? undefined : intl.formatMessage(messages.assignAtLeastOneResource)),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            buttons: (props) => <ReviewStepButtons {...props} context={AddRoleWizardContext} />,\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n"],"names":["PropTypes","ReviewStepButtons","renderNextButton","disableBack","handlePrev","buttonLabels","cancel","back","context","formOptions","useFormApi","useContext","success","error","submitting","Fragment","Button","type","variant","isDisabled","onClick","onCancel","propTypes","handleNext","nextStep","when","stepMapper","submit","next","isRequired","WizardError","title","text","intl","useIntl","jumpToStep","WizardContext","setWizardError","EmptyState","EmptyStateVariant","EmptyStateIcon","color","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","undefined","formatMessage","messages","number","i","asyncValidator","roleName","cache","createIntlCache","createIntl","locale","providerMessages","fetchRoles","limit","offset","name","nameMatch","console","response","displayName","responseName","data","length","debouncedAsyncValidator","asyncDebounce","ValidatorReset","useEffect","setTimeout","change","ReviewTemplate","formFields","AddRoleWizardContext","getState","values","then","Bullseye","Spinner","className","TextContent","Text","CostResourcesTemplate","AddRoleSuccess","onClose","setHideForm","setWizardSuccess","CheckCircleIcon","EmptyStateSecondaryActions","component","props","Link","to","selector","roleReducer","rolesForWizard","isWizardLoading","roles","pagination","meta","stickyTable","columns","rows","Grid","map","col","GridItem","span","key","row","cells","cell","SilentErrorBoundary","state","hasError","message","includes","this","silentErrorString","setState","children","React","createContext","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","dispatch","useDispatch","fetchData","options","fetchRolesForWizard","useState","filterValue","setFilterValue","useSelector","shallowEqual","input","useFieldApi","transforms","sortable","index","direction","sortByState","setSortByState","orderBy","itemCount","Alert","isInline","role","Radio","id","uuid","ouiaId","value","isChecked","onChange","batch","display_name","description","createRows","config","mappedProps","isLoading","sortBy","onSort","e","titlePlural","titleSingular","filterPlaceholder","toLowerCase","isCompact","tableId","AddPermissionsTable","CostResources","review","copyName","copyDescription","permissions","resourceDefinitions","hasCostResources","permission","split","resourceDefinitionsRows","resources","join","Stack","StackItem","sm","md","TextVariants","checked","setChecked","handleChange","val","label","AddRoleWizard","filters","push","useHistory","hideForm","wizardContextValue","setWizardContextValue","cancelWarningVisible","setCancelWarningVisible","container","useRef","document","createElement","schema","setSchema","fields","isDynamic","inModal","showTitles","crossroads","style","overflow","copy","create","validate","validatorTypes","condition","is","threshold","StepTemplate","AddPermissionTemplate","some","every","p","buttons","schemaBuilder","current","pathname","paths","search","createQueryParams","page","per_page","addNotification","dismissDelay","Provider","prev","isOpen","onModalCancel","hidden","onConfirmCancel","Wizard","steps","isFinishedStep","subscription","initialValues","componentMapper","onSubmit","formData","selectedPermissionIds","record","roleData","applications","Set","access","reduce","acc","requires","filter","require","find","r","attributeFilter","operation","createRole","fetchRolesWithPolicies","Boolean"],"sourceRoot":""}
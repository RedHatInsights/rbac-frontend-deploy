{"version":3,"sources":["webpack:///./src/helpers/shared/filters.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/common/page-action-route.js"],"names":["syncDefaultFiltersWithUrl","history","keys","defaults","searchParams","URLSearchParams","location","search","filters","reduce","acc","key","values","getAll","length","Object","forEach","value","Array","isArray","Set","item","includes","append","get","set","replace","pathname","toString","applyFiltersToUrl","newValues","RbacBreadcrumbs","breadcrumbs","Breadcrumb","map","index","title","BreadcrumbItem","isActive","to","NavLink","exact","propTypes","PropTypes","TopToolbar","children","Fragment","className","isRequired","paddingBottom","defaultProps","TopToolbarTitle","renderTitleTag","description","Flex","FlexItem","alignSelf","modifier","TextContent","Text","component","TextVariants","PageActionRoute","pageAction","props","useEffect","insights","chrome","appAction","undefined","Route"],"mappings":"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","file":"js/662.d641791bce133031c10b.js","sourcesContent":["export const syncDefaultFiltersWithUrl = (history, keys, defaults = {}) => {\n  const searchParams = new URLSearchParams(history.location.search);\n\n  let filters = keys.reduce((acc, key) => {\n    const values = searchParams.getAll(key);\n    return {\n      ...acc,\n      [key]: values.length > 1 ? values : values[0],\n    };\n  }, {});\n\n  Object.keys(defaults).forEach((key) => {\n    const value = defaults[key];\n    filters = {\n      ...filters,\n      [key]: Array.isArray(filters[key])\n        ? [...new Set([...filters[key], ...(Array.isArray(value) ? value : [value])])]\n        : (value?.length > 0 && value) || filters[key],\n    };\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => searchParams.getAll(key).includes(item) || searchParams.append(key, item));\n    } else {\n      searchParams.get(key) || (value && searchParams.set(key, value));\n    }\n  });\n\n  history.replace({\n    pathname: history.location.pathname,\n    search: searchParams.toString(),\n  });\n  return filters;\n};\n\nexport const applyFiltersToUrl = (history, newValues) => {\n  const searchParams = new URLSearchParams(history.location.search);\n  Object.keys(newValues).forEach((key) => searchParams.delete(key));\n\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => item && searchParams.append(key, item));\n    } else {\n      value && searchParams.set(key, value);\n    }\n  });\n\n  history.replace({\n    pathname: history.location.pathname,\n    search: searchParams.toString(),\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return breadcrumbs ? (\n    <Breadcrumb>\n      {Object.values(breadcrumbs).map((item, index) =>\n        item.title ? (\n          <BreadcrumbItem key={item.title} isActive={item.isActive}>\n            {(item.to && (\n              <NavLink exact to={item.to}>\n                {item.title}\n              </NavLink>\n            )) ||\n              item.title}\n          </BreadcrumbItem>\n        ) : (\n          <BreadcrumbPlaceholder key={index} />\n        )\n      )}\n    </Breadcrumb>\n  ) : null;\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object,\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrubms';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children, breadcrumbs }) => (\n  <Fragment>\n    {breadcrumbs && (\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs {...breadcrumbs} />\n      </section>\n    )}\n    <PageHeader className=\"ins-rbac-page-header\">{children}</PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool,\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false,\n};\n\nexport const TopToolbarTitle = ({ title, renderTitleTag, description, children }) => (\n  <Fragment>\n    <Flex>\n      <FlexItem className=\"pf-u-mb-sm\">\n        <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"ins-rbac-page-header__title\" />\n      </FlexItem>\n      <FlexItem alignSelf={{ modifier: 'alignSelfCenter' }}>{renderTitleTag && renderTitleTag()}</FlexItem>\n    </Flex>\n    {description && (\n      <TextContent className=\"ins-rbac-page-header__description\">\n        {typeof description === 'string' ? <Text component={TextVariants.p}>{description}</Text> : description}\n      </TextContent>\n    )}\n    {children}\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  renderTitleTag: PropTypes.func,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nconst PageActionRoute = ({ pageAction, ...props }) => {\n  useEffect(() => {\n    insights.chrome.appAction(pageAction);\n    return () => insights.chrome.appAction(undefined);\n  }, [pageAction]);\n  return <Route {...props} />;\n};\n\nPageActionRoute.propTypes = {\n  pageAction: PropTypes.string.isRequired,\n};\n\nexport default PageActionRoute;\n"],"sourceRoot":""}
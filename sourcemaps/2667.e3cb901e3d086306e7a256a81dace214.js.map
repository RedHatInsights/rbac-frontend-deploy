{"version":3,"file":"js/2667.af6fd90803761be516b4.js","mappings":"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","sources":["webpack:///./src/smart-components/common/review-step-buttons.js","webpack:///./src/smart-components/common/wizard-error.js","webpack:///./src/smart-components/role/add-role/validators.js","webpack:///./src/smart-components/role/add-role/review-template.js","webpack:///./src/smart-components/role/add-role/cost-resources-template.js","webpack:///./src/smart-components/role/add-role/add-role-success.js","webpack:///./src/smart-components/role/add-role/base-role-table.js","webpack:///./src/smart-components/role/add-role/review.js","webpack:///./src/smart-components/role/add-role/set-name.js","webpack:///./src/smart-components/common/silent-error-boundary.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/add-role/type-selector.js","webpack:///./src/smart-components/role/add-role/schema.js","webpack:///./src/utilities/async-debounce.ts"],"sourcesContent":["import { Button } from '@patternfly/react-core';\nimport React, { useContext, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst selectNext = (nextStep, getState) =>\n  ({\n    string: nextStep,\n    function: nextStep({ values: getState().values }),\n  }?.[typeof nextStep] || nextStep.stepMapper?.[get(getState().values, nextStep.when)]);\n\nconst NextButton = ({ nextStep, valid, handleNext, nextLabel, getState, handleSubmit, submitLabel }) => (\n  <Button\n    variant=\"primary\"\n    type=\"button\"\n    isDisabled={!valid || getState().validating}\n    onClick={() => (nextStep ? handleNext(selectNext(nextStep, getState)) : handleSubmit())}\n  >\n    {nextStep ? nextLabel : submitLabel}\n  </Button>\n);\n\nNextButton.propTypes = {\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n  handleSubmit: PropTypes.func.isRequired,\n  submitLabel: PropTypes.node.isRequired,\n  valid: PropTypes.bool,\n  handleNext: PropTypes.func.isRequired,\n  nextLabel: PropTypes.node.isRequired,\n  getState: PropTypes.func.isRequired,\n};\n\nconst ReviewStepButtons = ({ renderNextButton, disableBack, handlePrev, buttonLabels: { cancel, back }, context }) => {\n  const formOptions = useFormApi();\n  const { success, error, submitting } = useContext(context);\n  if (success || typeof error === 'undefined' || error || submitting) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {renderNextButton()}\n      <Button type=\"button\" variant=\"secondary\" isDisabled={disableBack} onClick={handlePrev}>\n        {back}\n      </Button>\n      <Button type=\"button\" variant=\"link\" onClick={formOptions.onCancel}>\n        {cancel}\n      </Button>\n    </Fragment>\n  );\n};\n\nReviewStepButtons.propTypes = {\n  disableBack: PropTypes.bool,\n  handlePrev: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  nextStep: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      when: PropTypes.string.isRequired,\n      stepMapper: PropTypes.object.isRequired,\n    }),\n    PropTypes.func,\n  ]),\n  buttonLabels: PropTypes.shape({\n    submit: PropTypes.node.isRequired,\n    cancel: PropTypes.node.isRequired,\n    back: PropTypes.node.isRequired,\n    next: PropTypes.node.isRequired,\n  }).isRequired,\n  context: PropTypes.object.isRequired,\n  renderNextButton: PropTypes.func,\n};\n\nexport default ReviewStepButtons;\n","import React, { useContext } from 'react';\nimport { Button, ButtonVariant } from '@patternfly/react-core';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { ErrorState } from '@patternfly/react-component-groups';\n\nconst WizardError = ({ context, title, text, customFooter }) => {\n  const intl = useIntl();\n  const { jumpToStep } = useContext(WizardContext);\n  const { setWizardError } = useContext(context);\n  return (\n    <ErrorState\n      errorTitle={title}\n      errorDescription={text}\n      customFooter={\n        customFooter || (\n          <Button\n            onClick={() => {\n              setWizardError(undefined);\n              jumpToStep(0);\n            }}\n            variant={ButtonVariant.primary}\n          >\n            {intl.formatMessage(messages.returnToStepNumber, { number: 1 })}\n          </Button>\n        )\n      }\n    />\n  );\n};\n\nWizardError.propTypes = {\n  context: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  customFooter: PropTypes.element,\n};\n\nexport default WizardError;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchRoles } from '../../../helpers/role/role-helper';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const asyncValidator = async (roleName) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  if (!roleName) {\n    return undefined;\n  }\n\n  const response = await fetchRoles({ limit: 10, offset: 0, name: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  // it has to be here twice because API is using AND instead of OR\n  const responseName = await fetchRoles({ limit: 10, offset: 0, displayName: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (response?.data?.length > 0 || responseName?.data?.length > 0) {\n    throw intl.formatMessage(messages.nameAlreadyTaken);\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce(asyncValidator);\n\nexport const ValidatorReset = ({ name }) => {\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setTimeout(() => formOptions.change(name, '1'));\n\n    return () => formOptions.change(name, '');\n  }, []);\n\n  return null;\n};\n\nValidatorReset.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner, Text, TextContent, Title } from '@patternfly/react-core';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { asyncValidator } from './validators';\nimport './review.scss';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport WizardError from '../../common/wizard-error';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  const { submitting, error, setWizardError } = useContext(AddRoleWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['role-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  if (error === true) {\n    return (\n      <WizardError\n        context={AddRoleWizardContext}\n        title={intl.formatMessage(messages.roleNameTakenTitle)}\n        text={intl.formatMessage(messages.roleNameTakenText)}\n      />\n    );\n  }\n\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-sm\">\n        {intl.formatMessage(messages.reviewDetails)}\n      </Title>\n      <TextContent className=\"pf-v5-u-mb-md\">\n        <Text>{intl.formatMessage(messages.reviewRoleDetails)}</Text>\n      </TextContent>\n      {formFields?.[0]?.[0]}\n    </div>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CostResourcesTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-lg\">\n        {intl.formatMessage(messages.defineCostResources)}\n      </Title>\n      {formFields}\n    </div>\n  );\n};\n\nCostResourcesTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default CostResourcesTemplate;\n","import React, { useContext } from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateActions,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../../Messages';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport pathnames from '../../../utilities/pathnames';\n\nconst AddRoleSuccess = ({ onClose }) => {\n  const { setHideForm, setWizardSuccess } = useContext(AddRoleWizardContext);\n  const intl = useIntl();\n  return (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader\n        titleText={<>{intl.formatMessage(messages.roleCreatedSuccessfully)}</>}\n        icon={<EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateBody></EmptyStateBody>\n      <EmptyStateFooter>\n        <Button onClick={onClose} variant=\"primary\">\n          {intl.formatMessage(messages.exit)}\n        </Button>\n        <EmptyStateActions>\n          <Button\n            onClick={() => {\n              setHideForm(false);\n              setWizardSuccess(false);\n            }}\n            variant=\"link\"\n          >\n            {intl.formatMessage(messages.createAnotherRole)}\n          </Button>\n          <Button component={(props) => <AppLink to={pathnames.groups.link} {...props} />} variant=\"link\">\n            {intl.formatMessage(messages.addRoleToGroup)}\n          </Button>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nAddRoleSuccess.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddRoleSuccess;\n","import React, { useState, useEffect } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Radio, Alert } from '@patternfly/react-core';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesForWizard } from '../../../redux/actions/role-actions';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { sortable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst selector = ({ roleReducer: { rolesForWizard, isWizardLoading } }) => ({\n  roles: rolesForWizard.data,\n  pagination: rolesForWizard.meta,\n  isWizardLoading,\n});\n\nconst BaseRoleTable = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (options) => dispatch(fetchRolesForWizard(options));\n  const [filterValue, setFilterValue] = useState('');\n  const { roles, pagination, isWizardLoading } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const columns = [\n    { title: '' },\n    { title: intl.formatMessage(messages.name), key: 'display_name', transforms: [sortable] },\n    { title: intl.formatMessage(messages.description) },\n  ];\n\n  const [sortByState, setSortByState] = useState({ index: 1, direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n\n  useEffect(() => {\n    fetchData({\n      limit: 50,\n      offset: 0,\n      itemCount: 0,\n      orderBy,\n    });\n  }, []);\n\n  const createRows = (roles) =>\n    roles.map((role) => ({\n      cells: [\n        {\n          title: (\n            <Radio\n              id={`${role.uuid}-radio`}\n              name={`${role.name}-radio`}\n              aria-label={`${role.name}-radio`}\n              ouiaId={`${role.name}-radio`}\n              value={role.uuid}\n              isChecked={input.value.uuid === role.uuid}\n              onChange={() => {\n                formOptions.batch(() => {\n                  input.onChange(role);\n                  formOptions.change('role-copy-name', `Copy of ${role.display_name || role.name}`);\n                  formOptions.change('role-copy-description', role.description);\n                  formOptions.change('add-permissions-table', []);\n                  formOptions.change('base-permissions-loaded', false);\n                  formOptions.change('not-allowed-permissions', []);\n                });\n              }}\n            />\n          ),\n          props: { className: 'pf-v5-c-table__check' },\n        },\n        role.display_name || role.name,\n        role.description,\n      ],\n    }));\n  return (\n    <div>\n      <Alert variant=\"info\" isInline title={intl.formatMessage(messages.granularPermissionsWillBeCopied)} />\n      <TableToolbarView\n        columns={columns}\n        rows={createRows(roles)}\n        data={roles}\n        fetchData={(config) => {\n          fetchData(mappedProps(config));\n        }}\n        filterValue={filterValue}\n        setFilterValue={({ name }) => setFilterValue(name)}\n        isLoading={isWizardLoading}\n        sortBy={sortByState}\n        onSort={(e, index, direction) => {\n          const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n          setSortByState({ index, direction });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            orderBy,\n          });\n        }}\n        pagination={pagination}\n        titlePlural={intl.formatMessage(messages.roles)}\n        titleSingular={intl.formatMessage(messages.role)}\n        filterPlaceholder={intl.formatMessage(messages.roleName).toLowerCase()}\n        ouiaId=\"roles-table\"\n        isCompact\n        tableId=\"base-role\"\n      />\n    </div>\n  );\n};\n\nexport default BaseRoleTable;\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Stack, StackItem, Grid, GridItem, Text, TextVariants } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './review.scss';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nconst stickyTable = (columns, rows) => (\n  <div className=\"rbac-c-sticky\">\n    <Grid className=\"rbac-c-sticky--title\">\n      {columns.map((col) => (\n        <GridItem span={12 / columns.length} key={col}>\n          {col}\n        </GridItem>\n      ))}\n    </Grid>\n    <Grid className=\"rbac-c-sticky--data\">\n      {rows.map((row) =>\n        row.cells.map((cell) => (\n          <GridItem span={12 / columns.length} key={cell}>\n            {cell}\n          </GridItem>\n        ))\n      )}\n    </Grid>\n  </div>\n);\n\nconst ReviewStep = () => {\n  const intl = useIntl();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'role-copy-name': copyName,\n    'role-copy-description': copyDescription,\n    'add-permissions-table': permissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n    'inventory-group-permissions': inventoryGroupPermissions,\n    'role-type': type,\n  } = formOptions.getState().values;\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n  const rows = permissions.map((permission) => ({\n    cells: permission.uuid.split(':'),\n  }));\n\n  const resourceDefinitionsRows = (resourceDefinitions || []).map(({ permission, resources }) => ({\n    cells: [permission, resources.join(', ')],\n  }));\n\n  const groupPermissionsRows = (inventoryGroupPermissions || []).map(({ permission, groups }) => ({\n    cells: [permission, groups?.map((group) => (group?.id === null ? intl.formatMessage(messages.ungroupedSystems) : group?.name)).join(', ')],\n  }));\n\n  return (\n    <React.Fragment>\n      <Stack>\n        <StackItem className=\"rbac-l-stack__item-summary\">\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.name)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? name : copyName}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.description)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? description : copyDescription}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.permissions)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              {stickyTable(columns, rows)}\n            </GridItem>\n          </Grid>\n          {inventoryGroupPermissions && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable(\n                  [\n                    intl.formatMessage(messages.permission),\n                    intl.formatMessage(enableWorkspacesNameChange ? messages.workspacesDefinition : messages.groupDefinition),\n                  ],\n                  groupPermissionsRows\n                )}\n              </GridItem>\n            </Grid>\n          )}\n          {hasCostResources && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable([intl.formatMessage(messages.permission), intl.formatMessage(messages.resourceDefinitions)], resourceDefinitionsRows)}\n              </GridItem>\n            </Grid>\n          )}\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { FormHelperText, HelperText, HelperTextItem, Stack, StackItem } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { debouncedAsyncValidator } from './validators';\nimport { trimAll } from '../../../helpers/shared/helpers';\nimport messages from '../../../Messages';\n\nconst roleNameValidated = (roleName, roleNameError) => (roleName === undefined || roleNameError || roleName?.length > 150 ? 'error' : 'default');\nconst roleDescriptionValidated = (roleDescription) => (roleDescription?.length > 150 ? 'error' : 'default');\n\nconst SetName = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const { 'role-name': name, 'role-description': description } = formOptions.getState().values;\n  const [roleName, setRoleName] = useState(name || '');\n  const [roleNameError, setRoleNameError] = useState();\n  const [roleDescription, setRoleDescription] = useState(description);\n\n  const processRoleName = (value) => {\n    const trimmedValue = trimAll(value);\n    input.onChange(undefined);\n    debouncedAsyncValidator(trimmedValue)\n      .then(() => {\n        input.onChange(trimmedValue);\n        setRoleNameError(undefined);\n      })\n      .catch((error) => {\n        setRoleNameError(error);\n        input.onChange(undefined);\n      });\n    setRoleName(value);\n  };\n\n  useEffect(() => {\n    roleName?.length > 0 && processRoleName(roleName);\n  }, []);\n\n  const roleNameValid = roleNameValidated(roleName, roleNameError);\n  const roleDescriptionValid = roleDescriptionValidated(roleDescription);\n  return (\n    <Stack hasGutter>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <FormGroup label={intl.formatMessage(messages.roleName)} isRequired>\n          <TextInput\n            id=\"role-name\"\n            value={roleName}\n            type=\"text\"\n            validated={roleNameValid}\n            onBlur={() => roleName === '' && setRoleName(undefined)}\n            onChange={(_event, value) => processRoleName(value)}\n            aria-label=\"Role name\"\n          />\n          {roleNameValid === 'error' && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant={roleNameValid}>{roleName ? roleNameError : intl.formatMessage(messages.required)}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n      <StackItem>\n        <FormGroup label={intl.formatMessage(messages.roleDescription)}>\n          <TextArea\n            id=\"role-description\"\n            value={roleDescription}\n            validated={roleDescriptionValid}\n            onChange={(_event, value) => {\n              setRoleDescription(value);\n              formOptions.change('role-description', value);\n            }}\n            aria-label=\"Role description\"\n            resizeOrientation=\"vertical\"\n          />\n          {roleDescriptionValid === 'error' && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant={roleDescriptionValid}>{intl.formatMessage(messages.maxCharactersWarning, { number: 150 })}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSetName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetName;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SilentErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error) {\n    /**\n     * Propagate error if it does not match the configuration\n     */\n    if (!error.message.includes(this.props.silentErrorString)) {\n      this.setState({ hasError: false });\n      throw error;\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Silently fail\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n\nSilentErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n  silentErrorString: PropTypes.string.isRequired,\n};\n\nexport default SilentErrorBoundary;\n","import React, { useState, useEffect, useRef, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { Wizard } from '@patternfly/react-core/deprecated';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { schemaBuilder } from './schema';\nimport { createRole, fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport AddRoleSuccess from './add-role-success';\nimport BaseRoleTable from './base-role-table';\nimport AddPermissionsTable from './add-permissions';\nimport ReviewStep from './review';\nimport InventoryGroupsRole from './inventory-groups-role';\nimport CostResources from './cost-resources';\nimport TypeSelector from './type-selector';\nimport SetName from './set-name';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport SilentErrorBoundary from '../../common/silent-error-boundary';\nimport messages from '../../../Messages';\nimport paths from '../../../utilities/pathnames';\nimport './add-role-wizard.scss';\n\nexport const AddRoleWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  'set-name': SetName,\n  'base-role-table': BaseRoleTable,\n  'add-permissions-table': AddPermissionsTable,\n  'cost-resources': CostResources,\n  'inventory-groups-role': InventoryGroupsRole,\n  review: ReviewStep,\n  description: Description,\n  'type-selector': TypeSelector,\n};\n\nconst AddRoleWizard = ({ pagination, filters, orderBy }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const chrome = useChrome();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const container = useRef(document.createElement('div'));\n  const [schema, setSchema] = useState();\n\n  useEffect(() => {\n    setSchema(schemaBuilder(container.current, enableWorkspacesNameChange));\n  }, []);\n\n  const onClose = () =>\n    navigate({\n      pathname: paths.roles.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n\n  const onCancel = () => {\n    if (!wizardContextValue.success) {\n      dispatch(\n        addNotification({\n          variant: 'warning',\n          title: intl.formatMessage(messages.creatingRoleCanceled),\n          dismissDelay: 8000,\n        })\n      );\n    }\n\n    setCancelWarningVisible(false);\n\n    navigate({\n      pathname: paths.roles.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    const {\n      'role-name': name,\n      'role-description': description,\n      'role-copy-name': copyName,\n      'role-copy-description': copyDescription,\n      'add-permissions-table': permissions,\n      'inventory-groups-role': invResources,\n      'cost-resources': costResources,\n      'role-type': type,\n    } = formData;\n    const selectedPermissionIds = permissions.map((record) => record.uuid);\n\n    const roleData = {\n      applications: [...new Set(permissions.map(({ uuid: permission }) => permission.split(':')[0]))],\n      description: (type === 'create' ? description : copyDescription) || null,\n      name: type === 'create' ? name : copyName,\n      access: permissions.reduce(\n        (acc, { uuid: permission, requires = [] }) => [\n          ...acc,\n          ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => {\n            let attributeFilter;\n\n            if (permission.includes('cost-management')) {\n              attributeFilter = {\n                key: `cost-management.${permission.split(':')[1]}`,\n                operation: 'in',\n                value: costResources?.find((r) => r.permission === permission)?.resources,\n              };\n            } else if (permission.includes('inventory')) {\n              attributeFilter = {\n                key: 'group.id',\n                operation: 'in',\n                value: invResources?.find((g) => g.permission === permission)?.groups?.map((group) => group?.id),\n              };\n            }\n\n            return {\n              permission,\n              resourceDefinitions: attributeFilter ? [{ attributeFilter }] : [],\n            };\n          }),\n        ],\n        []\n      ),\n    };\n\n    return dispatch(createRole(roleData))\n      .then(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true }));\n        dispatch(fetchRolesWithPolicies({ limit: pagination.limit, orderBy, usesMetaInURL: true, chrome }));\n      })\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        dispatch(fetchRolesWithPolicies({ limit: pagination.limit, orderBy, usesMetaInURL: true, chrome }));\n        onClose();\n      });\n  };\n\n  if (!schema) {\n    return null;\n  }\n  return (\n    <AddRoleWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <SilentErrorBoundary silentErrorString=\"focus-trap\">\n        <WarningModal\n          title={intl.formatMessage(messages.exitItemCreation, { item: intl.formatMessage(messages.role).toLocaleLowerCase() })}\n          confirmButtonLabel={intl.formatMessage(messages.discard)}\n          isOpen={cancelWarningVisible}\n          onClose={() => {\n            container.current.hidden = false;\n            setCancelWarningVisible(false);\n          }}\n          onConfirm={onCancel}\n        >\n          {intl.formatMessage(messages.discardedInputsWarning)}\n        </WarningModal>\n      </SilentErrorBoundary>\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.createRole)}\n            isOpen\n            onClose={onClose}\n            steps={[\n              {\n                name: 'success',\n                component: <AddRoleSuccess onClose={onClose} />,\n                isFinishedStep: true,\n              },\n            ]}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          schema={schema}\n          container={container}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-type': 'create',\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            const showWarning = Boolean((values && values['role-name']) || values['role-description'] || values['copy-base-role']);\n            if (showWarning) {\n              container.current.hidden = true;\n              setCancelWarningVisible(true);\n            } else {\n              onCancel();\n            }\n          }}\n        />\n      )}\n    </AddRoleWizardContext.Provider>\n  );\n};\n\nAddRoleWizard.propTypes = {\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  orderBy: PropTypes.string,\n};\n\nexport default AddRoleWizard;\n","import React, { useState } from 'react';\nimport { Radio } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst TypeSelector = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const [checked, setChecked] = useState(formOptions.getState().values['role-type']);\n  const handleChange = (val) => {\n    setChecked(val);\n    input.onChange(val);\n    formOptions.change('add-permissions-table', []);\n    formOptions.change('base-permissions-loaded', false);\n    formOptions.change('not-allowed-permissions', []);\n  };\n\n  return (\n    <div>\n      <Radio\n        isChecked={checked === 'create'}\n        className=\"pf-v5-u-mb-sm\"\n        name=\"role-type-create\"\n        onChange={() => handleChange('create')}\n        label={intl.formatMessage(messages.createRoleFromScratch)}\n        id=\"role-type-create\"\n        value=\"create\"\n      />\n      <Radio\n        isChecked={checked === 'copy'}\n        name=\"role-type-copy\"\n        onChange={() => handleChange('copy')}\n        label={intl.formatMessage(messages.copyAnExistingRole)}\n        id=\"role-type-copy\"\n        value=\"copy\"\n      />\n    </div>\n  );\n};\n\nexport default TypeSelector;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport AddPermissionTemplate from './add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport CostResourcesTemplate from './cost-resources-template';\nimport { debouncedAsyncValidator, ValidatorReset } from './validators';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\nimport { validateNextAddRolePermissionStep } from '../permission-wizard-helper';\nimport InventoryGroupsRoleTemplate from './inventory-groups-role-template';\n\nexport const schemaBuilder = (container, featureFlag) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.createRole),\n        style: { overflow: 'hidden' },\n        container,\n        fields: [\n          {\n            title: intl.formatMessage(messages.createRole),\n            name: 'step-1',\n            nextStep: {\n              when: 'role-type',\n              stepMapper: {\n                copy: 'name-and-description',\n                create: 'add-permissions',\n              },\n            },\n            fields: [\n              {\n                component: 'type-selector',\n                name: 'role-type',\n                isRequired: true,\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                component: 'set-name',\n                name: 'role-name',\n                type: 'text',\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                  {\n                    type: validatorTypes.MAX_LENGTH,\n                    threshold: 150,\n                  },\n                ],\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n              },\n              {\n                component: 'text-field',\n                name: 'role-description',\n                hideField: true,\n              },\n              {\n                component: 'base-role-table',\n                name: 'copy-base-role',\n                label: intl.formatMessage(messages.baseRole),\n                isRequired: true,\n                condition: {\n                  when: 'role-type',\n                  is: 'copy',\n                },\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n                component: 'description',\n                name: 'fixasyncvalidation',\n                Content: ValidatorReset,\n              },\n              {\n                condition: {\n                  when: 'role-type',\n                  is: 'copy',\n                },\n                component: 'description',\n                name: 'fixasyncvalidation2',\n                Content: ValidatorReset,\n              },\n            ],\n          },\n          {\n            title: intl.formatMessage(messages.nameAndDescription),\n            name: 'name-and-description',\n            nextStep: 'add-permissions',\n            fields: [\n              {\n                component: 'text-field',\n                name: 'role-copy-name',\n                type: 'text',\n                label: intl.formatMessage(messages.roleName),\n                isRequired: true,\n                validate: [\n                  debouncedAsyncValidator,\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n              {\n                component: 'text-field',\n                name: 'role-copy-description',\n                type: 'text',\n                label: intl.formatMessage(messages.roleDescription),\n                validate: [\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('add-permissions', values),\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            title: intl.formatMessage(featureFlag ? messages.workspacesAccessTitle : messages.inventoryGroupsAccessTitle),\n            name: 'inventory-groups-role',\n            StepTemplate: InventoryGroupsRoleTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('inventory-groups-role', values),\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'cost-resources',\n                label: (\n                  <p className=\"pf-v5-u-mb-md\">\n                    {intl.formatMessage(featureFlag ? messages.applyWorkspacesRolePermission : messages.applyInventoryGroupsRolePermission)}\n                  </p>\n                ),\n              },\n              {\n                component: 'inventory-groups-role',\n                name: 'inventory-groups-role',\n                validate: [\n                  (value = []) =>\n                    value?.every(({ groups, permission }) => groups?.length > 0 && permission)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneInventoryGroup),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            StepTemplate: CostResourcesTemplate,\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p className=\"pf-v5-u-mb-md\">{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) =>\n                    value?.every(({ resources }) => resources?.length > 0) ? undefined : intl.formatMessage(messages.assignAtLeastOneResource),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            buttons: (props) => <ReviewStepButtons {...props} context={AddRoleWizardContext} />,\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction: (...args: any[]) => Promise<any>, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"names":["isRequired","ReviewStepButtons","renderNextButton","disableBack","handlePrev","buttonLabels","cancel","back","context","formOptions","success","error","submitting","useContext","Fragment","Button","type","variant","isDisabled","onClick","onCancel","propTypes","handleNext","nextStep","when","stepMapper","submit","next","WizardError","title","text","customFooter","intl","jumpToStep","setWizardError","errorTitle","errorDescription","undefined","ButtonVariant","primary","formatMessage","returnToStepNumber","number","asyncValidator","async","roleName","cache","locale","messages","response","limit","offset","name","nameMatch","catch","console","responseName","displayName","data","length","nameAlreadyTaken","debouncedAsyncValidator","ValidatorReset","useEffect","setTimeout","change","ReviewTemplate","formFields","AddRoleWizardContext","getState","values","then","Bullseye","Spinner","size","roleNameTakenTitle","roleNameTakenText","className","Title","headingLevel","reviewDetails","TextContent","Text","reviewRoleDetails","CostResourcesTemplate","defineCostResources","AddRoleSuccess","onClose","setHideForm","setWizardSuccess","EmptyState","EmptyStateVariant","lg","EmptyStateHeader","titleText","roleCreatedSuccessfully","icon","EmptyStateIcon","color","EmptyStateBody","EmptyStateFooter","exit","EmptyStateActions","createAnotherRole","component","props","AppLink","to","pathnames","groups","link","addRoleToGroup","selector","roleReducer","rolesForWizard","isWizardLoading","roles","pagination","meta","stickyTable","columns","rows","Grid","map","col","GridItem","span","key","row","cells","cell","SetName","input","description","setRoleName","useState","roleNameError","setRoleNameError","roleDescription","setRoleDescription","processRoleName","value","trimmedValue","onChange","roleNameValid","roleNameValidated","roleDescriptionValid","roleDescriptionValidated","Stack","hasGutter","StackItem","FormGroup","label","TextInput","id","validated","onBlur","_event","FormHelperText","HelperText","HelperTextItem","required","TextArea","resizeOrientation","maxCharactersWarning","SilentErrorBoundary","constructor","super","this","state","hasError","getDerivedStateFromError","componentDidCatch","message","includes","silentErrorString","setState","render","children","createContext","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","dispatch","useDispatch","fetchData","options","filterValue","setFilterValue","useSelector","shallowEqual","transforms","sortable","sortByState","setSortByState","index","direction","orderBy","itemCount","Alert","isInline","granularPermissionsWillBeCopied","role","Radio","uuid","ouiaId","isChecked","batch","display_name","createRows","config","isLoading","sortBy","onSort","e","titlePlural","titleSingular","filterPlaceholder","toLowerCase","isCompact","tableId","review","enableWorkspacesNameChange","useFlag","copyName","copyDescription","permissions","resourceDefinitions","hasCostResources","inventoryGroupPermissions","application","resourceType","operation","permission","split","resourceDefinitionsRows","resources","join","groupPermissionsRows","group","ungroupedSystems","sm","md","TextVariants","h4","p","workspacesDefinition","groupDefinition","checked","setChecked","handleChange","val","createRoleFromScratch","copyAnExistingRole","AddRoleWizard","filters","navigate","useAppNavigate","chrome","useChrome","wizardContextValue","setWizardContextValue","hideForm","cancelWarningVisible","setCancelWarningVisible","container","useRef","document","createElement","schema","setSchema","featureFlag","fields","isDynamic","inModal","showTitles","crossroads","createRole","style","overflow","copy","create","validate","REQUIRED","MAX_LENGTH","threshold","condition","is","hideField","baseRole","nameAndDescription","addPermissions","StepTemplate","workspacesAccessTitle","inventoryGroupsAccessTitle","applyWorkspacesRolePermission","applyInventoryGroupsRolePermission","every","assignAtLeastOneInventoryGroup","applyCostPermissionText","assignAtLeastOneResource","buttons","schemaBuilder","current","pathname","search","page","per_page","addNotification","creatingRoleCanceled","dismissDelay","Provider","prev","WarningModal","exitItemCreation","item","toLocaleLowerCase","confirmButtonLabel","discard","isOpen","hidden","onConfirm","discardedInputsWarning","Wizard","steps","isFinishedStep","subscription","initialValues","componentMapper","onSubmit","formData","invResources","costResources","selectedPermissionIds","record","roleData","applications","Set","access","reduce","acc","requires","filter","require","attributeFilter","find","r","g","usesMetaInURL","Boolean","asyncFunction","debounceTime","onlyResolvesLast"],"sourceRoot":""}
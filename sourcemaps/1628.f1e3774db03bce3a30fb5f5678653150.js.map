{"version":3,"file":"js/1628.9de7e20aea6c38c46b66.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/TooltipContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/TooltipArrow.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/dropdownConstants.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Tooltip/tooltip.mjs","webpack:///./src/smart-components/group/service-account/add-group-service-accounts.tsx","webpack:///./src/redux/actions/service-account-actions.ts"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nexport const TooltipContent = (_a) => {\n    var { className, children, isLeftAligned } = _a, props = __rest(_a, [\"className\", \"children\", \"isLeftAligned\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.tooltipContent, isLeftAligned && styles.modifiers.textAlignLeft, className) }, props), children));\n};\nTooltipContent.displayName = 'TooltipContent';\n//# sourceMappingURL=TooltipContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nexport const TooltipArrow = (_a) => {\n    var { className } = _a, props = __rest(_a, [\"className\"]);\n    return React.createElement(\"div\", Object.assign({ className: css(styles.tooltipArrow, className) }, props));\n};\nTooltipArrow.displayName = 'TooltipArrow';\n//# sourceMappingURL=TooltipArrow.js.map","export const c_tooltip_MaxWidth = {\n  \"name\": \"--pf-v5-c-tooltip--MaxWidth\",\n  \"value\": \"18.75rem\",\n  \"var\": \"var(--pf-v5-c-tooltip--MaxWidth)\"\n};\nexport default c_tooltip_MaxWidth;","import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipContent } from './TooltipContent';\nimport { TooltipArrow } from './TooltipArrow';\nimport { KeyTypes } from '../../helpers/constants';\nimport tooltipMaxWidth from '@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport var TooltipPosition;\n(function (TooltipPosition) {\n    TooltipPosition[\"auto\"] = \"auto\";\n    TooltipPosition[\"top\"] = \"top\";\n    TooltipPosition[\"bottom\"] = \"bottom\";\n    TooltipPosition[\"left\"] = \"left\";\n    TooltipPosition[\"right\"] = \"right\";\n    TooltipPosition[\"topStart\"] = \"top-start\";\n    TooltipPosition[\"topEnd\"] = \"top-end\";\n    TooltipPosition[\"bottomStart\"] = \"bottom-start\";\n    TooltipPosition[\"bottomEnd\"] = \"bottom-end\";\n    TooltipPosition[\"leftStart\"] = \"left-start\";\n    TooltipPosition[\"leftEnd\"] = \"left-end\";\n    TooltipPosition[\"rightStart\"] = \"right-start\";\n    TooltipPosition[\"rightEnd\"] = \"right-end\";\n})(TooltipPosition || (TooltipPosition = {}));\n// id for associating trigger with the content aria-describedby or aria-labelledby\nlet pfTooltipIdCounter = 1;\nexport const Tooltip = (_a) => {\n    var { content: bodyContent, position = 'top', trigger = 'mouseenter focus', isVisible = false, isContentLeftAligned = false, enableFlip = true, className = '', entryDelay = 300, exitDelay = 300, appendTo = () => document.body, zIndex = 9999, minWidth, maxWidth = tooltipMaxWidth.value, distance = 15, aria = 'describedby', \n    // For every initial starting position, there are 3 escape positions\n    flipBehavior = ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'], id = `pf-tooltip-${pfTooltipIdCounter++}`, children, animationDuration = 300, triggerRef, 'aria-live': ariaLive = triggerRef ? 'polite' : 'off', onTooltipHidden = () => { } } = _a, rest = __rest(_a, [\"content\", \"position\", \"trigger\", \"isVisible\", \"isContentLeftAligned\", \"enableFlip\", \"className\", \"entryDelay\", \"exitDelay\", \"appendTo\", \"zIndex\", \"minWidth\", \"maxWidth\", \"distance\", \"aria\", \"flipBehavior\", \"id\", \"children\", \"animationDuration\", \"triggerRef\", 'aria-live', \"onTooltipHidden\"]);\n    // could make this a prop in the future (true | false | 'toggle')\n    const hideOnClick = true;\n    const triggerOnMouseenter = trigger.includes('mouseenter');\n    const triggerOnFocus = trigger.includes('focus');\n    const triggerOnClick = trigger.includes('click');\n    const triggerManually = trigger === 'manual';\n    const [visible, setVisible] = React.useState(false);\n    const popperRef = React.createRef();\n    const onDocumentKeyDown = (event) => {\n        if (!triggerManually) {\n            if (event.key === KeyTypes.Escape && visible) {\n                hide();\n            }\n        }\n    };\n    const onTriggerEnter = (event) => {\n        if (event.key === KeyTypes.Enter) {\n            if (!visible) {\n                show();\n            }\n            else {\n                hide();\n            }\n        }\n    };\n    React.useEffect(() => {\n        if (isVisible) {\n            show();\n        }\n        else {\n            hide();\n        }\n    }, [isVisible]);\n    const show = () => {\n        setVisible(true);\n    };\n    const hide = () => {\n        setVisible(false);\n    };\n    const positionModifiers = {\n        top: styles.modifiers.top,\n        bottom: styles.modifiers.bottom,\n        left: styles.modifiers.left,\n        right: styles.modifiers.right,\n        'top-start': styles.modifiers.topLeft,\n        'top-end': styles.modifiers.topRight,\n        'bottom-start': styles.modifiers.bottomLeft,\n        'bottom-end': styles.modifiers.bottomRight,\n        'left-start': styles.modifiers.leftTop,\n        'left-end': styles.modifiers.leftBottom,\n        'right-start': styles.modifiers.rightTop,\n        'right-end': styles.modifiers.rightBottom\n    };\n    const hasCustomMaxWidth = maxWidth !== tooltipMaxWidth.value;\n    const content = (React.createElement(\"div\", Object.assign({ \"aria-live\": ariaLive, className: css(styles.tooltip, className), role: \"tooltip\", id: id, style: {\n            maxWidth: hasCustomMaxWidth ? maxWidth : null\n        }, ref: popperRef }, rest),\n        React.createElement(TooltipArrow, null),\n        React.createElement(TooltipContent, { isLeftAligned: isContentLeftAligned }, bodyContent)));\n    const onDocumentClick = (event, triggerElement) => {\n        // event.currentTarget = document\n        // event.target could be triggerElement or something else\n        if (hideOnClick === true) {\n            // hide on inside the toggle as well as on outside clicks\n            if (visible) {\n                hide();\n            }\n            else if (event.target === triggerElement) {\n                show();\n            }\n        }\n        else if (hideOnClick === 'toggle' && event.target === triggerElement) {\n            // prevent outside clicks from hiding but allow it to still be toggled on toggle click\n            if (visible) {\n                hide();\n            }\n            else {\n                show();\n            }\n        }\n        else if (hideOnClick === false && !visible && event.target === triggerElement) {\n            show();\n        }\n    };\n    const addAriaToTrigger = () => {\n        if (aria === 'describedby' && children && children.props && !children.props['aria-describedby']) {\n            return React.cloneElement(children, { 'aria-describedby': id });\n        }\n        else if (aria === 'labelledby' && children.props && !children.props['aria-labelledby']) {\n            return React.cloneElement(children, { 'aria-labelledby': id });\n        }\n        return children;\n    };\n    return (React.createElement(Popper, { trigger: aria !== 'none' && visible ? addAriaToTrigger() : children, triggerRef: triggerRef, popper: content, popperRef: popperRef, minWidth: minWidth !== undefined ? minWidth : 'revert', appendTo: appendTo, isVisible: visible, positionModifiers: positionModifiers, distance: distance, placement: position, onMouseEnter: triggerOnMouseenter && show, onMouseLeave: triggerOnMouseenter && hide, onPopperMouseEnter: triggerOnMouseenter && show, onPopperMouseLeave: triggerOnMouseenter && hide, onFocus: triggerOnFocus && show, onBlur: triggerOnFocus && hide, onDocumentClick: triggerOnClick && onDocumentClick, onDocumentKeyDown: triggerManually ? null : onDocumentKeyDown, onTriggerEnter: triggerManually ? null : onTriggerEnter, enableFlip: enableFlip, zIndex: zIndex, flipBehavior: flipBehavior, animationDuration: animationDuration, entryDelay: entryDelay, exitDelay: exitDelay, onHidden: onTooltipHidden }));\n};\nTooltip.displayName = 'Tooltip';\n//# sourceMappingURL=Tooltip.js.map","import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import './tooltip.css';\nexport default {\n  \"modifiers\": {\n    \"top\": \"pf-m-top\",\n    \"topLeft\": \"pf-m-top-left\",\n    \"topRight\": \"pf-m-top-right\",\n    \"bottom\": \"pf-m-bottom\",\n    \"bottomLeft\": \"pf-m-bottom-left\",\n    \"bottomRight\": \"pf-m-bottom-right\",\n    \"left\": \"pf-m-left\",\n    \"leftTop\": \"pf-m-left-top\",\n    \"leftBottom\": \"pf-m-left-bottom\",\n    \"right\": \"pf-m-right\",\n    \"rightTop\": \"pf-m-right-top\",\n    \"rightBottom\": \"pf-m-right-bottom\",\n    \"textAlignLeft\": \"pf-m-text-align-left\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\",\n  \"tooltip\": \"pf-v5-c-tooltip\",\n  \"tooltipArrow\": \"pf-v5-c-tooltip__arrow\",\n  \"tooltipContent\": \"pf-v5-c-tooltip__content\"\n};","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert, Button, Modal, ModalVariant, Stack, StackItem, TextContent } from '@patternfly/react-core';\nimport { useParams } from 'react-router-dom';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchServiceAccounts } from '../../../redux/actions/service-account-actions';\nimport { ServiceAccountsState } from '../../../redux/reducers/service-account-reducer';\nimport { getDateFormat } from '../../../helpers/shared/helpers';\nimport { RowProps } from '../../user/user-table-helpers';\nimport { LAST_PAGE, ServiceAccount } from '../../../helpers/service-account/service-account-helper';\nimport { DEFAULT_ACCESS_GROUP_ID } from '../../../utilities/constants';\nimport { addServiceAccountsToGroup } from '../../../redux/actions/group-actions';\nimport messages from '../../../Messages';\nimport './group-service-accounts.scss';\n\ninterface AddGroupServiceAccountsProps {\n  postMethod: (promise?: Promise<unknown>) => void;\n}\n\nexport interface PaginationProps {\n  count?: number;\n  limit: number;\n  offset: number;\n}\n\nconst reducer = ({\n  serviceAccountReducer,\n  groupReducer: { systemGroup },\n}: {\n  serviceAccountReducer: ServiceAccountsState;\n  groupReducer: { systemGroup?: { uuid: string } };\n}) => ({\n  serviceAccounts: serviceAccountReducer.serviceAccounts,\n  status: serviceAccountReducer.status,\n  isLoading: serviceAccountReducer.isLoading,\n  limit: serviceAccountReducer.limit,\n  offset: serviceAccountReducer.offset,\n  systemGroupUuid: systemGroup?.uuid,\n});\n\nconst createRows = (data: ServiceAccount[], checkedRows = []) =>\n  data?.reduce(\n    (acc: unknown[], curr: ServiceAccount) => [\n      ...acc,\n      {\n        uuid: curr.uuid,\n        title: curr.name,\n        cells: [\n          curr.name,\n          curr.clientId,\n          curr.createdBy,\n          <Fragment key={`${curr.name}-modified`}>\n            <DateFormat date={curr.createdAt} type={getDateFormat(curr.createdAt)} />\n          </Fragment>,\n        ],\n        selected: Boolean(checkedRows && checkedRows.find((row: RowProps) => row.uuid === curr.uuid)),\n      },\n    ],\n    []\n  );\n\nconst AddGroupServiceAccounts: React.FunctionComponent<AddGroupServiceAccountsProps> = ({ postMethod }: AddGroupServiceAccountsProps) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { groupId } = useParams();\n  const { auth, getEnvironmentDetails } = useChrome();\n  const [selectedAccounts, setSelectedAccounts] = useState([]);\n  const { serviceAccounts, status, limit, offset, isLoading, systemGroupUuid } = useSelector(reducer);\n\n  const fetchAccounts = useCallback(\n    async (props?: PaginationProps) => {\n      const env = getEnvironmentDetails();\n      const token = await auth.getToken();\n      dispatch(fetchServiceAccounts({ limit: props?.limit ?? limit, offset: props?.offset ?? offset, token, sso: env?.sso }));\n    },\n    [limit, offset]\n  );\n\n  useEffect(() => {\n    fetchAccounts({ limit, offset: 0 });\n  }, []);\n\n  const onCancel = () => {\n    postMethod();\n  };\n\n  const onSubmit = () => {\n    const action = addServiceAccountsToGroup(groupId === DEFAULT_ACCESS_GROUP_ID ? systemGroupUuid : groupId, selectedAccounts);\n    dispatch(action);\n    postMethod(action.payload);\n  };\n\n  const columns = [\n    { title: intl.formatMessage(messages.description), orderBy: 'description' },\n    { title: intl.formatMessage(messages.clientId), orderBy: 'clientId' },\n    { title: intl.formatMessage(messages.owner), orderBy: 'owner' },\n    { title: intl.formatMessage(messages.timeCreated), orderBy: 'timeCreated' },\n  ];\n\n  return (\n    <Modal\n      isOpen\n      className=\"rbac\"\n      variant={ModalVariant.medium}\n      title={intl.formatMessage(messages.addServiceAccount)}\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={selectedAccounts.length === 0} variant=\"primary\" onClick={onSubmit}>\n          {intl.formatMessage(messages.addToGroup)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            {intl.formatMessage(messages.addServiceAccountsToGroupDescription)}\n            <Alert\n              className=\"pf-v5-u-mt-sm rbac-service-accounts-alert\"\n              variant=\"info\"\n              component=\"span\"\n              isInline\n              isPlain\n              title={intl.formatMessage(messages.visitServiceAccountsPage, {\n                link: (\n                  <AppLink to=\"/service-accounts\" linkBasename=\"/iam\">\n                    {intl.formatMessage(messages.serviceAccountsPage)}\n                  </AppLink>\n                ),\n              })}\n            />\n          </TextContent>\n        </StackItem>\n        <StackItem className=\"rbac-add-service-account-modal\">\n          <TableToolbarView\n            columns={columns}\n            isSelectable\n            rows={createRows(serviceAccounts, selectedAccounts)}\n            data={serviceAccounts}\n            fetchData={fetchAccounts}\n            isLoading={isLoading}\n            pagination={{\n              limit,\n              offset,\n              ...(status === LAST_PAGE ? { count: offset + serviceAccounts.length } : {}),\n            }}\n            paginationProps={{\n              toggleTemplate: ({ firstIndex, lastIndex }) => (\n                <>\n                  <b>\n                    {firstIndex} - {lastIndex}\n                  </b>{' '}\n                  of <b>{status === LAST_PAGE ? offset + serviceAccounts.length : 'many'}</b>\n                </>\n              ),\n              isCompact: true,\n            }}\n            checkedRows={selectedAccounts}\n            setCheckedItems={setSelectedAccounts}\n            titlePlural={intl.formatMessage(messages.serviceAccounts).toLowerCase()}\n            titleSingular={intl.formatMessage(messages.serviceAccount)}\n            emptyProps={{\n              title: intl.formatMessage(messages.noServiceAccountsFound),\n              description: [intl.formatMessage(messages.contactServiceTeamForAccounts), ''],\n            }}\n            tableId=\"group-add-accounts\"\n            ouiaId=\"group-add-accounts\"\n          />\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nexport default AddGroupServiceAccounts;\n","import * as ActionTypes from '../action-types';\nimport * as ServiceAccountsHelper from '../../helpers/service-account/service-account-helper';\n\nexport const fetchServiceAccounts = (apiProps: Record<string, unknown>) => ({\n  type: ActionTypes.FETCH_SERVICE_ACCOUNTS,\n  payload: ServiceAccountsHelper.getServiceAccounts(apiProps),\n  meta: apiProps,\n});\n"],"names":["TooltipContent","_a","className","children","isLeftAligned","props","__rest","Object","assign","css","tooltipContent","modifiers","textAlignLeft","displayName","TooltipArrow","tooltipArrow","TooltipPosition","pfTooltipIdCounter","Tooltip","content","bodyContent","position","trigger","isVisible","isContentLeftAligned","enableFlip","entryDelay","exitDelay","appendTo","document","body","zIndex","minWidth","maxWidth","value","distance","aria","flipBehavior","id","animationDuration","triggerRef","ariaLive","onTooltipHidden","rest","triggerOnMouseenter","includes","triggerOnFocus","triggerOnClick","triggerManually","visible","setVisible","popperRef","show","hide","positionModifiers","top","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","leftTop","leftBottom","rightTop","rightBottom","hasCustomMaxWidth","tooltip","role","style","ref","Popper","popper","undefined","placement","onMouseEnter","onMouseLeave","onPopperMouseEnter","onPopperMouseLeave","onFocus","onBlur","onDocumentClick","event","triggerElement","target","onDocumentKeyDown","key","Escape","onTriggerEnter","Enter","onHidden","DropdownPosition","DropdownDirection","DropdownContext","onSelect","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","menuComponent","DropdownArrowContext","keyHandler","sendRef","reducer","serviceAccountReducer","groupReducer","systemGroup","serviceAccounts","status","isLoading","limit","offset","systemGroupUuid","uuid","createRows","data","checkedRows","reduce","acc","curr","title","name","cells","clientId","createdBy","Fragment","DateFormat","date","createdAt","type","selected","Boolean","find","row","postMethod","intl","dispatch","useDispatch","groupId","useParams","auth","getEnvironmentDetails","useChrome","selectedAccounts","setSelectedAccounts","useState","useSelector","fetchAccounts","useCallback","async","env","token","getToken","apiProps","sso","payload","meta","useEffect","onCancel","columns","formatMessage","description","orderBy","owner","timeCreated","Modal","isOpen","variant","ModalVariant","medium","addServiceAccount","actions","Button","ouiaId","isDisabled","length","onClick","action","addToGroup","cancel","onClose","Stack","hasGutter","StackItem","TextContent","addServiceAccountsToGroupDescription","Alert","component","isInline","isPlain","visitServiceAccountsPage","link","AppLink","to","linkBasename","serviceAccountsPage","isSelectable","rows","fetchData","pagination","count","paginationProps","toggleTemplate","firstIndex","lastIndex","isCompact","setCheckedItems","titlePlural","toLowerCase","titleSingular","serviceAccount","emptyProps","noServiceAccountsFound","contactServiceTeamForAccounts","tableId"],"sourceRoot":""}
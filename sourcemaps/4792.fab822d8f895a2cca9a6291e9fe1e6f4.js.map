{"version":3,"file":"js/4792.ac9bdc0645a5a2757dae.js","mappings":"wIAGA,MAQA,EARwBA,IACtB,MAAMC,GAAW,IAAAC,eAEjB,MAAO,CAACC,EAAIC,IACHH,GAAS,OAAgBE,EAAIH,GAAeI,EACpD,C,uECNH,MAAMC,GAAU,E,SAAA,MAETC,eAAeC,EAAuBC,GAC3C,aAAaH,EAAQI,iBAAiBD,EACxC,CAEOF,eAAeI,EAAYF,GAChC,aAAaH,EAAQK,YAAYF,EACnC,CCPO,MAAM,EAA0BA,IAAa,CAClDG,KAAM,KACNC,QAAS,EAAkCJ,KAGhC,EAAeA,IAAa,CACvCG,KAAM,KACNC,QAAS,EAAuBJ,I,wKCKlC,MAAMK,EAAwB,aACxBC,EAAqBC,GAAU,kBAAC,IAAI,IAAKA,EAAOC,GAAIH,IAEpDI,EAAgB,EAAGC,YAAWC,kBAClC,MAAM,SAAEC,IAAa,eAErB,OACE,kBAAC,IAAO,MACL,EAAGC,WAAUC,UAASC,aAAYC,gBACjC,yBAAKC,UAAU,gBACb,kBAAC,IAAW,CAACA,UAAU,gBACrB,kBAAC,EAAAC,OAAM,CACLC,OAAO,sBACPC,QAAQ,UACRC,KAAMhB,EACNF,KAAK,SACLmB,WAAYT,GAAYE,GAAcC,GAAcF,GAEnDJ,GAEH,kBAAC,EAAAQ,OAAM,CAACC,OAAO,0BAA0BC,QAAQ,OAAOG,QAASX,EAAUJ,GAAG,gBAC3EG,MAMZ,EAGHF,EAAce,UAAY,CACxBd,UAAW,SACXC,YAAa,UAGfF,EAAcgB,aAAe,CAC3Bf,UAAW,OACXC,YAAa,UAGf,MAAMe,EAAoB,EAAGC,aAAYjB,YAAWC,cAAaiB,WAAUrB,KACzE,kBAAC,EAAAsB,MAAK,CAACC,KAAK,YAAaH,EAAYI,OAAQ,kBAACtB,EAAa,CAACC,UAAWA,EAAWC,YAAaA,KAC5FiB,MACD,kBAAC,KAAY,IAAKrB,EAAOyB,kBAAkB,EAAOC,YAAa3B,KAInEoB,EAAkBF,UAAY,CAC5BG,WAAY,cACTlB,EAAce,WAGnB,S,wKC1DA,MAAMU,EAAc,EAAGC,6BAA4BC,kBAAiBvB,eAClE,MAAM,SAAED,IAAa,eACfyB,GAAY,IAAAC,SAAQH,KAAiCC,GAAmBvB,EACxE0B,GAAO,UACb,OACE,kBAAC,EAAAC,YAAW,CAACvB,UAAU,gBACrB,kBAAC,EAAAC,OAAM,CAACC,OAAO,wBAAwBhB,KAAK,SAASmB,WAAYe,EAAWjB,QAAQ,WACjFmB,EAAKE,cAAc,IAASC,OAE/B,kBAAC,EAAAxB,OAAM,CAACC,OAAO,0BAA0BC,QAAQ,OAAOG,QAAS,IAAMX,KACpE2B,EAAKE,cAAc,IAASE,SAGlC,EAGHT,EAAYV,UAAY,CACtBW,2BAA4B,UAAgB,CAC1C,CAAC,YAAmB,cAAoB,CAAC,WAAkB,WAAkB,aAE/EC,gBAAiB,SACjBvB,SAAU,SACVD,SAAU,UAGZ,MAYA,EAZ6BgC,GAC3B,kBAAC,IAAO,CACNC,aAAc,CACZhC,UAAU,EACVuB,iBAAiB,EACjBD,4BAA4B,KAG5B5B,GAAU,kBAAC2B,EAAW,IAAK3B,KAAWqC,M,2DCjC5C,MAAME,EAAe,EAAGC,uBAAsBxC,KAC5C,kBAAC,IAAe,CACdyC,gBAAiB,CACf,CAAC,IAAeC,YAAa,IAC7B,CAAC,IAAeC,UAAW,KAE7BC,aAAe5C,GAAU,kBAAC,KAAY,IAAKwC,KAAuBxC,EAAO2B,YAAa,OAClF3B,IAIRuC,EAAatB,UAAY,CACvBuB,kBAAmB,YAGrB,S,sKChBO,MAAMK,EAAe,EAC1BjD,OACAkD,SACAC,gBACAC,iBACAC,cACAC,oBACAC,2BACAC,iCAEA,MAAMpB,GAAO,UACb,OACE,kBAAC,EAAAV,MAAK,eACQ,gBACZ+B,MACE,0BAAM3C,UAAU,wCACd,kBAAC,EAAA4C,KAAI,CAACC,KAAK,KAAK7C,UAAU,iBACxB,kBAAC,IAAuB,CAACA,UAAU,gDAEpCuC,GAAejB,EAAKE,cAAc,IAASsB,iBAAkB,CAAEC,KAAM7D,KAG1EiB,QAAS,EAAA6C,aAAaC,MACtBjD,UAAU,qCACVoC,OAAQA,EACRc,QAASb,EACTc,QAAS,CACP,kBAAC,EAAAlD,OAAM,CAACC,OAAO,sBAAsBkD,IAAI,UAAUjD,QAAQ,UAAUG,QAASgC,GAC3EG,GAA4BnB,EAAKE,cAAc,IAAS6B,OAE3D,kBAAC,EAAApD,OAAM,CAACC,OAAO,0BAA0BkD,IAAI,SAASjD,QAAQ,OAAOG,QAAS+B,GAC3EK,GAA8BpB,EAAKE,cAAc,IAAS8B,SAI/D,8BAAOd,GAAqBlB,EAAKE,cAAc,IAAS+B,wB,KAE3D,EAGHpB,EAAa5B,UAAY,CACvBrB,KAAM,WACNqD,YAAa,SACbC,kBAAmB,SACnBC,yBAA0B,WAC1BC,2BAA4B,WAC5BN,OAAQ,SACRC,cAAe,SACfC,eAAgB,S,iSC/ClB,MAAMkB,EAAkC,EAAG9C,gBAAepB,MACxD,MAAMgC,GAAO,UAEPmC,GADc,eACOC,WAAWD,OAEtC,OACE,kBAAChD,EAAA,EAAiB,IACZnB,EACJoB,WAAY,IACPA,EACHwC,QAAS,IAAMxC,EAAWwC,QAAQO,IAEpC9C,MACE8C,EAAO,yBACHE,EACA,IACE,yBAAK3D,UAAU,+BACb,kBAAC,EAAA4D,MAAK,CAAC5D,UAAU,uBAAuBG,QAAQ,SAAS0D,UAAQ,EAAClB,MAAOrB,EAAKE,cAAc,IAASsC,8BAKlH,EAGHN,EAAgCjD,UAAY,CAC1CG,WAAY,YAGd,U,wBCpBA,MAaMqD,EAAe,CACnBC,sBAAkBL,EAClBM,sBAAsB,EACtBC,mBAAeP,EACfQ,qBAAqB,GAGvB,SAASC,EAAQC,EAAOC,GACtB,GACO,WADCA,EAAOpF,KAEX,MAAO,IACFmF,KACAC,EAAOnF,SAGZ,MAAM,IAAIoF,KAEhB,CAEA,MAAMC,EAAsC,CAACC,EAAWP,EAAevF,KACrE,MAAM2C,GAAO,UACb,MAAO,CACLoD,OAAQ,CACN,CACEC,UAAW,IAAeC,iBAC1BC,KAAM,mBACNC,UAAWxD,EAAKE,cAAc,IAASuD,oBACvCC,WAAY1D,EAAKE,cAAc,IAASyD,kBACxCC,mBAAoB5D,EAAKE,cAAc,IAAS2D,kBAChDC,iBAAkB9D,EAAKE,cAAc,IAAS2D,kBAC9CxG,QAAS,IAAKuF,GAAiBO,EAAY9F,EAAU,IACrD0G,SAAU,CAAC,CAAEnG,KAAM,uBACnBoG,cAAc,IAGnB,EAUGC,EAAkB,CACtB,qBAAsB,IAAOC,GAAUA,GAASA,EAAMC,OAAS,OAAI9B,EAAY,6DAG3E+B,EAA+B,EAAGC,kBACtC,MAAMrE,GAAO,WACP,OAAEsE,EAAM,aAAEC,IAAiB,IAAAC,aAC3BtH,GAAW,EAAAuH,EAAA,KAEXC,GAAW,IAAAC,gBAGV5B,EAAO6B,IAAmB,IAAAC,YAAW/B,EAASL,IAE/C,iBAAEqC,EAAgB,KAAEvF,IAAS,IAAAwF,cAChChC,IAAU,CACTxD,KAAMwD,EAAMiC,YAAYC,aACxBH,iBAAkB/B,EAAMiC,YAAYC,cAAcC,OAC9C,IACEnC,EAAMiC,YAAYC,aAAaC,OAC5BC,QAAQC,GAAMA,EAAEC,aAAed,IAC/Be,KAAKJ,GAAWA,EAAOK,oBAAoBD,KAAKE,GAAaA,EAASC,gBAAgBvB,WAE3F,GACJwB,gBAAiB3C,EAAMiC,YAAYU,mBAErC,EAAAC,eAGI,cAAEC,EAAa,UAAEC,EAAS,mBAAEC,EAAkB,UAAE3C,IAAc,IAAA4B,cAAa/G,GApClE,GAAG+H,aAAeH,gBAAeC,YAAWG,mBAAkB7C,cAAeP,KAAkB,CAC9GgD,cAAeA,EAAcK,KAC7B9C,UAAWA,EAAUP,GAAiB,CAAEA,cAAeO,EAAUP,IAAmBO,EACpF0C,YACAC,mBAAoBE,EAAmB,IAgCoDE,CAASlI,EAAO+E,EAAMH,gBAAgB,EAAA+C,eAEjI,IAAAQ,YAAU,KArB6BzB,GAAS,SAsBpB,GACzB,CAACH,KAEJ,IAAA4B,YAAU,KACR,IAAKN,EAAW,CACd,IAAIO,EAAOR,EAAcS,MAAMC,GAAMA,EAAEpC,QAAUK,EAAagC,MAAM,OAAO,MAAKH,KAC5EA,IACFxB,EAAgB,CAAEhH,KAAM,SAAUC,QAAS,CAAE+E,cAAewD,EAAKG,MAAM,KAAK,MAC5E7B,GAAS,OAAY0B,I,IAGxB,CAACR,IAEJ,MAAMvH,EAAW,IAAMnB,EAASmH,EAAa,CAAEmC,SAAS,IAElDC,EAAgBR,IAChBA,EAAK,sBAAwBnB,EAC/BzG,IAEAuG,EAAgB,CACdhH,KAAM,SACNC,QAAS,CACP6E,iBAAkBuD,EAAK,oBACvBtD,sBAAsB,I,EA4BxBtF,EA7Ic,CAAC8F,GACrBuD,OAAOC,QAAQxD,GAAWyD,QACxB,CAACC,GAAM/E,EAAKoC,KAAW,IAClB2C,KACA3C,EAAMoB,KAAKgB,IAAM,CAClBpC,MAAOoC,EAAEpC,MACTkC,KAAMtE,EACNgF,MAAOR,EAAEpC,YAGb,IAmIc6C,CAAc5D,GAE9B,OACE,kBAAC,aAAc,KACb,kBAAC,IAAY,CACXlC,YAAajB,EAAKE,cAAc,IAAS8G,6BACzC9F,kBAAmBlB,EAAKE,cAAc,IAAS+G,mBAC/CnG,OAAQiC,EAAMJ,qBACd5B,cAAe,IAAM6D,EAAgB,CAAEhH,KAAM,SAAUC,QAAS,CAAE8E,sBAAsB,KACxF3B,eAAgB3C,KAEhBwH,GAAaC,IAAuB/C,EAAMF,oBAC1C,kBAAC,EAAAvD,MAAK,CACJT,QAAS,EAAA6C,aAAawF,MACtBxI,UAAU,8BACVoC,QAAQ,EACRO,MAAOrB,EAAKE,cAAc,IAASiH,yBACnCvF,QAAS,KACPgD,EAAgB,CAAEhH,KAAM,SAAUC,QAAS,CAAEgF,qBAAqB,KAClExE,GAAU,GAGZ,kBAAC,EAAA+I,SAAQ,KACP,kBAAC,EAAAC,QAAO,QAIZ,kBAAC,IAAY,CACXC,OAAQpE,EAAoCC,EAAWJ,EAAMH,cAAevF,GAC5EoD,gBAAiB,KACjB8G,cAAe,CAAE,mBAAoBxE,EAAML,kBAAoBoC,GAAoB,IACnF0C,SArDcvB,IACpBrB,EAAgB,CAAEhH,KAAM,SAAUC,QAAS,CAAE6E,iBAAkBuD,EAAK,uBACpE,MAAMwB,EAAY,CAChBpC,WAAYd,EACZgB,oBAAqB,CACnB,CACEE,gBAAiB,CACf3D,IAAK,mBAAmByC,EAAagC,MAAM,OAAO,KAClDmB,UAA+C,IAApCzB,EAAK,oBAAoB9B,OAAe,QAAU,KAC7DD,MAA2C,IAApC+B,EAAK,oBAAoB9B,OAAe8B,EAAK,oBAAoB,GAAKA,EAAK,wBAK1FvB,GAAS,QAAWJ,EAAQ,IAAK/E,EAAM2F,OAAQ,IAAI3F,EAAK2F,OAAOC,QAAQ1D,GAASA,EAAK4D,aAAed,IAAekD,MAAe,GAAME,MACtI,KACEjD,GAAS,QAAUJ,IACnBpH,EAASmH,EAAY,GAExB,EAmCKhG,SAAW4H,GAASQ,EAAaR,GACjChC,gBAAiBA,EACjBrD,aAAe5C,GACb,kBAAC,EAA+B,IAC1BA,EACJoB,WAAY,CACVwC,QAAS6E,EACT3F,QAASiC,EAAMJ,qBACf9D,QAAS,QACTwC,MAAOrB,EAAKE,cAAc,IAASiH,yBACnCS,YAAa5H,EAAKE,cAAc,IAAS2H,iCAOtD,EAGHzD,EAA6BnF,UAAY,CACvCoF,YAAa,WAAiByD,YAGhC,S","sources":["webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/smart-components/common/ModalFormTemplate.js","webpack:///./src/smart-components/common/FormButtons.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/role/ResourceDefinitionsFormTemplate.js","webpack:///./src/smart-components/role/edit-resource-definitions-modal.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const getResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const getResource = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\n/**\n * This id is requried to submit form by a button outside of the form element\n */\nconst MODAL_FORM_IDENTIFIER = 'modal-form';\nconst CustomFormWrapper = (props) => <Form {...props} id={MODAL_FORM_IDENTIFIER} />;\n\nconst CustomButtons = ({ saveLabel, cancelLabel }) => {\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy>\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-v5-c-form\">\n          <ActionGroup className=\"pf-v5-u-mt-0\">\n            <Button\n              ouiaId=\"primary-save-button\"\n              variant=\"primary\"\n              form={MODAL_FORM_IDENTIFIER}\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {saveLabel}\n            </Button>\n            <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {cancelLabel}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  saveLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n};\n\nCustomButtons.defaultProps = {\n  saveLabel: 'Save',\n  cancelLabel: 'Cancel',\n};\n\nconst ModalFormTemplate = ({ ModalProps, saveLabel, cancelLabel, alert, ...props }) => (\n  <Modal role=\"dialog\" {...ModalProps} footer={<CustomButtons saveLabel={saveLabel} cancelLabel={cancelLabel} />}>\n    {alert?.()}\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n  ...CustomButtons.propTypes,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst FormButtons = ({ dirtyFieldsSinceLastSubmit, submitSucceeded, pristine }) => {\n  const { onCancel } = useFormApi();\n  const noChanges = isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  const intl = useIntl();\n  return (\n    <ActionGroup className=\"pf-v5-u-mt-0\">\n      <Button ouiaId=\"primary-submit-button\" type=\"submit\" isDisabled={noChanges} variant=\"primary\">\n        {intl.formatMessage(messages.save)}\n      </Button>\n      <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={() => onCancel()}>\n        {intl.formatMessage(messages.cancel)}\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormButtons from './FormButtons';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nconst FormRenderer = ({ formTemplateProps, ...props }) => (\n  <ReactFormRender\n    componentMapper={{\n      [componentTypes.TEXT_FIELD]: TextField,\n      [componentTypes.TEXTAREA]: Textarea,\n    }}\n    FormTemplate={(props) => <FormTemplate {...formTemplateProps} {...props} FormButtons={FormButtons} />}\n    {...props}\n  />\n);\n\nFormRenderer.propTypes = {\n  formTemplateProps: PropTypes.object,\n};\n\nexport default FormRenderer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button, Icon } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/dynamic/icons/exclamation-triangle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './warningModal.scss';\n\nexport const WarningModal = ({\n  type,\n  isOpen,\n  onModalCancel,\n  onModalConfirm,\n  customTitle,\n  customDescription,\n  customPrimaryButtonTitle,\n  customSecondaryButtonTitle,\n}) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      data-testid=\"warning-modal\"\n      title={\n        <span className=\"rbac-c-wizard__cancel-warning-header\">\n          <Icon size=\"lg\" className=\"pf-v5-u-mr-md\">\n            <ExclamationTriangleIcon className=\"rbac-c-wizard__cancel-warning-header--icon\" />\n          </Icon>\n          {customTitle || intl.formatMessage(messages.exitItemCreation, { item: type })}\n        </span>\n      }\n      variant={ModalVariant.small}\n      className=\"rbac rbac-c-wizard__cancel-warning\"\n      isOpen={isOpen}\n      onClose={onModalCancel}\n      actions={[\n        <Button ouiaId=\"primary-exit-button\" key=\"confirm\" variant=\"primary\" onClick={onModalConfirm}>\n          {customPrimaryButtonTitle ?? intl.formatMessage(messages.exit)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onModalCancel}>\n          {customSecondaryButtonTitle ?? intl.formatMessage(messages.stay)}\n        </Button>,\n      ]}\n    >\n      <span>{customDescription || intl.formatMessage(messages.discardedInputsWarning)} </span>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  customTitle: PropTypes.node,\n  customDescription: PropTypes.node,\n  customPrimaryButtonTitle: PropTypes.string,\n  customSecondaryButtonTitle: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onModalConfirm: PropTypes.func,\n};\n","import React from 'react';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { Alert } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitionsFormTemplate = ({ ModalProps, ...props }) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  return (\n    <ModalFormTemplate\n      {...props}\n      ModalProps={{\n        ...ModalProps,\n        onClose: () => ModalProps.onClose(values),\n      }}\n      alert={\n        values['dual-list-select']\n          ? undefined\n          : () => (\n              <div className=\"rbac-m-resource-definitions\">\n                <Alert className=\"pf-v5-c-modal__alert\" variant=\"danger\" isInline title={intl.formatMessage(messages.defineAtLeastOneResource)} />\n              </div>\n            )\n      }\n    />\n  );\n};\n\nResourceDefinitionsFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ResourceDefinitionsFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { updateRole, fetchRole } from '../../redux/actions/role-actions';\nimport { getResource, getResourceDefinitions } from '../../redux/actions/cost-management-actions';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { WarningModal } from '../common/warningModal';\nimport { Spinner, Modal, ModalVariant, Bullseye } from '@patternfly/react-core';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport ResourceDefinitionsFormTemplate from './ResourceDefinitionsFormTemplate';\nimport flatten from 'lodash/flattenDeep';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst createOptions = (resources) =>\n  Object.entries(resources).reduce(\n    (acc, [key, value]) => [\n      ...acc,\n      ...value.map((r) => ({\n        value: r.value,\n        path: key,\n        label: r.value,\n      })),\n    ],\n    []\n  );\n\nconst initialState = {\n  changedResources: undefined,\n  cancelWarningVisible: false,\n  resourcesPath: undefined,\n  loadingStateVisible: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst createEditResourceDefinitionsSchema = (resources, resourcesPath, options) => {\n  const intl = useIntl();\n  return {\n    fields: [\n      {\n        component: componentTypes.DUAL_LIST_SELECT,\n        name: 'dual-list-select',\n        leftTitle: intl.formatMessage(messages.resourcesAvailable),\n        rightTitle: intl.formatMessage(messages.resourcesDefined),\n        filterOptionsTitle: intl.formatMessage(messages.filterByResource),\n        filterValueTitle: intl.formatMessage(messages.filterByResource),\n        options: [...(resourcesPath && resources ? options : [])],\n        validate: [{ type: 'validate-resources' }],\n        isSearchable: true,\n      },\n    ],\n  };\n};\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }, resourcesPath) => ({\n  resourceTypes: resourceTypes.data,\n  resources: resources[resourcesPath] ? { resourcesPath: resources[resourcesPath] } : resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst validatorMapper = {\n  'validate-resources': () => (value) => value && value.length > 0 ? undefined : 'At least one resource must be defined for this permission',\n};\n\nconst EditResourceDefinitionsModal = ({ cancelRoute }) => {\n  const intl = useIntl();\n  const { roleId, permissionId } = useParams();\n  const navigate = useAppNavigate();\n\n  const dispatch = useDispatch();\n  const fetchResourceDefinitions = () => dispatch(getResourceDefinitions());\n\n  const [state, dispatchLocally] = useReducer(reducer, initialState);\n\n  const { definedResources, role } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      definedResources: state.roleReducer.selectedRole?.access\n        ? flatten(\n            state.roleReducer.selectedRole.access\n              .filter((a) => a.permission === permissionId)\n              .map((access) => access.resourceDefinitions.map((resource) => resource.attributeFilter.value))\n          )\n        : [],\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector((props) => selector(props, state.resourcesPath), shallowEqual);\n\n  useEffect(() => {\n    fetchResourceDefinitions();\n  }, [permissionId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let path = resourceTypes.find((r) => r.value === permissionId.split(':')?.[1])?.path;\n      if (path) {\n        dispatchLocally({ type: 'update', payload: { resourcesPath: path.split('/')[5] } });\n        dispatch(getResource(path));\n      }\n    }\n  }, [resourceTypes]);\n\n  const onCancel = () => navigate(cancelRoute, { replace: true });\n\n  const handleCancel = (data) => {\n    if (data['dual-list-select'] === definedResources) {\n      onCancel();\n    } else {\n      dispatchLocally({\n        type: 'update',\n        payload: {\n          changedResources: data['dual-list-select'],\n          cancelWarningVisible: true,\n        },\n      });\n    }\n  };\n\n  const handleSubmit = (data) => {\n    dispatchLocally({ type: 'update', payload: { changedResources: data['dual-list-select'] } });\n    const newAccess = {\n      permission: permissionId,\n      resourceDefinitions: [\n        {\n          attributeFilter: {\n            key: `cost-management.${permissionId.split(':')?.[1]}`,\n            operation: data['dual-list-select'].length === 1 ? 'equal' : 'in',\n            value: data['dual-list-select'].length === 1 ? data['dual-list-select'][0] : data['dual-list-select'],\n          },\n        },\n      ],\n    };\n    dispatch(updateRole(roleId, { ...role, access: [...role.access.filter((item) => item.permission !== permissionId), newAccess] }), true).then(\n      () => {\n        dispatch(fetchRole(roleId));\n        navigate(cancelRoute);\n      }\n    );\n  };\n\n  const options = createOptions(resources);\n\n  return (\n    <React.Fragment>\n      <WarningModal\n        customTitle={intl.formatMessage(messages.exitEditResourceDefinitions)}\n        customDescription={intl.formatMessage(messages.changesWillBeLost)}\n        isOpen={state.cancelWarningVisible}\n        onModalCancel={() => dispatchLocally({ type: 'update', payload: { cancelWarningVisible: false } })}\n        onModalConfirm={onCancel}\n      ></WarningModal>\n      {(isLoading || isLoadingResources) && state.loadingStateVisible ? (\n        <Modal\n          variant={ModalVariant.large}\n          className=\"rbac-m-resource-definitions\"\n          isOpen={true}\n          title={intl.formatMessage(messages.editResourceDefinitions)}\n          onClose={() => {\n            dispatchLocally({ type: 'update', payload: { loadingStateVisible: false } });\n            onCancel();\n          }}\n        >\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        </Modal>\n      ) : (\n        <FormRenderer\n          schema={createEditResourceDefinitionsSchema(resources, state.resourcesPath, options)}\n          componentMapper={componentMapper}\n          initialValues={{ 'dual-list-select': state.changedResources || definedResources || [] }}\n          onSubmit={handleSubmit}\n          onCancel={(data) => handleCancel(data)}\n          validatorMapper={validatorMapper}\n          FormTemplate={(props) => (\n            <ResourceDefinitionsFormTemplate\n              {...props}\n              ModalProps={{\n                onClose: handleCancel,\n                isOpen: !state.cancelWarningVisible,\n                variant: 'large',\n                title: intl.formatMessage(messages.editResourceDefinitions),\n                description: intl.formatMessage(messages.editPermissionsUsingArrows),\n              }}\n            />\n          )}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nEditResourceDefinitionsModal.propTypes = {\n  cancelRoute: PropTypes.string.isRequired,\n};\n\nexport default EditResourceDefinitionsModal;\n"],"names":["linkBasename","navigate","useNavigate","to","options","costApi","async","getResourceDefinitions","apiProps","getResourceTypes","getResource","type","payload","MODAL_FORM_IDENTIFIER","CustomFormWrapper","props","id","CustomButtons","saveLabel","cancelLabel","onCancel","pristine","invalid","validating","submitting","className","Button","ouiaId","variant","form","isDisabled","onClick","propTypes","defaultProps","ModalFormTemplate","ModalProps","alert","Modal","role","footer","showFormControls","FormWrapper","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","noChanges","isEmpty","intl","ActionGroup","formatMessage","save","cancel","formProps","subscription","FormRenderer","formTemplateProps","componentMapper","TEXT_FIELD","TEXTAREA","FormTemplate","WarningModal","isOpen","onModalCancel","onModalConfirm","customTitle","customDescription","customPrimaryButtonTitle","customSecondaryButtonTitle","title","Icon","size","exitItemCreation","item","ModalVariant","small","onClose","actions","key","exit","stay","discardedInputsWarning","ResourceDefinitionsFormTemplate","values","getState","undefined","Alert","isInline","defineAtLeastOneResource","initialState","changedResources","cancelWarningVisible","resourcesPath","loadingStateVisible","reducer","state","action","Error","createEditResourceDefinitionsSchema","resources","fields","component","DUAL_LIST_SELECT","name","leftTitle","resourcesAvailable","rightTitle","resourcesDefined","filterOptionsTitle","filterByResource","filterValueTitle","validate","isSearchable","validatorMapper","value","length","EditResourceDefinitionsModal","cancelRoute","roleId","permissionId","useParams","useAppNavigate","dispatch","useDispatch","dispatchLocally","useReducer","definedResources","useSelector","roleReducer","selectedRole","access","filter","a","permission","map","resourceDefinitions","resource","attributeFilter","isRecordLoading","shallowEqual","resourceTypes","isLoading","isLoadingResources","costReducer","loadingResources","data","selector","useEffect","path","find","r","split","replace","handleCancel","Object","entries","reduce","acc","label","createOptions","exitEditResourceDefinitions","changesWillBeLost","large","editResourceDefinitions","Bullseye","Spinner","schema","initialValues","onSubmit","newAccess","operation","then","description","editPermissionsUsingArrows","isRequired"],"sourceRoot":""}
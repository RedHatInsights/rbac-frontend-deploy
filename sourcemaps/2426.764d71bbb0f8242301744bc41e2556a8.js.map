{"version":3,"file":"js/2426.ac9bdc0645a5a2757dae.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/KebabToggle.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/breadcrumbs.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Dark/DarkContext.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/helpers/shared/use-preview-flag.js","webpack:///./src/smart-components/group/group.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\nimport { Toggle } from './Toggle';\nexport const KebabToggle = (_a) => {\n    var { id = '', \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    children = null, className = '', isOpen = false, 'aria-label': ariaLabel = 'Actions', parentRef = null, getMenuRef = null, isActive = false, isPlain = false, isDisabled = false, bubbleEvent = false, onToggle = () => undefined, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref } = _a, // Types of Ref are different for React.FunctionComponent vs React.Component\n    props = __rest(_a, [\"id\", \"children\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n    return (React.createElement(Toggle, Object.assign({ id: id, className: className, isOpen: isOpen, \"aria-label\": ariaLabel, parentRef: parentRef, getMenuRef: getMenuRef, isActive: isActive, isPlain: isPlain, isDisabled: isDisabled, onToggle: onToggle, bubbleEvent: bubbleEvent }, props),\n        React.createElement(EllipsisVIcon, null)));\n};\nKebabToggle.displayName = 'KebabToggle';\n//# sourceMappingURL=KebabToggle.js.map","import { createIcon } from '../createIcon';\n\nexport const EllipsisVIconConfig = {\n  name: 'EllipsisVIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EllipsisVIcon = createIcon(EllipsisVIconConfig);\n\nexport default EllipsisVIcon;","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return breadcrumbs ? (\n    <Breadcrumb>\n      {Object.values(breadcrumbs).map((item, index) =>\n        item.title ? (\n          <BreadcrumbItem key={item.title} isActive={item.isActive}>\n            {(item.to && (\n              <NavLink end to={item.to}>\n                {item.title}\n              </NavLink>\n            )) ||\n              item.title}\n          </BreadcrumbItem>\n        ) : (\n          <BreadcrumbPlaceholder key={index} />\n        )\n      )}\n    </Breadcrumb>\n  ) : null;\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object,\n};\n\nexport default RbacBreadcrumbs;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React from 'react';\nvar DarkContext = React.createContext('light');\nexport default DarkContext;\n//# sourceMappingURL=DarkContext.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { DarkContext } from '../Dark';\nimport '../PageHeader/page-header.css';\nvar PageHeader = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    var pageHeaderClasses = classNames(className, 'pf-v5-l-page-header', 'pf-v5-c-page-header', 'pf-v5-l-page__main-section', 'pf-v5-c-page__main-section');\n    return (_jsx(DarkContext.Consumer, { children: function (theme) {\n            var _a, _b;\n            if (theme === void 0) { theme = 'light'; }\n            var themeClasses = classNames((_a = {}, _a[\"pf-m-\".concat(theme, \"-200\")] = theme === 'dark', _a), (_b = {}, _b[\"pf-m-light\"] = theme === 'light', _b));\n            return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses), \"widget-type\": \"InsightsPageHeader\", children: children })));\n        } }));\n};\nexport default PageHeader;\n//# sourceMappingURL=PageHeader.js.map","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrumbs';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children, breadcrumbs }) => (\n  <Fragment>\n    {breadcrumbs && (\n      <section className=\"pf-v5-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs {...breadcrumbs} />\n      </section>\n    )}\n    <PageHeader className=\"rbac-page-header\">{children}</PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool,\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false,\n};\n\nexport const TopToolbarTitle = ({ title, renderTitleTag, description, children }) => (\n  <Fragment>\n    <Flex>\n      <FlexItem className=\"pf-v5-u-mb-sm\">\n        <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n      </FlexItem>\n      <FlexItem alignSelf={{ modifier: 'alignSelfCenter' }}>{renderTitleTag && renderTitleTag()}</FlexItem>\n    </Flex>\n    {description && (\n      <TextContent className=\"rbac-page-header__description\">\n        {typeof description === 'string' ? <Text component={TextVariants.p}>{description}</Text> : description}\n      </TextContent>\n    )}\n    {children}\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  renderTitleTag: PropTypes.func,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button, Icon } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/dynamic/icons/exclamation-triangle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './warningModal.scss';\n\nexport const WarningModal = ({\n  type,\n  isOpen,\n  onModalCancel,\n  onModalConfirm,\n  customTitle,\n  customDescription,\n  customPrimaryButtonTitle,\n  customSecondaryButtonTitle,\n}) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      data-testid=\"warning-modal\"\n      title={\n        <span className=\"rbac-c-wizard__cancel-warning-header\">\n          <Icon size=\"lg\" className=\"pf-v5-u-mr-md\">\n            <ExclamationTriangleIcon className=\"rbac-c-wizard__cancel-warning-header--icon\" />\n          </Icon>\n          {customTitle || intl.formatMessage(messages.exitItemCreation, { item: type })}\n        </span>\n      }\n      variant={ModalVariant.small}\n      className=\"rbac rbac-c-wizard__cancel-warning\"\n      isOpen={isOpen}\n      onClose={onModalCancel}\n      actions={[\n        <Button ouiaId=\"primary-exit-button\" key=\"confirm\" variant=\"primary\" onClick={onModalConfirm}>\n          {customPrimaryButtonTitle ?? intl.formatMessage(messages.exit)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onModalCancel}>\n          {customSecondaryButtonTitle ?? intl.formatMessage(messages.stay)}\n        </Button>,\n      ]}\n    >\n      <span>{customDescription || intl.formatMessage(messages.discardedInputsWarning)} </span>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  customTitle: PropTypes.node,\n  customDescription: PropTypes.node,\n  customPrimaryButtonTitle: PropTypes.string,\n  customSecondaryButtonTitle: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onModalConfirm: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ tabItems, isHeader }) => {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => navigate(tabItems[tabIndex].to);\n\n  return (\n    <Tabs className={isHeader ? `rbac-page-header__tabs` : ''} activeKey={activeTab ? activeTab.eventKey : 0} onSelect={handleTabClick}>\n      {tabItems.map((item) => (\n        <Tab title={item.title} key={item.eventKey} eventKey={item.eventKey} name={item.name} />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool,\n};\n\nexport default AppTabs;\n","import useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nexport const usePreviewFlag = (flag) => {\n  const { isBeta, getEnvironment } = useChrome();\n  const flagValue = useFlag(flag);\n\n  if (getEnvironment() === 'prod' && isBeta() === false) {\n    return false;\n  }\n\n  return flagValue;\n};\n","import React, { Fragment, useEffect, useState } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Alert, AlertActionCloseButton, Popover, PopoverPosition, Split, SplitItem, Button } from '@patternfly/react-core';\nimport { DropdownItem, Dropdown, KebabToggle } from '@patternfly/react-core/deprecated';\nimport AppTabs from '../app-tabs/app-tabs';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { WarningModal } from '../common/warningModal';\nimport { fetchGroup, fetchSystemGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport AppLink, { mergeToBasename } from '../../presentational-components/shared/AppLink';\nimport EmptyWithAction from '../../presentational-components/shared/empty-state';\nimport RbacBreadcrumbs from '../../presentational-components/shared/breadcrumbs';\nimport { BAD_UUID, getBackRoute } from '../../helpers/shared/helpers';\nimport { DEFAULT_ACCESS_GROUP_ID } from '../../utilities/constants';\nimport messages from '../../Messages';\nimport pathnames from '../../utilities/pathnames';\nimport { usePreviewFlag } from '../../helpers/shared/use-preview-flag';\nimport './group.scss';\n\nconst Group = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const location = useLocation();\n  const chrome = useChrome();\n  const { groupId } = useParams();\n  const isPlatformDefault = groupId === DEFAULT_ACCESS_GROUP_ID;\n  const enableServiceAccounts = usePreviewFlag('platform.rbac.group-service-accounts');\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: pathnames['group-detail-roles'].link.replace(':groupId', groupId), to: 'roles' },\n    { eventKey: 1, title: 'Members', name: pathnames['group-detail-members'].link.replace(':groupId', groupId), to: 'members' },\n    ...(enableServiceAccounts\n      ? [\n          {\n            eventKey: 2,\n            title: 'Service accounts',\n            name: pathnames['group-detail-service-accounts'].link.replace(':groupId', groupId),\n            to: 'service-accounts',\n          },\n        ]\n      : []),\n  ];\n\n  const { pagination, filters, groupExists, systemGroupUuid } = useSelector(\n    ({ groupReducer: { groups, error, systemGroup } }) => ({\n      pagination: groups.pagination || groups.meta,\n      filters: groups.filters,\n      groupExists: error !== BAD_UUID,\n      systemGroupUuid: systemGroup?.uuid,\n    }),\n    shallowEqual\n  );\n\n  const { group, isGroupLoading } = useSelector(\n    ({ groupReducer: { selectedGroup, isRecordLoading } }) => ({\n      group: selectedGroup,\n      isGroupLoading: isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const [isResetWarningVisible, setResetWarningVisible] = useState(false);\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchSystemGroup({ chrome }));\n    const currId = !isPlatformDefault ? groupId : systemGroupUuid;\n    if (currId) {\n      dispatch(fetchGroup(currId));\n      chrome.appObjectId(currId);\n    }\n    return () => chrome.appObjectId(undefined);\n  }, [groupId, systemGroupUuid]);\n\n  const breadcrumbsList = () => [\n    {\n      title: intl.formatMessage(messages.groups),\n      to: getBackRoute(mergeToBasename(pathnames.groups.link), pagination, filters),\n    },\n    groupExists\n      ? { title: isGroupLoading ? undefined : group.name, isActive: true }\n      : { title: intl.formatMessage(messages.invalidGroup), isActive: true },\n  ];\n\n  const defaultGroupChangedIcon = (name) => (\n    <div style={{ display: 'inline-flex' }}>\n      {name}\n      <div className=\"pf-v5-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={\n            <FormattedMessage\n              {...messages.defaultAccessGroupNameChanged}\n              values={{\n                b: (text) => <b>{text}</b>,\n              }}\n            />\n          }\n        >\n          <OutlinedQuestionCircleIcon className=\"rbac-default-group-info-icon\" />\n        </Popover>\n      </div>\n    </div>\n  );\n\n  const defaultGroupRestore = () => (\n    <div className=\"rbac-default-group-reset-btn\">\n      <Button variant=\"link\" onClick={() => setResetWarningVisible(true)}>\n        {intl.formatMessage(messages.restoreToDefault)}\n      </Button>\n      <Popover\n        aria-label=\"default-group-icon\"\n        position={PopoverPosition.bottomEnd}\n        bodyContent={\n          <FormattedMessage\n            {...messages.restoreDefaultAccessInfo}\n            values={{\n              b: (text) => <b>{text}</b>,\n            }}\n          />\n        }\n      >\n        <OutlinedQuestionCircleIcon className=\"rbac-default-group-info-icon pf-v5-u-mt-sm\" />\n      </Popover>\n    </div>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <AppLink\n          onClick={() => setDropdownOpen(false)}\n          to={(location.pathname.includes('members') ? pathnames['group-members-edit-group'] : pathnames['group-roles-edit-group']).link.replace(\n            ':groupId',\n            isPlatformDefault ? DEFAULT_ACCESS_GROUP_ID : groupId\n          )}\n        >\n          {intl.formatMessage(messages.edit)}\n        </AppLink>\n      }\n      key=\"edit-group\"\n    />,\n    <DropdownItem\n      component={\n        <AppLink\n          to={(location.pathname.includes('members') ? pathnames['group-members-remove-group'] : pathnames['group-roles-remove-group']).link.replace(\n            ':groupId',\n            groupId\n          )}\n        >\n          {intl.formatMessage(messages.delete)}\n        </AppLink>\n      }\n      className=\"rbac-c-group__action\"\n      key=\"delete-group\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      {isResetWarningVisible && (\n        <WarningModal\n          type=\"group\"\n          isOpen={isResetWarningVisible}\n          customTitle={<div>{intl.formatMessage(messages.restoreDefaultAccessQuestion)}</div>}\n          customDescription={\n            <FormattedMessage\n              {...messages.restoreDefaultAccessDescription}\n              values={{\n                b: (text) => <b>{text}</b>,\n              }}\n            />\n          }\n          customPrimaryButtonTitle={intl.formatMessage(messages.continue)}\n          customSecondaryButtonTitle={intl.formatMessage(messages.cancel)}\n          onModalCancel={() => setResetWarningVisible(false)}\n          onModalConfirm={() => {\n            dispatch(removeGroups([systemGroupUuid])).then(() =>\n              dispatch(fetchSystemGroup({ chrome })).then(() => {\n                setShowDefaultGroupChangedInfo(false);\n              })\n            );\n            setResetWarningVisible(false);\n            navigate(pathnames['group-detail-roles'].link.replace(':groupId', DEFAULT_ACCESS_GROUP_ID));\n          }}\n        />\n      )}\n      {groupExists ? (\n        <Fragment>\n          <TopToolbar breadcrumbs={breadcrumbsList()}>\n            <Split hasGutter>\n              <SplitItem isFilled>\n                <TopToolbarTitle\n                  title={\n                    !isGroupLoading && group ? (\n                      <Fragment>{group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name}</Fragment>\n                    ) : undefined\n                  }\n                  description={(!isGroupLoading && group?.description) || undefined}\n                />\n              </SplitItem>\n              {group.platform_default && !group.system ? <SplitItem>{defaultGroupRestore()}</SplitItem> : null}\n              <SplitItem>\n                {group.platform_default || group.admin_default ? null : (\n                  <Dropdown\n                    ouiaId=\"group-title-actions-dropdown\"\n                    toggle={<KebabToggle onToggle={(_event, isOpen) => setDropdownOpen(isOpen)} id=\"group-actions-dropdown\" />}\n                    isOpen={isDropdownOpen}\n                    isPlain\n                    position=\"right\"\n                    dropdownItems={dropdownItems}\n                  />\n                )}\n              </SplitItem>\n            </Split>\n            {showDefaultGroupChangedInfo ? (\n              <Alert\n                variant=\"info\"\n                isInline\n                title={intl.formatMessage(messages.defaultAccessGroupChanged)}\n                action={<AlertActionCloseButton onClose={() => setShowDefaultGroupChangedInfo(false)} />}\n                className=\"pf-v5-u-mb-lg pf-v5-u-mt-sm\"\n              >\n                <FormattedMessage\n                  {...messages.defaultAccessGroupNameChanged}\n                  values={{\n                    b: (text) => <b>{text}</b>,\n                  }}\n                />\n              </Alert>\n            ) : null}\n          </TopToolbar>\n          <AppTabs isHeader tabItems={tabItems} />\n          <Outlet\n            context={{\n              [pathnames['group-detail-roles'].path]: {\n                onDefaultGroupChanged: setShowDefaultGroupChangedInfo,\n              },\n              groupId, // used for redirect from /:groupId to /:groupId/roles\n              systemGroupUuid,\n            }}\n          />\n          {!group && <ListLoader />}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <section className=\"pf-v5-c-page__main-breadcrumb pf-v5-u-pb-md\">\n            <RbacBreadcrumbs {...breadcrumbsList()} />\n          </section>\n          <EmptyWithAction\n            title={intl.formatMessage(messages.groupNotFound)}\n            description={[intl.formatMessage(messages.groupDoesNotExist, { id: groupId })]}\n            actions={[\n              <Button\n                key=\"back-button\"\n                className=\"pf-v5-u-mt-xl\"\n                ouiaId=\"back-button\"\n                variant=\"primary\"\n                aria-label=\"Back to previous page\"\n                onClick={() => navigate(-1)}\n              >\n                {intl.formatMessage(messages.backToPreviousPage)}\n              </Button>,\n            ]}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Group;\n"],"names":["KebabToggle","_a","id","children","className","isOpen","ariaLabel","parentRef","getMenuRef","isActive","isPlain","isDisabled","bubbleEvent","onToggle","ref","props","__rest","Object","assign","displayName","EllipsisVIconConfig","name","height","width","svgPath","yOffset","xOffset","EllipsisVIcon","linkBasename","navigate","useNavigate","to","options","RbacBreadcrumbs","breadcrumbs","Breadcrumb","values","map","item","index","title","BreadcrumbItem","key","NavLink","end","propTypes","icon","description","actions","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","text","EmptyStateFooter","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","pageHeaderClasses","Consumer","theme","_b","themeClasses","concat","TopToolbar","Fragment","isRequired","paddingBottom","defaultProps","TopToolbarTitle","renderTitleTag","Flex","FlexItem","PageHeaderTitle","alignSelf","modifier","TextContent","Text","component","TextVariants","WarningModal","type","onModalCancel","onModalConfirm","customTitle","customDescription","customPrimaryButtonTitle","customSecondaryButtonTitle","intl","Modal","Icon","size","formatMessage","exitItemCreation","ModalVariant","small","onClose","Button","ouiaId","onClick","exit","stay","discardedInputsWarning","AppTabs","tabItems","isHeader","pathname","useLocation","activeTab","find","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","Tab","dispatch","useDispatch","useAppNavigate","location","chrome","useChrome","groupId","useParams","isPlatformDefault","enableServiceAccounts","flag","isBeta","getEnvironment","flagValue","useFlag","usePreviewFlag","pathnames","link","replace","pagination","filters","groupExists","systemGroupUuid","useSelector","groupReducer","groups","error","systemGroup","meta","uuid","shallowEqual","group","isGroupLoading","selectedGroup","isRecordLoading","isResetWarningVisible","setResetWarningVisible","useState","isDropdownOpen","setDropdownOpen","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","useEffect","currId","appObjectId","undefined","breadcrumbsList","invalidGroup","dropdownItems","DropdownItem","AppLink","edit","delete","restoreDefaultAccessQuestion","restoreDefaultAccessDescription","b","continue","cancel","then","Split","hasGutter","SplitItem","isFilled","platform_default","system","style","display","Popover","bodyContent","defaultAccessGroupNameChanged","restoreToDefault","position","PopoverPosition","bottomEnd","restoreDefaultAccessInfo","admin_default","Dropdown","toggle","Alert","isInline","defaultAccessGroupChanged","action","AlertActionCloseButton","Outlet","context","path","onDefaultGroupChanged","groupNotFound","groupDoesNotExist","backToPreviousPage"],"sourceRoot":""}
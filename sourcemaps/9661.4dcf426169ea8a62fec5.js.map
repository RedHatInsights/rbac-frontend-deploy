{"version":3,"sources":["webpack:///./src/presentational-components/shared/ActiveUsers.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/users-list.js"],"names":["ActiveUser","description","linkTitle","className","component","TextVariants","href","window","insights","chrome","isProd","target","rel","propTypes","PropTypes","defaultProps","UsersRow","row","props","status","isActive","RowWrapper","classNames","data","principalApi","getPrincipalApi","principalStatusApiMap","Active","Inactive","fetchUsers","apiProps","type","ActionTypes","payload","limit","offset","orderBy","filters","inModal","username","email","sortOrder","mappedStatus","length","listPrincipals","undefined","then","meta","pagination","updateUsersFilters","columns","title","key","transforms","nowrap","sortable","createRows","userLinks","_expanded","checkedRows","reduce","acc","is_active","firstName","first_name","lastName","last_name","isOrgAdmin","is_org_admin","uuid","cells","Fragment","Link","to","color","selected","Boolean","find","UsersList","users","isLoading","selectedUsers","setSelectedUsers","defaultPagination","useSelector","userReducer","defaultSettings","history","useHistory","useEffect","syncDefaultPaginationWithUrl","syncDefaultFiltersWithUrl","mappedProps","updateFilters","isSelectable","isCompact","borders","ouiaId","fetchData","config","Object","prototype","hasOwnProperty","call","count","applyPaginationToUrl","applyFiltersToUrl","setFilterValue","setCheckedItems","newSelection","map","label","sortBy","index","direction","rowWrapper","titlePlural","titleSingular","value","placeholder","items","tableId","mapStateToProps","isUserDataLoading","mapDispatchToProps","dispatch","addNotification","goBack","push","searchFilter","connect","CompactUsersList","propsFromState","propsFromDispatch","ownProps","defaultCompactSettings"],"mappings":"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","file":"js/9661.28ae273b5f305bdb1f19.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nconst ActiveUser = ({ description, linkTitle }) => (\n  <Text className=\"pf-u-mt-0\" component={TextVariants.h7}>\n    {description}\n    <Text\n      component={TextVariants.a}\n      href={`https://www.${window.insights.chrome.isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {linkTitle}\n      <ExternalLinkAltIcon />\n    </Text>\n    .\n  </Text>\n);\n\nActiveUser.propTypes = {\n  description: PropTypes.node,\n  linkTitle: PropTypes.node,\n};\n\nActiveUser.defaultProps = {\n  description: '',\n  linkTitle: ' user management list ',\n};\n\nexport default ActiveUser;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('ins-c-rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nconst principalStatusApiMap = {\n  Active: 'enabled',\n  Inactive: 'disabled',\n};\nexport function fetchUsers({ limit, offset, orderBy, filters = {}, inModal }) {\n  const { username, email, status = [] } = filters;\n  const sortOrder = orderBy === '-username' ? 'desc' : 'asc';\n  const mappedStatus = status.length === 2 ? 'all' : principalStatusApiMap[status[0]] || 'all';\n  return principalApi.listPrincipals(limit, offset, undefined, username, sortOrder, email, mappedStatus).then(({ data, meta }) => {\n    return {\n      data,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n      },\n      ...(inModal\n        ? {}\n        : {\n            filters,\n            pagination: {\n              ...meta,\n              offset,\n              limit,\n            },\n          }),\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps),\n});\n\nexport const updateUsersFilters = (filters) => ({\n  type: ActionTypes.UPDATE_USERS_FILTERS,\n  payload: filters,\n});\n","import React, { useEffect, Fragment } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers, updateUsersFilters } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Label } from '@patternfly/react-core';\nimport { sortable, nowrap } from '@patternfly/react-table';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport { defaultCompactSettings, defaultSettings, syncDefaultPaginationWithUrl, applyPaginationToUrl } from '../../../helpers/shared/pagination';\nimport { syncDefaultFiltersWithUrl, applyFiltersToUrl } from '../../../helpers/shared/filters';\nimport { CheckIcon, CloseIcon } from '@patternfly/react-icons';\n\nconst columns = [\n  { title: 'Org. Administrator', key: 'org-admin', transforms: [nowrap] },\n  { title: 'Username', key: 'username', transforms: [sortable] },\n  { title: 'Email' },\n  { title: 'First name', transforms: [nowrap] },\n  { title: 'Last name', transforms: [nowrap] },\n  { title: 'Status', transforms: [nowrap] },\n];\n\nconst createRows = (userLinks) => (data, _expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { username, is_active: isActive, email, first_name: firstName, last_name: lastName, is_org_admin: isOrgAdmin }) => [\n          ...acc,\n          {\n            uuid: username,\n            cells: [\n              isOrgAdmin ? (\n                <Fragment>\n                  <CheckIcon key=\"yes-icon\" className=\"pf-u-mr-sm\" />\n                  <span key=\"yes\">Yes</span>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <CloseIcon key=\"no-icon\" className=\"pf-u-mr-sm\" />\n                  <span key=\"no\">No</span>\n                </Fragment>\n              ),\n              { title: userLinks ? <Link to={`/users/detail/${username}`}>{username}</Link> : username },\n              email,\n              firstName,\n              lastName,\n              {\n                title: (\n                  <Label key=\"status\" color={isActive && 'green'}>\n                    {isActive ? 'Active' : 'Inactive'}\n                  </Label>\n                ),\n                props: {\n                  'data-is-active': isActive,\n                },\n              },\n            ],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === username)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst UsersList = ({ users, fetchUsers, updateUsersFilters, isLoading, pagination, selectedUsers, setSelectedUsers, userLinks, inModal, props }) => {\n  const defaultPagination = useSelector(({ userReducer: { users } }) => ({\n    limit: inModal ? users.meta.limit : users.pagination.limit || defaultSettings.limit,\n    offset: inModal ? users.meta.offset : users.pagination.offset || defaultSettings.offset,\n  }));\n\n  const history = useHistory();\n\n  let filters = useSelector(({ userReducer: { users: { filters } } }) => ({\n    username: (!inModal && filters?.username) || '',\n    email: (!inModal && filters?.email) || '',\n    status: (!inModal && filters?.status) || ['Active'],\n  }));\n\n  useEffect(() => {\n    const pagination = inModal ? defaultSettings : syncDefaultPaginationWithUrl(history, defaultPagination);\n    filters = inModal ? { status: filters.status } : syncDefaultFiltersWithUrl(history, ['username', 'email', 'status'], filters);\n    fetchUsers({ ...mappedProps({ ...pagination, filters }), inModal });\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, username }) => ({ uuid, label: username || uuid }));\n    });\n  };\n\n  const updateFilters = (payload) => {\n    inModal || updateUsersFilters(payload);\n    filters = payload;\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact={true}\n      borders={false}\n      createRows={createRows(userLinks)}\n      data={users}\n      ouiaId=\"users-table\"\n      fetchData={(config) => {\n        const status = Object.prototype.hasOwnProperty.call(config, 'status') ? config.status : filters.status;\n        const { username, email, count, limit, offset, orderBy } = config;\n        fetchUsers({ ...mappedProps({ count, limit, offset, orderBy, filters: { username, email, status } }), inModal });\n        inModal || applyPaginationToUrl(history, config.limit, config.offset);\n        inModal || applyFiltersToUrl(history, { username, email, status });\n      }}\n      setFilterValue={({ username, email, status }) => {\n        typeof username !== 'undefined' && updateFilters({ ...filters, username });\n        typeof email !== 'undefined' && updateFilters({ ...filters, email });\n        typeof status === 'undefined' || status === filters.status || updateFilters({ ...filters, status });\n      }}\n      isLoading={isLoading}\n      pagination={pagination}\n      checkedRows={selectedUsers}\n      setCheckedItems={setCheckedItems}\n      sortBy={{\n        index: 1,\n        direction: 'asc',\n      }}\n      rowWrapper={UsersRow}\n      titlePlural=\"users\"\n      titleSingular=\"user\"\n      filters={[\n        { key: 'username', value: filters.username, placeholder: 'Filter by exact username' },\n        { key: 'email', value: filters.email, placeholder: 'Filter by exact email' },\n        {\n          key: 'status',\n          value: filters.status,\n          label: 'Status',\n          type: 'checkbox',\n          items: [\n            { label: 'Active', value: 'Active' },\n            { label: 'Inactive', value: 'Inactive' },\n          ],\n        },\n      ]}\n      tableId=\"users-list\"\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading } }) => {\n  return {\n    users: users.data && users.data.map((data) => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: (apiProps = defaultSettings) => {\n      dispatch(fetchUsers(apiProps));\n    },\n    updateUsersFilters: (filters) => {\n      dispatch(updateUsersFilters(filters));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchUsers: (apiProps) => {\n      return propsFromDispatch.fetchUsers(apiProps ? apiProps : defaultCompactSettings);\n    },\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  updateUsersFilters: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  userLinks: PropTypes.bool,\n  props: PropTypes.object,\n  inModal: PropTypes.bool,\n};\n\nUsersList.defaultProps = {\n  users: [],\n  selectedUsers: [],\n  setSelectedUsers: () => undefined,\n  userLinks: false,\n  inModal: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\nexport const CompactUsersList = connect(mapStateToProps, mapDispatchToProps, mergeProps)(UsersList);\n"],"sourceRoot":""}
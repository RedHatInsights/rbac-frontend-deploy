{"version":3,"file":"js/287.588212cea5b8847ec26d.js","mappings":"4cAKaA,EAAc,mCAAG,WAAOC,GAAP,4EACvBA,EADuB,8CAEnBC,GAFmB,wBAKLC,EAAAA,EAAAA,IAAW,CAAEC,MAAO,GAAIC,OAAQ,EAAGC,KAAML,EAAUM,UAAW,UAA9D,OAA+E,SAACC,GACrGC,QAAQD,MAAMA,MANY,aAUxBE,OALEA,EALsB,SAUxB,UAAAA,EAAUC,YAAV,eAAgBC,QAAS,GAVD,qBAWpB,8BAXoB,qCAcrBV,GAdqB,2CAAH,sDAiBdW,GAA0BC,EAAAA,EAAAA,GAAcd,GAExCe,EAAiB,SAAC,GAAa,IAAXT,EAAW,EAAXA,KACzBU,GAAcC,EAAAA,EAAAA,WAQpB,OANAC,EAAAA,EAAAA,YAAU,WAGR,OAFAC,YAAW,kBAAMH,EAAYI,OAAOd,EAAM,QAEnC,kBAAMU,EAAYI,OAAOd,EAAM,OACrC,IAEI,M,glBCxBT,IAAMe,EAAiB,SAAC,GAAmB,MAAjBC,EAAiB,EAAjBA,WACxB,GAA8CC,EAAAA,EAAAA,YAAWC,IAAjDC,EAAR,EAAQA,WAAYjB,EAApB,EAAoBA,MAAOkB,EAA3B,EAA2BA,eACnBC,GAAaV,EAAAA,EAAAA,WAAbU,SAQR,OAPAT,EAAAA,EAAAA,YAAU,WACRQ,OAAexB,GACfF,EAAe2B,IAAWC,OAAO,cAC9BC,MAAK,kBAAMH,GAAe,MAD7B,OAES,kBAAMA,GAAe,QAC7B,SAEkB,IAAVlB,GAAyBiB,EAEhC,kBAAC,EAAAK,SAAD,KACE,kBAAC,EAAAC,QAAD,CAASC,KAAK,SAKN,IAAVxB,EAEA,kBAAC,IAAD,CACEyB,QAAST,GACTU,MAAM,0BACNC,KAAK,6FAMT,yBAAKC,UAAU,QACb,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKN,KAAK,KAAKI,UAAU,cAA7C,kBAGA,kBAAC,EAAAG,YAAD,CAAaH,UAAU,cACrB,kBAAC,EAAAI,KAAD,gFAED,CAAC,CAAC,EAAD,GAAMlB,MAAAA,GAAN,UAAMA,EAAa,UAAnB,aAAM,EAAkB,QAKhCD,EAAeoB,UAAY,CACzBnB,WAAYoB,IAAAA,OAGd,UClDA,IAAMC,EAAwB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,WAAH,OAC5B,yBAAKc,UAAU,QACb,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKN,KAAK,KAAKI,UAAU,cAA7C,kBAGCd,IAILqB,EAAsBF,UAAY,CAChCnB,WAAYoB,IAAAA,OAGd,U,yDCVME,EAAiB,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QAChBC,GAAgBvB,EAAAA,EAAAA,YAAWC,IAA3BsB,YACR,OACE,kBAAC,EAAAC,WAAD,CAAYC,QAASC,EAAAA,kBAAAA,OACnB,kBAAC,EAAAC,eAAD,CAAgBC,MAAM,QAAQC,KAAMC,EAAAA,KACpC,kBAAC,EAAAhB,MAAD,CAAOC,aAAa,KAAKN,KAAK,MAA9B,4CAGA,kBAAC,EAAAsB,eAAD,MACA,kBAAC,EAAAC,OAAD,CAAQC,QAASX,EAASG,QAAQ,WAAlC,QAGA,kBAAC,EAAAS,2BAAD,KACE,kBAAC,EAAAF,OAAD,CACEC,QAAS,WACPV,GAAY,IAEdE,QAAQ,QAJV,uBAQA,kBAAC,EAAAO,OAAD,CAAQG,UAAW,SAACC,GAAD,OAAW,kBAAC,EAAAC,MAAD,QAAMC,GAAG,WAAcF,KAAWX,QAAQ,QAAxE,wBAQRJ,EAAeH,UAAY,CACzBI,QAASH,IAAAA,KAAAA,YAGX,U,qCC9BMoB,EAAU,CAAC,GAAI,CAAE5B,MAAO,OAAQ6B,IAAK,eAAgBC,WAAY,C,QAACC,WAAa,eAC/EC,EAAW,SAAC,GAAD,QAAGC,YAAeC,EAAlB,EAAkBA,eAAgBC,EAAlC,EAAkCA,UAAlC,MAAqD,CACpEC,MAAOF,EAAezD,KACtB4D,WAAYH,EAAeI,KAC3BH,UAAAA,I,eCTII,EAAc,SAACX,EAASY,GAAV,OAClB,yBAAKtC,UAAU,iBACb,kBAAC,EAAAuC,KAAD,CAAMvC,UAAU,wBACb0B,EAAQc,KAAI,SAACC,GAAD,OACX,kBAAC,EAAAC,SAAD,CAAUC,KAAM,GAAKjB,EAAQlD,OAAQmD,IAAKc,GACvCA,OAIP,kBAAC,EAAAF,KAAD,CAAMvC,UAAU,uBACbsC,EAAKE,KAAI,SAACI,GAAD,OACRA,EAAIC,MAAML,KAAI,SAACM,GAAD,OACZ,kBAAC,EAAAJ,SAAD,CAAUC,KAAM,GAAKjB,EAAQlD,OAAQmD,IAAKmB,GACvCA,Y,inBCIN,IAAM1D,IAAuB2D,EAAAA,EAAAA,eAAc,CAChDC,SAAS,EACT3D,YAAY,EACZjB,WAAON,IAGHmF,GAAe,SAAC1B,GAAD,OAAW,kBAAC,MAAD,UAAqBA,EAArB,CAA4B2B,kBAAkB,MAExEC,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAYC,GAAf,mBAA0B,kBAACD,EAAYC,IAC3DF,GAAY9C,UAAY,CACtB+C,QAAS9C,IAAAA,YAAAA,YAGJ,IAAMgD,GAAkB,CAC7B,kBFnBoB,SAAC/B,GACrB,IAAMgC,GAAWC,EAAAA,EAAAA,eACXC,EAAY,SAACC,GAAD,OAAaH,GAASI,EAAAA,EAAAA,IAAoBD,KAC5D,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BC,EAAAA,EAAAA,aAAYjC,EAAUkC,EAAAA,cAA5C9B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACP8B,GAAUC,EAAAA,EAAAA,GAAY3C,GAAtB0C,MACFrF,GAAcC,EAAAA,EAAAA,WAwCpB,OAtCAC,EAAAA,EAAAA,YAAU,WACR2E,EAAU,CACRzF,MAAO,GACPC,OAAQ,EACRkG,UAAW,EACXC,QAAS,mBAEV,IAgCD,6BACE,kBAAC,EAAAC,MAAD,CACEzD,QAAQ,OACR0D,UAAQ,EACRxE,MAAK,4NAKP,kBAAC,IAAD,CACE4B,QAASA,EACT6C,WAzCa,SAACrC,GAAD,OACjBA,EAAMM,KAAI,SAACgC,GAAD,MAAW,CACnB3B,MAAO,CACL,CACE/C,MACE,kBAAC,EAAA2E,MAAD,CACEC,GAAE,UAAKF,EAAKG,KAAV,UACFzG,KAAI,UAAKsG,EAAKtG,KAAV,UACJ,uBAAesG,EAAKtG,KAApB,UACA0G,OAAM,UAAKJ,EAAKtG,KAAV,UACN2G,MAAOL,EAAKG,KACZG,UAAWb,EAAMY,MAAMF,OAASH,EAAKG,KACrCI,SAAU,WACRnG,EAAYoG,OAAM,WAChBf,EAAMc,SAASP,GACf5F,EAAYI,OAAO,iBAAnB,kBAAgDwF,EAAKS,cAAgBT,EAAKtG,OAC1EU,EAAYI,OAAO,wBAAyBwF,EAAKU,aACjDtG,EAAYI,OAAO,wBAAyB,IAC5CJ,EAAYI,OAAO,2BAA2B,SAKtDuC,MAAO,CAAEvB,UAAW,sBAEtBwE,EAAKS,cAAgBT,EAAKtG,KAC1BsG,EAAKU,kBAgBL3G,KAAM2D,EACNuB,UAAW,SAAC0B,GAAD,OAAY1B,GAAU2B,EAAAA,EAAAA,IAAYD,KAC7CtB,YAAaA,EACbC,eAAgB,gBAAG5F,EAAH,EAAGA,KAAH,OAAc4F,EAAe5F,IAC7C+D,WAAW,EACXE,WAAYA,EACZkD,YAAY,QACZC,cAAc,OACdC,kBAAkB,YAClBX,OAAO,cACPY,WAAS,EACTC,QAAQ,gBElDd,wBAAyBC,EAAAA,EACzB,iBAAkBC,EAAAA,EAClBC,ODbiB,WACjB,IACA,GADoB/G,EAAAA,EAAAA,WAUJU,WAAWC,OARZtB,EADf,EACE,aACoBgH,EAFtB,EAEE,oBACkBW,EAHpB,EAGE,kBACyBC,EAJ3B,EAIE,yBACyBC,EAL3B,EAKE,yBACwBC,EAN1B,EAME,wBACsBC,EAPxB,EAOE,sBACaC,EARf,EAQE,aAGI5D,EAAOyD,EAAYvD,KAAI,SAAC2D,GAAD,MAAiB,CAC5CtD,MAAOsD,EAAWxB,KAAKyB,MAAM,SAGzBC,GAA2BL,GAAuB,IAAIxD,KAAI,kBAAgC,CAC9FK,MAAO,CADuD,EAAGsD,WAAH,EAAeG,UAC/CC,KAAK,WAGrC,OACE,kBAAC,aAAD,KACE,kBAAC,EAAAC,MAAD,KACE,kBAAC,EAAAC,UAAD,CAAWzG,UAAU,8BACnB,kBAAC,EAAAuC,KAAD,KACE,kBAAC,EAAAG,SAAD,CAAUgE,GAAI,GAAIC,GAAI,GACpB,kBAAC,EAAAvG,KAAD,CAAMkB,UAAWsF,EAAAA,aAAAA,GAAiB5G,UAAU,kBAA5C,SAIF,kBAAC,EAAA0C,SAAD,CAAUgE,GAAI,GAAIC,GAAI,IACpB,kBAAC,EAAAvG,KAAD,CAAMkB,UAAWsF,EAAAA,aAAAA,GAA0B,WAATV,EAAoBhI,EAAO2H,KAGjE,kBAAC,EAAAtD,KAAD,KACE,kBAAC,EAAAG,SAAD,CAAUgE,GAAI,GAAIC,GAAI,GACpB,kBAAC,EAAAvG,KAAD,CAAMkB,UAAWsF,EAAAA,aAAAA,GAAiB5G,UAAU,kBAA5C,gBAIF,kBAAC,EAAA0C,SAAD,CAAUgE,GAAI,GAAIC,GAAI,IACpB,kBAAC,EAAAvG,KAAD,CAAMkB,UAAWsF,EAAAA,aAAAA,GAA0B,WAATV,EAAoBhB,EAAcY,KAGxE,kBAAC,EAAAvD,KAAD,KACE,kBAAC,EAAAG,SAAD,CAAUgE,GAAI,GAAIC,GAAI,GACpB,kBAAC,EAAAvG,KAAD,CAAMkB,UAAWsF,EAAAA,aAAAA,GAAiB5G,UAAU,kBAA5C,gBAIF,kBAAC,EAAA0C,SAAD,CAAUgE,GAAI,GAAIC,GAAI,IACnBtE,EAxCG,CAAC,cAAe,gBAAiB,aAwCfC,KAGzB2D,GACC,kBAAC,EAAA1D,KAAD,KACE,kBAAC,EAAAG,SAAD,CAAUgE,GAAI,GAAIC,GAAI,GACpB,kBAAC,EAAAvG,KAAD,CAAMkB,UAAWsF,EAAAA,aAAAA,GAAiB5G,UAAU,kBAA5C,yBAIF,kBAAC,EAAA0C,SAAD,CAAUgE,GAAI,GAAIC,GAAI,IACnBtE,EAAY,CAAC,aAAc,wBAAyBgE,SCjDnEnB,YAAa/B,GACb,gBCpCmB,SAAC5B,GACpB,IAAQ0C,GAAUC,EAAAA,EAAAA,GAAY3C,GAAtB0C,MACFrF,GAAcC,EAAAA,EAAAA,WACpB,GAA8B+E,EAAAA,EAAAA,UAAShF,EAAYW,WAAWC,OAAO,cAArE,eAAOqH,EAAP,KAAgBC,EAAhB,KACMC,EAAe,SAACC,GACpBF,EAAWE,GACX/C,EAAMc,SAASiC,GACfpI,EAAYI,OAAO,wBAAyB,IAC5CJ,EAAYI,OAAO,2BAA2B,IAGhD,OACE,6BACE,kBAAC,EAAAyF,MAAD,CACEK,UAAuB,WAAZ+B,EACX7G,UAAU,aACV9B,KAAK,mBACL6G,SAAU,kBAAMgC,EAAa,WAC7BE,MAAM,6BACNvC,GAAG,mBACHG,MAAM,WAER,kBAAC,EAAAJ,MAAD,CACEK,UAAuB,SAAZ+B,EACX3I,KAAK,iBACL6G,SAAU,kBAAMgC,EAAa,SAC7BE,MAAM,wBACNvC,GAAG,iBACHG,MAAM,YDWRqC,GAAgB,SAAC,GAA4B,IAA1B/E,EAA0B,EAA1BA,WAAYgF,EAAc,EAAdA,QAC7B5D,GAAWC,EAAAA,EAAAA,eACT4D,GAASC,EAAAA,EAAAA,cAATD,KACR,GAAoDxD,EAAAA,EAAAA,UAAS,CAC3DZ,SAAS,EACT3D,YAAY,EACZjB,WAAON,EACPwJ,UAAU,IAJZ,eAAOC,EAAP,KAA2BC,EAA3B,KAMA,GAAwD5D,EAAAA,EAAAA,WAAS,GAAjE,eAAO6D,EAAP,KAA6BC,EAA7B,KACMC,GAAYC,EAAAA,EAAAA,QAAOC,SAASC,cAAc,QAChD,GAA4BlE,EAAAA,EAAAA,YAA5B,eAAOmE,EAAP,KAAeC,EAAf,MAEAlJ,EAAAA,EAAAA,YAAU,WACRkJ,EEhDJ,SAAgBL,GAAD,MAAgB,CAC7BM,OAAQ,CACN,CACE3G,UAAW,SACXpD,KAAM,SACNgK,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,WAAY,CAAC,aACbvI,MAAO,cACPwI,MAAO,CAAEC,SAAU,UACnBZ,UAAAA,EACAM,OAAQ,CACN,CACEnI,MAAO,cACP5B,KAAM,SACNsK,SAAU,CACRC,KAAM,YACNC,WAAY,CACVC,KAAM,uBACNC,OAAQ,oBAGZX,OAAQ,CACN,CACE3G,UAAW,gBACXpD,KAAM,YACN2K,YAAY,EACZC,SAAU,CACR,CACE5C,KAAM6C,EAAAA,EAAAA,YAIZ,CACEzH,UAAW,aACXpD,KAAM,YACNgI,KAAM,OACNe,MAAO,YACP4B,YAAY,EACZG,UAAW,CACTP,KAAM,YACNQ,GAAI,UAENH,SAAU,CACRrK,EACA,CACEyH,KAAM6C,EAAAA,EAAAA,UAER,CACE7C,KAAM6C,EAAAA,EAAAA,WACNG,UAAW,OAIjB,CACE5H,UAAW,aACXpD,KAAM,mBACNgI,KAAM,OACNe,MAAO,mBACP+B,UAAW,CACTP,KAAM,YACNQ,GAAI,UAENH,SAAU,CACR,CACE5C,KAAM,aACNgD,UAAW,OAIjB,CACE5H,UAAW,kBACXpD,KAAM,iBACN+I,MAAO,YACP4B,YAAY,EACZG,UAAW,CACTP,KAAM,YACNQ,GAAI,QAENH,SAAU,CACR,CACE5C,KAAM6C,EAAAA,EAAAA,YAIZ,CACEC,UAAW,CACTP,KAAM,YACNQ,GAAI,UAEN3H,UAAW,cACXpD,KAAM,qBACNkF,QAASzE,GAEX,CACEqK,UAAW,CACTP,KAAM,YACNQ,GAAI,QAEN3H,UAAW,cACXpD,KAAM,sBACNkF,QAASzE,KAIf,CACEmB,MAAO,uBACP5B,KAAM,uBACNsK,SAAU,kBACVP,OAAQ,CACN,CACE3G,UAAW,aACXpD,KAAM,iBACNgI,KAAM,OACNe,MAAO,YACP4B,YAAY,EACZC,SAAU,CACRrK,EACA,CACEyH,KAAM6C,EAAAA,EAAAA,UAER,CACE7C,KAAM,aACNgD,UAAW,OAIjB,CACE5H,UAAW,aACXpD,KAAM,wBACNgI,KAAM,OACNe,MAAO,mBACP6B,SAAU,CACR,CACE5C,KAAM,aACNgD,UAAW,SAMrB,CACEhL,KAAM,kBACN4B,MAAO,kBACPqJ,aAAcC,EAAAA,EACdZ,SAAU,gBAAGhJ,EAAH,EAAGA,OAAH,OACRA,GACAA,EAAO,0BACPA,EAAO,yBAAyB6J,MAAK,qBAAG1E,KAAgByB,MAAM,KAAK,GAAGkD,SAAS,sBAC3E,4BACA,UACNrB,OAAQ,CACN,CACE3G,UAAW,wBACXpD,KAAM,2BAIZ,CACEA,KAAM,4BACN4B,MAAO,mCACP0I,SAAU,SACVW,aAAc5I,EACd0H,OAAQ,CACN,CACE3G,UAAW,aACXpD,KAAM,mBACN+I,MACE,uBAAGjH,UAAU,cAAb,wHAKJ,CACEsB,UAAW,iBACXpD,KAAM,iBACN4K,SAAU,CACR,yEAAS,IACDS,OAAM,SAACC,GAAD,OAAOA,EAAElD,UAAU9H,OAAS,UAAKV,EAAY,oEAKnE,CACEI,KAAM,SACN4B,MAAO,iBACP2J,QAAS,SAAClI,GAAD,OAAW,kBAAC,KAAD,UAAuBA,EAAvB,CAA8B1B,QAAST,OAC3D+J,aAAclK,EACdgJ,OAAQ,CACN,CACE3G,UAAW,SACXpD,KAAM,gBFhJNwL,CAAc/B,EAAUgC,YACjC,IAEH,IAAMlJ,EAAU,kBACd2G,EAAK,CACHwC,SAAUC,EAAAA,EAAAA,MACVC,QAAQC,EAAAA,EAAAA,IAAkB,CAAEC,KAAM,EAAGC,SAAU9H,EAAWnE,WAGxDkM,EAAW,WACV3C,EAAmBvE,SACtBO,GACE4G,EAAAA,EAAAA,IAAgB,CACdvJ,QAAS,UACTd,MAAO,yCACPsK,aAAc,IACdC,aAAa,KAKnBjD,EAAK,CACHwC,SAAUC,EAAAA,EAAAA,MACVC,QAAQC,EAAAA,EAAAA,IAAkB,IAAEC,KAAM,EAAGC,SAAU9H,EAAWnE,OAAUmJ,OAoDxE,OAAKY,EAIH,kBAAC3I,GAAqBkL,SAAtB,CAA+BzF,MAAK,SAAO0C,GAAP,IAA2BjI,eApD1C,SAAClB,GAAD,OAAWoJ,GAAsB,SAAC+C,GAAD,UAAC,MAAeA,GAAhB,IAAsBnM,MAAAA,QAoDGoM,iBAnDxD,SAACxH,GAAD,OAAawE,GAAsB,SAAC+C,GAAD,UAAC,MAAeA,GAAhB,IAAsBvH,QAAAA,QAmDiBtC,YAlD/E,SAAC4G,GAAD,OAAcE,GAAsB,SAAC+C,GAAD,UAAC,MAAeA,GAAhB,IAAsBjD,SAAAA,WAmD1E,kBAAC,IAAD,CACEpB,KAAK,OACLuE,OAAQhD,EACRiD,cAAe,WACb/C,EAAUgC,QAAQgB,QAAS,EAC3BjD,GAAwB,IAE1BkD,gBAAiBV,IAElB3C,EAAmBD,SAClB,kBAAC,EAAAuD,OAAD,CACE/K,MAAM,cACN2K,QAAM,EACNhK,QAASA,EACTqK,MAAO,CACL,CACE5M,KAAM,UACNoD,UAAW,kBAAC,EAAD,CAAgBb,QAASA,IACpCsK,gBAAgB,MAKtB,kBAAC,IAAD,CACEhD,OAAQA,EACRJ,UAAWA,EACXqD,aAAc,CAAExL,QAAQ,GACxByD,aAAcA,GACdgI,cAAe,CACb,YAAa,UAEfC,gBAAe,SAAOA,EAAAA,IAAoB5H,IAC1C6H,SAjFS,SAACC,GAChB,IACelN,EAOXkN,EAPF,aACoBlG,EAMlBkG,EANF,oBACkBvF,EAKhBuF,EALF,kBACyBtF,EAIvBsF,EAJF,yBACyBrF,EAGvBqF,EAHF,yBACkBpF,EAEhBoF,EAFF,kBACalF,EACXkF,EADF,aAEF5D,GAAsB,SAAC+C,GAAD,UAAC,MAAeA,GAAhB,IAAsBlL,YAAY,OAExD,IAAMgM,EAAwBtF,EAAYvD,KAAI,SAAC8I,GAAD,OAAYA,EAAO3G,QAC3D4G,EAAW,CACfC,cAAc,OAAI,IAAIC,IAAI1F,EAAYvD,KAAI,qBAAGmC,KAAkCyB,MAAM,KAAK,QAC1FlB,aAAuB,WAATgB,EAAoBhB,EAAcY,IAAoB,KACpE5H,KAAe,WAATgI,EAAoBhI,EAAO2H,EACjC6F,OAAQ3F,EAAY4F,QAClB,SAACC,EAAD,OAAczF,EAAd,EAAQxB,KAAR,IAA0BkH,SAAAA,OAA1B,MAAqC,GAArC,0BACKD,IADL,OAEK,CAACzF,GAAD,eAAgB0F,EAASC,QAAO,SAACC,GAAD,OAAcV,EAAsB/B,SAASyC,QAAWvJ,KAAI,SAAC2D,GAAD,MAAiB,CAC9GA,WAAAA,EACAH,oBAAqBA,MAAAA,GAAAA,EAAqBgG,MAAK,SAACC,GAAD,OAAOA,EAAE9F,aAAeA,KACnE,CACE,CACE+F,gBAAiB,CACfvK,IAAK,mBAAF,OAAqBwE,EAAWC,MAAM,KAAK,IAC9C+F,UAAW,KACXtH,MAAOmB,MAAAA,OAAF,EAAEA,EAAqBgG,MAAK,SAACC,GAAD,OAAOA,EAAE9F,aAAeA,KAAYG,aAI3E,WAGR,KAGJ,OAAO/C,GAAS6I,EAAAA,EAAAA,IAAWb,IAAW9L,MAAK,WACzC+H,GAAsB,SAAC+C,GAAD,UAAC,MAAeA,GAAhB,IAAsBlL,YAAY,EAAO2D,SAAS,EAAMsE,UAAU,OACxF/D,GAAS8I,EAAAA,EAAAA,IAAuB,CAAErO,MAAOmE,EAAWnE,MAAOmK,SAAS,SA0ChE+B,SAAU,SAAC1K,GACW8M,QAAS9M,GAAUA,EAAO,cAAiBA,EAAO,qBAAuBA,EAAO,oBAElGmI,EAAUgC,QAAQgB,QAAS,EAC3BjD,GAAwB,IAExBwC,QA3CH,MAoDXhD,GAAc7G,UAAY,CACxB8B,WAAY7B,IAAAA,MAAgB,CAC1BtC,MAAOsC,IAAAA,OAAAA,aACNuI,WACH1B,QAAS7G,IAAAA,MAAgB,CACvBpC,KAAMoC,IAAAA,SACLuI,YAGL","sources":["webpack:///./src/smart-components/role/add-role-new/validators.js","webpack:///./src/smart-components/role/add-role-new/review-template.js","webpack:///./src/smart-components/role/add-role-new/cost-resources-template.js","webpack:///./src/smart-components/role/add-role-new/add-role-success.js","webpack:///./src/smart-components/role/add-role-new/base-role-table.js","webpack:///./src/smart-components/role/add-role-new/review.js","webpack:///./src/smart-components/role/add-role-new/add-role-wizard.js","webpack:///./src/smart-components/role/add-role-new/type-selector.js","webpack:///./src/smart-components/role/add-role-new/schema.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { fetchRoles } from '../../../helpers/role/role-helper';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nexport const asyncValidator = async (roleName) => {\n  if (!roleName) {\n    return undefined;\n  }\n\n  const response = await fetchRoles({ limit: 10, offset: 0, name: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (response?.data?.length > 0) {\n    throw 'Name has already been taken';\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce(asyncValidator);\n\nexport const ValidatorReset = ({ name }) => {\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setTimeout(() => formOptions.change(name, '1'));\n\n    return () => formOptions.change(name, '');\n  }, []);\n\n  return null;\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner, Text, TextContent, Title } from '@patternfly/react-core';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { asyncValidator } from './validators';\nimport './review.scss';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport WizardError from '../../common/wizard-error';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting, error, setWizardError } = useContext(AddRoleWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['role-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  if (error === true) {\n    return (\n      <WizardError\n        context={AddRoleWizardContext}\n        title=\"Role name already taken\"\n        text=\"Please return to Step 1: Create role and choose a unique role name for your custom role.\"\n      />\n    );\n  }\n\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-sm\">\n        Review details\n      </Title>\n      <TextContent className=\"pf-u-mb-md\">\n        <Text>Review and confirm the details for your role, or click Back to revise.</Text>\n      </TextContent>\n      {[[{ ...formFields?.[0]?.[0] }]]}\n    </div>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\n\nconst CostResourcesTemplate = ({ formFields }) => (\n  <div className=\"rbac\">\n    <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-lg\">\n      Review details\n    </Title>\n    {formFields}\n  </div>\n);\n\nCostResourcesTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default CostResourcesTemplate;\n","import React, { useContext } from 'react';\nimport { Title, Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, EmptyStateSecondaryActions } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport PropTypes from 'prop-types';\n\nconst AddRoleSuccess = ({ onClose }) => {\n  const { setHideForm } = useContext(AddRoleWizardContext);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        You have successfully created a new role\n      </Title>\n      <EmptyStateBody></EmptyStateBody>\n      <Button onClick={onClose} variant=\"primary\">\n        Exit\n      </Button>\n      <EmptyStateSecondaryActions>\n        <Button\n          onClick={() => {\n            setHideForm(false);\n          }}\n          variant=\"link\"\n        >\n          Create another role\n        </Button>\n        <Button component={(props) => <Link to=\"/groups\" {...props} />} variant=\"link\">\n          Add role to group\n        </Button>\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  );\n};\n\nAddRoleSuccess.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddRoleSuccess;\n","import React, { useState, useEffect } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Radio, Alert } from '@patternfly/react-core';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesForWizard } from '../../../redux/actions/role-actions';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { sortable } from '@patternfly/react-table';\n\nconst columns = ['', { title: 'Name', key: 'display_name', transforms: [sortable] }, 'Description'];\nconst selector = ({ roleReducer: { rolesForWizard, isLoading } }) => ({\n  roles: rolesForWizard.data,\n  pagination: rolesForWizard.meta,\n  isLoading,\n});\n\nconst BaseRoleTable = (props) => {\n  const dispatch = useDispatch();\n  const fetchData = (options) => dispatch(fetchRolesForWizard(options));\n  const [filterValue, setFilterValue] = useState('');\n  const { roles, pagination } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    fetchData({\n      limit: 50,\n      offset: 0,\n      itemCount: 0,\n      orderBy: 'display_name',\n    });\n  }, []);\n\n  const createRows = (roles) =>\n    roles.map((role) => ({\n      cells: [\n        {\n          title: (\n            <Radio\n              id={`${role.uuid}-radio`}\n              name={`${role.name}-radio`}\n              aria-label={`${role.name}-radio`}\n              ouiaId={`${role.name}-radio`}\n              value={role.uuid}\n              isChecked={input.value.uuid === role.uuid}\n              onChange={() => {\n                formOptions.batch(() => {\n                  input.onChange(role);\n                  formOptions.change('role-copy-name', `Copy of ${role.display_name || role.name}`);\n                  formOptions.change('role-copy-description', role.description);\n                  formOptions.change('add-permissions-table', []);\n                  formOptions.change('base-permissions-loaded', false);\n                });\n              }}\n            />\n          ),\n          props: { className: 'pf-c-table__check' },\n        },\n        role.display_name || role.name,\n        role.description,\n      ],\n    }));\n  return (\n    <div>\n      <Alert\n        variant=\"info\"\n        isInline\n        title={`Only granular permissions will be copied into a custom role \\\n        (for example, approval:requests:read). Wildcard permissions will not \\\n        be copied into a custom role (for example, approval:*:read).\n        `}\n      />\n      <TableToolbarView\n        columns={columns}\n        createRows={createRows}\n        data={roles}\n        fetchData={(config) => fetchData(mappedProps(config))}\n        filterValue={filterValue}\n        setFilterValue={({ name }) => setFilterValue(name)}\n        isLoading={false}\n        pagination={pagination}\n        titlePlural=\"roles\"\n        titleSingular=\"role\"\n        filterPlaceholder=\"role name\"\n        ouiaId=\"roles-table\"\n        isCompact\n        tableId=\"base-role\"\n      />\n    </div>\n  );\n};\n\nexport default BaseRoleTable;\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Stack, StackItem, Grid, GridItem, Text, TextVariants } from '@patternfly/react-core';\nimport './review.scss';\n\nconst stickyTable = (columns, rows) => (\n  <div className=\"rbac-c-sticky\">\n    <Grid className=\"rbac-c-sticky--title\">\n      {columns.map((col) => (\n        <GridItem span={12 / columns.length} key={col}>\n          {col}\n        </GridItem>\n      ))}\n    </Grid>\n    <Grid className=\"rbac-c-sticky--data\">\n      {rows.map((row) =>\n        row.cells.map((cell) => (\n          <GridItem span={12 / columns.length} key={cell}>\n            {cell}\n          </GridItem>\n        ))\n      )}\n    </Grid>\n  </div>\n);\n\nconst ReviewStep = () => {\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'role-copy-name': copyName,\n    'role-copy-description': copyDescription,\n    'add-permissions-table': permissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n    'role-type': type,\n  } = formOptions.getState().values;\n  const columns = ['Application', 'Resource type', 'Operation'];\n  const rows = permissions.map((permission) => ({\n    cells: permission.uuid.split(':'),\n  }));\n\n  const resourceDefinitionsRows = (resourceDefinitions || []).map(({ permission, resources }) => ({\n    cells: [permission, resources.join(', ')],\n  }));\n\n  return (\n    <React.Fragment>\n      <Stack>\n        <StackItem className=\"rbac-l-stack__item-summary\">\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                Name\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? name : copyName}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                Description\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? description : copyDescription}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                Permissions\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              {stickyTable(columns, rows)}\n            </GridItem>\n          </Grid>\n          {hasCostResources && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                  Resource definitions\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable(['Permission', 'Resource definitions'], resourceDefinitionsRows)}\n              </GridItem>\n            </Grid>\n          )}\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useState, useEffect, useRef, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { Wizard } from '@patternfly/react-core';\nimport schemaBuilder from './schema';\nimport { createRole, fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { WarningModal } from '../../../smart-components/common/warningModal';\nimport AddRoleSuccess from './add-role-success';\nimport BaseRoleTable from './base-role-table';\nimport AddPermissionsTable from './add-permissions';\nimport ReviewStep from './review';\nimport CostResources from './cost-resources';\nimport TypeSelector from './type-selector';\nimport { useHistory } from 'react-router-dom';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport paths from '../../../utilities/pathnames';\nimport './add-role-wizard.scss';\n\nexport const AddRoleWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  'base-role-table': BaseRoleTable,\n  'add-permissions-table': AddPermissionsTable,\n  'cost-resources': CostResources,\n  review: ReviewStep,\n  description: Description,\n  'type-selector': TypeSelector,\n};\n\nconst AddRoleWizard = ({ pagination, filters }) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const container = useRef(document.createElement('div'));\n  const [schema, setSchema] = useState();\n\n  useEffect(() => {\n    setSchema(schemaBuilder(container.current));\n  }, []);\n\n  const onClose = () =>\n    push({\n      pathname: paths.roles,\n      search: createQueryParams({ page: 1, per_page: pagination.limit }),\n    });\n\n  const onCancel = () => {\n    if (!wizardContextValue.success) {\n      dispatch(\n        addNotification({\n          variant: 'warning',\n          title: 'Creating role was canceled by the user',\n          dismissDelay: 8000,\n          dismissable: false,\n        })\n      );\n    }\n\n    push({\n      pathname: paths.roles,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    const {\n      'role-name': name,\n      'role-description': description,\n      'role-copy-name': copyName,\n      'role-copy-description': copyDescription,\n      'add-permissions-table': permissions,\n      'cost-resources': resourceDefinitions,\n      'role-type': type,\n    } = formData;\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n\n    const selectedPermissionIds = permissions.map((record) => record.uuid);\n    const roleData = {\n      applications: [...new Set(permissions.map(({ uuid: permission }) => permission.split(':')[0]))],\n      description: (type === 'create' ? description : copyDescription) || null,\n      name: type === 'create' ? name : copyName,\n      access: permissions.reduce(\n        (acc, { uuid: permission, requires = [] }) => [\n          ...acc,\n          ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => ({\n            permission,\n            resourceDefinitions: resourceDefinitions?.find((r) => r.permission === permission)\n              ? [\n                  {\n                    attributeFilter: {\n                      key: `cost-management.${permission.split(':')[1]}`,\n                      operation: 'in',\n                      value: resourceDefinitions?.find((r) => r.permission === permission).resources,\n                    },\n                  },\n                ]\n              : [],\n          })),\n        ],\n        []\n      ),\n    };\n    return dispatch(createRole(roleData)).then(() => {\n      setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true }));\n      dispatch(fetchRolesWithPolicies({ limit: pagination.limit, inModal: false }));\n    });\n  };\n\n  if (!schema) {\n    return null;\n  }\n  return (\n    <AddRoleWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <WarningModal\n        type=\"role\"\n        isOpen={cancelWarningVisible}\n        onModalCancel={() => {\n          container.current.hidden = false;\n          setCancelWarningVisible(false);\n        }}\n        onConfirmCancel={onCancel}\n      />\n      {wizardContextValue.hideForm ? (\n        <Wizard\n          title=\"Create role\"\n          isOpen\n          onClose={onClose}\n          steps={[\n            {\n              name: 'success',\n              component: <AddRoleSuccess onClose={onClose} />,\n              isFinishedStep: true,\n            },\n          ]}\n        />\n      ) : (\n        <FormRenderer\n          schema={schema}\n          container={container}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-type': 'create',\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            const showWarning = Boolean((values && values['role-name']) || values['role-description'] || values['copy-base-role']);\n            if (showWarning) {\n              container.current.hidden = true;\n              setCancelWarningVisible(true);\n            } else {\n              onCancel();\n            }\n          }}\n        />\n      )}\n    </AddRoleWizardContext.Provider>\n  );\n};\n\nAddRoleWizard.propTypes = {\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default AddRoleWizard;\n","import React, { useState } from 'react';\nimport { Radio } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst TypeSelector = (props) => {\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const [checked, setChecked] = useState(formOptions.getState().values['role-type']);\n  const handleChange = (val) => {\n    setChecked(val);\n    input.onChange(val);\n    formOptions.change('add-permissions-table', []);\n    formOptions.change('base-permissions-loaded', false);\n  };\n\n  return (\n    <div>\n      <Radio\n        isChecked={checked === 'create'}\n        className=\"pf-u-mb-sm\"\n        name=\"role-type-create\"\n        onChange={() => handleChange('create')}\n        label=\"Create a role from scratch\"\n        id=\"role-type-create\"\n        value=\"create\"\n      />\n      <Radio\n        isChecked={checked === 'copy'}\n        name=\"role-type-copy\"\n        onChange={() => handleChange('copy')}\n        label=\"Copy an existing role\"\n        id=\"role-type-copy\"\n        value=\"copy\"\n      />\n    </div>\n  );\n};\n\nexport default TypeSelector;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport AddPermissionTemplate from './add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport CostResourcesTemplate from './cost-resources-template';\nimport { debouncedAsyncValidator, ValidatorReset } from './validators';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddRoleWizardContext } from './add-role-wizard';\n\nexport default (container) => ({\n  fields: [\n    {\n      component: 'wizard',\n      name: 'wizard',\n      isDynamic: true,\n      inModal: true,\n      showTitles: true,\n      crossroads: ['role-type'],\n      title: 'Create role',\n      style: { overflow: 'hidden' },\n      container,\n      fields: [\n        {\n          title: 'Create role',\n          name: 'step-1',\n          nextStep: {\n            when: 'role-type',\n            stepMapper: {\n              copy: 'name-and-description',\n              create: 'add-permissions',\n            },\n          },\n          fields: [\n            {\n              component: 'type-selector',\n              name: 'role-type',\n              isRequired: true,\n              validate: [\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n              ],\n            },\n            {\n              component: 'text-field',\n              name: 'role-name',\n              type: 'text',\n              label: 'Role name',\n              isRequired: true,\n              condition: {\n                when: 'role-type',\n                is: 'create',\n              },\n              validate: [\n                debouncedAsyncValidator,\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n                {\n                  type: validatorTypes.MAX_LENGTH,\n                  threshold: 150,\n                },\n              ],\n            },\n            {\n              component: 'text-field',\n              name: 'role-description',\n              type: 'text',\n              label: 'Role description',\n              condition: {\n                when: 'role-type',\n                is: 'create',\n              },\n              validate: [\n                {\n                  type: 'max-length',\n                  threshold: 150,\n                },\n              ],\n            },\n            {\n              component: 'base-role-table',\n              name: 'copy-base-role',\n              label: 'Base role',\n              isRequired: true,\n              condition: {\n                when: 'role-type',\n                is: 'copy',\n              },\n              validate: [\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n              ],\n            },\n            {\n              condition: {\n                when: 'role-type',\n                is: 'create',\n              },\n              component: 'description',\n              name: 'fixasyncvalidation',\n              Content: ValidatorReset,\n            },\n            {\n              condition: {\n                when: 'role-type',\n                is: 'copy',\n              },\n              component: 'description',\n              name: 'fixasyncvalidation2',\n              Content: ValidatorReset,\n            },\n          ],\n        },\n        {\n          title: 'Name and description',\n          name: 'name-and-description',\n          nextStep: 'add-permissions',\n          fields: [\n            {\n              component: 'text-field',\n              name: 'role-copy-name',\n              type: 'text',\n              label: 'Role name',\n              isRequired: true,\n              validate: [\n                debouncedAsyncValidator,\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n                {\n                  type: 'max-length',\n                  threshold: 150,\n                },\n              ],\n            },\n            {\n              component: 'text-field',\n              name: 'role-copy-description',\n              type: 'text',\n              label: 'Role description',\n              validate: [\n                {\n                  type: 'max-length',\n                  threshold: 150,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'add-permissions',\n          title: 'Add permissions',\n          StepTemplate: AddPermissionTemplate,\n          nextStep: ({ values }) =>\n            values &&\n            values['add-permissions-table'] &&\n            values['add-permissions-table'].some(({ uuid }) => uuid.split(':')[0].includes('cost-management'))\n              ? 'cost-resources-definition'\n              : 'review',\n          fields: [\n            {\n              component: 'add-permissions-table',\n              name: 'add-permissions-table',\n            },\n          ],\n        },\n        {\n          name: 'cost-resources-definition',\n          title: 'Define Cost Management resources',\n          nextStep: 'review',\n          StepTemplate: CostResourcesTemplate,\n          fields: [\n            {\n              component: 'plain-text',\n              name: 'text-description',\n              label: (\n                <p className=\"pf-u-mb-md\">\n                  Specify where you would like to apply each cost permission selected in the previous step, using the dropdown below.\n                </p>\n              ),\n            },\n            {\n              component: 'cost-resources',\n              name: 'cost-resources',\n              validate: [\n                (value = []) =>\n                  value.every((p) => p.resources.length > 0) ? undefined : 'You need to assign at least one resource to each permission.',\n              ],\n            },\n          ],\n        },\n        {\n          name: 'review',\n          title: 'Review details',\n          buttons: (props) => <ReviewStepButtons {...props} context={AddRoleWizardContext} />,\n          StepTemplate: ReviewTemplate,\n          fields: [\n            {\n              component: 'review',\n              name: 'review',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n"],"names":["asyncValidator","roleName","undefined","fetchRoles","limit","offset","name","nameMatch","error","console","response","data","length","debouncedAsyncValidator","asyncDebounce","ValidatorReset","formOptions","useFormApi","useEffect","setTimeout","change","ReviewTemplate","formFields","useContext","AddRoleWizardContext","submitting","setWizardError","getState","values","then","Bullseye","Spinner","size","context","title","text","className","Title","headingLevel","TextContent","Text","propTypes","PropTypes","CostResourcesTemplate","AddRoleSuccess","onClose","setHideForm","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","color","icon","CheckCircleIcon","EmptyStateBody","Button","onClick","EmptyStateSecondaryActions","component","props","Link","to","columns","key","transforms","sortable","selector","roleReducer","rolesForWizard","isLoading","roles","pagination","meta","stickyTable","rows","Grid","map","col","GridItem","span","row","cells","cell","createContext","success","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","dispatch","useDispatch","fetchData","options","fetchRolesForWizard","useState","filterValue","setFilterValue","useSelector","shallowEqual","input","useFieldApi","itemCount","orderBy","Alert","isInline","createRows","role","Radio","id","uuid","ouiaId","value","isChecked","onChange","batch","display_name","description","config","mappedProps","titlePlural","titleSingular","filterPlaceholder","isCompact","tableId","AddPermissionsTable","CostResources","review","copyName","copyDescription","permissions","resourceDefinitions","hasCostResources","type","permission","split","resourceDefinitionsRows","resources","join","Stack","StackItem","sm","md","TextVariants","checked","setChecked","handleChange","val","label","AddRoleWizard","filters","push","useHistory","hideForm","wizardContextValue","setWizardContextValue","cancelWarningVisible","setCancelWarningVisible","container","useRef","document","createElement","schema","setSchema","fields","isDynamic","inModal","showTitles","crossroads","style","overflow","nextStep","when","stepMapper","copy","create","isRequired","validate","validatorTypes","condition","is","threshold","StepTemplate","AddPermissionTemplate","some","includes","every","p","buttons","schemaBuilder","current","pathname","paths","search","createQueryParams","page","per_page","onCancel","addNotification","dismissDelay","dismissable","Provider","prev","setWizardSuccess","isOpen","onModalCancel","hidden","onConfirmCancel","Wizard","steps","isFinishedStep","subscription","initialValues","componentMapper","onSubmit","formData","selectedPermissionIds","record","roleData","applications","Set","access","reduce","acc","requires","filter","require","find","r","attributeFilter","operation","createRole","fetchRolesWithPolicies","Boolean"],"sourceRoot":""}
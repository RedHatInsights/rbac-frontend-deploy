{"version":3,"file":"js/791.c73fc5e2717d64df2930.js","mappings":"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","sources":["webpack:///./src/smart-components/user/user.js","webpack:///./src/smart-components/user/users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { Link, useHistory, withRouter } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { Button, Label, Stack, StackItem } from '@patternfly/react-core';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { fetchRoles, fetchRoleForUser } from '../../redux/actions/role-actions';\nimport { fetchUsers } from '../../redux/actions/user-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Table, TableHeader, TableBody, TableVariant, compoundExpand } from '@patternfly/react-table';\nimport { Fragment } from 'react';\nimport EmptyWithAction from '../../presentational-components/shared/empty-state';\nimport RbacBreadcrumbs from '../../presentational-components/shared/breadcrubms';\nimport { BAD_UUID, getDateFormat } from '../../helpers/shared/helpers';\nimport './user.scss';\n\nconst columns = [\n  'Roles',\n  {\n    title: 'Groups',\n    cellTransforms: [compoundExpand],\n  },\n  {\n    title: 'Permissions',\n    cellTransforms: [compoundExpand],\n  },\n  {\n    title: 'Last modified',\n  },\n];\n\nlet debouncedFetch;\n\nconst User = ({\n  match: {\n    params: { username },\n  },\n  fetchRoles,\n  fetchRoleForUser,\n  fetchUsers,\n  roles,\n  isLoading,\n  rolesWithAccess,\n  user,\n}) => {\n  const [filter, setFilter] = useState('');\n  const [expanded, setExpanded] = useState({});\n\n  const userExists = useSelector((state) => {\n    const {\n      roleReducer: { error },\n    } = state;\n    return error !== BAD_UUID;\n  });\n\n  useEffect(() => {\n    fetchUsers({ ...defaultSettings, limit: 0, filters: { username }, inModal: true });\n    insights.chrome.appObjectId(username);\n    return () => insights.chrome.appObjectId(undefined);\n  }, []);\n\n  const history = useHistory();\n\n  const createRows = (data) =>\n    data\n      ? data.reduce(\n          (acc, { uuid, display_name, groups_in = [], modified, accessCount }, i) => [\n            ...acc,\n            {\n              uuid,\n              cells: [\n                { title: display_name, props: { component: 'th', isOpen: false } },\n                { title: `${groups_in.length}`, props: { isOpen: expanded[uuid] === 1 } },\n                { title: accessCount, props: { isOpen: expanded[uuid] === 2 } },\n                { title: <DateFormat type={getDateFormat(modified)} date={modified} /> },\n              ],\n            },\n            {\n              uuid: `${uuid}-groups`,\n              parent: 3 * i,\n              compoundParent: 1,\n              cells: [\n                {\n                  props: { colSpan: 4, className: 'pf-m-no-padding' },\n                  title: (\n                    <Table\n                      ouiaId=\"groups-in-role-nested-table\"\n                      aria-label=\"Simple Table\"\n                      variant={TableVariant.compact}\n                      cells={['Name', 'Description']}\n                      rows={groups_in.map((g) => ({ cells: [{ title: <Link to={`/groups/detail/${g.uuid}`}>{g.name}</Link> }, g.description] }))}\n                    >\n                      <TableHeader />\n                      <TableBody />\n                    </Table>\n                  ),\n                },\n              ],\n            },\n            {\n              uuid: `${uuid}-groups`,\n              parent: 3 * i,\n              compoundParent: 2,\n              cells: [\n                {\n                  props: { colSpan: 4, className: 'pf-m-no-padding' },\n                  title:\n                    rolesWithAccess && rolesWithAccess[uuid] ? (\n                      <Table\n                        aria-label=\"Simple Table\"\n                        ouiaId=\"permissions-in-role-nested-table\"\n                        variant={TableVariant.compact}\n                        cells={['Application', 'Resource type', 'Operation']}\n                        rows={rolesWithAccess[uuid].access.map((access) => ({ cells: access.permission.split(':') }))}\n                      >\n                        <TableHeader />\n                        <TableBody />\n                      </Table>\n                    ) : (\n                      <ListLoader />\n                    ),\n                },\n              ],\n            },\n          ],\n          []\n        )\n      : [];\n\n  useEffect(() => {\n    fetchRoles({ limit: 20, offset: 0, addFields: ['groups_in'], username });\n    debouncedFetch = debounce(\n      (limit, offset, name, addFields, username) => fetchRoles({ limit, offset, displayName: name, addFields, username }),\n      500\n    );\n  }, []);\n\n  const onExpand = (_event, _rowIndex, colIndex, isOpen, rowData) => {\n    if (!isOpen) {\n      setExpanded({ ...expanded, [rowData.uuid]: colIndex });\n      // Permissions\n      if (colIndex === 2) {\n        fetchRoleForUser(rowData.uuid);\n      }\n    } else {\n      setExpanded({ ...expanded, [rowData.uuid]: -1 });\n    }\n  };\n\n  const breadcrumbsList = () => [\n    { title: 'Users', to: '/users' },\n    { title: userExists ? username : 'Invalid user', isActive: true },\n  ];\n\n  return (\n    <Fragment>\n      {userExists ? (\n        <Stack>\n          <StackItem>\n            <TopToolbar paddingBottm={false} breadcrumbs={breadcrumbsList()}>\n              <TopToolbarTitle\n                title={username}\n                renderTitleTag={() =>\n                  user && !isLoading ? (\n                    <Label color={user?.is_active && 'green'}>{user?.is_active ? 'Active' : 'Inactive'}</Label>\n                  ) : (\n                    <Skeleton size=\"xs\" className=\"rbac__user-label-skeleton\"></Skeleton>\n                  )\n                }\n                description={`${username}'s roles, groups and permissions.`}\n              />\n            </TopToolbar>\n          </StackItem>\n          <StackItem>\n            <Section type=\"content\" id={'user-detail'}>\n              <TableToolbarView\n                columns={columns}\n                isCompact={false}\n                isExpandable={true}\n                onExpand={onExpand}\n                createRows={createRows}\n                data={roles.data}\n                filterValue={filter}\n                ouiaId=\"user-details-table\"\n                fetchData={({ limit, offset, name }) => {\n                  debouncedFetch(limit, offset, name, ['groups_in'], username);\n                }}\n                setFilterValue={({ name }) => setFilter(name)}\n                isLoading={isLoading}\n                pagination={roles.meta}\n                filterPlaceholder=\"role name\"\n                titlePlural=\"roles\"\n                titleSingular=\"role\"\n                tableId=\"user\"\n              />\n            </Section>\n          </StackItem>\n        </Stack>\n      ) : (\n        <Fragment>\n          <section className=\"pf-c-page__main-breadcrumb pf-u-pb-md\">\n            <RbacBreadcrumbs {...breadcrumbsList()} />\n          </section>\n          <EmptyWithAction\n            title=\"User not found\"\n            description={[`User with username ${username} does not exist.`]}\n            actions={[\n              <Button\n                key=\"back-button\"\n                className=\"pf-u-mt-xl\"\n                ouiaId=\"back-button\"\n                variant=\"primary\"\n                aria-label=\"Back to previous page\"\n                onClick={() => history.goBack()}\n              >\n                Back to previous page\n              </Button>,\n            ]}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nUser.propTypes = {\n  match: PropTypes.object,\n  fetchRoles: PropTypes.func,\n  fetchRoleForUser: PropTypes.func,\n  fetchUsers: PropTypes.func,\n  roles: PropTypes.object,\n  isLoading: PropTypes.bool,\n  rolesWithAccess: PropTypes.object,\n  user: PropTypes.object,\n};\n\nconst mapStateToProps = (\n  {\n    roleReducer: { roles, isLoading, rolesWithAccess },\n    userReducer: {\n      users: { data },\n    },\n  },\n  {\n    match: {\n      params: { username },\n    },\n  }\n) => ({\n  roles,\n  isLoading,\n  rolesWithAccess,\n  user: data && data.filter((user) => user.username === username)[0],\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchRoles: (apiProps) => dispatch(fetchRoles(apiProps)),\n  fetchRoleForUser: (uuid) => dispatch(fetchRoleForUser(uuid)),\n  fetchUsers: (apiProps) => dispatch(fetchUsers(apiProps)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(User));\n","/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport UsersList from '../group/add-group/users-list';\nimport ActiveUser from '../../presentational-components/shared/ActiveUsers';\nimport User from './user';\nimport paths from '../../utilities/pathnames';\nimport PageActionRoute from '../common/page-action-route';\n\nconst Users = () => {\n  const description = (\n    <ActiveUser\n      description=\"These are all of the users in your Red Hat organization. To add new users or manage existing users, go to your\"\n    />\n  );\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'users', secondaryNav: true });\n  }, []);\n\n  const renderUsers = () => <Stack >\n    <StackItem>\n      <TopToolbar paddingBottm={ false }>\n        <TopToolbarTitle\n          title=\"Users\"\n          description={ description }\n        />\n      </TopToolbar>\n    </StackItem>\n    <StackItem>\n      <Section type=\"content\" id={ 'users' }>\n        <UsersList\n          userLinks\n          props={ {\n            isSelectable: false,\n            isCompact: false\n          } }\n        />\n      </Section>\n    </StackItem>\n  </Stack >;\n\n  return (\n    <Switch>\n      <PageActionRoute pageAction=\"user-detail\" exact path={ paths['user-detail'] } render={ props => <User {...props}/> } />\n      <PageActionRoute pageAction=\"users-list\" path={ [ paths.users, paths.rbac] } render={ () => renderUsers() } />\n    </Switch>\n\n  );\n};\n\nUsers.propTypes = {\n\n};\n\nUsers.defaultProps = {\n\n};\n\nexport default Users;\n"],"names":["debouncedFetch","columns","title","cellTransforms","compoundExpand","User","username","match","params","fetchRoles","fetchRoleForUser","fetchUsers","roles","isLoading","rolesWithAccess","user","useState","filter","setFilter","expanded","setExpanded","userExists","useSelector","state","roleReducer","error","BAD_UUID","useEffect","defaultSettings","limit","filters","inModal","insights","chrome","appObjectId","undefined","history","useHistory","offset","addFields","debounce","name","displayName","breadcrumbsList","to","isActive","Fragment","Stack","StackItem","paddingBottm","breadcrumbs","renderTitleTag","Label","color","is_active","Skeleton","size","className","description","Section","type","id","isCompact","isExpandable","onExpand","_event","_rowIndex","colIndex","isOpen","rowData","uuid","createRows","data","reduce","acc","i","display_name","groups_in","modified","accessCount","cells","props","component","length","DateFormat","getDateFormat","date","parent","compoundParent","colSpan","Table","ouiaId","variant","TableVariant","rows","map","g","Link","TableHeader","TableBody","access","permission","split","filterValue","fetchData","setFilterValue","pagination","meta","filterPlaceholder","titlePlural","titleSingular","tableId","actions","Button","key","onClick","goBack","propTypes","PropTypes","withRouter","connect","userReducer","users","dispatch","apiProps","Users","appNavClick","secondaryNav","Switch","pageAction","exact","path","paths","render","userLinks","isSelectable","defaultProps"],"sourceRoot":""}
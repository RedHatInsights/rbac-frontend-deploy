{"version":3,"file":"js/8176.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-success.js","webpack:///./src/smart-components/role/add-role-permissions/review-template.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-wizard.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permissions-summary-content.js","webpack:///./src/smart-components/role/add-role-permissions/schema.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport { fetchRole } from '../../../redux/actions/role-actions.js';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames.js';\n\nconst AddRolePermissionSuccess = ({ currentRoleID }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <EmptyState>\n        <EmptyStateHeader\n          titleText={<>{intl.formatMessage(messages.permissionsAddedSuccessfully)}</>}\n          icon={<EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />}\n          headingLevel=\"h4\"\n        />\n        <EmptyStateBody />\n        <EmptyStateFooter>\n          <AppLink to={pathnames['role-detail'].link.replace(':roleId', currentRoleID)}>\n            <Button onClick={() => dispatch(fetchRole(currentRoleID))}>{intl.formatMessage(messages.exit)}</Button>\n          </AppLink>\n        </EmptyStateFooter>\n      </EmptyState>\n    </>\n  );\n};\n\nexport default AddRolePermissionSuccess;\n\nAddRolePermissionSuccess.propTypes = {\n  currentRoleID: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { AddRolePermissionWizardContext } from './add-role-permission-wizard';\nimport '../add-role/review.scss';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting } = useContext(AddRolePermissionWizardContext);\n\n  if (submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  return <div className=\"rbac\">{[[{ ...formFields?.[0]?.[0] }]]}</div>;\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React, { useState, useEffect, useRef, createContext, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core/deprecated';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { updateRole } from '../../../redux/actions/role-actions.js';\nimport AddPermissionsTable from '../add-role/add-permissions';\nimport AddRolePermissionSummaryContent from './add-role-permissions-summary-content';\nimport AddRolePermissionSuccess from './add-role-permission-success';\nimport CostResources from '../add-role/cost-resources';\nimport InventoryGroupsRole from '../add-role/inventory-groups-role';\nimport { schemaBuilder } from './schema';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nexport const mapperExtension = {\n  'add-permissions-table': AddPermissionsTable,\n  'inventory-groups-role': InventoryGroupsRole,\n  'cost-resources': CostResources,\n  review: AddRolePermissionSummaryContent,\n};\n\nexport const AddRolePermissionWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst AddRolePermissionWizard = ({ role }) => {\n  const intl = useIntl();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [currentRoleID, setCurrentRoleID] = useState('');\n  const navigate = useAppNavigate();\n  const dispatch = useDispatch();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const container = useRef(document.createElement('div'));\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n  const schema = useMemo(() => schemaBuilder(container.current, enableWorkspacesNameChange), []);\n\n  useEffect(() => {\n    setCurrentRoleID(role.uuid);\n  });\n\n  useEffect(() => {\n    container.current.hidden = cancelWarningVisible;\n  }, [cancelWarningVisible]);\n\n  const handleWizardCancel = () => {\n    setCancelWarningVisible(true);\n  };\n\n  const handleConfirmCancel = () => {\n    navigate(pathnames['role-detail'].link.replace(':roleId', role.uuid));\n  };\n\n  const onSubmit = async (formData) => {\n    const {\n      'add-permissions-table': selectedPermissions,\n      'cost-resources': costResources = [],\n      'inventory-groups-role': invResources = [],\n    } = formData;\n\n    const selectedPermissionIds = [...role.access.map((record) => record.permission), ...selectedPermissions.map((record) => record.uuid)];\n    const roleData = {\n      ...role,\n      access: [\n        ...selectedPermissions.reduce(\n          (acc, { uuid: permission, requires }) => [\n            ...acc,\n            ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => ({\n              permission,\n              resourceDefinitions: [...costResources, ...invResources]?.find((r) => r.permission === permission)\n                ? permission.includes('inventory')\n                  ? [\n                      {\n                        attributeFilter: {\n                          key: 'group.id',\n                          operation: 'in',\n                          value: invResources?.find((g) => g.permission === permission)?.groups?.map((group) => group?.id),\n                        },\n                      },\n                    ]\n                  : permission.includes('cost-management')\n                  ? [\n                      {\n                        attributeFilter: {\n                          key: `cost-management.${permission.split(':')[1]}`,\n                          operation: 'in',\n                          value: costResources?.find((r) => r.permission === permission).resources,\n                        },\n                      },\n                    ]\n                  : []\n                : [],\n            })),\n          ],\n          role.access\n        ),\n      ],\n      accessCount: role.accessCount + selectedPermissions.length,\n    };\n\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    dispatch(updateRole(currentRoleID, roleData))\n      .then(() => setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true })))\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        navigate(pathnames['role-detail'].link.replace(':roleId', role.uuid));\n      });\n  };\n\n  return (\n    <AddRolePermissionWizardContext.Provider\n      value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm, rolePermissions: role.access }}\n    >\n      <WarningModal\n        title={intl.formatMessage(messages.exitItemAdding, { item: intl.formatMessage(messages.permissions).toLocaleLowerCase() })}\n        isOpen={cancelWarningVisible}\n        onClose={() => setCancelWarningVisible(false)}\n        confirmButtonLabel={intl.formatMessage(messages.discard)}\n        onConfirm={handleConfirmCancel}\n      >\n        {intl.formatMessage(messages.discardedInputsWarning)}\n      </WarningModal>\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.addPermissions)}\n            isOpen\n            steps={[\n              {\n                name: 'success',\n                component: <AddRolePermissionSuccess currentRoleID={currentRoleID} />,\n                isFinishedStep: true,\n              },\n            ]}\n            onClose={handleConfirmCancel}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          container={container}\n          schema={schema}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-uuid': role.uuid,\n            'role-type': 'create',\n            'role-name': role.display_name,\n            'role-description': role.description,\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            if (values && values['add-permissions-table']?.length > 0) {\n              handleWizardCancel();\n            } else {\n              handleConfirmCancel();\n            }\n          }}\n        />\n      )}\n    </AddRolePermissionWizardContext.Provider>\n  );\n};\n\nAddRolePermissionWizard.defaultProps = {\n  role: {},\n};\n\nAddRolePermissionWizard.propTypes = {\n  role: PropTypes.object,\n};\n\nexport default AddRolePermissionWizard;\n","import React from 'react';\nimport { Grid, GridItem, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRolePermissionSummaryContent = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'add-permissions-table': selectedPermissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n  } = formOptions.getState().values;\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <TextContent>\n          <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-sm\">\n            {intl.formatMessage(messages.reviewDetails)}\n          </Title>\n        </TextContent>\n      </StackItem>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <Grid hasGutter>\n          <GridItem span={3}>\n            <Text className=\"pf-v5-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleName)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{name}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-v5-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleDescription)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{description}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-v5-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.addedPermissions)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <TextContent component={TextVariants.p}>\n              {selectedPermissions.map((permission, index) => (\n                <Text key={index}> {permission.uuid} </Text>\n              ))}\n            </TextContent>\n          </GridItem>\n          {hasCostResources && (\n            <React.Fragment>\n              <GridItem span={3}>\n                <Text className=\"pf-v5-c-title\" component={TextVariants.h6}>\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem span={9}>\n                <TextContent component={TextVariants.p}>\n                  {resourceDefinitions.map(({ resources }) => resources.map((resource, index) => <Text key={index}> {resource} </Text>))}\n                </TextContent>\n              </GridItem>\n            </React.Fragment>\n          )}\n        </Grid>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default AddRolePermissionSummaryContent;\n","import React from 'react';\nimport AddPermissionTemplate from '../add-role/add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\nimport { validateNextAddRolePermissionStep } from '../permission-wizard-helper';\nimport InventoryGroupsRoleTemplate from '../add-role/inventory-groups-role-template';\n\nexport const schemaBuilder = (container, featureFlag) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.addPermissions),\n        container,\n        fields: [\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('add-permissions', values),\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            name: 'inventory-groups-role',\n            title: intl.formatMessage(featureFlag ? messages.workspacesAccessTitle : messages.inventoryGroupsAccessTitle),\n            StepTemplate: InventoryGroupsRoleTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('inventory-groups-role', values),\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(featureFlag ? messages.workspacesAccessDescription : messages.inventoryGroupsAccessDescription)}</p>,\n              },\n              {\n                component: 'inventory-groups-role',\n                name: 'inventory-groups-role',\n                validate: [\n                  (value = []) =>\n                    value?.every(({ groups, permission }) => groups?.length > 0 && permission)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneInventoryGroup),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) =>\n                    value.every(({ resources }) => resources && resources.length > 0)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneResource),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n"],"names":["AddRolePermissionSuccess","currentRoleID","intl","useIntl","dispatch","useDispatch","EmptyState","EmptyStateHeader","titleText","formatMessage","permissionsAddedSuccessfully","icon","EmptyStateIcon","color","headingLevel","EmptyStateBody","EmptyStateFooter","AppLink","A","to","pathnames","link","replace","Button","onClick","exit","propTypes","isRequired","ReviewTemplate","formFields","submitting","useContext","AddRolePermissionWizardContext","Bullseye","Spinner","size","className","FormTemplate","props","showFormControls","mapperExtension","review","formOptions","name","description","selectedPermissions","resourceDefinitions","hasCostResources","getState","values","Stack","hasGutter","StackItem","TextContent","Title","reviewDetails","Grid","GridItem","span","Text","component","TextVariants","h6","roleName","p","roleDescription","addedPermissions","map","permission","index","key","uuid","resources","resource","createContext","success","error","undefined","AddRolePermissionWizard","role","cancelWarningVisible","setCancelWarningVisible","useState","setCurrentRoleID","navigate","useAppNavigate","enableWorkspacesNameChange","useFlag","wizardContextValue","setWizardContextValue","hideForm","container","useRef","document","createElement","schema","useMemo","featureFlag","cache","createIntl","locale","messages","fields","isDynamic","inModal","showTitles","crossroads","title","addPermissions","StepTemplate","nextStep","workspacesAccessTitle","inventoryGroupsAccessTitle","label","workspacesAccessDescription","inventoryGroupsAccessDescription","validate","value","every","groups","length","assignAtLeastOneInventoryGroup","defineCostResources","applyCostPermissionText","assignAtLeastOneResource","schemaBuilder","current","useEffect","hidden","handleConfirmCancel","Provider","setWizardError","prev","setWizardSuccess","setHideForm","rolePermissions","access","WarningModal","exitItemAdding","item","permissions","toLocaleLowerCase","isOpen","onClose","confirmButtonLabel","discard","onConfirm","discardedInputsWarning","Wizard","steps","isFinishedStep","subscription","initialValues","display_name","componentMapper","onSubmit","async","formData","costResources","invResources","selectedPermissionIds","record","roleData","reduce","acc","requires","filter","require","includes","find","r","attributeFilter","operation","g","group","id","split","accessCount","then","catch","onCancel","defaultProps"],"sourceRoot":""}
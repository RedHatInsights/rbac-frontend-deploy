{"version":3,"sources":["webpack:///./src/presentational-components/shared/ActiveUsers.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/users-list.js"],"names":["ActiveUser","description","linkTitle","Text","className","component","TextVariants","href","window","insights","chrome","isProd","target","rel","propTypes","PropTypes","defaultProps","UsersRow","row","props","status","isActive","RowWrapper","classNames","data","principalApi","getPrincipalApi","principalStatusApiMap","Active","Inactive","fetchUsers","limit","offset","orderBy","filters","inModal","matchCriteria","username","email","sortOrder","mappedStatus","length","listPrincipals","response","isPaginationValid","isOffsetValid","meta","count","getLastPageOffset","pagination","redirected","apiProps","type","ActionTypes","payload","UserHelper","updateUsersFilters","columns","title","key","transforms","nowrap","sortable","createRows","userLinks","_expanded","checkedRows","reduce","acc","is_active","firstName","first_name","lastName","last_name","isOrgAdmin","is_org_admin","uuid","cells","Fragment","Link","to","Label","color","selected","Boolean","find","UsersList","users","isLoading","selectedUsers","setSelectedUsers","defaultPagination","useSelector","userReducer","defaultSettings","history","useHistory","stateFilters","useState","setFilters","useEffect","applyPaginationToUrl","syncDefaultPaginationWithUrl","newFilters","syncDefaultFiltersWithUrl","mappedProps","isSelectable","isCompact","borders","ouiaId","fetchData","config","Object","prototype","hasOwnProperty","call","applyFiltersToUrl","setFilterValue","setCheckedItems","newSelection","map","label","sortBy","index","direction","rowWrapper","titlePlural","titleSingular","value","placeholder","items","tableId","mapStateToProps","isUserDataLoading","mapDispatchToProps","dispatch","addNotification","goBack","push","searchFilter","connect","CompactUsersList","propsFromState","propsFromDispatch","ownProps","defaultCompactSettings"],"mappings":"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","file":"js/661.f261aacf270780404519.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nconst ActiveUser = ({ description, linkTitle }) => (\n  <Text className=\"pf-u-mt-0\" component={TextVariants.h7}>\n    {description}\n    <Text\n      component={TextVariants.a}\n      href={`https://www.${window.insights.chrome.isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {linkTitle}\n      <ExternalLinkAltIcon />\n    </Text>\n    .\n  </Text>\n);\n\nActiveUser.propTypes = {\n  description: PropTypes.node,\n  linkTitle: PropTypes.node,\n};\n\nActiveUser.defaultProps = {\n  description: '',\n  linkTitle: ' user management list ',\n};\n\nexport default ActiveUser;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('ins-c-rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        'data-is-active': PropTypes.bool,\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import { getLastPageOffset, isOffsetValid } from '../shared/pagination';\nimport { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nconst principalStatusApiMap = {\n  Active: 'enabled',\n  Inactive: 'disabled',\n};\nexport async function fetchUsers({ limit, offset = 0, orderBy, filters = {}, inModal, matchCriteria = 'partial' }) {\n  const { username, email, status = [] } = filters;\n  const sortOrder = orderBy === '-username' ? 'desc' : 'asc';\n  const mappedStatus = status.length === 2 ? 'all' : principalStatusApiMap[status[0]] || 'all';\n  const response = await principalApi.listPrincipals(limit, offset, matchCriteria, username, sortOrder, email, mappedStatus);\n  const isPaginationValid = isOffsetValid(offset, response?.meta?.count);\n  offset = isPaginationValid ? offset : getLastPageOffset(response.meta.count, limit);\n  const { data, meta } = isPaginationValid\n    ? response\n    : await principalApi.listPrincipals(limit, offset, matchCriteria, username, sortOrder, email, mappedStatus);\n  return {\n    data,\n    meta: {\n      ...meta,\n      offset,\n      limit,\n    },\n    ...(inModal\n      ? {}\n      : {\n          filters,\n          pagination: {\n            ...meta,\n            offset,\n            limit,\n            redirected: !isPaginationValid,\n          },\n        }),\n  };\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps),\n});\n\nexport const updateUsersFilters = (filters) => ({\n  type: ActionTypes.UPDATE_USERS_FILTERS,\n  payload: filters,\n});\n","import React, { useEffect, Fragment, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers, updateUsersFilters } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Label } from '@patternfly/react-core';\nimport { sortable, nowrap } from '@patternfly/react-table';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport { defaultCompactSettings, defaultSettings, syncDefaultPaginationWithUrl, applyPaginationToUrl } from '../../../helpers/shared/pagination';\nimport { syncDefaultFiltersWithUrl, applyFiltersToUrl } from '../../../helpers/shared/filters';\nimport { CheckIcon, CloseIcon } from '@patternfly/react-icons';\n\nconst columns = [\n  { title: 'Org. Administrator', key: 'org-admin', transforms: [nowrap] },\n  { title: 'Username', key: 'username', transforms: [sortable] },\n  { title: 'Email' },\n  { title: 'First name', transforms: [nowrap] },\n  { title: 'Last name', transforms: [nowrap] },\n  { title: 'Status', transforms: [nowrap] },\n];\n\nconst createRows =\n  (userLinks) =>\n  (data, _expanded, checkedRows = []) => {\n    return data\n      ? data.reduce(\n          (acc, { username, is_active: isActive, email, first_name: firstName, last_name: lastName, is_org_admin: isOrgAdmin }) => [\n            ...acc,\n            {\n              uuid: username,\n              cells: [\n                isOrgAdmin ? (\n                  <Fragment>\n                    <CheckIcon key=\"yes-icon\" className=\"pf-u-mr-sm\" />\n                    <span key=\"yes\">Yes</span>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    <CloseIcon key=\"no-icon\" className=\"pf-u-mr-sm\" />\n                    <span key=\"no\">No</span>\n                  </Fragment>\n                ),\n                { title: userLinks ? <Link to={`/users/detail/${username}`}>{username}</Link> : username },\n                email,\n                firstName,\n                lastName,\n                {\n                  title: (\n                    <Label key=\"status\" color={isActive && 'green'}>\n                      {isActive ? 'Active' : 'Inactive'}\n                    </Label>\n                  ),\n                  props: {\n                    'data-is-active': isActive,\n                  },\n                },\n              ],\n              selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === username)),\n            },\n          ],\n          []\n        )\n      : [];\n  };\n\nconst UsersList = ({ users, fetchUsers, updateUsersFilters, isLoading, pagination, selectedUsers, setSelectedUsers, userLinks, inModal, props }) => {\n  const defaultPagination = useSelector(({ userReducer: { users } }) => ({\n    limit: inModal ? users.meta.limit : users.pagination.limit || defaultSettings.limit,\n    offset: inModal ? users.meta.offset : users.pagination.offset || defaultSettings.offset,\n    count: inModal ? users.meta.count : users.pagination.count,\n    redirected: !inModal && users.pagination.redirected,\n  }));\n\n  const history = useHistory();\n\n  let stateFilters = useSelector(\n    ({\n      userReducer: {\n        users: { filters },\n      },\n    }) => filters\n  );\n\n  const [filters, setFilters] = useState(\n    inModal\n      ? {\n          username: '',\n          email: '',\n          status: ['Active'],\n        }\n      : stateFilters\n  );\n\n  useEffect(() => {\n    inModal || (defaultPagination.redirected && applyPaginationToUrl(history, defaultPagination.limit, defaultPagination.offset));\n  }, [defaultPagination.redirected]);\n\n  useEffect(() => {\n    const pagination = inModal ? defaultSettings : syncDefaultPaginationWithUrl(history, defaultPagination);\n    const newFilters = inModal ? { status: filters.status } : syncDefaultFiltersWithUrl(history, ['username', 'email', 'status'], filters);\n    setFilters(newFilters);\n    fetchUsers({ ...mappedProps({ ...pagination, filters: newFilters }), inModal });\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, username }) => ({ uuid, label: username || uuid }));\n    });\n  };\n\n  const updateFilters = (payload) => {\n    inModal || updateUsersFilters(payload);\n    setFilters({ username: '', ...payload });\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact={true}\n      borders={false}\n      createRows={createRows(userLinks)}\n      data={users}\n      ouiaId=\"users-table\"\n      fetchData={(config) => {\n        const status = Object.prototype.hasOwnProperty.call(config, 'status') ? config.status : filters.status;\n        const { username, email, count, limit, offset, orderBy } = config;\n        fetchUsers({ ...mappedProps({ count, limit, offset, orderBy, filters: { username, email, status } }), inModal });\n        inModal || applyPaginationToUrl(history, limit, offset);\n        inModal || applyFiltersToUrl(history, { username, email, status });\n      }}\n      setFilterValue={({ username, email, status }) => {\n        updateFilters({\n          username: typeof username === 'undefined' ? filters.username : username,\n          email: typeof email === 'undefined' ? filters.email : email,\n          status: typeof status === 'undefined' || status === filters.status ? filters.status : status,\n        });\n      }}\n      isLoading={isLoading}\n      pagination={pagination}\n      checkedRows={selectedUsers}\n      setCheckedItems={setCheckedItems}\n      sortBy={{\n        index: 1,\n        direction: 'asc',\n      }}\n      rowWrapper={UsersRow}\n      titlePlural=\"users\"\n      titleSingular=\"user\"\n      filters={[\n        { key: 'username', value: filters.username, placeholder: 'Filter by username' },\n        { key: 'email', value: filters.email, placeholder: 'Filter by email' },\n        {\n          key: 'status',\n          value: filters.status,\n          label: 'Status',\n          type: 'checkbox',\n          items: [\n            { label: 'Active', value: 'Active' },\n            { label: 'Inactive', value: 'Inactive' },\n          ],\n        },\n      ]}\n      tableId=\"users-list\"\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading } }) => {\n  return {\n    users: users.data && users.data.map((data) => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: (apiProps = defaultSettings) => {\n      dispatch(fetchUsers(apiProps));\n    },\n    updateUsersFilters: (filters) => {\n      dispatch(updateUsersFilters(filters));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchUsers: (apiProps) => {\n      return propsFromDispatch.fetchUsers(apiProps ? apiProps : defaultCompactSettings);\n    },\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  updateUsersFilters: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  userLinks: PropTypes.bool,\n  props: PropTypes.object,\n  inModal: PropTypes.bool,\n};\n\nUsersList.defaultProps = {\n  users: [],\n  selectedUsers: [],\n  setSelectedUsers: () => undefined,\n  userLinks: false,\n  inModal: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\nexport const CompactUsersList = connect(mapStateToProps, mapDispatchToProps, mergeProps)(UsersList);\n"],"sourceRoot":""}
{"version":3,"file":"js/60.91c2683a77540b711b66.js","mappings":"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","sources":["webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-state.tsx"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStatePrimary } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationToggleTemplate,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStatePrimary key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStatePrimary>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationToggleTemplate={paginationToggleTemplate}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <ListLoader isCompact={isCompact} items={pagination?.limit} />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination\n                {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationToggleTemplate)}\n                variant=\"bottom\"\n                dropDirection=\"up\"\n              />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationToggleTemplate: propTypes.func,\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationToggleTemplate) => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  ...(paginationToggleTemplate ? { toggleTemplate: paginationToggleTemplate } : {}),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type,\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationToggleTemplate,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    useMobileLayout\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationToggleTemplate),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationToggleTemplate: PropTypes.func,\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { SVGIconProps } from '@patternfly/react-icons/dist/esm/createIcon';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<SVGIconProps, any>;\n  description: any;\n  actions: any;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.small} {...props}>\n    <EmptyStateIcon icon={icon || SearchIcon} />\n    <Title headingLevel=\"h4\" size=\"lg\">\n      {title}\n    </Title>\n    <EmptyStateBody className=\"pf-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    {actions}\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n"],"names":["TableToolbarView","orderBy","isCompact","borders","columns","rows","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationToggleTemplate","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","value","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","intl","useIntl","Fragment","length","every","title","formatMessage","messages","items","icon","PlusCircleIcon","description","item","actions","direction","index","key","limit","Table","canSelectAll","toLowerCase","variant","TableVariant","onSelect","_e","isSelected","_idx","uuid","name","cells","requires","selectedRows","fullWidth","undefined","EmptyStatePrimary","Button","onClick","offset","props","colSpan","className","e","TableHeader","TableBody","noBottom","Pagination","paginationBuilder","dropDirection","propTypes","Toolbar","directions","count","defaultProps","itemCount","perPage","page","calculatePage","toggleTemplate","onSetPage","_event","calculateOffset","perPageOptions","onPerPageSelect","bulkSelectBuilder","filter","checked","calculateChecked","id","filterConfigBuilder","filterItems","map","label","selected","placeholder","type","groups","innerRef","firstUpperCase","filterValues","filterBy","newFilter","Array","isArray","Object","keys","debouncedFetch","reduce","acc","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","options","category","chips","Boolean","onDelete","isAll","deleted","filtersValue","setKeyValue","bulkSelect","filterConfig","useMobileLayout","actionsConfig","activeFiltersConfig","PropTypes","isCollapsible","defaultSettings","EmptyState","EmptyStateVariant","EmptyStateIcon","SearchIcon","Title","headingLevel","size","EmptyStateBody","text"],"sourceRoot":""}
{"version":3,"file":"js/2824.54d45e3fec427b8a2a8a.js","mappings":"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","sources":["webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/role/add-role/add-permissions-template.js","webpack:///./src/helpers/permission/permission-helper.js","webpack:///./src/redux/actions/permission-action.js","webpack:///./src/smart-components/role/add-role/DisabledRowWrapper.js","webpack:///./src/smart-components/role/add-role/add-permissions.js","webpack:///./src/smart-components/role/add-role/cost-resources.js","webpack:///./src/smart-components/role/add-role/inventory-groups-role-template.js","webpack:///./src/helpers/role/inventory-helper.js","webpack:///./src/smart-components/role/add-role/inventory-groups-role.js","webpack:///./src/redux/actions/inventory-actions.js","webpack:///./src/smart-components/role/permission-wizard-helper.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <ListLoader isCompact={isCompact} items={pagination?.limit} />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const getResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const getResource = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button, Icon } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/dynamic/icons/exclamation-triangle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './warningModal.scss';\n\nexport const WarningModal = ({\n  type,\n  isOpen,\n  onModalCancel,\n  onModalConfirm,\n  customTitle,\n  customDescription,\n  customPrimaryButtonTitle,\n  customSecondaryButtonTitle,\n}) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      data-testid=\"warning-modal\"\n      title={\n        <span className=\"rbac-c-wizard__cancel-warning-header\">\n          <Icon size=\"lg\" className=\"pf-v5-u-mr-md\">\n            <ExclamationTriangleIcon className=\"rbac-c-wizard__cancel-warning-header--icon\" />\n          </Icon>\n          {customTitle || intl.formatMessage(messages.exitItemCreation, { item: type })}\n        </span>\n      }\n      variant={ModalVariant.small}\n      className=\"rbac rbac-c-wizard__cancel-warning\"\n      isOpen={isOpen}\n      onClose={onModalCancel}\n      actions={[\n        <Button ouiaId=\"primary-exit-button\" key=\"confirm\" variant=\"primary\" onClick={onModalConfirm}>\n          {customPrimaryButtonTitle ?? intl.formatMessage(messages.exit)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onModalCancel}>\n          {customSecondaryButtonTitle ?? intl.formatMessage(messages.stay)}\n        </Button>,\n      ]}\n    >\n      <span>{customDescription || intl.formatMessage(messages.discardedInputsWarning)} </span>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  customTitle: PropTypes.node,\n  customDescription: PropTypes.node,\n  customPrimaryButtonTitle: PropTypes.string,\n  customSecondaryButtonTitle: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onModalConfirm: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Text, TextContent, Title, Button, Popover, Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './add-role-wizard.scss';\n\nconst AddPermissionTemplate = ({ formFields }) => {\n  const formOptions = useFormApi();\n  const [selectedPermissions, setSelectedPermissions] = useState(formOptions.getState().values['add-permissions-table'] || []);\n  const [alertClosed, setAlertClosed] = useState(false);\n  const notAllowedBasePermissions = formOptions.getState().values['not-allowed-permissions'];\n  const intl = useIntl();\n\n  const unresolvedSplats =\n    formOptions.getState().values?.['copy-base-role']?.applications?.filter((app) => !selectedPermissions?.find(({ uuid }) => uuid.includes(app))) ||\n    [];\n  const addPermissions = formFields[0][0];\n  return (\n    <div className=\"rbac\">\n      {selectedPermissions.length > 0 ? (\n        <div className=\"rbac-c-selected-chips\">\n          <ChipGroup categoryName={intl.formatMessage(messages.selectedPermissions)}>\n            {/* immutable reverse */}\n            {selectedPermissions\n              .reduce((acc, i) => [i, ...acc], [])\n              .map(({ uuid }) => (\n                <Chip key={uuid} color=\"blue\" isTruncated onClick={() => setSelectedPermissions(selectedPermissions.filter((p) => p.uuid !== uuid))}>\n                  {uuid}\n                </Chip>\n              ))}\n          </ChipGroup>\n        </div>\n      ) : null}\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"rbac-c-add-permission-title\">\n        {intl.formatMessage(messages.addPermissions)}\n      </Title>\n      <TextContent>\n        <Text>\n          {intl.formatMessage(messages.selectPermissionsForRole)}\n          {unresolvedSplats.length !== 0 && (\n            <Popover\n              headerContent={intl.formatMessage(messages.onlyGranularPermissions)}\n              bodyContent={intl.formatMessage(messages.noWildcardPermissions)}\n            >\n              <Button variant=\"link\">\n                {intl.formatMessage(messages.whyNotSeeingAllPermissions)} <QuestionCircleIcon />\n              </Button>\n            </Popover>\n          )}\n        </Text>\n      </TextContent>\n      {notAllowedBasePermissions?.length > 0 && !alertClosed ? (\n        <Alert\n          variant=\"custom\"\n          isInline\n          title={`${intl.formatMessage(messages.followingPermissionsCannotBeAdded)} ${notAllowedBasePermissions.join(', ')}`}\n          actionClose={<AlertActionCloseButton onClose={() => setAlertClosed(true)} />}\n        />\n      ) : null}\n      {[\n        [\n          {\n            ...addPermissions,\n            props: {\n              ...addPermissions.props,\n              selectedPermissions,\n              setSelectedPermissions,\n            },\n          },\n        ],\n      ]}\n    </div>\n  );\n};\n\nAddPermissionTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default AddPermissionTemplate;\n","import { getPermissionApi } from '../shared/user-login';\n\nconst accessApi = getPermissionApi();\n\nconst disallowedPermissions = ['inventory:staleness'];\n\nexport async function listPermissions(\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  excludeGlobals,\n  excludeRoles,\n  allowedOnly,\n  options\n) {\n  const response = await accessApi.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    excludeGlobals,\n    excludeRoles,\n    allowedOnly,\n    options\n  );\n\n  return {\n    ...response,\n    data: response.data.filter(({ permission }) => !disallowedPermissions.some((item) => permission.includes(item))),\n  };\n}\n\nexport async function listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options) {\n  return await accessApi.listPermissionOptions(field, limit, offset, application, resourceType, verb, undefined, allowedOnly, options);\n}\n","import * as ActionTypes from '../action-types';\nimport * as PermissionsHelper from '../../helpers/permission/permission-helper';\n\nexport const listPermissions = ({\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  exclude_roles,\n  allowed_only,\n  options,\n}) => ({\n  type: ActionTypes.LIST_PERMISSIONS,\n  payload: PermissionsHelper.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    exclude_globals,\n    exclude_roles,\n    allowed_only,\n    options\n  ),\n});\n\nconst fieldToAction = {\n  application: ActionTypes.LIST_APPLICATION_OPTIONS,\n  resource_type: ActionTypes.LIST_RESOURCE_OPTIONS,\n  verb: ActionTypes.LIST_OPERATION_OPTIONS,\n};\n\nexport const listPermissionOptions = ({ field, limit, offset, application, resourceType, verb, allowedOnly, options }) => ({\n  type: fieldToAction[field],\n  payload: PermissionsHelper.listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options),\n});\n\nexport const expandSplats = ({\n  limit = 1000,\n  offset = 0,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  options,\n}) => ({\n  type: ActionTypes.EXPAND_SPLATS,\n  payload: PermissionsHelper.listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, exclude_globals, options),\n});\n\nexport const resetExpandSplats = () => ({\n  type: ActionTypes.RESET_EXPAND_SPLATS,\n  payload: {\n    data: [],\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '@patternfly/react-core';\nimport { RowWrapper } from '@patternfly/react-table';\n\nexport const DisabledRowWrapper = ({ row, ...props }) =>\n  row.disableSelection ? (\n    <Tooltip content={row.disabledContent} exitDelay={1500} entryDelay={1500}>\n      <RowWrapper className=\"rbac-c-disabled-row\" row={row} {...props} />\n    </Tooltip>\n  ) : (\n    <RowWrapper row={row} {...props} />\n  );\n\nDisabledRowWrapper.propTypes = {\n  props: PropTypes.object,\n  row: PropTypes.object,\n};\n","import React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport debouncePromise from '@redhat-cloud-services/frontend-components-utilities/debounce';\nimport usePermissions from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { listPermissions, listPermissionOptions, expandSplats, resetExpandSplats } from '../../../redux/actions/permission-action';\nimport { getResourceDefinitions } from '../../../redux/actions/cost-management-actions';\nimport { fetchRole } from '../../../redux/actions/role-actions';\nimport { DisabledRowWrapper } from './DisabledRowWrapper';\nimport { isEqual } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport '../role-permissions.scss';\n\nconst selector = ({\n  permissionReducer: {\n    permission,\n    isLoading,\n    options: { application, operation, resource },\n    expandSplats,\n    isLoadingExpandSplats,\n  },\n  roleReducer: { isRecordLoading, selectedRole },\n  costReducer: { resourceTypes },\n}) => ({\n  permissions: permission.data.map(({ application, resource_type: resource, verb, permission, requires } = {}) => ({\n    application,\n    resource,\n    operation: verb,\n    uuid: permission,\n    requires,\n  })),\n  pagination: permission.meta,\n  isLoading: isLoading || isRecordLoading,\n  baseRole: selectedRole,\n  applicationOptions: application.data.filter((app) => app !== '*'),\n  resourceOptions: resource.data.filter((app) => app !== '*'),\n  operationOptions: operation.data.filter((app) => app !== '*'),\n  expandedPermissions: expandSplats.data.map(({ permission }) => permission),\n  isLoadingExpandSplats,\n  resourceTypes: resourceTypes.data,\n});\n\nconst AddPermissionsTable = ({ selectedPermissions, setSelectedPermissions, ...props }) => {\n  const [isOrgAdmin, setIsOrgAdmin] = useState(null);\n  const { auth } = useChrome();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { hasAccess: hasCostAccess } = usePermissions('cost-management', ['cost-management:*:*']);\n  const { hasAccess: hasRbacAccess } = usePermissions('rbac', ['rbac:*:*']);\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n\n  useEffect(() => {\n    const setOrgAdmin = async () => {\n      const {\n        identity: { user },\n      } = await auth.getUser();\n      setIsOrgAdmin(user.is_org_admin);\n    };\n    if (auth) {\n      setOrgAdmin();\n    }\n  }, [auth]);\n\n  const fetchData = (apiProps) =>\n    dispatch(\n      listPermissions({\n        ...apiProps,\n        ...(existingRoleId ? { exclude_roles: existingRoleId } : {}),\n        allowed_only: true,\n      })\n    );\n  const fetchOptions = (apiProps) => dispatch(listPermissionOptions({ ...apiProps, allowedOnly: true }));\n  const {\n    permissions,\n    isLoading,\n    pagination,\n    baseRole,\n    applicationOptions,\n    resourceOptions,\n    operationOptions,\n    expandedPermissions,\n    isLoadingExpandSplats,\n    resourceTypes,\n  } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  // TODO: use reducer when cleaning this code\n  const [filters, setFilters] = useState({ applications: [], resources: [], operations: [] });\n  const roleType = formOptions.getState().values['role-type']; // create/copy\n  const existingRoleId = formOptions.getState().values['role-uuid'];\n  const [isToggled, setIsToggled] = useState(false);\n  const [filterBy, setFilterBy] = useState('');\n  const [value, setValue] = useState();\n  const maxFilterItems = 10;\n\n  const inventoryAccess = useMemo(() => isOrgAdmin || (hasRbacAccess ?? false), [hasRbacAccess, isOrgAdmin]);\n\n  const getResourceType = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1]);\n  const createRows = (permissions) =>\n    permissions.map(({ application, resource, operation, uuid, requires }) => ({\n      uuid: `${application}:${resource}:${operation}`,\n      requires,\n      cells: [\n        {\n          title: application,\n        },\n        resource,\n        operation,\n      ],\n      selected: Boolean(selectedPermissions && selectedPermissions.find((row) => row.uuid === uuid)),\n      disableSelection:\n        (application === 'cost-management' && ((getResourceType(uuid) || { count: 0 }).count === 0 || !hasCostAccess)) ||\n        (application === 'inventory' && !inventoryAccess),\n      disabledContent:\n        application === 'cost-management' ? (\n          <div>\n            {intl.formatMessage(hasCostAccess ? messages.configureResourcesForPermission : messages.noCostManagementPermissions)}{' '}\n            {hasCostAccess ? <a href=\"./settings/sources\">{intl.formatMessage(messages.configureCostSources)}</a> : null}\n          </div>\n        ) : (\n          <div>{intl.formatMessage(messages.noRbacPermissions)}</div>\n        ),\n    }));\n\n  const debouncedGetApplicationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'application',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetResourceOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'resource_type',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetOperationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({ field: 'verb', limit: 50, application: applications.join(), resourceType: resources.join(), verb: operations.join() }),\n      2000\n    ),\n    []\n  );\n\n  useEffect(() => {\n    const baseRoleUuid = formOptions.getState().values['copy-base-role']?.uuid;\n    if (roleType === 'copy' && baseRoleUuid) {\n      dispatch(fetchRole(baseRoleUuid));\n    }\n\n    formOptions.change('has-cost-resources', false);\n    fetchData(pagination);\n    fetchOptions({ field: 'application', limit: 50 });\n    fetchOptions({ field: 'resource_type', limit: 50 });\n    fetchOptions({ field: 'verb', limit: 50 });\n\n    return () => dispatch(resetExpandSplats());\n  }, []);\n\n  useEffect(() => {\n    hasCostAccess && dispatch(getResourceDefinitions());\n  }, [hasCostAccess]);\n\n  useEffect(() => {\n    debouncedGetResourceOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.applications]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.resources]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetResourceOptions(filters);\n  }, [filters.operations]);\n\n  useEffect(() => {\n    input.onChange(selectedPermissions);\n  }, [selectedPermissions]);\n\n  useEffect(() => {\n    if (\n      !baseRole ||\n      roleType !== 'copy' ||\n      formOptions.getState().values['base-permissions-loaded'] ||\n      selectedPermissions.length > 0 ||\n      formOptions.getState().values['copy-base-role']?.uuid !== baseRole?.uuid ||\n      isLoadingExpandSplats ||\n      isLoading\n    ) {\n      return;\n    }\n\n    let notAllowed = [];\n\n    const basePermissions =\n      baseRole?.access.filter((item) => {\n        if (applicationOptions.includes(item?.permission?.split(':')[0])) {\n          return true;\n        }\n        notAllowed.push(item);\n\n        return false;\n      }) || [];\n    formOptions.change(\n      'not-allowed-permissions',\n      notAllowed.map(({ permission }) => permission)\n    );\n    if (expandedPermissions.length === 0 && typeof isLoadingExpandSplats === 'undefined') {\n      const applications = [...new Set(basePermissions.map(({ permission }) => permission.split(':')[0]))];\n      dispatch(expandSplats({ application: applications.join() }));\n    } else {\n      const patterns = basePermissions.map(({ permission }) => permission.replace('*', '.*'));\n      setSelectedPermissions(() =>\n        expandedPermissions\n          .filter((p) => p.split(':')[0] !== 'cost-management' || (getResourceType(p) || { count: 0 }).count !== 0) // filter disabled rows\n          .filter((p) => patterns.some((f) => p.match(f))) // filter permissions with unresolved splats\n          .map((permission) => ({ uuid: permission }))\n      );\n      formOptions.change('base-permissions-loaded', true);\n    }\n  }, [permissions, baseRole]);\n\n  const setCheckedItems = (newSelection) => {\n    const newSelected = newSelection(selectedPermissions)\n      .filter(({ uuid, application }) => application !== 'cost-management' || getResourceType(uuid)?.count > 0)\n      .map(({ uuid, requires }) => ({ uuid, requires }));\n\n    setSelectedPermissions(isEqual(newSelected, selectedPermissions) ? [] : newSelected);\n  };\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const preparedFilterItems = {\n    applications: [...applicationOptions].filter((item) => item.includes(filterBy)).map((app) => ({ label: app, value: app })),\n    resources: [...resourceOptions].filter((item) => item.includes(filterBy)).map((res) => ({ label: res, value: res })),\n    operations: [...operationOptions].filter((item) => item.includes(filterBy)).map((op) => ({ label: op, value: op })),\n  };\n\n  const emptyItem = {\n    label: <div>{intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const filterItemOverflow = preparedFilterItems[Object.keys(preparedFilterItems)[value ? value : 0]].length > maxFilterItems;\n  return (\n    <div className=\"rbac-c-permissions-table\">\n      <TableToolbarView\n        columns={columns}\n        isSelectable={true}\n        isCompact={true}\n        borders={false}\n        rows={createRows(permissions)}\n        data={permissions}\n        filterValue=\"\"\n        noData={permissions?.length === 0}\n        noDataDescription={[intl.formatMessage(messages.permissionNotDisplayedDescription)]}\n        fetchData={({ limit, offset, applications, resources, operations }) => {\n          fetchData({\n            limit,\n            offset,\n            application: (applications || filters.applications).join(),\n            resourceType: (resources || filters.resources).join(),\n            verb: (operations || filters.operations).join(),\n          });\n        }}\n        setFilterValue={({ applications, resources, operations }) => {\n          setFilters({\n            ...filters,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        isLoading={isLoading || isLoadingExpandSplats}\n        pagination={{ ...pagination, count: pagination.count }}\n        checkedRows={selectedPermissions}\n        setCheckedItems={setCheckedItems}\n        titlePlural={intl.formatMessage(messages.permissions).toLowerCase()}\n        titleSingular={intl.formatMessage(messages.permission).toLowerCase()}\n        showMoreTitle={intl.formatMessage(isToggled ? messages.seeLess : messages.seeMore)}\n        onFilter={(filterBy) => setFilterBy(filterBy)}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                setIsToggled(() => !isToggled);\n              }\n            : undefined\n        }\n        onChange={(e, value) => {\n          setFilterBy('');\n          setValue(value);\n        }}\n        value={value}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: preparedFilterItems.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.applications.length > 0\n                    ? [...preparedFilterItems.applications].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: preparedFilterItems.resources.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.resources.length > 0\n                    ? [...preparedFilterItems.resources].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: preparedFilterItems.operations.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.operations.length > 0\n                    ? [...preparedFilterItems.operations].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        isFilterable={true}\n        rowWrapper={DisabledRowWrapper}\n        tableId=\"add-role-permissions\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nAddPermissionsTable.propTypes = {\n  selectedPermissions: PropTypes.array,\n  setSelectedPermissions: PropTypes.func,\n};\n\nexport default AddPermissionsTable;\n","import React, { useEffect, useReducer } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem, Text, TextVariants, FormGroup, Tooltip } from '@patternfly/react-core';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core/deprecated';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { getResourceDefinitions, getResource } from '../../../redux/actions/cost-management-actions';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }) => ({\n  resourceTypes: resourceTypes.data,\n  resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: !prevState.isOpen,\n        },\n      };\n    case 'select':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.selected.includes(action.selection)\n            ? prevState.selected.filter((item) => item !== action.selection)\n            : [...prevState.selected, action.selection],\n        },\n      };\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.options.map((option) => option.value),\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    case 'setOptions':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          options: action.options,\n          filteredOptions: action.options,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filteredOptions: prevState.options.filter(({ value }) => value.includes(action.filtervalue)),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst CostResources = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (apiProps) => dispatch(getResourceDefinitions(apiProps));\n  const fetchResource = (apiProps) => dispatch(getResource(apiProps));\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const permissions = formOptions.getState().values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('cost-management'));\n\n  const [state, dispatchLocaly] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission.uuid]: {\n          selected: [],\n          options: [],\n          filteredOptions: [],\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n  const onToggle = (key, isOpen) => dispatchLocaly({ type: 'toggle', key, isOpen });\n  const clearSelection = (key) => dispatchLocaly({ type: 'clear', key });\n  const onSelect = (event, selection, selectAll, key) =>\n    selectAll ? dispatchLocaly({ type: 'selectAll', selection, key }) : dispatchLocaly({ type: 'select', selection, key });\n\n  const permissionToResource = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1])?.path.split('/')?.[5];\n\n  useEffect(() => {\n    (formOptions.getState().values['resource-definitions'] || []).map(({ permission, resources }) =>\n      resources.map(\n        (resource) =>\n          permissions.find((item) => item?.uuid === permission) && dispatchLocaly({ type: 'select', selection: resource, key: permission })\n      )\n    );\n    fetchData();\n    formOptions.change('has-cost-resources', true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      const resourcePaths = [\n        ...new Set(permissions.map((permission) => resourceTypes.find((r) => r.value === permission.uuid.split(':')?.[1])?.path)),\n      ].filter((path) => path); // remove undefined\n      resourcePaths.map((path) => fetchResource(path));\n    }\n  }, [resourceTypes]);\n\n  useEffect(() => {\n    if (!isLoadingResources) {\n      permissions.map((p) => dispatchLocaly({ type: 'setOptions', key: p.uuid, options: resources[permissionToResource(p.uuid)] || [] }));\n    }\n  }, [isLoadingResources]);\n\n  useEffect(() => {\n    const resourceDefinitions = Object.entries(state).map(([permission, resources]) => ({ permission, resources: resources.selected }));\n    input.onChange(resourceDefinitions);\n    formOptions.change('resource-definitions', resourceDefinitions);\n  }, [state]);\n\n  // eslint-disable-next-line react/prop-types\n  const makeRow = ({ uuid: permission }) => {\n    const options = state[permission].filteredOptions;\n    return (\n      <React.Fragment>\n        <GridItem md={4} sm={12}>\n          <Tooltip content={<div>{permission}</div>}>\n            <FormGroup label={permission.replace(/^cost-management:/, '')} isRequired></FormGroup>\n          </Tooltip>\n        </GridItem>\n        <GridItem md={8} sm={12}>\n          <Select\n            className=\"rbac-m-resource-type-select\"\n            variant={SelectVariant.checkbox}\n            typeAheadAriaLabel={intl.formatMessage(messages.selectState)}\n            onToggle={(_event, isOpen) => {\n              dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: '' });\n              onToggle(permission, isOpen);\n            }}\n            onSelect={(event, selection) => {\n              onSelect(event, selection, selection === intl.formatMessage(messages.selectAll, { length: options.length }), permission);\n            }}\n            onClear={() => clearSelection(permission)}\n            selections={state[permission].selected}\n            isOpen={state[permission].isOpen}\n            onFilter={(e) => e && dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: e.target.value })}\n            aria-labelledby={permission}\n            placeholderText={intl.formatMessage(messages.selectResources)}\n            hasInlineFilter\n          >\n            {[\n              <SelectOption key={0} value={intl.formatMessage(messages.selectAll, { length: options.length })} />,\n              ...options.map((option, index) => <SelectOption key={index + 1} value={option.value} />),\n            ]}\n          </Select>\n        </GridItem>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={4} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem md={8} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.resourceDefinitions)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default CostResources;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst InventoryGroupsRoleTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-lg\">\n        {intl.formatMessage(messages.inventoryGroupsAccessTitle)}\n      </Title>\n      {formFields}\n    </div>\n  );\n};\n\nInventoryGroupsRoleTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default InventoryGroupsRoleTemplate;\n","import { getInventoryGroupsApi } from '../shared/user-login';\n\nconst inventoryGroupsApi = getInventoryGroupsApi();\n\nexport const getInventoryGroups = async (apiProps) => {\n  return await inventoryGroupsApi.getInventoryGroups(apiProps);\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { Button, Grid, GridItem, Text, TextVariants, FormGroup, Tooltip, Divider } from '@patternfly/react-core';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core/deprecated';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { fetchInventoryGroups } from '../../../redux/actions/inventory-actions';\nimport { debouncedFetch } from '../../../helpers/shared/helpers';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\n\nconst selector = ({ inventoryReducer: { resourceTypes, total, isLoading } }) => ({\n  resourceTypes,\n  totalCount: total,\n  isLoading,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: action.isOpen,\n          filterValue: action.filterValue ?? prevState.filterValue,\n          page: action.page ?? prevState.page,\n        },\n      };\n    case 'select':\n      if (prevState.selected.some((item) => item?.id === action.processedSelection?.id)) {\n        return {\n          ...state,\n          [action.key]: {\n            ...prevState,\n            selected: prevState.selected.filter((item) => item.id !== action.processedSelection?.id),\n          },\n        };\n      } else if (action.processedSelection?.id !== undefined && action.processedSelection?.name !== undefined) {\n        return {\n          ...state,\n          [action.key]: {\n            ...prevState,\n            selected: [...prevState.selected, action.processedSelection],\n          },\n        };\n      } else {\n        return state;\n      }\n    case 'copyToAll': {\n      const firstPermissionSelection = state[action.permissions[0]].selected;\n      return {\n        ...state,\n        ...action.permissions.reduce((acc, permission) => {\n          acc[permission] = {\n            ...state[permission],\n            selected: !permission.includes('inventory:hosts') ? firstPermissionSelection.filter(({ id }) => id !== null) : firstPermissionSelection,\n          };\n          return acc;\n        }, {}),\n      };\n    }\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: action.selectionArray,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filterValue: action.filterValue,\n          page: 1,\n        },\n      };\n    case 'setPage':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          page: action.page,\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst InventoryGroupsRole = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  const { resourceTypes, totalCount, isLoading } = useSelector(selector, shallowEqual);\n  const permissions =\n    formOptions\n      .getState()\n      .values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('inventory'))\n      .map(({ uuid }) => uuid) || [];\n\n  const fetchData = (permissions, apiProps) => dispatch(fetchInventoryGroups(permissions, apiProps));\n\n  // eslint-disable-next-line\n  const onSelect = (event, selection, selectAll, key) => {\n    const ungroupedSystems = { id: null, name: 'null' };\n    return (\n      (selectAll && dispatchLocally({ type: 'selectAll', selectionArray: [ungroupedSystems, ...Object.values(resourceTypes[key])], key })) ||\n      dispatchLocally({ type: 'select', processedSelection: selection === 'null' ? ungroupedSystems : resourceTypes[key][selection], key })\n    );\n  };\n  const clearSelection = (key) => dispatchLocally({ type: 'clear', key });\n\n  const [state, dispatchLocally] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission]: {\n          page: 1,\n          selected: [],\n          filterValue: '',\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n\n  useEffect(() => {\n    fetchData(permissions, {});\n    formOptions.change('inventory-group-permissions', []);\n  }, []);\n\n  useEffect(() => {\n    const groupsPermissionsDefinition = Object.entries(state).map(([permission, { selected }]) => ({ permission, groups: selected }));\n    input.onChange(groupsPermissionsDefinition);\n    formOptions.change('inventory-group-permissions', groupsPermissionsDefinition);\n  }, [state]);\n\n  const makeRow = (permissionID, index) => {\n    const ungroupedSystems = intl\n      .formatMessage(messages.ungroupedSystems)\n      .toLocaleLowerCase()\n      .includes(state[permissionID].filterValue.toLocaleLowerCase())\n      ? [\n          <SelectOption key={`${permissionID}-ungrouped`} value=\"null\">\n            <FormattedMessage {...messages.ungroupedSystems} />\n          </SelectOption>,\n          <Divider component=\"li\" key={`${permissionID}-divider`} />,\n        ]\n      : [];\n    const options = Object.values(resourceTypes?.[permissionID] ?? {});\n\n    return (\n      <React.Fragment key={permissionID}>\n        <Grid>\n          <GridItem lg={3} md={3} sm={4}>\n            <FormGroup label={permissionID?.replace('inventory:', '')} isRequired />\n          </GridItem>\n          <GridItem lg={7} md={6} sm={5}>\n            <Tooltip content={<div>{intl.formatMessage(messages.inventoryGroupsTooltip)}</div>}>\n              <Select\n                className=\"rbac-m-resource-type-select\"\n                variant={SelectVariant.checkbox}\n                typeAheadAriaLabel={intl.formatMessage(messages.inventoryGroupsTypeAheadLabel)}\n                aria-labelledby={permissionID}\n                selections={state[permissionID].selected.map(({ name }) => name)}\n                placeholderText={intl.formatMessage(messages.selectGroups)}\n                onSelect={(event, selection) => onSelect(event, selection, selection === 'select-all', permissionID)}\n                onToggle={(_event, isOpen) => {\n                  // TODO: persist filter state when https://github.com/patternfly/patternfly-react/issues/9490 is resolved\n                  !isOpen && state[permissionID].filterValue?.length > 0 && fetchData([permissionID]);\n                  dispatchLocally({ type: 'toggle', key: permissionID, filterValue: '', page: 1, isOpen });\n                }}\n                onClear={() => clearSelection(permissionID)}\n                onFilter={(event) => {\n                  if (event) {\n                    dispatchLocally({ type: 'setFilter', key: permissionID, filterValue: event.target.value });\n                    debouncedFetch(() => fetchData([permissionID], { name: event.target.value }), 2000);\n                  }\n                }}\n                isOpen={state[permissionID].isOpen}\n                hasInlineFilter\n                {...(!isLoading &&\n                  resourceTypes[permissionID] &&\n                  Object.values(resourceTypes[permissionID]).length < totalCount && {\n                    loadingVariant: {\n                      text: intl.formatMessage(messages.seeMore),\n                      onClick: () => {\n                        fetchData([permissionID], { page: state[permissionID].page + 1, name: state[permissionID].filterValue });\n                        dispatchLocally({ type: 'setPage', key: permissionID, page: state[permissionID].page++ });\n                      },\n                    },\n                  })}\n                {...(isLoading && { loadingVariant: 'spinner' })}\n              >\n                {[\n                  ...(options?.length > 0\n                    ? [\n                        <SelectOption key={`${permissionID}-all`} value=\"select-all\">\n                          <FormattedMessage\n                            {...messages.selectAll}\n                            values={{\n                              length: options?.length,\n                            }}\n                          />\n                        </SelectOption>,\n                      ]\n                    : []),\n                  ...(permissionID.includes('hosts:') ? ungroupedSystems : []),\n                  ...(options?.map((option, index) => (\n                    <SelectOption key={`${permissionID}-${index + 1}`} value={option?.name}>\n                      {option.children}\n                    </SelectOption>\n                  )) || []),\n                ]}\n              </Select>\n            </Tooltip>\n          </GridItem>\n          <GridItem lg={2} md={4} sm={2}>\n            {index <= 0 && (\n              <Button key={`${permissionID}-copy`} variant=\"link\" isInLink onClick={() => dispatchLocally({ type: 'copyToAll', permissions })}>\n                {intl.formatMessage(messages.copyToAll)}\n              </Button>\n            )}\n          </GridItem>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem lg={3} md={6} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text pf-v5-u-mt-sm\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem lg={9} md={6} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text pf-v5-u-mt-sm\">\n          {intl.formatMessage(messages.groupDefinition)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default InventoryGroupsRole;\n","import * as ActionTypes from '../action-types';\nimport * as InventoryHelper from '../../helpers/role/inventory-helper';\n\nexport const fetchInventoryGroups = (permissions, config) => ({\n  type: ActionTypes.FETCH_INVENTORY_GROUP,\n  meta: { permissions, config },\n  payload: InventoryHelper.getInventoryGroups(config),\n});\n","export const validateNextAddRolePermissionStep = (currentStep, values) => {\n  const permissions = (values && values['add-permissions-table']) || [];\n  const hasCostPermissions = permissions.some(({ uuid }) => uuid.split(':')[0].includes('cost-management'));\n  const hasInventoryPermissions = permissions.some(({ uuid }) => uuid.split(':')[0].includes('inventory'));\n\n  if (currentStep === 'inventory-groups-role' && hasCostPermissions) return 'cost-resources-definition';\n\n  if (currentStep === 'add-permissions' && hasInventoryPermissions) {\n    return 'inventory-groups-role';\n  }\n\n  if (currentStep === 'add-permissions' && hasCostPermissions) {\n    return 'cost-resources-definition';\n  }\n\n  return 'review';\n};\n\n// TODO: add step dictionary to replace literal strings across both add-role and add-role-permission\n"],"names":["linkBasename","navigate","useNavigate","to","options","title","icon","description","actions","props","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","className","map","text","key","EmptyStateFooter","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","value","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","intl","Fragment","length","every","formatMessage","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","item","orderBy","direction","index","limit","canSelectAll","toLowerCase","compact","onSelect","_e","isSelected","_idx","uuid","cells","name","requires","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","undefined","EmptyStateActions","Button","onClick","offset","clearAllFilters","colSpan","e","noBottom","Pagination","dropDirection","propTypes","directions","isRequired","count","toggleTemplate","defaultProps","paginationBuilder","itemCount","perPage","page","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","checked","id","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","innerRef","filterValues","filterByKey","filterBy","newFilter","Array","isArray","Object","keys","pickBy","reduce","acc","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","costApi","async","getResourceDefinitions","apiProps","getResourceTypes","getResource","payload","WarningModal","isOpen","onModalCancel","onModalConfirm","customTitle","customDescription","customPrimaryButtonTitle","customSecondaryButtonTitle","Modal","Icon","size","exitItemCreation","ModalVariant","small","onClose","exit","stay","discardedInputsWarning","AddPermissionTemplate","formFields","formOptions","selectedPermissions","setSelectedPermissions","useState","getState","values","alertClosed","setAlertClosed","notAllowedBasePermissions","unresolvedSplats","applications","app","find","includes","addPermissions","ChipGroup","categoryName","i","Chip","color","isTruncated","p","Title","TextContent","Text","selectPermissionsForRole","Popover","headerContent","onlyGranularPermissions","bodyContent","noWildcardPermissions","whyNotSeeingAllPermissions","Alert","isInline","followingPermissionsCannotBeAdded","join","actionClose","AlertActionCloseButton","accessApi","disallowedPermissions","listPermissions","application","resourceType","verb","permission","excludeGlobals","excludeRoles","allowedOnly","response","some","listPermissionOptions","field","fieldToAction","resource_type","DisabledRowWrapper","row","disableSelection","Tooltip","content","disabledContent","exitDelay","entryDelay","RowWrapper","selector","permissionReducer","operation","resource","expandSplats","isLoadingExpandSplats","roleReducer","isRecordLoading","selectedRole","costReducer","resourceTypes","permissions","meta","baseRole","applicationOptions","resourceOptions","operationOptions","expandedPermissions","AddPermissionsTable","isOrgAdmin","setIsOrgAdmin","auth","useChrome","dispatch","useDispatch","hasAccess","hasCostAccess","hasRbacAccess","useEffect","identity","user","getUser","is_org_admin","setOrgAdmin","exclude_globals","exclude_roles","allowed_only","existingRoleId","fetchOptions","useSelector","shallowEqual","input","setFilters","resources","operations","roleType","isToggled","setIsToggled","setFilterBy","setValue","inventoryAccess","useMemo","getResourceType","r","split","debouncedGetApplicationOptions","useCallback","debounce","debouncedGetResourceOptions","debouncedGetOperationOptions","baseRoleUuid","change","notAllowed","basePermissions","access","push","Set","patterns","replace","f","match","calculateSelected","preparedFilterItems","res","op","emptyItem","noResultsFound","filterItemOverflow","configureResourcesForPermission","noCostManagementPermissions","href","configureCostSources","noRbacPermissions","createRows","permissionNotDisplayedDescription","newSelection","newSelected","isEqual","seeLess","seeMore","slice","loadingResources","isLoadingResources","reducer","state","action","prevState","selection","option","filteredOptions","filtervalue","dispatchLocaly","useReducer","path","fetchResource","resourceDefinitions","entries","Grid","hasGutter","GridItem","md","component","TextVariants","h4","FormGroup","checkbox","typeAheadAriaLabel","selectState","onToggle","event","selectAll","onClear","selections","target","placeholderText","selectResources","hasInlineFilter","InventoryGroupsRoleTemplate","inventoryGroupsAccessTitle","inventoryGroupsApi","getInventoryGroups","inventoryReducer","total","totalCount","processedSelection","firstPermissionSelection","selectionArray","config","fetchInventoryGroups","dispatchLocally","groupsPermissionsDefinition","lg","groupDefinition","permissionID","ungroupedSystems","toLocaleLowerCase","SelectOption","Divider","inventoryGroupsTooltip","Select","inventoryGroupsTypeAheadLabel","selectGroups","loadingVariant","children","isInLink","copyToAll","validateNextAddRolePermissionStep","currentStep","hasCostPermissions","hasInventoryPermissions"],"sourceRoot":""}
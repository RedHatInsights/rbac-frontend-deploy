{"version":3,"file":"js/exposed-./MyUserAccess.34bcdde85356ea044a4a.js","mappings":"iSAeA,MAAMA,GAAe,IAAAC,OAAK,IAAM,6JAInBC,EAAS,KAEhBC,EAAS,KACb,MAAMC,GAAS,SACTC,GAAW,IAAAC,eACXC,GAAW,OAAe,QAC1BC,GAAW,SAWjB,OATA,IAAAC,YAAU,KACJJ,GAAUK,UAAUC,MAAM,aAC5BJ,EAAS,IAAU,kBAAkBK,MAIvCR,EAAOS,oBAAoB,iBAAiB,GAC3C,IAGD,kBAAC,IAAmBC,SAAQ,CAACC,MAAO,IAAKP,IACvC,kBAAC,IAAkB,KACjB,6BAASQ,MAAO,CAAEC,WAAY,EAAGC,QAAS,IACxC,kBAAC,EAAAC,SAAQ,CAACC,SAAU,kBAAC,KAAc,OACjC,kBAAC,EAAAC,OAAM,KACL,kBAAC,EAAAC,MAAK,CAACC,KAAK,IAAIC,QAAS,kBAACxB,EAAY,YAMjD,EAiBH,EAdoB,IAClB,kBAAC,KAAY,CAACE,OAAQA,EAAQuB,SAAU,EAASvB,IAC/C,kBAAC,IAAgBY,SAAQ,CACvBC,MAAO,CACLW,YAAa,IAAM,MAGrB,kBAAC,EAAAZ,SAAQ,CAACa,MAAO,IAASC,YACxB,kBAACzB,EAAM,Q,6DCxDf,MAQA,EARwB0B,IACtB,MAAMtB,GAAW,IAAAuB,eAEjB,MAAO,CAACC,EAAIC,IACHzB,GAAS,OAAgBwB,EAAIF,GAAeG,EACpD,C","sources":["webpack:///./src/entries/MyUserAccess.js","webpack:///./src/hooks/useAppNavigate.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect } from 'react';\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport registry, { RegistryContext } from '../utilities/store';\nimport messages from '../locales/data.json';\nimport ErroReducerCatcher from '../presentational-components/shared/ErrorReducerCatcher';\nimport PermissionsContext from '../utilities/permissions-context';\nimport pathnames from '../utilities/pathnames';\nimport { AppPlaceholder } from '../presentational-components/shared/loader-placeholders';\nimport useAppNavigate from '../hooks/useAppNavigate';\nimport useUserData from '../hooks/useUserData';\n\nconst MyUserAccess = lazy(() => import('../smart-components/myUserAccess/MUAHome'));\n\nimport '../App.scss';\n\nexport const locale = 'en';\n\nconst MuaApp = () => {\n  const chrome = useChrome();\n  const location = useLocation();\n  const navigate = useAppNavigate('/iam');\n  const userData = useUserData();\n\n  useEffect(() => {\n    if (location?.pathname?.match(/\\/(iam)$/)) {\n      navigate(pathnames['my-user-access'].link);\n    }\n    // set correct title\n\n    chrome.updateDocumentTitle('My User Access');\n  }, []);\n\n  return (\n    <PermissionsContext.Provider value={{ ...userData }}>\n      <ErroReducerCatcher>\n        <section style={{ marginLeft: 0, padding: 0 }}>\n          <Suspense fallback={<AppPlaceholder />}>\n            <Routes>\n              <Route path=\"/\" element={<MyUserAccess />} />\n            </Routes>\n          </Suspense>\n        </section>\n      </ErroReducerCatcher>\n    </PermissionsContext.Provider>\n  );\n};\n\nconst SettingsMua = () => (\n  <IntlProvider locale={locale} messages={messages[locale]}>\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <MuaApp />\n      </Provider>\n    </RegistryContext.Provider>\n  </IntlProvider>\n);\n\nexport default SettingsMua;\n","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n"],"names":["MyUserAccess","lazy","locale","MuaApp","chrome","location","useLocation","navigate","userData","useEffect","pathname","match","link","updateDocumentTitle","Provider","value","style","marginLeft","padding","Suspense","fallback","Routes","Route","path","element","messages","getRegistry","store","getStore","linkBasename","useNavigate","to","options"],"sourceRoot":""}
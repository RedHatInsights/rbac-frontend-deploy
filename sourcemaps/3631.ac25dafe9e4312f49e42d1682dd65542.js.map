{"version":3,"file":"js/3631.1668162281464.5a6d8f43af5dbd548a4d.js","mappings":"u5BAeA,IAAMA,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,mCAInBC,EAAS,KAEhBC,EAAS,WACb,IAAMC,GAAUC,EAAAA,EAAAA,cAUhB,OATAC,EAAAA,EAAAA,YAAU,WAAM,UAEd,UAAIC,cAAJ,iBAAI,EAAQC,gBAAZ,iBAAI,EAAkBC,gBAAtB,OAAI,EAA4BC,MAAM,gBACpCN,EAAQO,KAAK,mBAGfC,SAASC,MAAQ,mBAChB,IAGD,kBAAC,EAAAC,SAAD,CAAUC,SAAU,kBAAC,KAAD,OAClB,kBAAC,EAAAC,MAAD,CAAOC,KAAMC,EAAAA,EAAAA,kBAAAA,KAAkCC,UAAWnB,MAK1DoB,EAAS,WACb,IAAMC,GAAWC,EAAAA,EAAAA,KACjB,OACE,kBAAC,aAAD,CAA6BC,MAAK,KAAOF,IACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMG,MAAO,CAAEC,WAAY,EAAGC,QAAS,IACrC,kBAACvB,EAAD,UAuBV,QAhBoB,kBAClB,kBAAC,IAAD,CAAcD,OAAQA,EAAQyB,SAAUA,EAASzB,IAC/C,kBAAC,aAAD,CACEqB,MAAO,CACLK,YAAa,kBAAMC,EAAAA,KAGrB,kBAAC,EAAAC,SAAD,CAAUC,MAAOF,EAAAA,EAAAA,YACf,kBAAC,gBAAD,CAAQG,UAAUC,EAAAA,EAAAA,IAAYzB,SAASC,SAAU,IAC/C,kBAACW,EAAD","sources":["webpack:///./src/entries/MyUserAccess.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, useHistory } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport { IntlProvider } from 'react-intl';\n\nimport registry, { RegistryContext } from '../utilities/store';\nimport messages from '../locales/data.json';\nimport ErroReducerCatcher from '../presentational-components/shared/ErrorReducerCatcher';\nimport PermissionsContext from '../utilities/permissions-context';\nimport pathnames from '../utilities/pathnames';\nimport { AppPlaceholder } from '../presentational-components/shared/loader-placeholders';\nimport useUserData from '../hooks/useUserData';\n\nconst MyUserAccess = lazy(() => import('../smart-components/myUserAccess/MUAHome'));\n\nimport '../App.scss';\n\nexport const locale = 'en';\n\nconst Routes = () => {\n  const history = useHistory();\n  useEffect(() => {\n    // redirect to MUA if url is \"/settings\"\n    if (window?.location?.pathname?.match(/\\/settings$/)) {\n      history.push('/my-user-access');\n    }\n    // set correct title\n    document.title = 'My User Access';\n  }, []);\n\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Route path={pathnames['my-user-access'].path} component={MyUserAccess} />\n    </Suspense>\n  );\n};\n\nconst MuaApp = () => {\n  const userData = useUserData();\n  return (\n    <PermissionsContext.Provider value={{ ...userData }}>\n      <ErroReducerCatcher>\n        <Main style={{ marginLeft: 0, padding: 0 }}>\n          <Routes />\n        </Main>\n      </ErroReducerCatcher>\n    </PermissionsContext.Provider>\n  );\n};\n\nconst SettingsMua = () => (\n  <IntlProvider locale={locale} messages={messages[locale]}>\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <Router basename={getBaseName(location.pathname, 1)}>\n          <MuaApp />\n        </Router>\n      </Provider>\n    </RegistryContext.Provider>\n  </IntlProvider>\n);\n\nexport default SettingsMua;\n"],"names":["MyUserAccess","lazy","locale","Routes","history","useHistory","useEffect","window","location","pathname","match","push","document","title","Suspense","fallback","Route","path","pathnames","component","MuaApp","userData","useUserData","value","style","marginLeft","padding","messages","getRegistry","registry","Provider","store","basename","getBaseName"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/redux/action-types.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","jsonpArray","webpackJsonpCallback","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","RBAC_API_BASE","process","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","getPrincipalApi","getGroupApi","getRoleApi","createRows","data","reduce","acc","permission","split","appName","type","operation","cells","columns","title","Permissions","useState","pagination","limit","offset","count","filter","config","setConfig","useSelector","state","role","roleReducer","selectedRole","isRecordLoading","shallowEqual","useEffect","access","filteredRows","includes","className","TextContent","Text","component","TextVariants","h1","slice","filterValue","fetchData","name","setFilterValue","isLoading","titlePlural","titleSingular","Role","useParams","uuid","groupUuid","group","groupReducer","selectedGroup","dispatch","useDispatch","fetchRole","fetchGroup","breadcrumbs","to","loaded","isActive","description","fetchGroups","a","orderBy","Promise","all","listGroups","insights","chrome","auth","getUser","groups","getGroup","updateGroup","members_list","principals","map","user","username","addUsers","user_list","item","removeUsers","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","createGroup","newGroup","ret","roles_list","addRoleToGroup","roles","removeGroup","groupId","deleteGroup","deletePrincipalsFromGroup","users","addPrincipalsToGroup","fetchRolesForGroup","excluded","options","listRolesForGroup","deleteRolesFromGroup","deleteRoleFromGroup","addRolesToGroup","ActionTypes","payload","GroupHelper","apiProps","groupData","meta","notifications","fulfilled","variant","rejected","addMembersToGroup","members","removeMembersFromGroup","fetchAddRolesForGroup","removeRolesFromGroup","defaultSettings","itemCount","numberOfItems","defaultCompactSettings","ListLoader","items","props","aria-label","Array","_item","index","aria-labelledby","dataListCells","size","SkeletonSize","lg","propTypes","PropTypes","number","defaultProps","AppPlaceholder","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","style","BreadcrumbPlaceholder","FormItemLoader","createRole","createRoles","fetchRoles","listRoles","fetchRolesWithPolicies","getRole","removeRole","roleId","deleteRole","roleData","RoleHelper","fetchUsers","listPrincipals","then","isLast","currData","Infinity","SummaryContent","formData","values","selectedUsers","selectedRoles","Stack","gutter","StackItem","Title","h5","Grid","GridItem","span","p","label","string","array","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","isRequired","fieldId","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","expanded","checkedRows","email","first_name","last_name","selected","Boolean","find","row","UsersList","setSelectedUsers","isSelectable","isCompact","borders","mappedProps","noBottom","toggleTemplate","firstIndex","lastIndex","request","setCheckedItems","newSelection","history","shape","goBack","func","push","bool","searchFilter","connect","userReducer","isUserDataLoading","addNotification","SetUsers","h6","Card","RolesList","setSelectedRoles","ExcludedRolesList","addRoles","propsFromState","propsFromDispatch","ownProps","SetRoles","AddGroupWizard","postMethod","closeUrl","setValues","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","withRouter","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","FormSelect","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","onCancel","schema","properties","required","Modal","minWidth","sm","schemaType","initialValues","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","RemoveGroupModal","isSmall","actions","Button","onClick","opened","selectedRows","principalCount","modified","date","AppTabs","pathname","location","tabItems","activeTab","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","Tab","ExpandableContent","parent","fullWidth","AddGroupMembers","isFooterLeftAligned","userList","RemoveModal","text","confirmButtonLabel","Split","SplitItem","isFilled","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","removeModalText","plural","removeMembers","userNames","platform_default","CardBody","Bullseye","is_org_admin","routes","path","render","args","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","multipleMembersSelected","identity","AddGroupRoles","ActionGroup","rolesList","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","Fragment","multipleRolesSelected","reloadWrapper","callback","Group","isFetching","Groups","setSelectedRows","rows","exact","ids","paddingBottm","platforms","getCurrentPage","Math","floor","entries","debouncedFetch","debouncePromise","calculateChecked","every","some","isSelected","arr","findIndex","system","policyCount","ResourceDefinitionsTable","handleChange","editable","resourceDefinitions","definition","isInline","Table","TableVariant","compact","application","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","result","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","applications","attributeFilter","onNext","RemoveRoleModal","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setRecordLoadingState","selectedPolicy","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","selectedUser","policyReducer","policy","getStore","lazy","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","childProps","App","chromeNavAvailable","this","init","setState","identifyApp","unregister","on","domEvent","navId","locale","marginLeft","padding","Component","ReactDOM","store","basename","getBaseName","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","checked","filterConfigBuilder","filterValues","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","node","TableToolbarView","openRow","onCollapse","_index","canSelectAll","_idx","colSpan","Pagination","dropDirection","UsersIcon","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","TopToolbar","children","paddingBottom","Level","TopToolbarTitle","LevelItem"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([421,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","export const createRows = (data) => (\n  data.reduce((acc, { permission }) => {\n    const [ appName, type, operation ] = permission.split(':');\n    return ([\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation\n        ]\n      }\n    ]);\n  }, [])\n);\n","import React, { useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-permissions-table-helpers';\nimport './role-permissions.scss';\n\nconst columns = [\n  { title: 'Application' },\n  { title: 'Resource type' },\n  { title: 'Operation' }\n];\n\nconst Permissions = () => {\n  const [ config, setConfig ] = useState({\n    pagination: {\n      limit: 10,\n      offset: 0,\n      count: 0,\n      filter: ''\n    }\n  });\n  const { role, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading\n  }), shallowEqual);\n\n  const { pagination, filter } = config;\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0\n      }\n    });\n  }, [ role ]);\n\n  const filteredRows = (role && role.access) ?\n    (role.access || [])\n    .filter(({ permission }) => permission === '*' || filter ? permission.includes(filter) : true) :\n    [];\n\n  return <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n    <TextContent>\n      <Text component={ TextVariants.h1 }>Permissions</Text>\n    </TextContent>\n    <TableToolbarView\n      columns={ columns }\n      createRows={ createRows }\n      data={ filteredRows.slice(pagination.offset, pagination.offset + pagination.limit) }\n      filterValue={ filter }\n      fetchData={ ({ limit, offset, name }) => setConfig({\n        ...config,\n        filter: name,\n        pagination: {\n          ...config.pagination,\n          limit,\n          offset\n        }\n      }) }\n      setFilterValue={ ({ name }) => setConfig({\n        ...config,\n        filter: name\n      })  }\n      isLoading={ isRecordLoading }\n      pagination={ {\n        ...pagination,\n        count: filteredRows.length\n      } }\n      titlePlural=\"permissions\"\n      titleSingular=\"permission\"\n    />\n  </section>;\n};\n\nexport default Permissions;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup } from '../../redux/actions/group-actions';\n\nconst Role = () => {\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading,\n    ...groupUuid && { group: state.groupReducer.selectedGroup }\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRole(uuid));\n    groupUuid && dispatch(fetchGroup(groupUuid));\n  }, [ uuid, groupUuid ]);\n\n  return <Fragment>\n    <TopToolbar breadcrumbs={ [\n      ...[ groupUuid ? { title: 'User Access Management', to: '/groups' } : { title: 'Roles', to: '/roles' } ],\n      ...groupUuid ? [{\n        title: group && group.name,\n        to: `/groups/detail/${groupUuid}/roles`,\n        isLoading: group && group.loaded\n      }] : [],\n      { title: role && role.name, isActive: true }\n    ] }>\n      <TopToolbarTitle title= { !isRecordLoading && role ? role.name : undefined }\n        description={ !isRecordLoading && role ? role.description : undefined }/>\n    </TopToolbar>\n    { (isRecordLoading || !role) ? <ListLoader/> : <Permissions /> }\n  </Fragment>;\n};\n\nexport default Role;\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  let ret = newGroup;\n\n  if (data.user_list && data.user_list.length > 0) {\n    ret = groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  if (data.roles_list && data.roles_list.length > 0) {\n    ret = groupApi.addRoleToGroup(newGroup.uuid, { roles: data.roles_list });\n  }\n\n  return ret;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, limit, offset, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = {\n      ...formData,\n      user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined,\n      roles_list: selectedRoles ? selectedRoles.map(role => role.uuid) : undefined\n    };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod([ id ])).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissable: true,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '40%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n      <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Modal,\n  Button,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel }) => {\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default RemoveModal;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const removeModalText = (name, group, plural) => (plural\n    ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n    : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n  );\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username, group.name, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].name,\n                group.name,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          group.platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ principals }\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              request={ fetchGroup }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              titlePlural=\"principals\"\n              titleSingular=\"principal\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ () => fetchGroup(uuid) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  name\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ `Add roles to ${name} group` }\n      width={ '70%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently in your group.</b>\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  isDisabled={ selectedRoles.length === 0 }\n                  onClick={ onSubmit }\n                >\n                      Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/groups/detail/${groupUuid}/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role['role-name'].title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        name={ name }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add a role\"\n          >\n        Add a role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove roles?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(name, multipleRolesSelected ? selectedRoles.length : selectedRoles[0].label, multipleRolesSelected)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ (...props) => createRows(uuid, ...props) }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ config => fetchRolesForGroup(config)(uuid) }\n          setFilterValue={ ({ name }) => setFilterValue(name) }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          request={ fetchRolesForGroup(pagination) }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (pagination) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, pagination, options)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !isFetching && group ? group.name : undefined }\n          description={ !isFetching && group ? group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ (ids) => {\n      fetchData();\n      setSelectedRows(selectedRows.filter(row => (!ids.includes(row.uuid))));\n      setFilterValue('');\n    } } /> } />\n  </Fragment>;\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:groupUuid/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      /*eslint-disable camelcase*/\n      is_org_admin: PropTypes.bool\n      /*eslint-enable camelcase*/\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: { addRoles: {}},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { ...state.selectedGroup, loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...state.selectedGroup, ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nconst setAddRolesLoading = state => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false }}\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { roles: payload.data, pagination: payload.meta, loaded: true }}\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    const { history } = this.props;\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n    this.unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unregister && this.unregister();\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = ''\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/redux/action-types.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/smart-components/user/users.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","jsonpArray","webpackJsonpCallback","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUPS","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","columns","title","orderBy","createRows","data","expanded","checkedRows","reduce","acc","username","email","first_name","last_name","uuid","cells","selected","Boolean","find","row","UsersList","users","fetchUsers","isLoading","pagination","selectedUsers","setSelectedUsers","props","useState","filterValue","setFilterValue","useEffect","isSelectable","isCompact","borders","fetchData","config","mappedProps","name","noBottom","toggleTemplate","firstIndex","lastIndex","request","setCheckedItems","newSelection","map","label","titlePlural","titleSingular","propTypes","history","PropTypes","shape","goBack","func","isRequired","push","array","bool","searchFilter","string","limit","number","offset","count","defaultProps","defaultCompactSettings","connect","userReducer","isUserDataLoading","meta","dispatch","apiProps","addNotification","RBAC_API_BASE","process","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","getPrincipalApi","getGroupApi","getRoleApi","permission","split","appName","type","operation","Permissions","filter","setConfig","useSelector","state","role","roleReducer","selectedRole","isRecordLoading","shallowEqual","access","filteredRows","includes","className","TextContent","Text","component","TextVariants","h1","slice","Role","useParams","groupUuid","group","groupReducer","selectedGroup","useDispatch","fetchRole","fetchGroup","breadcrumbs","to","loaded","isActive","description","ActionTypes","payload","listPrincipals","then","isLast","currData","Infinity","fetchGroups","a","Promise","all","listGroups","insights","chrome","auth","getUser","groups","getGroup","updateGroup","addGroup","createGroup","newGroup","ret","user_list","addPrincipalToGroup","principals","roles_list","addRoleToGroup","roles","removeGroups","uuids","deleteGroup","deletePrincipalsFromGroup","groupId","deletePrincipalFromGroup","join","addPrincipalsToGroup","fetchRolesForGroup","excluded","options","listRolesForGroup","deleteRolesFromGroup","deleteRoleFromGroup","addRolesToGroup","GroupHelper","groupData","notifications","fulfilled","variant","rejected","addMembersToGroup","members","removeMembersFromGroup","fetchAddRolesForGroup","removeRolesFromGroup","defaultSettings","itemCount","numberOfItems","ListLoader","items","aria-label","Array","_item","index","aria-labelledby","dataListCells","size","SkeletonSize","lg","AppPlaceholder","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","style","BreadcrumbPlaceholder","FormItemLoader","createRole","createRoles","fetchRoles","listRoles","fetchRolesWithPolicies","getRole","removeRole","roleId","deleteRole","roleData","RoleHelper","getCurrentPage","Math","floor","entries","debouncedFetch","debouncePromise","callback","calculateChecked","rows","every","some","selectedRows","isSelected","arr","findIndex","Users","isProd","window","href","paddingBottm","id","SummaryContent","formData","values","selectedRoles","Stack","gutter","StackItem","Title","h5","Grid","GridItem","span","p","user","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","SetUsers","h6","Card","RolesList","setSelectedRoles","ExcludedRolesList","addRoles","propsFromState","propsFromDispatch","ownProps","SetRoles","AddGroupWizard","postMethod","closeUrl","setValues","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","user_data","Wizard","isLarge","isOpen","onClose","dismissDelay","onSave","inputValue","match","withRouter","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","FormSelect","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","EditGroupModal","params","setSelectedGroup","setGroupData","onCancel","schema","fields","TEXT_FIELD","validate","validatorTypes","REQUIRED","TEXTAREA_FIELD","Modal","schemaType","initialValues","renderFormButtons","pristine","valid","submit","form","Button","onClick","RemoveGroupModal","groupsUuid","isModalOpen","checked","setChecked","multipleGroups","isSmall","actions","isFooterLeftAligned","Checkbox","isChecked","opened","principalCount","modified","date","AppTabs","pathname","location","tabItems","activeTab","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","item","Tab","ExpandableContent","parent","fullWidth","AddGroupMembers","userList","RemoveModal","text","confirmButtonLabel","Split","SplitItem","isFilled","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","removeModalText","plural","removeMembers","userNames","platform_default","CardBody","Bullseye","is_org_admin","routes","path","render","args","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","multipleMembersSelected","emptyProps","identity","AddGroupRoles","ActionGroup","rolesList","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","Fragment","multipleRolesSelected","reloadWrapper","Group","isFetching","showEdit","setShowEdit","Level","LevelItem","Groups","setSelectedRows","removeGroupsList","setRemoveGroupsList","exact","ids","platforms","system","policyCount","ResourceDefinitionsTable","handleChange","editable","resourceDefinitions","definition","isInline","Table","TableVariant","compact","application","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","result","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","applications","attributeFilter","onNext","RemoveRoleModal","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setRecordLoadingState","selectedPolicy","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","selectedUser","policyReducer","policy","getStore","lazy","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","childProps","App","chromeNavAvailable","this","init","setState","identifyApp","unregister","on","domEvent","navId","locale","marginLeft","padding","Component","ReactDOM","store","basename","getBaseName","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","TopToolbar","children","paddingBottom","node","TopToolbarTitle","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","filterConfigBuilder","filterValues","placeholder","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","TableToolbarView","openRow","onCollapse","_index","canSelectAll","_idx","colSpan","Pagination","dropDirection","PlusCircleIcon"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([465,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUPS = 'REMOVE_GROUPS';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Username', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers, props }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n    { ...props }\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  props: PropTypes.object\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings,\n  selectedUsers: [],\n  setSelectedUsers: () => undefined\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","export const createRows = (data) => (\n  data.reduce((acc, { permission }) => {\n    const [ appName, type, operation ] = permission.split(':');\n    return ([\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation\n        ]\n      }\n    ]);\n  }, [])\n);\n","import React, { useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-permissions-table-helpers';\nimport './role-permissions.scss';\n\nconst columns = [\n  { title: 'Application' },\n  { title: 'Resource type' },\n  { title: 'Operation' }\n];\n\nconst Permissions = () => {\n  const [ config, setConfig ] = useState({\n    pagination: {\n      limit: 10,\n      offset: 0,\n      count: 0,\n      filter: ''\n    }\n  });\n  const { role, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading\n  }), shallowEqual);\n\n  const { pagination, filter } = config;\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0\n      }\n    });\n  }, [ role ]);\n\n  const filteredRows = (role && role.access) ?\n    (role.access || [])\n    .filter(({ permission }) => permission === '*' || filter ? permission.includes(filter) : true) :\n    [];\n\n  return <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n    <TextContent>\n      <Text component={ TextVariants.h1 }>Permissions</Text>\n    </TextContent>\n    <TableToolbarView\n      columns={ columns }\n      createRows={ createRows }\n      data={ filteredRows.slice(pagination.offset, pagination.offset + pagination.limit) }\n      filterValue={ filter }\n      fetchData={ ({ limit, offset, name }) => setConfig({\n        ...config,\n        filter: name,\n        pagination: {\n          ...config.pagination,\n          limit,\n          offset\n        }\n      }) }\n      setFilterValue={ ({ name }) => setConfig({\n        ...config,\n        filter: name\n      })  }\n      isLoading={ isRecordLoading }\n      pagination={ {\n        ...pagination,\n        count: filteredRows.length\n      } }\n      titlePlural=\"permissions\"\n      titleSingular=\"permission\"\n    />\n  </section>;\n};\n\nexport default Permissions;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup } from '../../redux/actions/group-actions';\n\nconst Role = () => {\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading,\n    ...groupUuid && { group: state.groupReducer.selectedGroup }\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRole(uuid));\n    groupUuid && dispatch(fetchGroup(groupUuid));\n  }, [ uuid, groupUuid ]);\n\n  return <Fragment>\n    <TopToolbar breadcrumbs={ [\n      ...[ groupUuid ? { title: 'User Access Management', to: '/groups' } : { title: 'Roles', to: '/roles' } ],\n      ...groupUuid ? [{\n        title: group && group.name,\n        to: `/groups/detail/${groupUuid}/roles`,\n        isLoading: group && group.loaded\n      }] : [],\n      { title: role && role.name, isActive: true }\n    ] }>\n      <TopToolbarTitle title= { !isRecordLoading && role ? role.name : undefined }\n        description={ !isRecordLoading && role ? role.description : undefined }/>\n    </TopToolbar>\n    { (isRecordLoading || !role) ? <ListLoader/> : <Permissions /> }\n  </Fragment>;\n};\n\nexport default Role;\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  let ret = newGroup;\n\n  if (data.user_list && data.user_list.length > 0) {\n    ret = groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  if (data.roles_list && data.roles_list.length > 0) {\n    ret = groupApi.addRoleToGroup(newGroup.uuid, { roles: data.roles_list });\n  }\n\n  return ret;\n}\n\nexport async function removeGroups(uuids) {\n  return await Promise.all(uuids.map((uuid) => groupApi.deleteGroup(uuid)));\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, limit, offset, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroups = (uuids) => ({\n  type: ActionTypes.REMOVE_GROUPS,\n  payload: GroupHelper.removeGroups(uuids),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: uuids.length > 1 ? 'Groups deleted successfully' :\n          'Group deleted successfully'\n      },\n      rejected: {\n        variant: 'danger',\n        title: uuids.length > 1 ? 'There was an error deleting the groups. Please try again.' :\n          'There was an error deleting the group. Please try again.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import React from 'react';\nimport { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport UsersList from '../group/add-group/users-list';\n\nconst Users = () => {\n  const isProd = window.insights.chrome.isProd;\n  const description = (<TextContent>\n    <Text>\n    These are the users in your organization. To add new users to your organization go to{ ' ' }\n      <Text\n        component={ TextVariants.a }\n        href={ `https://www.${isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html` }>\n      user management list.\n      </Text>\n    </Text>\n  </TextContent>);\n\n  return (\n    <Stack >\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle\n            title=\"Users\"\n            description={ description }\n          />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'users' }>\n          <UsersList\n            props={ {\n              isSelectable: false,\n              isCompact: false\n            } }\n          />\n        </Section>\n      </StackItem>\n    </Stack >\n  );\n};\n\nUsers.propTypes = {\n\n};\n\nUsers.defaultProps = {\n\n};\n\nexport default Users;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = {\n      ...formData,\n      user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined,\n      roles_list: selectedRoles ? selectedRoles.map(role => role.uuid) : undefined\n    };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissDelay: 8000,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components';\nimport { Button, Modal, Grid, GridItem, TextContent, Text } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl,\n  isOpen,\n  group,\n  onClose\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState(undefined);\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [ group ]);\n\n  const onSubmit = data => {\n    const user_data = { ...data };\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    onClose();\n    push(closeUrl);\n  };\n\n  const schema = {\n    fields: [{\n      name: 'name',\n      label: 'Name',\n      component: componentTypes.TEXT_FIELD,\n      validate: [{\n        type: validatorTypes.REQUIRED\n      }]\n    }, {\n      name: 'description',\n      label: 'Description',\n      component: componentTypes.TEXTAREA_FIELD\n    }]\n  };\n\n  // eslint-disable-next-line react/prop-types\n  const formButtons = ({ pristine, valid, form: { submit }}) => {\n    return (\n      <div>\n        <Button isDisabled={ pristine || !valid } onClick={ submit } variant=\"primary\">Submit</Button>\n        <Button variant='link' onClick={ onCancel }>Cancel</Button>\n      </div>\n    );\n  };\n\n  return (\n    <Modal\n      isLarge\n      width={ '50%' }\n      title={ 'Edit group\\'s information' }\n      isOpen={ isOpen }\n      onClose={ onCancel }\n    > { selectedGroup\n        ?\n        <Grid gutter=\"md\">\n          <TextContent>\n            <Text>\n              { `Make any changes to ${selectedGroup.name} group.` }\n            </Text>\n          </TextContent>\n          <GridItem>\n            <FormRenderer\n              schema={ schema }\n              schemaType=\"mozilla\"\n              onSubmit={ onSubmit }\n              formContainer=\"modal\"\n              initialValues={ { ...selectedGroup } }\n              renderFormButtons={ formButtons }\n            />\n          </GridItem>\n        </Grid>\n        : <Skeleton/>\n      }\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object.isRequired,\n  inputValue: PropTypes.string,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n  isOpen: PropTypes.bool,\n  group: PropTypes.object,\n  onClose: PropTypes.func\n\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Text, TextContent, Checkbox } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  removeGroups,\n  group,\n  isLoading,\n  fetchGroup,\n  groupsUuid,\n  isModalOpen,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const [ checked, setChecked ] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids).then(() => postMethod(uuids)).then(push(closeUrl));\n  };\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen={ isModalOpen }\n      isSmall\n      title = {\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n        &nbsp; { multipleGroups ? 'Delete groups?' : 'Delete group?' }\n        </Text> }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"submit\" isDisabled={ !checked }  variant=\"danger\" type=\"button\" onClick={ onSubmit }>\n          { multipleGroups ? 'Delete groups' : 'Delete group' }\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <TextContent>\n        { multipleGroups ?\n          <Text>\n          Deleting these <b>{ groupsUuid.length }</b> groups removes all roles\n          from the members inside the group.\n          </Text> :\n          isLoading ?\n            <FormItemLoader/> :\n            <Text>\n          Deleting the <b>{ group.name }</b> group removes all roles\n          from the members inside the group.\n            </Text>\n        }\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={ checked }\n        onChange={ ()=> setChecked(!checked) }\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroups\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '40%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n      <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Modal,\n  Button,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel }) => {\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default RemoveModal;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const removeModalText = (name, group, plural) => (plural\n    ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n    : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n  );\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username, group.name, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add user\"\n          >\n        Add user\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].name,\n                group.name,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          group.platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ principals }\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              request={ fetchGroup }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              titlePlural=\"principals\"\n              titleSingular=\"principal\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ () => fetchGroup(uuid) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n              emptyProps={ { title: 'There are no members in this group', description: [ 'Add a user to configure user access.', '' ]} }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  name\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissDelay: 8000,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ `Add roles to ${name} group` }\n      width={ '70%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently in your group.</b>\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  isDisabled={ selectedRoles.length === 0 }\n                  onClick={ onSubmit }\n                >\n                      Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/groups/detail/${groupUuid}/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role['role-name'].title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        name={ name }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add role\"\n          >\n        Add role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(\n                name,\n                multipleRolesSelected ? selectedRoles.length : roles.find(role => role.uuid === selectedRoles[0].uuid).name,\n                multipleRolesSelected)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ (...props) => createRows(uuid, ...props) }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ config => fetchRolesForGroup(config)(uuid) }\n          setFilterValue={ ({ name }) => setFilterValue(name) }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          request={ fetchRolesForGroup(pagination) }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n          emptyProps={ { title: 'There are no roles in this group', description: [ 'Add a role to configure user access.', '' ]} }\n\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (pagination) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, pagination, options)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Button, Level, LevelItem } from '@patternfly/react-core';\nimport EditGroup from './edit-group-modal';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n  const [ showEdit, setShowEdit ] = useState(false);\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <Level>\n          <LevelItem>\n            <TopToolbarTitle title={ !isFetching && group ? group.name : undefined }\n              description={ !isFetching && group ? group.description : undefined } />\n            <AppTabs tabItems={ tabItems } />\n          </LevelItem>\n\n          <LevelItem>\n            <Button onClick={ () => setShowEdit(true) } variant='secondary'>Edit Group</Button>\n          </LevelItem>\n          <EditGroup\n            isOpen={ showEdit }\n            group={ group }\n            closeUrl={ `group/detail/${uuid}` }\n            onClose={ () => setShowEdit(false) }\n            postMethod={ () => {\n              fetchData(uuid);\n              setShowEdit(false);\n            }\n            }\n          />\n\n        </Level>\n\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n  const [ removeGroupsList, setRemoveGroupsList ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } isOpen/> } />\n    <Route exact path=\"/groups/removegroups\" render={ props => <RemoveGroup { ...props } postMethod={ (ids) => {\n      fetchData();\n      setSelectedRows(selectedRows.filter(row => (!ids.includes(row.uuid))));\n      setFilterValue('');\n    } } isModalOpen groupsUuid={ removeGroupsList } /> } />\n  </Fragment>;\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) => {\n            setRemoveGroupsList([ group ]);\n            push(`/groups/removegroups`);\n          }\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          },\n          onClick: () => {\n            setRemoveGroupsList(selectedRows);\n            push(`/groups/removegroups`);\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:groupUuid/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissDelay: 8000,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: { addRoles: {}},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { ...state.selectedGroup, loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...state.selectedGroup, ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nconst setAddRolesLoading = state => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false }}\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { roles: payload.data, pagination: payload.meta, loaded: true }}\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\nconst Users = lazy(() => import('./smart-components/user/users'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles',\n  users: '/users'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <InsightsRoute path={ paths.users } component={ Users } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    const { history } = this.props;\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n    this.unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unregister && this.unregister();\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md top-toolbar-description\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = ''\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ PlusCircleIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n          { ...emptyProps }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n"],"sourceRoot":""}
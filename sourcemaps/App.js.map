{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/redux/action-types.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","AppTabs","_ref","history","pathname","location","tabItems","activeTab","find","_ref2","includes","a","createElement","className","activeKey","eventKey","onSelect","_event","tabIndex","map","item","title","propTypes","PropTypes","shape","string","isRequired","func","array","withRouter","RBAC_API_BASE","concat","process","__webpack_exports__","getPrincipalApi","getGroupApi","getRoleApi","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","defaultSettings","defaultCompactSettings","limit","offset","itemCount","numberOfItems","getCurrentPage","arguments","Math","floor","mappedProps","apiProps","entries","reduce","acc","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","every","_ref4","uuid","row","some","_ref5","selectedRows","newSelection","isSelected","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","arr","findIndex","_ref7","_ref6","fetchGroups","_x","_fetchGroups","this","_callee","orderBy","_ref3","groups","auth","regenerator_default","wrap","_context","prev","next","Promise","all","listGroups","insights","chrome","getUser","sent","slicedToArray_default","abrupt","objectSpread_default","stop","fetchGroup","_x2","_fetchGroup","_callee2","_context2","getGroup","updateGroup","_x3","_updateGroup","_callee3","members_list","addUsers","removeUsers","_context3","principals","user","username","user_list","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","_x4","_addGroup","_callee4","newGroup","_context4","createGroup","removeGroup","_x5","_removeGroup","_callee5","groupId","_context5","deleteGroup","deletePrincipalsFromGroup","_x6","_x7","_deletePrincipalsFromGroup","_callee6","users","_context6","addPrincipalsToGroup","_x8","_x9","_addPrincipalsToGroup","_callee7","_context7","fetchRolesForGroup","_x10","_x11","_x12","_fetchRolesForGroup","_callee8","excluded","options","_args8","_context8","listRolesForGroup","deleteRolesFromGroup","_x13","_x14","_deleteRolesFromGroup","_callee9","roles","_context9","deleteRoleFromGroup","addRolesToGroup","_x15","_x16","_addRolesToGroup","_callee10","_context10","addRoleToGroup","type","ActionTypes","payload","GroupHelper","groupData","meta","notifications","variant","description","rejected","group","addMembersToGroup","members","removeMembersFromGroup","fetchUsers","listPrincipals","then","isLast","currData","count","Infinity","SummaryContent","formData","values","selectedUsers","selectedRoles","react_default","react","Stack","gutter","StackItem","Title","size","TextContent","Text","component","TextVariants","h5","Grid","GridItem","span","index","label","role","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","columns","createRows","expanded","checkedRows","email","first_name","last_name","toConsumableArray_default","cells","Boolean","UsersList","isLoading","pagination","setSelectedUsers","_useState","useState","_useState2","filterValue","setFilterValue","useEffect","table_toolbar_view","isSelectable","isCompact","borders","fetchData","config","noBottom","toggleTemplate","firstIndex","lastIndex","request","setCheckedItems","titlePlural","titleSingular","goBack","bool","searchFilter","number","defaultProps","connect","_ref6$userReducer","userReducer","isUserDataLoading","dispatch","addNotification","SetUsers","h6","Card","users_list","RolesList","fetchRoles","setSelectedRoles","_ref5$roleReducer","roleReducer","fetchRolesWithPolicies","ExcludedRolesList","selectedGroup","groupReducer","addRoles","loaded","fetchAddRolesForGroup","propsFromState","propsFromDispatch","ownProps","SetRoles","roles_list","AddGroupWizard","postMethod","closeUrl","_useState3","_useState4","_useState5","_useState6","setValues","_useState7","_useState8","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","asyncToGenerator_default","mark","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","_ref3$roleReducer","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","objectWithoutProperties_default","FormSelect","extends_default","selectOptions","createOptions","props","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","pf4_select_wrapper_Select","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","dist_default","formFieldsMapper","defineProperty_default","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","onCancel","schema","properties","required","Modal","style","minWidth","sm","form_renderer","schemaType","initialValues","react_select_browser_esm","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","RemoveGroupModal","_ref$history","isSmall","actions","Button","onClick","h1","loader_placeholders","opened","principalCount","modified","react_router_dom","to","frontend_components","date","ExpandableContent","parent","fullWidth","expandable_content","AddGroupMembers","width","isFooterLeftAligned","userList","RemoveModal","text","confirmButtonLabel","exclamation_triangle_icon","Split","SplitItem","isFilled","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","_useState9","_useState10","deleteInfo","setDeleteInfo","removeModalText","plural","removeMembers","userNames","shared_RemoveModal","platform_default","CardBody","Bullseye","is_org_admin","routes","react_router","path","render","args","add_group_members","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","aria-label","multipleMembersSelected","_ref4$groupReducer","identity","AddGroupRoles","ActionGroup","rolesList","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","_useState11","_useState12","Fragment","multipleRolesSelected","add_group_roles","reloadWrapper","_ref5$groupReducer","removeRolesFromGroup","Group","isFetching","top_toolbar","breadcrumbs","isActive","app_tabs","_ref2$groupReducer","Groups","setSelectedRows","exact","add_group_wizard","edit_group_modal","remove_group_modal","_groupData","group_group","paddingBottm","platforms","system","policyCount","ResourceDefinitionsTable","handleChange","editable","_formData$resourceDef","resourceDefinitions","definition","operation","isInline","Table","TableVariant","compact","Header","Body","_formData$application","application","_formData$description","_formData$name","_formData$permission","permission","_formData$resourceTyp","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","createRole","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","roleData","applications","access","attributeFilter","onNext","_ref4$roleReducer","RemoveRoleModal","removeRole","fetchRole","_ref2$roleReducer","selectedRole","isRecordLoading","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setLoadingState","state","user_reducer","_$concat$$concat$$con","FETCH_USER","selectedUser","FETCH_USERS","setRecordLoadingState","group_reducer","group_reducer_$concat$$concat$$con","FETCH_GROUPS","FETCH_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","RESET_SELECTED_GROUP","policy_reducer","policy_reducer_$concat$$concat$$con","FETCH_GROUP_POLICIES","FETCH_POLICY","selectedPolicy","role_reducer","role_reducer_$concat$$concat$$con","FETCH_ROLE","FETCH_ROLES","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","policyReducer","policy","getStore","lazy","resolve","interopRequireWildcard_default","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","routes_InsightsRoute","childProps","App","chromeNavAvailable","_this2","init","setState","identifyApp","lib","locale","frontend_components_notifications","marginLeft","padding","routes_Routes","Component","ReactDOM","es","store","basename","getBaseName","src_App_0","ListLoader","items","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","Array","_item","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","aria-labelledby","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","dataListCells","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_13__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","SkeletonSize","lg","AppPlaceholder","react_content_loader__WEBPACK_IMPORTED_MODULE_12__","height","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","BreadcrumbPlaceholder","FormItemLoader","_createRole","createRoles","_fetchRolesWithPolicies","t0","t1","listRoles","t2","t3","_fetchRole","getRole","_removeRole","roleId","deleteRole","role_actions_createRole","role_actions_fetchRole","role_actions_fetchRoles","role_actions_fetchRolesWithPolicies","role_actions_removeRole","RoleHelper","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","checked","filterConfigBuilder","filterValues","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","node","TableToolbarView","openRow","onCollapse","_index","toolbar","canSelectAll","_idx","empty_filter","colSpan","Pagination","dropDirection","UsersIcon","requests","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","top_toolbar_TopToolbar","top_toolbar_TopToolbarTitle","TopToolbar","children","paddingBottom","Level","breadcrubms","TopToolbarTitle","LevelItem","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","ADD_ROLE","REMOVE_ROLE","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([418,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  if (data.user_list && data.user_list.length > 0) {\n    return groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  return newGroup;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, limit, offset, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUser = () => ({\n  type: ActionTypes.FETCH_USER,\n  payload: new Promise(resolve => {\n    resolve(UserHelper.fetchUser());\n  })\n});\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = { ...formData, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod()).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissable: true,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '40%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n      <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Modal,\n  Button,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel }) => {\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default RemoveModal;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const removeModalText = (name, group, plural) => (plural\n    ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n    : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n  );\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username, group.name, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].name,\n                group.name,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          group.platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ principals }\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              request={ fetchGroup }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              titlePlural=\"principals\"\n              titleSingular=\"principal\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ () => fetchGroup(uuid) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  name\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ `Add roles to ${name} group` }\n      width={ '70%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently in your group.</b>\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  isDisabled={ selectedRoles.length === 0 }\n                  onClick={ onSubmit }\n                >\n                      Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        name,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role['role-name'].title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        name={ name }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add a role\"\n          >\n        Add a role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove roles?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(name, multipleRolesSelected ? selectedRoles.length : selectedRoles[0].label, multipleRolesSelected)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ createRows }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ config => fetchRolesForGroup(config)(uuid) }\n          setFilterValue={ ({ name }) => setFilterValue(name) }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          request={ fetchRolesForGroup(pagination) }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (pagination) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, pagination, options)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !isFetching && group ? group.name : undefined }\n          description={ !isFetching && group ? group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ fetchData } /> } />\n  </Fragment>;\n\n  const actionResolver = (_groupData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create a group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        name,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USER, FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUser = (state, { payload }) => ({ ...state, selectedUser: payload, isUserDataLoading: false });\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USER}_PENDING`]: setLoadingState,\n  [`${FETCH_USER}_FULFILLED`]: setUser,\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: { addRoles: {}},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { ...state.selectedGroup, loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...state.selectedGroup, ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nconst setAddRolesLoading = state => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false }}\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { roles: payload.data, pagination: payload.meta, loaded: true }}\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = ''\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  request: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  requests: [],\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/expandable-description.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/redux/action-types.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","AppTabs","_ref","history","pathname","location","tabItems","activeTab","find","_ref2","includes","a","createElement","className","activeKey","eventKey","onSelect","_event","tabIndex","map","item","title","propTypes","PropTypes","shape","string","isRequired","func","array","withRouter","RBAC_API_BASE","concat","process","__webpack_exports__","getPrincipalApi","getGroupApi","getRoleApi","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","getCurrentPage","limit","arguments","offset","Math","floor","mappedProps","apiProps","entries","reduce","acc","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","every","_ref4","uuid","row","some","_ref5","selectedRows","newSelection","isSelected","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","arr","findIndex","_ref7","_ref6","defaultSettings","defaultCompactSettings","itemCount","numberOfItems","fetchGroups","_x","_fetchGroups","this","_callee","orderBy","_ref3","groups","auth","regenerator_default","wrap","_context","prev","next","Promise","all","listGroups","insights","chrome","getUser","sent","slicedToArray_default","abrupt","objectSpread_default","stop","fetchGroup","_x2","_fetchGroup","_callee2","_context2","getGroup","updateGroup","_x3","_updateGroup","_callee3","members_list","addUsers","removeUsers","_context3","principals","user","username","user_list","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","_x4","_addGroup","_callee4","newGroup","_context4","createGroup","removeGroup","_x5","_removeGroup","_callee5","groupId","_context5","deleteGroup","deletePrincipalsFromGroup","_x6","_x7","_deletePrincipalsFromGroup","_callee6","users","_context6","addPrincipalsToGroup","_x8","_x9","_addPrincipalsToGroup","_callee7","_context7","fetchRolesForGroup","_x10","_x11","_fetchRolesForGroup","_callee8","_context8","listRolesForGroup","deleteRolesFromGroup","_x12","_x13","_deleteRolesFromGroup","_callee9","roles","_context9","deleteRoleFromGroup","addRolesToGroup","_x14","_x15","_addRolesToGroup","_callee10","_context10","addRoleToGroup","options","type","ActionTypes","payload","GroupHelper","groupData","meta","notifications","variant","description","rejected","group","addMembersToGroup","members","removeMembersFromGroup","fetchUsers","listPrincipals","SummaryContent","formData","values","selectedUsers","selectedRoles","react_default","react","Stack","gutter","StackItem","Title","size","TextContent","Text","component","TextVariants","h5","Grid","GridItem","span","index","label","role","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","columns","createRows","expanded","checkedRows","email","first_name","last_name","toConsumableArray_default","cells","Boolean","UsersList","isLoading","pagination","setSelectedUsers","_useState","useState","_useState2","filterValue","setFilterValue","useEffect","table_toolbar_view","isSelectable","isCompact","borders","fetchData","config","request","setCheckedItems","titlePlural","titleSingular","goBack","bool","searchFilter","number","count","defaultProps","connect","_ref5$userReducer","userReducer","isUserDataLoading","dispatch","addNotification","SetUsers","h6","Card","users_list","RolesList","fetchRoles","setSelectedRoles","_ref5$roleReducer","roleReducer","fetchRolesWithPolicies","SetRoles","roles_list","AddGroupWizard","postMethod","closeUrl","_useState3","_useState4","_useState5","_useState6","setValues","_useState7","_useState8","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","asyncToGenerator_default","mark","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","_ref3$roleReducer","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","objectWithoutProperties_default","FormSelect","extends_default","selectOptions","createOptions","props","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","pf4_select_wrapper_Select","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","dist_default","formFieldsMapper","defineProperty_default","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","selectedGroup","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","then","onCancel","schema","properties","required","Modal","style","minWidth","sm","form_renderer","schemaType","initialValues","react_select_browser_esm","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","groupReducer","RemoveGroupModal","_ref$history","isSmall","actions","Button","onClick","h1","loader_placeholders","loaded","ExpandableDescription","frontend_components","SkeletonSize","activeGroup","opened","principalCount","modified","react_router_dom","to","date","parent","fullWidth","expandable_description","ExpandableContent","expandable_content","AddGroupMembers","width","ActionGroup","Split","SplitItem","aria-label","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","removeMembers","userNames","platform_default","CardBody","Bullseye","is_org_admin","routes","react_router","path","render","args","add_group_members","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","_ref4$groupReducer","identity","AddGroupRoles","rolesList","GroupRoles","removeRoles","addRoles","selectedAddRoles","setSelectedAddRoles","add_group_roles","reloadWrapper","_ref5$groupReducer","removeRolesFromGroup","Group","isFetching","top_toolbar","breadcrumbs","isActive","app_tabs","_ref2$groupReducer","Groups","setSelectedRows","exact","add_group_wizard","edit_group_modal","remove_group_modal","_groupData","group_group","paddingBottm","platforms","system","policyCount","ResourceDefinitionsTable","handleChange","editable","_formData$resourceDef","resourceDefinitions","definition","operation","isInline","Table","TableVariant","compact","Header","Body","_formData$application","application","_formData$description","_formData$name","_formData$permission","permission","_formData$resourceTyp","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","createRole","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","roleData","applications","access","attributeFilter","onNext","_ref4$roleReducer","RemoveRoleModal","removeRole","fetchRole","_ref2$roleReducer","selectedRole","isRecordLoading","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setLoadingState","state","user_reducer","_$concat$$concat$$con","FETCH_USER","selectedUser","FETCH_USERS","setRecordLoadingState","group_reducer","group_reducer_$concat$$concat$$con","FETCH_GROUPS","FETCH_GROUP","FETCH_ROLES_FOR_GROUP","RESET_SELECTED_GROUP","policy_reducer","policy_reducer_$concat$$concat$$con","FETCH_GROUP_POLICIES","FETCH_POLICY","selectedPolicy","role_reducer","role_reducer_$concat$$concat$$con","FETCH_ROLE","FETCH_ROLES","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","policyReducer","policy","getStore","lazy","resolve","interopRequireWildcard_default","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","routes_InsightsRoute","childProps","App","chromeNavAvailable","_this2","init","setState","identifyApp","lib","locale","Fragment","frontend_components_notifications","marginLeft","padding","routes_Routes","Component","ReactDOM","es","store","basename","getBaseName","src_App_0","ListLoader","items","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","Array","_item","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","aria-labelledby","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","dataListCells","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_13__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","lg","AppPlaceholder","react_content_loader__WEBPACK_IMPORTED_MODULE_12__","height","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","BreadcrumbPlaceholder","FormItemLoader","_createRole","createRoles","_fetchRolesWithPolicies","t0","t1","listRoles","t2","t3","_fetchRole","getRole","_removeRole","roleId","deleteRole","role_actions_createRole","role_actions_fetchRole","role_actions_fetchRoles","role_actions_fetchRolesWithPolicies","role_actions_removeRole","RoleHelper","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","checked","filterConfigBuilder","filterValues","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","text","node","TableToolbarView","openRow","onCollapse","_index","toolbar","canSelectAll","_idx","empty_filter","colSpan","Pagination","dropDirection","UsersIcon","requests","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","top_toolbar_TopToolbar","top_toolbar_TopToolbarTitle","TopToolbar","children","paddingBottom","Level","breadcrubms","TopToolbarTitle","LevelItem","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","ADD_ROLE","REMOVE_ROLE","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([418,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  if (data.user_list && data.user_list.length > 0) {\n    return groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  return newGroup;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, { limit, offset }) {\n  return await groupApi.listRolesForGroup(groupId, limit, offset);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, pagination)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers() {\n  return principalApi.listPrincipals();\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUser = () => ({\n  type: ActionTypes.FETCH_USER,\n  payload: new Promise(resolve => {\n    resolve(UserHelper.fetchUser());\n  })\n});\n\nexport const fetchUsers = () => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers()\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data,\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = { ...formData, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod()).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { connect } from 'react-redux';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nconst ExpandableDescription = ({ members, fetchGroup, uuid, loaded }) => {\n  useEffect(() => {\n    fetchGroup(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"groups-table-detail heading\" component={ TextVariants.small }>Members</Text>\n        {\n          loaded ?\n            <Text className=\"groups-table-detail content\" component={ TextVariants.h5 }>\n              {\n                members.length === 0 ? 'No members' :\n                  members.map(({ first_name, last_name }) => `${first_name} ${last_name}`)\n              }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div>\n        }\n      </TextContent>\n    </Fragment>\n  );};\n\nExpandableDescription.propTypes = {\n  description: PropTypes.string,\n  uuid: PropTypes.string,\n  members: PropTypes.arrayOf(PropTypes.shape({\n    first_name: PropTypes.string,\n    last_name: PropTypes.string\n  })),\n  loaded: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nExpandableDescription.defaultProps = {\n  members: [],\n  loaded: false,\n  fetchGroup: () => undefined\n};\n\nconst mapStateToProps = ({ groupReducer: { groups }}, { uuid }) => {\n  const activeGroup = groups.data.find((group) => group.uuid === uuid) || {};\n  return ({\n    members: activeGroup.principals,\n    description: activeGroup.description,\n    loaded: activeGroup.loaded\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGroup: (uuid) => dispatch(fetchGroup(uuid))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpandableDescription);\n\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport ExpandableDescription from './expandable-description';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }, key) => ([\n    ...acc,\n    {\n      uuid,\n      isOpen: Boolean(opened[uuid]),\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: opened[uuid] ?\n          <ExpandableDescription uuid={ uuid } /> :\n          <Fragment />\n      }]\n    }\n  ]), [])\n);\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport { ActionGroup,\n  Button,\n  Modal,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  TextContent,\n  Text,\n  TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  fetchData,\n  closeUrl,\n  addMembersToGroup\n}) => {\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const onSubmit = () => {\n    const user_list = selectedUsers.map(user => ({ username: user.label }));\n    return addMembersToGroup(uuid, user_list).then(() => {\n      fetchData();\n      push(closeUrl);\n    });\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      title={ 'Add group members' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSubmit }\n                >\n                  Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            removeMembers([ principal.username ]);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove selected',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger',\n            onClick: () => removeMembers(selectedPrincipals)\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-principals' }>\n      {\n        group.platform_default ?\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                  </Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card> :\n          <TableToolbarView\n            data={ principals }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            createRows={ createRows }\n            columns={ columns }\n            request={ fetchGroup }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"principals\"\n            titleSingular=\"principal\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ () => fetchGroup(uuid) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            checkedRows={ selectedPrincipals }\n            isLoading={ isLoading }\n            setCheckedItems={ setCheckedPrincipals }\n            toolbarButtons={ toolbarButtons }\n          /> }\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Form,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport RolesList from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  description,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ 'Add group roles' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Fragment>\n        <Form>\n          <Stack gutter=\"md\">\n            { title && <StackItem>\n              <Title size=\"xl\">{ title }</Title>\n            </StackItem> }\n            <StackItem>\n              <TextContent>\n                <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </StackItem>\n            <StackItem>\n              <ActionGroup>\n                <Split gutter=\"md\">\n                  <SplitItem>\n                    <Button\n                      aria-label=\"Save\"\n                      variant=\"primary\"\n                      type=\"button\"\n                      onClick={ onSubmit }\n                    >\n                      Save\n                    </Button>\n                  </SplitItem>\n                  <SplitItem>\n                    <Button\n                      aria-label='Cancel'\n                      variant='secondary'\n                      type='button'\n                      onClick={ onCancel }>Cancel</Button>\n                  </SplitItem>\n                </Split>\n              </ActionGroup>\n            </StackItem>\n          </Stack>\n        </Form>\n      </Fragment>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        name,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid));\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add a role\"\n          >\n        Add a role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger',\n            onClick: () => removeRoles(selectedRoles)\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-roles' }>\n      <TableToolbarView\n        columns={ columns }\n        isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n        createRows={ createRows }\n        data={ roles }\n        filterValue={ filterValue }\n        fetchData={ config => fetchRolesForGroup(config)(uuid) }\n        setFilterValue={ ({ name }) => setFilterValue(name) }\n        isLoading={ isLoading }\n        pagination={ pagination }\n        request={ fetchRolesForGroup(pagination) }\n        checkedRows={ selectedRoles }\n        setCheckedItems={ setCheckedItems }\n        titlePlural=\"roles\"\n        titleSingular=\"role\"\n        toolbarButtons={ toolbarButtons }\n        actionResolver={ actionResolver }\n        routes={ routes }\n      />\n    </Section>\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (pagination) => (groupId) => dispatch(fetchRolesForGroup(groupId, pagination)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !isFetching && group ? group.name : undefined }\n          description={ !isFetching && group ? group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ fetchData } /> } />\n  </Fragment>;\n\n  const actionResolver = (_groupData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create a group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        name,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USER, FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUser = (state, { payload }) => ({ ...state, selectedUser: payload, isUserDataLoading: false });\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USER}_PENDING`]: setLoadingState,\n  [`${FETCH_USER}_FULFILLED`]: setUser,\n  [`${FETCH_USERS}_PENDIND`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = ''\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  request: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  requests: [],\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\n"],"sourceRoot":""}
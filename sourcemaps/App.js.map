{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/redux/action-types.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","jsonpArray","webpackJsonpCallback","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","AppTabs","push","history","pathname","location","tabItems","activeTab","find","name","includes","className","activeKey","eventKey","onSelect","_event","tabIndex","map","item","title","propTypes","PropTypes","shape","string","isRequired","func","array","withRouter","RBAC_API_BASE","process","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","getPrincipalApi","getGroupApi","getRoleApi","createRows","data","reduce","acc","permission","split","appName","type","operation","cells","columns","Permissions","useState","pagination","limit","offset","count","filter","config","setConfig","useSelector","state","role","roleReducer","selectedRole","isRecordLoading","shallowEqual","useEffect","access","filteredRows","TextContent","Text","component","TextVariants","h1","slice","filterValue","fetchData","setFilterValue","isLoading","titlePlural","titleSingular","Role","useParams","uuid","groupUuid","group","groupReducer","selectedGroup","dispatch","useDispatch","fetchRole","fetchGroup","breadcrumbs","to","loaded","isActive","description","fetchGroups","a","orderBy","Promise","all","listGroups","insights","chrome","auth","getUser","groups","getGroup","updateGroup","members_list","principals","user","username","addUsers","user_list","removeUsers","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","createGroup","newGroup","ret","roles_list","addRoleToGroup","roles","removeGroup","groupId","deleteGroup","deletePrincipalsFromGroup","users","addPrincipalsToGroup","fetchRolesForGroup","excluded","options","listRolesForGroup","deleteRolesFromGroup","deleteRoleFromGroup","addRolesToGroup","ActionTypes","payload","GroupHelper","apiProps","groupData","meta","notifications","fulfilled","variant","rejected","addMembersToGroup","members","removeMembersFromGroup","fetchAddRolesForGroup","removeRolesFromGroup","defaultSettings","itemCount","numberOfItems","defaultCompactSettings","ListLoader","items","props","aria-label","Array","_item","index","aria-labelledby","dataListCells","size","SkeletonSize","lg","number","defaultProps","AppPlaceholder","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","style","BreadcrumbPlaceholder","FormItemLoader","createRole","createRoles","fetchRoles","listRoles","fetchRolesWithPolicies","getRole","removeRole","roleId","deleteRole","roleData","RoleHelper","getCurrentPage","Math","floor","mappedProps","entries","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","every","row","some","selectedRows","newSelection","isSelected","arr","findIndex","fetchUsers","listPrincipals","then","isLast","currData","Infinity","SummaryContent","formData","values","selectedUsers","selectedRoles","Stack","gutter","StackItem","Title","h5","Grid","GridItem","span","p","label","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","expanded","checkedRows","email","first_name","last_name","Boolean","UsersList","setSelectedUsers","isSelectable","isCompact","borders","noBottom","toggleTemplate","firstIndex","lastIndex","request","setCheckedItems","goBack","bool","searchFilter","connect","userReducer","isUserDataLoading","addNotification","SetUsers","h6","Card","RolesList","setSelectedRoles","ExcludedRolesList","addRoles","propsFromState","propsFromDispatch","ownProps","SetRoles","AddGroupWizard","postMethod","closeUrl","setValues","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","FormSelect","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","onCancel","schema","properties","required","Modal","minWidth","sm","schemaType","initialValues","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","RemoveGroupModal","isSmall","actions","Button","onClick","opened","principalCount","modified","date","ExpandableContent","parent","fullWidth","AddGroupMembers","isFooterLeftAligned","userList","RemoveModal","text","confirmButtonLabel","Split","SplitItem","isFilled","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","removeModalText","plural","removeMembers","userNames","platform_default","CardBody","Bullseye","is_org_admin","routes","path","render","args","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","multipleMembersSelected","identity","AddGroupRoles","ActionGroup","rolesList","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","Fragment","multipleRolesSelected","reloadWrapper","Group","isFetching","Groups","setSelectedRows","exact","paddingBottm","platforms","system","policyCount","ResourceDefinitionsTable","handleChange","editable","resourceDefinitions","definition","isInline","Table","TableVariant","compact","application","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","result","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","applications","attributeFilter","onNext","RemoveRoleModal","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setRecordLoadingState","selectedPolicy","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","selectedUser","policyReducer","policy","getStore","lazy","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","childProps","App","chromeNavAvailable","init","setState","identifyApp","this","locale","marginLeft","padding","Component","ReactDOM","store","basename","getBaseName","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","checked","filterConfigBuilder","filterValues","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","node","TableToolbarView","openRow","onCollapse","_index","canSelectAll","_idx","colSpan","Pagination","dropDirection","UsersIcon","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","TopToolbar","children","paddingBottom","Level","TopToolbarTitle","LevelItem"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([422,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","export const createRows = (data) => (\n  data.reduce((acc, { permission }) => {\n    const [ appName, type, operation ] = permission.split(':');\n    return ([\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation\n        ]\n      }\n    ]);\n  }, [])\n);\n","import React, { useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-permissions-table-helpers';\nimport './role-permissions.scss';\n\nconst columns = [\n  { title: 'Application' },\n  { title: 'Resource type' },\n  { title: 'Operation' }\n];\n\nconst Permissions = () => {\n  const [ config, setConfig ] = useState({\n    pagination: {\n      limit: 10,\n      offset: 0,\n      count: 0,\n      filter: ''\n    }\n  });\n  const { role, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading\n  }), shallowEqual);\n\n  const { pagination, filter } = config;\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0\n      }\n    });\n  }, [ role ]);\n\n  const filteredRows = (role && role.access) ?\n    (role.access || [])\n    .filter(({ permission }) => permission === '*' || filter ? permission.includes(filter) : true) :\n    [];\n\n  return <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n    <TextContent>\n      <Text component={ TextVariants.h1 }>Permissions</Text>\n    </TextContent>\n    <TableToolbarView\n      columns={ columns }\n      createRows={ createRows }\n      data={ filteredRows.slice(pagination.offset, pagination.offset + pagination.limit) }\n      filterValue={ filter }\n      fetchData={ ({ limit, offset, name }) => setConfig({\n        ...config,\n        filter: name,\n        pagination: {\n          ...config.pagination,\n          limit,\n          offset\n        }\n      }) }\n      setFilterValue={ ({ name }) => setConfig({\n        ...config,\n        filter: name\n      })  }\n      isLoading={ isRecordLoading }\n      pagination={ {\n        ...pagination,\n        count: filteredRows.length\n      } }\n      titlePlural=\"permissions\"\n      titleSingular=\"permission\"\n    />\n  </section>;\n};\n\nexport default Permissions;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup } from '../../redux/actions/group-actions';\n\nconst Role = () => {\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading,\n    ...groupUuid && { group: state.groupReducer.selectedGroup }\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRole(uuid));\n    groupUuid && dispatch(fetchGroup(groupUuid));\n  }, [ uuid, groupUuid ]);\n\n  return <Fragment>\n    <TopToolbar breadcrumbs={ [\n      ...[ groupUuid ? { title: 'User Access Management', to: '/groups' } : { title: 'Roles', to: '/roles' } ],\n      ...groupUuid ? [{\n        title: group && group.name,\n        to: `/groups/detail/${groupUuid}/roles`,\n        isLoading: group && group.loaded\n      }] : [],\n      { title: role && role.name, isActive: true }\n    ] }>\n      <TopToolbarTitle title= { !isRecordLoading && role ? role.name : undefined }\n        description={ !isRecordLoading && role ? role.description : undefined }/>\n    </TopToolbar>\n    { (isRecordLoading || !role) ? <ListLoader/> : <Permissions /> }\n  </Fragment>;\n};\n\nexport default Role;\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  let ret = newGroup;\n\n  if (data.user_list && data.user_list.length > 0) {\n    ret = groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  if (data.roles_list && data.roles_list.length > 0) {\n    ret = groupApi.addRoleToGroup(newGroup.uuid, { roles: data.roles_list });\n  }\n\n  return ret;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, limit, offset, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = {\n      ...formData,\n      user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined,\n      roles_list: selectedRoles ? selectedRoles.map(role => role.uuid) : undefined\n    };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod()).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissable: true,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '40%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n      <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Modal,\n  Button,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel }) => {\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default RemoveModal;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const removeModalText = (name, group, plural) => (plural\n    ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n    : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n  );\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username, group.name, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].name,\n                group.name,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          group.platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ principals }\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              request={ fetchGroup }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              titlePlural=\"principals\"\n              titleSingular=\"principal\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ () => fetchGroup(uuid) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  name\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ `Add roles to ${name} group` }\n      width={ '70%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently in your group.</b>\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  isDisabled={ selectedRoles.length === 0 }\n                  onClick={ onSubmit }\n                >\n                      Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/groups/detail/${groupUuid}/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role['role-name'].title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        name={ name }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add a role\"\n          >\n        Add a role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove roles?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(name, multipleRolesSelected ? selectedRoles.length : selectedRoles[0].label, multipleRolesSelected)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ (...props) => createRows(uuid, ...props) }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ config => fetchRolesForGroup(config)(uuid) }\n          setFilterValue={ ({ name }) => setFilterValue(name) }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          request={ fetchRolesForGroup(pagination) }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (pagination) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, pagination, options)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !isFetching && group ? group.name : undefined }\n          description={ !isFetching && group ? group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ fetchData } /> } />\n  </Fragment>;\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:groupUuid/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      /*eslint-disable camelcase*/\n      is_org_admin: PropTypes.bool\n      /*eslint-enable camelcase*/\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: { addRoles: {}},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { ...state.selectedGroup, loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...state.selectedGroup, ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nconst setAddRolesLoading = state => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false }}\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { roles: payload.data, pagination: payload.meta, loaded: true }}\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = ''\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n"],"sourceRoot":""}
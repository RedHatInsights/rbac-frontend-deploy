{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/redux/action-types.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/expandable-description.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","AppTabs","_ref","history","pathname","location","tabItems","activeTab","find","_ref2","includes","a","createElement","className","activeKey","eventKey","onSelect","_event","tabIndex","map","item","title","propTypes","PropTypes","shape","string","isRequired","func","array","withRouter","RBAC_API_BASE","concat","process","__webpack_exports__","getPrincipalApi","getGroupApi","getRoleApi","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","getCurrentPage","limit","arguments","offset","Math","floor","mappedProps","apiProps","entries","reduce","acc","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","every","_ref4","uuid","row","some","_ref5","selectedRows","newSelection","isSelected","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","arr","findIndex","_ref7","_ref6","fetchGroups","_x","_fetchGroups","this","_callee","orderBy","regenerator_default","wrap","_context","prev","next","listGroups","abrupt","sent","stop","fetchGroup","_x2","_fetchGroup","_callee2","_context2","getGroup","updateGroup","_x3","_updateGroup","_callee3","members_list","addUsers","removeUsers","_context3","principals","user","username","user_list","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","_x4","_addGroup","_callee4","newGroup","_context4","createGroup","removeGroup","_x5","_removeGroup","_callee5","groupId","_context5","deleteGroup","deletePrincipalsFromGroup","_x6","_x7","_deletePrincipalsFromGroup","_callee6","users","_context6","addPrincipalsToGroup","_x8","_x9","_addPrincipalsToGroup","_callee7","_context7","fetchRolesForGroup","_x10","_fetchRolesForGroup","_callee8","_context8","listRolesForGroup","deleteRolesFromGroup","_x11","_x12","_deleteRolesFromGroup","_callee9","roles","_context9","deleteRoleFromGroup","addRolesToGroup","_x13","_x14","_addRolesToGroup","_callee10","_context10","addRoleToGroup","options","type","ActionTypes","payload","GroupHelper","groupData","meta","notifications","variant","description","rejected","group","addMembersToGroup","members","removeMembersFromGroup","fetchUsers","listPrincipals","SummaryContent","formData","values","selectedUsers","selectedRoles","react_default","react","Stack","gutter","StackItem","Title","size","TextContent","Text","component","TextVariants","h5","Grid","GridItem","span","index","label","role","groups","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","columns","createRows","expanded","checkedRows","email","first_name","last_name","toConsumableArray_default","cells","Boolean","UsersList","isLoading","pagination","setSelectedUsers","_useState","useState","_useState2","slicedToArray_default","filterValue","setFilterValue","useEffect","table_toolbar_view","isSelectable","isCompact","borders","fetchData","config","request","setCheckedItems","_ref3","titlePlural","titleSingular","goBack","bool","searchFilter","number","count","defaultProps","defaultCompactSettings","connect","_ref5$userReducer","userReducer","isUserDataLoading","dispatch","addNotification","SetUsers","h6","Card","users_list","RolesList","fetchRoles","setSelectedRoles","_ref5$roleReducer","roleReducer","fetchRolesWithPolicies","SetRoles","roles_list","AddGroupWizard","postMethod","closeUrl","_useState3","_useState4","_useState5","_useState6","setValues","_useState7","_useState8","isGroupInfoValid","steps","objectSpread_default","enableNext","nextButtonText","onSubmit","asyncToGenerator_default","mark","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","_ref3$roleReducer","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","objectWithoutProperties_default","FormSelect","extends_default","selectOptions","createOptions","props","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","pf4_select_wrapper_Select","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","dist_default","formFieldsMapper","defineProperty_default","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","selectedGroup","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","then","onCancel","schema","properties","required","Modal","style","minWidth","sm","form_renderer","schemaType","initialValues","react_select_browser_esm","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","groupReducer","RemoveGroupModal","_ref$history","isSmall","actions","Button","onClick","h1","loader_placeholders","_ref2$groupReducer","isRecordLoading","ExpandableDescription","loaded","frontend_components","SkeletonSize","activeGroup","opened","principalCount","modified","react_router_dom","to","date","parent","fullWidth","expandable_description","ExpandableContent","expandable_content","AddGroupMembers","width","ActionGroup","Split","SplitItem","aria-label","cellFormatters","expandable","GroupPrincipals","selectedPrincipals","setSelectedPrincipals","removeMembers","userNames","routes","react_router","path","render","args","add_group_members","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","defaultSettings","AddGroupRoles","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","add_group_roles","addRoles","removeRolesFromGroup","Group","top_toolbar","breadcrumbs","isActive","isFetching","app_tabs","_ref$groupReducer","Groups","setSelectedRows","exact","add_group_wizard","edit_group_modal","remove_group_modal","_groupData","group_group","paddingBottm","platforms","_ref5$groupReducer","system","policyCount","ResourceDefinitionsTable","handleChange","editable","_formData$resourceDef","resourceDefinitions","definition","operation","isInline","Table","TableVariant","compact","Header","Body","_formData$application","application","_formData$description","_formData$name","_formData$permission","permission","_formData$resourceTyp","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","createRole","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","roleData","applications","access","attributeFilter","onNext","_ref4$roleReducer","RemoveRoleModal","removeRole","fetchRole","_ref2$roleReducer","selectedRole","Roles","userIdentity","userEntitlements","RemoveRole","userAllowed","insights","chrome","isBeta","is_org_admin","areActionsDisabled","_roleData","policies","cost_management","oneOfType","identity","entitlements","setLoadingState","state","user_reducer","_$concat$$concat$$con","FETCH_USER","selectedUser","group_reducer","group_reducer_$concat$$concat$$con","policy_reducer","policy_reducer_$concat$$concat$$con","selectedPolicy","role_reducer","role_reducer_$concat$$concat$$con","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","policyReducer","policy","getStore","lazy","Promise","resolve","interopRequireWildcard_default","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","routes_InsightsRoute","childProps","App","chromeNavAvailable","auth","_this2","init","getUser","setState","identifyApp","lib","locale","Fragment","frontend_components_notifications","marginLeft","padding","routes_Routes","Component","ReactDOM","es","store","basename","getBaseName","src_App_0","_createRole","createRoles","_fetchRolesWithPolicies","t0","t1","listRoles","t2","t3","_fetchRole","getRole","_removeRole","roleId","deleteRole","role_actions_createRole","role_actions_fetchRole","role_actions_fetchRoles","role_actions_fetchRolesWithPolicies","role_actions_removeRole","RoleHelper","itemCount","numberOfItems","ListLoader","items","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","Array","_item","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","aria-labelledby","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","dataListCells","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","react_content_loader__WEBPACK_IMPORTED_MODULE_12__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","height","speed","primaryColor","secondaryColor","x","y","rx","ry","AppPlaceholder","ToolbarTitlePlaceholder","FormItemLoader","Toolbar","PrimaryToolbar","bulkSelect","checked","filterConfig","filterValues","_e","actionsConfig","perPage","page","onSetPage","perPageOptions","onPerPageSelect","activeFiltersConfig","filters","onDelete","EmptyWithFilter","icon","Bullseye","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","text","node","TableToolbarView","openRow","onCollapse","_index","toolbar","canSelectAll","_idx","empty_filter","colSpan","UsersIcon","requests","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","top_toolbar_TopToolbar","top_toolbar_TopToolbarTitle","TopToolbar","children","paddingBottom","Level","breadcrubms","TopToolbarTitle","LevelItem"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([410,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  return await groupApi.listGroups(limit, offset, name, orderBy);\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  if (data.user_list && data.user_list.length > 0) {\n    return groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  return newGroup;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId) {\n  return await groupApi.listRolesForGroup(groupId);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers() {\n  return principalApi.listPrincipals();\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUser = () => ({\n  type: ActionTypes.FETCH_USER,\n  payload: new Promise(resolve => {\n    resolve(UserHelper.fetchUser());\n  })\n});\n\nexport const fetchUsers = () => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers()\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data,\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = { ...formData, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod()).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isRecordLoading }}) => ({\n  group: selectedGroup,\n  isLoading: isRecordLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { connect } from 'react-redux';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nconst ExpandableDescription = ({ members, fetchGroup, uuid, loaded }) => {\n  useEffect(() => {\n    fetchGroup(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"groups-table-detail heading\" component={ TextVariants.small }>Members</Text>\n        {\n          loaded ?\n            <Text className=\"groups-table-detail content\" component={ TextVariants.h5 }>\n              {\n                members.length === 0 ? 'No members' :\n                  members.map(({ first_name, last_name }) => `${first_name} ${last_name}`)\n              }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div>\n        }\n      </TextContent>\n    </Fragment>\n  );};\n\nExpandableDescription.propTypes = {\n  description: PropTypes.string,\n  uuid: PropTypes.string,\n  members: PropTypes.arrayOf(PropTypes.shape({\n    first_name: PropTypes.string,\n    last_name: PropTypes.string\n  })),\n  loaded: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nExpandableDescription.defaultProps = {\n  members: [],\n  loaded: false,\n  fetchGroup: () => undefined\n};\n\nconst mapStateToProps = ({ groupReducer: { groups }}, { uuid }) => {\n  const activeGroup = groups.data.find((group) => group.uuid === uuid) || {};\n  return ({\n    members: activeGroup.principals,\n    description: activeGroup.description,\n    loaded: activeGroup.loaded\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGroup: (uuid) => dispatch(fetchGroup(uuid))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpandableDescription);\n\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport ExpandableDescription from './expandable-description';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }, key) => ([\n    ...acc,\n    {\n      uuid,\n      isOpen: Boolean(opened[uuid]),\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: opened[uuid] ?\n          <ExpandableDescription uuid={ uuid } /> :\n          <Fragment />\n      }]\n    }\n  ]), [])\n);\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport { ActionGroup,\n  Button,\n  Modal,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  TextContent,\n  Text,\n  TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  fetchData,\n  closeUrl,\n  addMembersToGroup\n}) => {\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const onSubmit = () => {\n    const user_list = selectedUsers.map(user => ({ username: user.label }));\n    return addMembersToGroup(uuid, user_list).then(() => {\n      fetchData();\n      push(closeUrl);\n    });\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      title={ 'Add group members' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSubmit }\n                >\n                  Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    rowIndex % 2 === 1 ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            removeMembers([ principal.username ]);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    <Link\n      to={ `/groups/detail/${uuid}/members/add_members` }\n      key=\"remove-from-group\"\n    >\n      <Button\n        variant=\"primary\"\n        aria-label=\"Add member\"\n      >\n        Add member\n      </Button>\n    </Link>,\n    {\n      label: 'Remove selected',\n      props: {\n        isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n        variant: 'danger',\n        onClick: () => removeMembers(selectedPrincipals)\n      }\n    }\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-principals' }>\n      <TableToolbarView\n        data={ principals }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        request={ fetchGroup }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"principals\"\n        titleSingular=\"principal\"\n        pagination={ pagination }\n        filterValue={ filterValue }\n        fetchData={ () => fetchGroup(uuid) }\n        setFilterValue={ ({ name }) => setFilterValue(name) }\n        checkedRows={ selectedPrincipals }\n        isLoading={ isLoading }\n        setCheckedItems={ setCheckedPrincipals }\n        toolbarButtons={ toolbarButtons }\n      />\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups }}, { match: { params: { uuid }}}) => {\n  const activeGroup = groups.data.find((group) => group.uuid === uuid) || {};\n  return {\n    principals: (activeGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: activeGroup.principals && activeGroup.principals.length },\n    isLoading: !activeGroup.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Form,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport RolesList from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  description,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles;\n    return addRolesToGroup(uuid, rolesList).then(() => {\n      fetchRolesForGroup(uuid);\n      push(closeUrl);\n    });\n  };\n\n  return (\n    <Modal\n      title={ 'Add group roles' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Fragment>\n        <Form>\n          <Stack gutter=\"md\">\n            { title && <StackItem>\n              <Title size=\"xl\">{ title }</Title>\n            </StackItem> }\n            <StackItem>\n              <TextContent>\n                <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </StackItem>\n            <StackItem>\n              <ActionGroup>\n                <Split gutter=\"md\">\n                  <SplitItem>\n                    <Button\n                      aria-label=\"Save\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={ onSubmit }\n                    >\n                      Save\n                    </Button>\n                  </SplitItem>\n                  <SplitItem>\n                    <Button\n                      aria-label='Cancel'\n                      variant='secondary'\n                      type='button'\n                      onClick={ onCancel }>Cancel</Button>\n                  </SplitItem>\n                </Split>\n              </ActionGroup>\n            </StackItem>\n          </Stack>\n        </Form>\n      </Fragment>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        name,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  // addRoles,\n  // fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }}\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n\n  useEffect(() => {\n    // !!!! HERE SHOULD BE fetchRolesForGroup !!!!\n    // fetchRolesForGroup({ ...pagination, name: filterValue });\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const actionResolver = () => (\n    [\n      {\n        title: 'Remove from group',\n        onClick: (_event, _rowId, role) => {\n          removeRoles(uuid, [ role.uuid ]);\n        }\n      }\n    ]);\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRolesToGroup }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    <Link\n      to={ `/groups/detail/${uuid}/roles/add_roles` }\n      key=\"add-to-group\"\n    >\n      <Button\n        variant=\"primary\"\n        aria-label=\"Add a role\"\n      >\n        Add a role\n      </Button>\n    </Link>,\n    {\n      label: 'Remove from group',\n      props: {\n        isDisabled: !selectedRoles || !selectedRoles.length > 0,\n        variant: 'danger',\n        onClick: () => removeRoles(selectedRoles)\n      }\n    }\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-roles' }>\n      <TableToolbarView\n        columns={ columns }\n        isSelectable={ true }\n        createRows={ createRows }\n        data={ roles }\n        filterValue={ filterValue }\n        fetchData={ (config) => fetchRoles(mappedProps(config)) }\n        setFilterValue={ ({ name }) => setFilterValue(name) }\n        isLoading={ isLoading }\n        pagination={ pagination }\n        // !!!! HERE SHOULD BE fetchRolesForGroup !!!!\n        request={ fetchRoles }\n        checkedRows={ selectedRoles }\n        setCheckedItems={ setCheckedItems }\n        titlePlural=\"roles\"\n        titleSingular=\"role\"\n        toolbarButtons={ toolbarButtons }\n        actionResolver={ actionResolver }\n        routes={ routes }\n      />\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => {\n  return {\n    roles: roles.data,\n    pagination: roles.meta,\n    isLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (apiProps) => dispatch(addRolesToGroup(mappedProps(apiProps))),\n    removeRoles: (groupId, roles) => dispatch(removeRolesFromGroup(groupId, roles)),\n    fetchRolesForGroup: (groupId) => dispatch(fetchRolesForGroup(groupId)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = (props) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: 'Group', isActive: true }\n  ];\n\n  const tabItems = [{ eventKey: 0, title: 'Members', name: `/groups/detail/${props.match.params.uuid}/members` },\n    { eventKey: 1, title: 'Roles', name: `/groups/detail/${props.match.params.uuid}/roles` }];\n\n  const fetchData = (apiProps) => {\n    props.fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(props.match.params.uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !props.isFetching && props.group ? props.group.name : undefined }\n          description={ !props.isFetching && props.group ? props.group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${props.match.params.uuid}/members` } /> } />\n      </Switch>\n      { !props.group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ fetchData } /> } />\n  </Fragment>;\n\n  const actionResolver = (_groupData, { rowIndex }) =>\n    rowIndex % 2 === 1 ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    <Link to=\"/groups/add-group\" key=\"add-group\">\n      <Button\n        variant=\"primary\"\n        aria-label=\"Create group\"\n      >\n        Create a group\n      </Button>\n    </Link>,\n    {\n      label: 'Edit group',\n      props: {\n        isDisabled: !(selectedRows.length === 1)\n      },\n      onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n    },\n    {\n      label: 'Delete Group(s)',\n      props: {\n        isDisabled: !selectedRows.length > 0\n      }\n    }\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        name,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USER, FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUser = (state, { payload }) => ({ ...state, selectedUser: payload, isUserDataLoading: false });\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USER}_PENDING`]: setLoadingState,\n  [`${FETCH_USER}_FULFILLED`]: setUser,\n  [`${FETCH_USERS}_PENDIND`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <ContentLoader\n                  height={ 12 }\n                  width={ 300 }\n                  speed={ 2 }\n                  primaryColor=\"#FFFFFF\"\n                  secondaryColor=\"#ecebeb\"\n                  { ...props }>\n                  <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"300\" height=\"12\" />\n                </ContentLoader>\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => (\n  <ContentLoader\n    height={ 21 }\n    width={ 200 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    { ...props }\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n  </ContentLoader>\n);\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: {\n        count: checkedRows.length,\n        items: [{\n          title: 'Select none (0)',\n          onClick: () => {\n            setCheckedItems(() => []);\n          }\n        },\n        {\n          ...!isLoading && data && data.length > 0 ? {\n            title: `Select page (${data.length})`,\n            onClick: () => {\n              setCheckedItems(selectedRows(data, true));\n            }\n          } : {}\n        }],\n        checked: calculateChecked(data, checkedRows),\n        onSelect: (value) => {\n          !isLoading && setCheckedItems(selectedRows(data, value));\n        }\n      }\n    } }\n    filterConfig={ {\n      items: [{\n        label: titleSingular,\n        type: 'text',\n        filterValues: {\n          id: 'filter-by-string',\n          key: 'filter-by-string',\n          placeholder: `Filter by ${titleSingular}`,\n          value: filterValue,\n          onChange: (_e, value) => {\n            setFilterValue({\n              ...pagination,\n              offset: 0,\n              name: value\n            });\n            debouncedFetch(() => fetchData({\n              ...pagination,\n              offset: 0,\n              name: value\n            }));\n          },\n          isDisabled: isLoading\n        }\n      }]\n    } }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: {\n        itemCount: pagination.count,\n        perPage: pagination.limit,\n        page: getCurrentPage(pagination.limit, pagination.offset),\n        onSetPage: (_event, page) => {\n          fetchData({\n            ...pagination,\n            offset: (page - 1) * pagination.limit,\n            name: filterValue\n          });\n        },\n        perPageOptions: [\n          { title: '5', value: 5 },\n          { title: '10', value: 10 },\n          { title: '20', value: 20 },\n          { title: '50', value: 50 }\n        ],\n        onPerPageSelect: (_event, perPage) => {\n          fetchData({\n            ...pagination,\n            offset: 0,\n            limit: perPage,\n            name: filterValue\n          });\n        }\n      }\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: {\n        filters: [{\n          name: filterValue\n        }],\n        onDelete: () => {\n          setFilterValue({\n            ...pagination,\n            offset: 0,\n            name: ''\n          });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            name: ''\n          });\n        }\n      }\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { Button } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  request: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  requests: [],\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n"],"sourceRoot":""}
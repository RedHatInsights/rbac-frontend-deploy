{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/redux/action-types.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/smart-components/user/users.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","jsonpArray","webpackJsonpCallback","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","columns","title","orderBy","createRows","data","expanded","checkedRows","reduce","acc","username","email","first_name","last_name","uuid","cells","selected","Boolean","find","row","UsersList","users","fetchUsers","isLoading","pagination","selectedUsers","setSelectedUsers","props","useState","filterValue","setFilterValue","useEffect","isSelectable","isCompact","borders","fetchData","config","mappedProps","name","noBottom","toggleTemplate","firstIndex","lastIndex","request","setCheckedItems","newSelection","map","label","titlePlural","titleSingular","propTypes","history","PropTypes","shape","goBack","func","isRequired","push","array","bool","searchFilter","string","limit","number","offset","count","defaultProps","defaultCompactSettings","connect","userReducer","isUserDataLoading","meta","dispatch","apiProps","addNotification","RBAC_API_BASE","process","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","getPrincipalApi","getGroupApi","getRoleApi","permission","split","appName","type","operation","Permissions","filter","setConfig","useSelector","state","role","roleReducer","selectedRole","isRecordLoading","shallowEqual","access","filteredRows","includes","className","TextContent","Text","component","TextVariants","h1","slice","Role","useParams","groupUuid","group","groupReducer","selectedGroup","useDispatch","fetchRole","fetchGroup","breadcrumbs","to","loaded","isActive","description","ActionTypes","payload","listPrincipals","then","isLast","currData","Infinity","fetchGroups","a","Promise","all","listGroups","insights","chrome","auth","getUser","groups","getGroup","updateGroup","addGroup","createGroup","newGroup","ret","user_list","addPrincipalToGroup","principals","roles_list","addRoleToGroup","roles","removeGroup","groupId","deleteGroup","deletePrincipalsFromGroup","deletePrincipalFromGroup","join","addPrincipalsToGroup","fetchRolesForGroup","excluded","options","listRolesForGroup","deleteRolesFromGroup","deleteRoleFromGroup","addRolesToGroup","GroupHelper","groupData","notifications","fulfilled","variant","rejected","addMembersToGroup","members","removeMembersFromGroup","fetchAddRolesForGroup","removeRolesFromGroup","defaultSettings","itemCount","numberOfItems","ListLoader","items","aria-label","Array","_item","index","aria-labelledby","dataListCells","size","SkeletonSize","lg","AppPlaceholder","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","style","BreadcrumbPlaceholder","FormItemLoader","createRole","createRoles","fetchRoles","listRoles","fetchRolesWithPolicies","getRole","removeRole","roleId","deleteRole","roleData","RoleHelper","getCurrentPage","Math","floor","entries","debouncedFetch","debouncePromise","callback","calculateChecked","rows","every","some","selectedRows","isSelected","arr","findIndex","Users","isProd","window","href","paddingBottm","id","SummaryContent","formData","values","selectedRoles","Stack","gutter","StackItem","Title","h5","Grid","GridItem","span","p","user","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","SetUsers","h6","Card","RolesList","setSelectedRoles","ExcludedRolesList","addRoles","propsFromState","propsFromDispatch","ownProps","SetRoles","AddGroupWizard","postMethod","closeUrl","setValues","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","withRouter","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","FormSelect","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","EditGroupModal","params","setSelectedGroup","setGroupData","onCancel","schema","fields","TEXT_FIELD","validate","validatorTypes","REQUIRED","TEXTAREA_FIELD","Modal","schemaType","initialValues","renderFormButtons","pristine","valid","submit","form","Button","onClick","RemoveGroupModal","isSmall","actions","opened","principalCount","modified","date","AppTabs","pathname","location","tabItems","activeTab","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","item","Tab","ExpandableContent","parent","fullWidth","AddGroupMembers","isFooterLeftAligned","userList","RemoveModal","text","confirmButtonLabel","Split","SplitItem","isFilled","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","removeModalText","plural","removeMembers","userNames","platform_default","CardBody","Bullseye","is_org_admin","routes","path","render","args","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","multipleMembersSelected","emptyProps","identity","AddGroupRoles","ActionGroup","rolesList","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","Fragment","multipleRolesSelected","reloadWrapper","Group","isFetching","showEdit","setShowEdit","Level","LevelItem","Groups","setSelectedRows","exact","ids","platforms","system","policyCount","ResourceDefinitionsTable","handleChange","editable","resourceDefinitions","definition","isInline","Table","TableVariant","compact","application","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","result","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","applications","attributeFilter","onNext","RemoveRoleModal","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setRecordLoadingState","selectedPolicy","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","selectedUser","policyReducer","policy","getStore","lazy","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","childProps","App","chromeNavAvailable","this","init","setState","identifyApp","unregister","on","domEvent","navId","locale","marginLeft","padding","Component","ReactDOM","store","basename","getBaseName","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","TopToolbar","children","paddingBottom","node","TopToolbarTitle","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","checked","filterConfigBuilder","filterValues","placeholder","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","TableToolbarView","openRow","onCollapse","_index","canSelectAll","_idx","colSpan","Pagination","dropDirection","PlusCircleIcon"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([465,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Username', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers, props }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n    { ...props }\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  props: PropTypes.object\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings,\n  selectedUsers: [],\n  setSelectedUsers: () => undefined\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","export const createRows = (data) => (\n  data.reduce((acc, { permission }) => {\n    const [ appName, type, operation ] = permission.split(':');\n    return ([\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation\n        ]\n      }\n    ]);\n  }, [])\n);\n","import React, { useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-permissions-table-helpers';\nimport './role-permissions.scss';\n\nconst columns = [\n  { title: 'Application' },\n  { title: 'Resource type' },\n  { title: 'Operation' }\n];\n\nconst Permissions = () => {\n  const [ config, setConfig ] = useState({\n    pagination: {\n      limit: 10,\n      offset: 0,\n      count: 0,\n      filter: ''\n    }\n  });\n  const { role, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading\n  }), shallowEqual);\n\n  const { pagination, filter } = config;\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0\n      }\n    });\n  }, [ role ]);\n\n  const filteredRows = (role && role.access) ?\n    (role.access || [])\n    .filter(({ permission }) => permission === '*' || filter ? permission.includes(filter) : true) :\n    [];\n\n  return <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n    <TextContent>\n      <Text component={ TextVariants.h1 }>Permissions</Text>\n    </TextContent>\n    <TableToolbarView\n      columns={ columns }\n      createRows={ createRows }\n      data={ filteredRows.slice(pagination.offset, pagination.offset + pagination.limit) }\n      filterValue={ filter }\n      fetchData={ ({ limit, offset, name }) => setConfig({\n        ...config,\n        filter: name,\n        pagination: {\n          ...config.pagination,\n          limit,\n          offset\n        }\n      }) }\n      setFilterValue={ ({ name }) => setConfig({\n        ...config,\n        filter: name\n      })  }\n      isLoading={ isRecordLoading }\n      pagination={ {\n        ...pagination,\n        count: filteredRows.length\n      } }\n      titlePlural=\"permissions\"\n      titleSingular=\"permission\"\n    />\n  </section>;\n};\n\nexport default Permissions;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup } from '../../redux/actions/group-actions';\n\nconst Role = () => {\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading,\n    ...groupUuid && { group: state.groupReducer.selectedGroup }\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRole(uuid));\n    groupUuid && dispatch(fetchGroup(groupUuid));\n  }, [ uuid, groupUuid ]);\n\n  return <Fragment>\n    <TopToolbar breadcrumbs={ [\n      ...[ groupUuid ? { title: 'User Access Management', to: '/groups' } : { title: 'Roles', to: '/roles' } ],\n      ...groupUuid ? [{\n        title: group && group.name,\n        to: `/groups/detail/${groupUuid}/roles`,\n        isLoading: group && group.loaded\n      }] : [],\n      { title: role && role.name, isActive: true }\n    ] }>\n      <TopToolbarTitle title= { !isRecordLoading && role ? role.name : undefined }\n        description={ !isRecordLoading && role ? role.description : undefined }/>\n    </TopToolbar>\n    { (isRecordLoading || !role) ? <ListLoader/> : <Permissions /> }\n  </Fragment>;\n};\n\nexport default Role;\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  let ret = newGroup;\n\n  if (data.user_list && data.user_list.length > 0) {\n    ret = groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  if (data.roles_list && data.roles_list.length > 0) {\n    ret = groupApi.addRoleToGroup(newGroup.uuid, { roles: data.roles_list });\n  }\n\n  return ret;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, limit, offset, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import React from 'react';\nimport { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport UsersList from '../group/add-group/users-list';\n\nconst Users = () => {\n  const isProd = window.insights.chrome.isProd;\n  const description = (<TextContent>\n    <Text>\n    These are the users in your organization. To add new users to your organization go to{ ' ' }\n      <Text\n        component={ TextVariants.a }\n        href={ `https://www.${isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html` }>\n      user management list.\n      </Text>\n    </Text>\n  </TextContent>);\n\n  return (\n    <Stack >\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle\n            title=\"Users\"\n            description={ description }\n          />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'users' }>\n          <UsersList\n            props={ {\n              isSelectable: false,\n              isCompact: false\n            } }\n          />\n        </Section>\n      </StackItem>\n    </Stack >\n  );\n};\n\nUsers.propTypes = {\n\n};\n\nUsers.defaultProps = {\n\n};\n\nexport default Users;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = {\n      ...formData,\n      user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined,\n      roles_list: selectedRoles ? selectedRoles.map(role => role.uuid) : undefined\n    };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components';\nimport { Button, Modal, Grid, GridItem, TextContent, Text } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl,\n  isOpen,\n  group,\n  onClose\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState(undefined);\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [ group ]);\n\n  const onSubmit = data => {\n    const user_data = { ...data };\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    onClose();\n    push(closeUrl);\n  };\n\n  const schema = {\n    fields: [{\n      name: 'name',\n      label: 'Name',\n      component: componentTypes.TEXT_FIELD,\n      validate: [{\n        type: validatorTypes.REQUIRED\n      }]\n    }, {\n      name: 'description',\n      label: 'Description',\n      component: componentTypes.TEXTAREA_FIELD\n    }]\n  };\n\n  // eslint-disable-next-line react/prop-types\n  const formButtons = ({ pristine, valid, form: { submit }}) => {\n    return (\n      <div>\n        <Button isDisabled={ pristine || !valid } onClick={ submit } variant=\"primary\">Submit</Button>\n        <Button variant='link' onClick={ onCancel }>Cancel</Button>\n      </div>\n    );\n  };\n\n  return (\n    <Modal\n      isLarge\n      width={ '50%' }\n      title={ 'Edit group\\'s information' }\n      isOpen={ isOpen }\n      onClose={ onCancel }\n    > { selectedGroup\n        ?\n        <Grid gutter=\"md\">\n          <TextContent>\n            <Text>\n              { `Make any changes to ${selectedGroup.name} group.` }\n            </Text>\n          </TextContent>\n          <GridItem>\n            <FormRenderer\n              schema={ schema }\n              schemaType=\"mozilla\"\n              onSubmit={ onSubmit }\n              formContainer=\"modal\"\n              initialValues={ { ...selectedGroup } }\n              renderFormButtons={ formButtons }\n            />\n          </GridItem>\n        </Grid>\n        : <Skeleton/>\n      }\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object.isRequired,\n  inputValue: PropTypes.string,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n  isOpen: PropTypes.bool,\n  group: PropTypes.object,\n  onClose: PropTypes.func\n\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod([ id ])).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissable: true,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '40%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n      <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Modal,\n  Button,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel }) => {\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default RemoveModal;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const removeModalText = (name, group, plural) => (plural\n    ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n    : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n  );\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username, group.name, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add user\"\n          >\n        Add user\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].name,\n                group.name,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          group.platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ principals }\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              request={ fetchGroup }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              titlePlural=\"principals\"\n              titleSingular=\"principal\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ () => fetchGroup(uuid) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n              emptyProps={ { title: 'There are no members in this group', description: [ 'Add a user to configure user access.', '' ]} }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  name\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ `Add roles to ${name} group` }\n      width={ '70%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently in your group.</b>\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  isDisabled={ selectedRoles.length === 0 }\n                  onClick={ onSubmit }\n                >\n                      Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/groups/detail/${groupUuid}/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role['role-name'].title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        name={ name }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add role\"\n          >\n        Add role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove roles?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(name, multipleRolesSelected ? selectedRoles.length : selectedRoles[0].label, multipleRolesSelected)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ (...props) => createRows(uuid, ...props) }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ config => fetchRolesForGroup(config)(uuid) }\n          setFilterValue={ ({ name }) => setFilterValue(name) }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          request={ fetchRolesForGroup(pagination) }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n          emptyProps={ { title: 'There are no roles in this group', description: [ 'Add a role to configure user access.', '' ]} }\n\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (pagination) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, pagination, options)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Button, Level, LevelItem } from '@patternfly/react-core';\nimport EditGroup from './edit-group-modal';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n  const [ showEdit, setShowEdit ] = useState(false);\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <Level>\n          <LevelItem>\n            <TopToolbarTitle title={ !isFetching && group ? group.name : undefined }\n              description={ !isFetching && group ? group.description : undefined } />\n            <AppTabs tabItems={ tabItems } />\n          </LevelItem>\n\n          <LevelItem>\n            <Button onClick={ () => setShowEdit(true) } variant='secondary'>Edit Group</Button>\n          </LevelItem>\n          <EditGroup\n            isOpen={ showEdit }\n            group={ group }\n            closeUrl={ `group/detail/${uuid}` }\n            onClose={ () => setShowEdit(false) }\n            postMethod={ () => {\n              fetchData(uuid);\n              setShowEdit(false);\n            }\n            }\n          />\n\n        </Level>\n\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } isOpen/> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ (ids) => {\n      fetchData();\n      setSelectedRows(selectedRows.filter(row => (!ids.includes(row.uuid))));\n      setFilterValue('');\n    } } /> } />\n  </Fragment>;\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:groupUuid/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      /*eslint-disable camelcase*/\n      is_org_admin: PropTypes.bool\n      /*eslint-enable camelcase*/\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: { addRoles: {}},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { ...state.selectedGroup, loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...state.selectedGroup, ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nconst setAddRolesLoading = state => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false }}\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { roles: payload.data, pagination: payload.meta, loaded: true }}\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\nconst Users = lazy(() => import('./smart-components/user/users'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles',\n  users: '/users'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <InsightsRoute path={ paths.users } component={ Users } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    const { history } = this.props;\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n    this.unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unregister && this.unregister();\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md top-toolbar-description\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = ''\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ PlusCircleIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n          { ...emptyProps }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n"],"sourceRoot":""}
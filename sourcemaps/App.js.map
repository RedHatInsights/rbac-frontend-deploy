{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/redux/action-types.js"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","jsonpArray","webpackJsonpCallback","AppTabs","push","history","pathname","location","tabItems","activeTab","find","name","includes","className","activeKey","eventKey","onSelect","_event","tabIndex","map","item","title","propTypes","PropTypes","shape","string","isRequired","func","array","withRouter","RBAC_API_BASE","process","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","getPrincipalApi","getGroupApi","getRoleApi","createRows","data","reduce","acc","permission","split","appName","type","operation","cells","columns","Permissions","useState","pagination","limit","offset","count","filter","config","setConfig","useSelector","state","role","roleReducer","selectedRole","isRecordLoading","shallowEqual","useEffect","access","filteredRows","TextContent","Text","component","TextVariants","h1","slice","filterValue","fetchData","setFilterValue","isLoading","titlePlural","titleSingular","Role","useParams","uuid","groupUuid","group","groupReducer","selectedGroup","dispatch","useDispatch","fetchRole","fetchGroup","breadcrumbs","to","loaded","isActive","description","fetchGroups","a","orderBy","Promise","all","listGroups","insights","chrome","auth","getUser","groups","getGroup","updateGroup","members_list","principals","user","username","addUsers","user_list","removeUsers","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","createGroup","newGroup","removeGroup","groupId","deleteGroup","deletePrincipalsFromGroup","users","addPrincipalsToGroup","fetchRolesForGroup","excluded","options","listRolesForGroup","deleteRolesFromGroup","roles","deleteRoleFromGroup","addRolesToGroup","addRoleToGroup","ActionTypes","payload","GroupHelper","apiProps","groupData","meta","notifications","fulfilled","variant","rejected","addMembersToGroup","members","removeMembersFromGroup","fetchAddRolesForGroup","removeRolesFromGroup","defaultSettings","itemCount","numberOfItems","defaultCompactSettings","ListLoader","items","props","aria-label","Array","_item","index","aria-labelledby","dataListCells","size","SkeletonSize","lg","number","defaultProps","AppPlaceholder","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","style","BreadcrumbPlaceholder","FormItemLoader","createRole","createRoles","fetchRoles","listRoles","fetchRolesWithPolicies","getRole","removeRole","roleId","deleteRole","roleData","RoleHelper","getCurrentPage","Math","floor","mappedProps","entries","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","every","row","some","selectedRows","newSelection","isSelected","arr","findIndex","fetchUsers","listPrincipals","then","isLast","currData","Infinity","SummaryContent","formData","values","selectedUsers","selectedRoles","Stack","gutter","StackItem","Title","h5","Grid","GridItem","span","p","label","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","expanded","checkedRows","email","first_name","last_name","Boolean","UsersList","setSelectedUsers","isSelectable","isCompact","borders","noBottom","toggleTemplate","firstIndex","lastIndex","request","setCheckedItems","goBack","bool","searchFilter","connect","userReducer","isUserDataLoading","addNotification","SetUsers","h6","Card","RolesList","setSelectedRoles","ExcludedRolesList","addRoles","propsFromState","propsFromDispatch","ownProps","SetRoles","AddGroupWizard","postMethod","closeUrl","setValues","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","FormSelect","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","onCancel","schema","properties","required","Modal","minWidth","sm","schemaType","initialValues","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","RemoveGroupModal","isSmall","actions","Button","onClick","opened","principalCount","modified","date","ExpandableContent","parent","fullWidth","AddGroupMembers","isFooterLeftAligned","userList","RemoveModal","text","confirmButtonLabel","Split","SplitItem","isFilled","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","removeModalText","plural","removeMembers","userNames","platform_default","CardBody","Bullseye","is_org_admin","routes","path","render","args","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","multipleMembersSelected","identity","AddGroupRoles","ActionGroup","rolesList","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","Fragment","multipleRolesSelected","reloadWrapper","Group","isFetching","Groups","setSelectedRows","exact","_groupData","paddingBottm","platforms","system","policyCount","ResourceDefinitionsTable","handleChange","editable","resourceDefinitions","definition","isInline","Table","TableVariant","compact","application","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","result","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","applications","attributeFilter","onNext","RemoveRoleModal","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setLoadingState","FETCH_USER","selectedUser","FETCH_USERS","setRecordLoadingState","FETCH_GROUPS","FETCH_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","RESET_SELECTED_GROUP","FETCH_GROUP_POLICIES","FETCH_POLICY","selectedPolicy","FETCH_ROLE","FETCH_ROLES","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","policyReducer","policy","getStore","lazy","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","childProps","App","chromeNavAvailable","init","setState","identifyApp","this","locale","marginLeft","padding","Component","ReactDOM","store","basename","getBaseName","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","checked","filterConfigBuilder","filterValues","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","node","TableToolbarView","openRow","onCollapse","_index","canSelectAll","_idx","colSpan","Pagination","dropDirection","UsersIcon","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","TopToolbar","children","paddingBottom","Level","TopToolbarTitle","LevelItem","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","ADD_ROLE","REMOVE_ROLE","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([422,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","export const createRows = (data) => (\n  data.reduce((acc, { permission }) => {\n    const [ appName, type, operation ] = permission.split(':');\n    return ([\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation\n        ]\n      }\n    ]);\n  }, [])\n);\n","import React, { useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-permissions-table-helpers';\nimport './role-permissions.scss';\n\nconst columns = [\n  { title: 'Application' },\n  { title: 'Resource type' },\n  { title: 'Operation' }\n];\n\nconst Permissions = () => {\n  const [ config, setConfig ] = useState({\n    pagination: {\n      limit: 10,\n      offset: 0,\n      count: 0,\n      filter: ''\n    }\n  });\n  const { role, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading\n  }), shallowEqual);\n\n  const { pagination, filter } = config;\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0\n      }\n    });\n  }, [ role ]);\n\n  const filteredRows = (role && role.access) ?\n    (role.access || [])\n    .filter(({ permission }) => permission === '*' || filter ? permission.includes(filter) : true) :\n    [];\n\n  return <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n    <TextContent>\n      <Text component={ TextVariants.h1 }>Permissions</Text>\n    </TextContent>\n    <TableToolbarView\n      columns={ columns }\n      createRows={ createRows }\n      data={ filteredRows.slice(pagination.offset, pagination.offset + pagination.limit) }\n      filterValue={ filter }\n      fetchData={ ({ limit, offset, name }) => setConfig({\n        ...config,\n        filter: name,\n        pagination: {\n          ...config.pagination,\n          limit,\n          offset\n        }\n      }) }\n      setFilterValue={ ({ name }) => setConfig({\n        ...config,\n        filter: name\n      })  }\n      isLoading={ isRecordLoading }\n      pagination={ {\n        ...pagination,\n        count: filteredRows.length\n      } }\n      titlePlural=\"permissions\"\n      titleSingular=\"permission\"\n    />\n  </section>;\n};\n\nexport default Permissions;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup } from '../../redux/actions/group-actions';\n\nconst Role = () => {\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading,\n    ...groupUuid && { group: state.groupReducer.selectedGroup }\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRole(uuid));\n    groupUuid && dispatch(fetchGroup(groupUuid));\n  }, [ uuid, groupUuid ]);\n\n  return <Fragment>\n    <TopToolbar breadcrumbs={ [\n      ...[ groupUuid ? { title: 'User Access Management', to: '/groups' } : { title: 'Roles', to: '/roles' } ],\n      ...groupUuid ? [{\n        title: group && group.name,\n        to: `/groups/detail/${groupUuid}/roles`,\n        isLoading: group && group.loaded\n      }] : [],\n      { title: role && role.name, isActive: true }\n    ] }>\n      <TopToolbarTitle title= { !isRecordLoading && role ? role.name : undefined }\n        description={ !isRecordLoading && role ? role.description : undefined }/>\n    </TopToolbar>\n    { (isRecordLoading || !role) ? <ListLoader/> : <Permissions /> }\n  </Fragment>;\n};\n\nexport default Role;\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  if (data.user_list && data.user_list.length > 0) {\n    return groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  return newGroup;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, limit, offset, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUser = () => ({\n  type: ActionTypes.FETCH_USER,\n  payload: new Promise(resolve => {\n    resolve(UserHelper.fetchUser());\n  })\n});\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = { ...formData, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod()).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissable: true,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '40%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n      <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Modal,\n  Button,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel }) => {\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default RemoveModal;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const removeModalText = (name, group, plural) => (plural\n    ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n    : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n  );\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username, group.name, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].name,\n                group.name,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          group.platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ principals }\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              request={ fetchGroup }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              titlePlural=\"principals\"\n              titleSingular=\"principal\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ () => fetchGroup(uuid) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  name\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ `Add roles to ${name} group` }\n      width={ '70%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently in your group.</b>\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  isDisabled={ selectedRoles.length === 0 }\n                  onClick={ onSubmit }\n                >\n                      Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/groups/detail/${groupUuid}/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role['role-name'].title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        name={ name }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add a role\"\n          >\n        Add a role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove roles?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(name, multipleRolesSelected ? selectedRoles.length : selectedRoles[0].label, multipleRolesSelected)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ (...props) => createRows(uuid, ...props) }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ config => fetchRolesForGroup(config)(uuid) }\n          setFilterValue={ ({ name }) => setFilterValue(name) }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          request={ fetchRolesForGroup(pagination) }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (pagination) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, pagination, options)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !isFetching && group ? group.name : undefined }\n          description={ !isFetching && group ? group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ fetchData } /> } />\n  </Fragment>;\n\n  const actionResolver = (_groupData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:groupUuid/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USER, FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUser = (state, { payload }) => ({ ...state, selectedUser: payload, isUserDataLoading: false });\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USER}_PENDING`]: setLoadingState,\n  [`${FETCH_USER}_FULFILLED`]: setUser,\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: { addRoles: {}},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { ...state.selectedGroup, loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...state.selectedGroup, ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nconst setAddRolesLoading = state => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false }}\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { roles: payload.data, pagination: payload.meta, loaded: true }}\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = ''\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/redux/action-types.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/smart-components/user/users.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/default-group-change-modal.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/remove-role-modal.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/group-row-wrapper.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/presentational-components/states/DeniedState.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","jsonpArray","webpackJsonpCallback","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUPS","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_MEMBERS_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","columns","title","orderBy","createRows","data","expanded","checkedRows","reduce","acc","username","email","first_name","last_name","uuid","cells","selected","Boolean","find","row","UsersList","users","fetchUsers","isLoading","pagination","selectedUsers","setSelectedUsers","props","useState","filterValue","setFilterValue","useEffect","isSelectable","isCompact","borders","fetchData","config","mappedProps","name","noBottom","toggleTemplate","firstIndex","lastIndex","setCheckedItems","newSelection","map","label","filterPlaceholder","titlePlural","titleSingular","propTypes","history","PropTypes","shape","goBack","func","isRequired","push","array","bool","searchFilter","string","limit","number","offset","count","defaultProps","defaultCompactSettings","connect","userReducer","isUserDataLoading","meta","dispatch","apiProps","addNotification","RBAC_API_BASE","process","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","getPrincipalApi","getGroupApi","getRoleApi","permission","modified","split","appName","type","operation","date","transforms","cellWidth","Permissions","filter","setConfig","useSelector","state","role","roleReducer","selectedRole","isRecordLoading","shallowEqual","access","filteredRows","includes","className","TextContent","Text","component","TextVariants","h1","slice","Role","useParams","groupUuid","group","groupReducer","selectedGroup","useDispatch","fetchRole","fetchGroup","breadcrumbs","to","loaded","isActive","description","ActionTypes","payload","listPrincipals","then","isLast","currData","Infinity","fetchGroups","a","Promise","all","listGroups","insights","chrome","auth","getUser","groups","getGroup","updateGroup","addGroup","createGroup","newGroup","ret","user_list","addPrincipalToGroup","principals","roles_list","addRoleToGroup","roles","removeGroups","uuids","deleteGroup","deletePrincipalsFromGroup","groupId","deletePrincipalFromGroup","join","addPrincipalsToGroup","fetchRolesForGroup","excluded","options","listRolesForGroup","deleteRolesFromGroup","deleteRoleFromGroup","addRolesToGroup","fetchPrincipalsForGroup","usernames","getPrincipalsFromGroup","query","GroupHelper","groupData","notifications","fulfilled","variant","dismissDelay","dismissable","rejected","addMembersToGroup","members","removeMembersFromGroup","fetchMembersForGroup","fetchAddRolesForGroup","removeRolesFromGroup","getCurrentPage","Math","floor","entries","debouncedFetch","debouncePromise","callback","calculateChecked","rows","every","some","selectedRows","isSelected","arr","findIndex","firstUpperCase","text","charAt","toUpperCase","ListLoader","items","aria-label","Array","_item","index","aria-labelledby","dataListCells","size","SkeletonSize","lg","AppPlaceholder","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","style","BreadcrumbPlaceholder","FormItemLoader","createRole","createRoles","fetchRoles","listRoles","fetchRolesWithPolicies","getRole","removeRole","roleId","deleteRole","roleData","RoleHelper","Users","isProd","window","href","paddingBottm","id","SummaryContent","formData","values","selectedRoles","Stack","gutter","StackItem","Title","headingLevel","h6","Grid","GridItem","span","h5","p","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","SetUsers","Card","RolesList","setSelectedRoles","ExcludedRolesList","addRoles","defaultSettings","propsFromState","propsFromDispatch","ownProps","SetRoles","AddGroupWizard","postMethod","closeUrl","setValues","isGroupInfoValid","useHistory","steps","enableNext","nextButtonText","onSubmit","user_data","user","Wizard","isLarge","isCompactNav","isOpen","onClose","onSave","inputValue","match","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","FormSelect","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","EditGroupModal","setSelectedGroup","useRouteMatch","setGroupData","params","onCancel","schema","fields","TEXT_FIELD","validate","validatorTypes","REQUIRED","TEXTAREA_FIELD","Modal","schemaType","initialValues","renderFormButtons","pristine","valid","submit","form","Button","onClick","RemoveGroupModal","groupsUuid","isModalOpen","checked","setChecked","multipleGroups","isSmall","actions","isFooterLeftAligned","Checkbox","isChecked","opened","roleCount","principalCount","isPlatformDefault","platform_default","AppTabs","pathname","location","tabItems","isHeader","activeTab","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","item","Tab","withRouter","_opened","AddGroupMembers","userList","RemoveModal","confirmButtonLabel","withCheckbox","Split","SplitItem","isFilled","selector","userIdentity","identity","groupName","removeModalText","plural","GroupPrincipals","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","removeMembers","userNames","CardBody","Bullseye","is_org_admin","routes","path","render","args","actionResolver","_rowId","principal","toolbarButtons","multipleMembersSelected","emptyProps","DefaultGroupChange","AddGroupRoles","isDefault","isChanged","showConfirmModal","setShowConfirmModal","rolesList","RemoveRoles","GroupRoles","removeRoles","onDefaultGroupChanged","descriptionValue","setDescriptionValue","selectedAddRoles","setSelectedAddRoles","Fragment","multipleRolesSelected","textFilters","reloadWrapper","system","Group","isFetching","showEdit","setShowEdit","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","display","Popover","bodyContent","Alert","isInline","action","AlertActionCloseButton","GroupRowWrapper","RowWrapper","clsx","sortable","Groups","setSelectedRows","removeGroupsList","setRemoveGroupsList","exact","ids","paddingBottom","rowWrapper","setRecordLoadingState","policies","selectedPolicy","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","selectedUser","policyReducer","policy","getStore","lazy","Roles","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","childProps","DeniedState","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","LockIcon","EmptyStateBody","referrer","back","App","chromeNavAvailable","userReady","isAdmin","this","init","setState","identifyApp","unregister","on","domEvent","navId","locale","marginLeft","padding","Component","ReactDOM","store","basename","getBaseName","accessCount","ResourceDefinitionsTable","handleChange","editable","resourceDefinitions","definition","Table","TableVariant","compact","application","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","result","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","applications","attributeFilter","onNext","RemoveRoleModal","userEntitlements","RemoveRole","userAllowed","isBeta","cost_management","platforms","oneOfType","entitlements","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","TopToolbar","children","PageHeader","node","TopToolbarTitle","itemCount","numberOfItems","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","filterConfigBuilder","filterItems","filterValues","placeholder","_e","filterBy","curr","activeFiltersConfigBuilder","filters","category","chips","onDelete","isAll","deleted","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","ConditionalFilter","isCollapsible","EmptyWithFilter","SearchIcon","TableToolbarView","areActionsDisabled","sortBy","openRow","direction","sortByState","setSortByState","onCollapse","_index","PlusCircleIcon","canSelectAll","_idx","fullWidth","EmptyStatePrimary","colSpan","onSort","e","Pagination","dropDirection"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([479,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUPS = 'REMOVE_GROUPS';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_MEMBERS_FOR_GROUP = 'FETCH_MEMBERS_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Username', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers, props }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, username, label }) => ({ uuid, label: label || name || username }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    filterPlaceholder=\"username\"\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n    { ...props }\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  props: PropTypes.object\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings,\n  selectedUsers: [],\n  setSelectedUsers: () => undefined\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { permission, modified }) => {\n    const [ appName, type, operation ] = permission.split(':');\n    return ([\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation,\n          <Fragment key={ `${appName}-modified` }>\n            <DateFormat date={ modified } type=\"relative\" />\n          </Fragment>\n        ]\n      }\n    ]);\n  }, [])\n);\n","import React, { useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-permissions-table-helpers';\nimport { cellWidth } from '@patternfly/react-table';\nimport './role-permissions.scss';\n\nconst columns = [\n  { title: 'Application' },\n  { title: 'Resource type' },\n  { title: 'Operation' },\n  { title: 'Last commit', transforms: [ cellWidth(15) ]}\n];\n\nconst Permissions = () => {\n  const [ config, setConfig ] = useState({\n    pagination: {\n      limit: 10,\n      offset: 0,\n      count: 0,\n      filter: ''\n    }\n  });\n  const { role, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading\n  }), shallowEqual);\n\n  const { pagination, filter } = config;\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0\n      }\n    });\n  }, [ role ]);\n\n  const filteredRows = (role && role.access) ?\n    (role.access || [])\n    .filter(({ permission }) => permission === '*' || filter ? permission.includes(filter) : true)\n    .map(acc => ({ ...acc, modified: role.modified })) :\n    [];\n\n  return <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n    <TextContent>\n      <Text component={ TextVariants.h1 }>Permissions</Text>\n    </TextContent>\n    <TableToolbarView\n      columns={ columns }\n      createRows={ createRows }\n      data={ filteredRows.slice(pagination.offset, pagination.offset + pagination.limit) }\n      filterValue={ filter }\n      fetchData={ ({ limit, offset, name }) => setConfig({\n        ...config,\n        filter: name,\n        pagination: {\n          ...config.pagination,\n          limit,\n          offset\n        }\n      }) }\n      setFilterValue={ ({ name }) => setConfig({\n        ...config,\n        filter: name\n      })  }\n      isLoading={ isRecordLoading }\n      pagination={ {\n        ...pagination,\n        count: filteredRows.length\n      } }\n      titlePlural=\"permissions\"\n      titleSingular=\"permission\"\n    />\n  </section>;\n};\n\nexport default Permissions;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup } from '../../redux/actions/group-actions';\n\nconst Role = () => {\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading,\n    ...groupUuid && { group: state.groupReducer.selectedGroup }\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRole(uuid));\n    groupUuid && dispatch(fetchGroup(groupUuid));\n  }, [ uuid, groupUuid ]);\n\n  return <Fragment>\n    <TopToolbar breadcrumbs={ [\n      ...[ groupUuid ? { title: 'Groups', to: '/groups' } : { title: 'Roles', to: '/roles' } ],\n      ...groupUuid ? [{\n        title: group && group.name,\n        to: `/groups/detail/${groupUuid}/roles`,\n        isLoading: group && group.loaded\n      }] : [],\n      { title: role && role.name, isActive: true }\n    ] }>\n      <TopToolbarTitle title= { !isRecordLoading && role ? role.name : undefined }\n        description={ !isRecordLoading && role ? role.description : undefined }/>\n    </TopToolbar>\n    { (isRecordLoading || !role) ? <ListLoader/> : <Permissions /> }\n  </Fragment>;\n};\n\nexport default Role;\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, undefined, undefined, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  let ret = newGroup;\n\n  if (data.user_list && data.user_list.length > 0) {\n    ret = groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  if (data.roles_list && data.roles_list.length > 0) {\n    ret = groupApi.addRoleToGroup(newGroup.uuid, { roles: data.roles_list });\n  }\n\n  return ret;\n}\n\nexport async function removeGroups(uuids) {\n  return await Promise.all(uuids.map((uuid) => groupApi.deleteGroup(uuid)));\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset, name, description }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, name, description, limit, offset, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\nexport async function fetchPrincipalsForGroup(groupId, usernames, pagination, options = {}) {\n  return await groupApi.getPrincipalsFromGroup(groupId, usernames, {\n    ...options,\n    query: {\n      ...options.query,\n      ...pagination\n    }\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroups = (uuids) => ({\n  type: ActionTypes.REMOVE_GROUPS,\n  payload: GroupHelper.removeGroups(uuids),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        dismissDelay: 8000,\n        dismissable: false,\n        title: uuids.length > 1 ? 'Groups deleted successfully' :\n          'Group deleted successfully'\n      },\n      rejected: {\n        variant: 'danger',\n        dismissDelay: 8000,\n        dismissable: false,\n        title: uuids.length > 1 ? 'There was an error deleting the groups. Please try again.' :\n          'There was an error deleting the group. Please try again.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchMembersForGroup = (groupId, usernames, options) => ({\n  type: ActionTypes.FETCH_MEMBERS_FOR_GROUP,\n  payload: GroupHelper.fetchPrincipalsForGroup(groupId, usernames, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n\nexport const firstUpperCase = (text) => text.charAt(0).toUpperCase() + text.slice(1);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import React from 'react';\nimport { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport UsersList from '../group/add-group/users-list';\n\nconst Users = () => {\n  const isProd = window.insights.chrome.isProd;\n  const description = (<TextContent>\n    <Text>\n    These are the users in your organization. To add new users to your organization, go to{ ' ' }\n      <Text\n        component={ TextVariants.a }\n        href={ `https://www.${isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html` }>\n      user management list.\n      </Text>\n    </Text>\n  </TextContent>);\n\n  return (\n    <Stack >\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle\n            title=\"Users\"\n            description={ description }\n          />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'users' }>\n          <UsersList\n            props={ {\n              isSelectable: false,\n              isCompact: false\n            } }\n          />\n        </Section>\n      </StackItem>\n    </Stack >\n  );\n};\n\nUsers.propTypes = {\n\n};\n\nUsers.defaultProps = {\n\n};\n\nexport default Users;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Title headingLevel=\"h4\" size=\"xl\"> Add members to the group </Title>\n                <Text\n                  className=\"pf-u-mt-0\"\n                  component={ TextVariants.h6 }>\n                 Confirm the details for this group, or click Back to revise.\n                </Text>\n              </TextContent>\n            </StackItem>\n            <StackItem className=\"ins-c-rbac__summary\">\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading content\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading content\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading content\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { selectedUsers.map((role, index) => <Text className=\"pf-u-mb-0\" key={ index }>{ role.label }</Text>) }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading content\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { selectedRoles.map((role, index) => <Text className= \"pf-u-mb-0\" key={ index }>{ role.label }</Text>)  }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Title headingLevel=\"h4\" size=\"xl\"> Add members to the group </Title>\n              <Text\n                className=\"pf-u-mt-0\"\n                component={ TextVariants.h6 }>\n                { description || 'Select users from your organization to add to this group.' }\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Title headingLevel=\"h4\" size=\"xl\"> Assign roles to the group </Title>\n              <Text\n                className=\"pf-u-mt-0\"\n                component={ TextVariants.h6 }>\n                { description || 'Select one or more roles to add to this group.' }\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const history = useHistory();\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = {\n      ...formData,\n      user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined,\n      roles_list: selectedRoles ? selectedRoles.map(role => role.uuid) : undefined\n    };\n    await addGroup(user_data);\n    postMethod();\n    history.push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding group was cancelled by the user.'\n    });\n    history.push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      isCompactNav\n      title=\"Create and configure a group\"\n      description=\"To give users access permissions, create a group and assign roles to it.\"\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components';\nimport { Button, Modal, Grid, GridItem, TextContent, Text } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nconst EditGroupModal = ({\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl,\n  isOpen,\n  group,\n  onClose\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState(undefined);\n\n  const history = useHistory();\n  const match = useRouteMatch('/groups/edit/:id');\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    match && fetchGroup(match.params.id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [ group ]);\n\n  const onSubmit = data => {\n    const user_data = { ...data };\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(history.push(closeUrl)) :\n      updateGroup(user_data).then(() => history.push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      dismissable: false,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    onClose();\n    history.push(closeUrl);\n  };\n\n  const schema = {\n    fields: [{\n      name: 'name',\n      label: 'Name',\n      component: componentTypes.TEXT_FIELD,\n      validate: [{\n        type: validatorTypes.REQUIRED\n      }]\n    }, {\n      name: 'description',\n      label: 'Description',\n      component: componentTypes.TEXTAREA_FIELD\n    }]\n  };\n\n  // eslint-disable-next-line react/prop-types\n  const formButtons = ({ pristine, valid, form: { submit }}) => {\n    return (\n      <div>\n        <Button isDisabled={ pristine || !valid } onClick={ submit } variant=\"primary\">Submit</Button>\n        <Button variant='link' onClick={ onCancel }>Cancel</Button>\n      </div>\n    );\n  };\n\n  return (\n    <Modal\n      isLarge\n      width={ '50%' }\n      title={ 'Edit group\\'s information' }\n      isOpen={ isOpen }\n      onClose={ onCancel }\n    > { selectedGroup\n        ?\n        <Grid gutter=\"md\">\n          <TextContent>\n            <Text>\n              { `Make any changes to ${selectedGroup.name} group.` }\n            </Text>\n          </TextContent>\n          <GridItem>\n            <FormRenderer\n              schema={ schema }\n              schemaType=\"mozilla\"\n              onSubmit={ onSubmit }\n              formContainer=\"modal\"\n              initialValues={ { ...selectedGroup } }\n              renderFormButtons={ formButtons }\n            />\n          </GridItem>\n        </Grid>\n        : <Skeleton/>\n      }\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null\n};\n\nEditGroupModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n  isOpen: PropTypes.bool,\n  group: PropTypes.object,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Text, TextContent, Checkbox } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  removeGroups,\n  group,\n  isLoading,\n  fetchGroup,\n  groupsUuid,\n  isModalOpen,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const history = useHistory();\n\n  const [ checked, setChecked ] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids).then(() => postMethod(uuids)).then(history.push(closeUrl));\n  };\n\n  const onCancel = () => history.goBack();\n\n  return (\n    <Modal\n      isOpen={ isModalOpen }\n      isSmall\n      title = {\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n        &nbsp; { multipleGroups ? 'Delete groups?' : 'Delete group?' }\n        </Text> }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"submit\" isDisabled={ !checked }  variant=\"danger\" type=\"button\" onClick={ onSubmit }>\n          { multipleGroups ? 'Delete groups' : 'Delete group' }\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <TextContent>\n        { multipleGroups ?\n          <Text>\n          Deleting these <b>{ groupsUuid.length }</b> groups removes all roles\n          from the members inside the group.\n          </Text> :\n          isLoading ?\n            <FormItemLoader/> :\n            <Text>\n          Deleting the <b>{ group.name }</b> group removes all roles\n          from the members inside the group.\n            </Text>\n        }\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={ checked }\n        onChange={ ()=> setChecked(!checked) }\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroups\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, roleCount, principalCount, modified, platform_default: isPlatformDefault }) => ([\n    ...acc,\n    {\n      uuid,\n      isPlatformDefault,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        roleCount,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems, isHeader }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className={ isHeader ? `ins-rbac-page-header__tabs` : '' } activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool\n};\n\nexport default withRouter(AppTabs);\n","export const createRows = (data, _opened, checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [ username, email, last_name, first_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        dismissDelay: 8000,\n        dismissable: false,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      dismissable: false,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '40%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n      <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Button,\n  Checkbox,\n  Modal,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, withCheckbox }) => {\n  const [ checked, setChecked ] = useState(false);\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          isDisabled={ withCheckbox && !checked }\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n\n        </SplitItem>\n      </Split>\n      { withCheckbox\n        ? <Checkbox\n          isChecked={ checked }\n          onChange={ () => setChecked(!checked) }\n          label=\"I understand, and I want to continue.\"\n          id=\"remove-modal-check\"\n          className=\"pf-u-mt-lg\"\n        />\n        : null }\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  withCheckbox: PropTypes.bool\n};\n\nRemoveModal.defaultProps = {\n  withCheckbox: false\n};\n\nexport default RemoveModal;\n","/* eslint-disable camelcase */\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, Route, useParams } from 'react-router-dom';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchMembersForGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup } from '../../../redux/actions/group-actions';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [\n  { title: 'Username' },\n  'Email',\n  'Last name',\n  'First name'\n];\n\nconst selector = ({ groupReducer: { groups, selectedGroup }}) => ({\n  principals: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  userIdentity: groups.identity,\n  groupName: selectedGroup.name,\n  platform_default: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading\n});\n\nconst removeModalText = (name, group, plural) => (plural\n  ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n  : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n);\n\nconst GroupPrincipals = () => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const { uuid } = useParams();\n  const {\n    principals,\n    pagination,\n    groupName,\n    userIdentity,\n    isLoading,\n    platform_default\n  } = useSelector(selector, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options) => {\n    dispatch(fetchMembersForGroup(uuid, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(uuid, userNames)).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Remove',\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username.title ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username.title, groupName, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].name,\n                groupName,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ principals }\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              filterPlaceholder=\"username\"\n              titlePlural=\"members\"\n              titleSingular=\"member\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ ({ limit, offset, name }) => fetchData(name, { limit, offset }) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n              emptyProps={ { title: 'There are no members in this group', description: [ 'Add a user to configure user access.', '' ]} }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default GroupPrincipals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\n\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  return (<RemoveModal\n    text={\n      <TextContent>\n        <Text>\n          Once you edit the <b>Default user access</b> group, the system will no longer update it with new default access roles.\n              The group name will change to <b>Custom default user access</b>.\n        </Text>\n      </TextContent> }\n    title={ 'Warning' }\n    withCheckbox\n    isOpen={ isOpen }\n    confirmButtonLabel={ 'Continue' }\n    onClose={ onClose }\n    onSubmit={ onSubmit }\n  />);\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default DefaultGroupChange;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\nimport DefaultGroupChange from './default-group-change-modal';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  name,\n  isDefault,\n  isChanged\n}) => {\n  const [ showConfirmModal, setShowConfirmModal ] = useState(true);\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (isDefault && !isChanged && showConfirmModal\n    ? <DefaultGroupChange\n      isOpen={ showConfirmModal }\n      onClose={ onCancel }\n      onSubmit={ () => setShowConfirmModal(false) }\n    />\n    : <Modal\n      title=\"Add roles to group\"\n      width={ '70%' }\n      isOpen\n      onClose={ () => {\n        onCancel();\n        setShowConfirmModal(true);\n      } }\n      actions={ [\n        <Button\n          aria-label=\"Save\"\n          variant=\"primary\"\n          key=\"confirm\"\n          isDisabled={ selectedRoles.length === 0 }\n          onClick={ onSubmit }>\n            Add to group\n        </Button>,\n        <Button\n          aria-label='Cancel'\n          variant='link'\n          key=\"cancel\"\n          onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently </b> in <b> { name }</b>.\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [ showConfirmModal, setShowConfirmModal ] = useState(true);\n\n  return (isDefault && !isChanged && showConfirmModal\n    ? <DefaultGroupChange\n      isOpen={ showConfirmModal && isOpen }\n      onClose={ () => {\n        onClose();\n      }\n      }\n      onSubmit={ () => {\n        setShowConfirmModal(false);\n      } }\n    />\n    : <RemoveModal\n      text={ text }\n      title={ title }\n      isOpen={ isOpen }\n      confirmButtonLabel={ confirmButtonLabel }\n      onClose={ () => {\n        onClose();\n        setShowConfirmModal(true);\n      } }\n      onSubmit={ () => {\n        onSubmit();\n\n      } }\n    />);\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveRole from './remove-role-modal';\n\nconst columns = [\n  { title: 'Name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      title: name,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/groups/detail/${groupUuid}/roles/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name,\n  isDefault,\n  isChanged,\n  onDefaultGroupChanged\n}) => {\n  const [ descriptionValue, setDescriptionValue ] = useState('');\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role.title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        name={ name }\n        isDefault={ isDefault }\n        isChanged={ isChanged }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add role\"\n          >\n        Add role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(\n                name,\n                multipleRolesSelected ? selectedRoles.length : roles.find(role => role.uuid === selectedRoles[0].uuid).name,\n                multipleRolesSelected)\n            });\n\n            setShowRemoveModal(true);\n\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        isChanged={ isChanged }\n        isDefault={ isDefault }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isDefault);\n        } }\n      />\n\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ (...props) => createRows(uuid, ...props) }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ (config) => {\n            fetchRolesForGroup(config)(uuid);\n          } }\n          setFilterValue={ ({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          } }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n          emptyProps={ { title: 'There are no roles in this group', description: [ 'Add a role to configure user access.', '' ]} }\n          textFilters={ [\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue }\n          ] }\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name,\n    isDefault: selectedGroup.platform_default,\n    isChanged: !selectedGroup.system\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  onDefaultGroupChanged: PropTypes.func\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Alert, AlertActionCloseButton, Button, Popover, Split, SplitItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport './group.scss';\n\nimport EditGroup from './edit-group-modal';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'Groups', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n  const [ showEdit, setShowEdit ] = useState(false);\n  const [ showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo ] = useState(false);\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  const defaultGroupChangedIcon = (name) => (\n    <div\n      style={ { display: 'inline-flex' } }>\n      { name }\n      <div className=\"pf-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={\n            <div>Now that you have edited the <b>Default user access</b> group, the system will no longer update it with new default access roles.\n                The group name has changed to <b>Custom default user access</b>.</div>\n          }\n        >\n          <InfoCircleIcon className=\"ins-c-rbac__default-group-info-icon\"/>\n        </Popover>\n\n      </div>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <Split gutter=\"md\">\n          <SplitItem isFilled>\n            <TopToolbarTitle\n              title={ !isFetching && group\n                ? <Fragment>{ group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name }</Fragment>\n                : undefined }\n              description={ !isFetching && group ? group.description : undefined } />\n          </SplitItem>\n          <SplitItem>\n            { group.platform_default\n              ? null\n              : <Button onClick={ () => setShowEdit(true) } variant='secondary'>Edit group</Button>\n            }\n          </SplitItem>\n          <EditGroup\n            isOpen={ showEdit }\n            group={ group }\n            closeUrl={ `group/detail/${uuid}` }\n            onClose={ () => setShowEdit(false) }\n            postMethod={ () => {\n              fetchData(uuid);\n              setShowEdit(false);\n            }\n            }\n          />\n\n        </Split>\n        { showDefaultGroupChangedInfo\n          ? <Alert\n            variant=\"info\"\n            isInline\n            title=\"Default user access group has changed\"\n            action={ <AlertActionCloseButton onClose={ () => setShowDefaultGroupChangedInfo(false) } /> }\n            className=\"pf-u-mb-lg pf-u-mt-sm\"\n          >\n            Now that you have edited the <b>Default user access</b> group, the system will no longer update it with new default access roles.\n                The group name has changed to <b>Custom default user access</b>.\n          </Alert>\n          : null\n        }\n      </TopToolbar>\n      <AppTabs isHeader tabItems={ tabItems } />\n      <Switch>\n        <Route\n          path={ `/groups/detail/:uuid/roles` }\n          render={ props => <GroupRoles { ...props } onDefaultGroupChanged={ setShowDefaultGroupChangedInfo }/> } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nconst GroupRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={ clsx(className, {\n        'ins-c-rbac__group-default': row.isPlatformDefault\n      }) }\n      row={ row }\n      { ...props }\n    />\n  );\n};\n\nGroupRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    isPlatformDefault: PropTypes.bool\n  }),\n  className: PropTypes.string\n};\n\nexport default GroupRowWrapper;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\nimport GroupRowWrapper from './group-row-wrapper';\nimport './groups.scss';\n\nconst columns = [\n  { title: 'Name', key: 'name', transforms: [ sortable ]},\n  { title: 'Roles' },\n  { title: 'Members' },\n  { title: 'Last modified', key: 'modified', transforms: [ sortable ]}\n];\n\nconst Groups = () => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n  const [ removeGroupsList, setRemoveGroupsList ] = useState([]);\n\n  const dispatch = useDispatch();\n  const { groups, pagination, userIdentity, isLoading } = useSelector(({ groupReducer: { groups, isLoading }}) => ({\n    groups: groups.data,\n    pagination: groups.meta,\n    userIdentity: groups.identity,\n    isLoading\n  }), shallowEqual);\n\n  useEffect(() => {\n    dispatch(fetchGroups({ ...pagination, name: filterValue }));\n  }, []);\n\n  const history = useHistory();\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows)\n    .filter(({ platform_default: isPlatformDefault }) => !isPlatformDefault)\n    .map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () =>\n    <Fragment>\n      <Route exact path=\"/groups/add-group\">\n        <AddGroupWizard\n          postMethod={\n            config => {\n              dispatch(fetchGroups(config));\n              setFilterValue('');\n            }\n          } />\n      </Route>\n      <Route exact path=\"/groups/edit/:id\">\n        <EditGroup\n          postMethod={\n            config =>\n            {\n              dispatch(fetchGroups(config));\n              setFilterValue('');\n            }\n          } isOpen />\n      </Route>\n      <Route exact path=\"/groups/removegroups\">\n        <RemoveGroup\n          postMethod={ (ids) => {\n            dispatch(fetchGroups());\n            setSelectedRows(selectedRows.filter(row => (!ids.includes(row.uuid))));\n            setFilterValue('');\n          } }\n          isModalOpen\n          groupsUuid={ removeGroupsList }\n        />\n      </Route>\n    </Fragment>;\n\n  const actionResolver = ({ isPlatformDefault }) =>\n    isPlatformDefault || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            history.push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) => {\n            setRemoveGroupsList([ group ]);\n            history.push(`/groups/removegroups`);\n          }\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => history.push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          },\n          onClick: () => {\n            setRemoveGroupsList(selectedRows);\n            history.push(`/groups/removegroups`);\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottom>\n          <TopToolbarTitle title=\"Groups\"/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups.map(group => group.platform_default ? { ...group, principalCount: 'All' } : group) }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ config => dispatch(fetchGroups(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n            filterPlaceholder=\"name\"\n            rowWrapper={ GroupRowWrapper }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:groupUuid/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nexport default Groups;\n","import { FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP,\n  FETCH_MEMBERS_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: { addRoles: {}, members: {}},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { ...state.selectedGroup, loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...state.selectedGroup, ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nconst setMembersForGroupLoading = (state = {}) => ({\n  ...state,\n  selectedGroup: {\n    ...state.selectedGroup || {},\n    members: { isLoading: true }\n  }\n});\nconst setMembersForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: {\n    ...state.selectedGroup || {},\n    members: {\n      isLoading: false,\n      ...payload\n    }\n  }\n});\n\nconst setAddRolesLoading = state => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false }}\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { roles: payload.data, pagination: payload.meta, loaded: true }}\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_MEMBERS_FOR_GROUP}_PENDING`]: setMembersForGroupLoading,\n  [`${FETCH_MEMBERS_FOR_GROUP}_FULFILLED`]: setMembersForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\nconst Users = lazy(() => import('./smart-components/user/users'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles',\n  users: '/users'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <InsightsRoute path={ paths.users } component={ Users } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import React from 'react';\n\nimport {\n  Title,\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody\n} from '@patternfly/react-core';\n\nimport { LockIcon } from '@patternfly/react-icons';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\n\nimport './DeniedState.scss';\n\nconst DeniedState = () => {\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title='User access'/>\n      </PageHeader>\n      <Main>\n        <EmptyState variant={ EmptyStateVariant.full } className='ins-c-rbac-denied-state'>\n          <EmptyStateIcon icon={ LockIcon } />\n          <Title headingLevel=\"h5\" size=\"lg\"> You do not have permissions to view or manage User access </Title>\n          <EmptyStateBody>\n            Contact your organization administrator(s) for more information.\n          </EmptyStateBody>\n          {\n            document.referrer ?\n              <Button variant=\"primary\" onClick={ () => history.back() }>Return to previous page</Button> :\n              <Button variant=\"primary\" component=\"a\" href=\".\">Go to landing page</Button>\n          }\n        </EmptyState>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default DeniedState;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\nimport DeniedState from './presentational-components/states/DeniedState';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    userReady: false,\n    isAdmin: undefined\n  }\n\n  componentDidMount () {\n    const { history } = this.props;\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then((user) => this.setState({ userReady: true, isAdmin: user.identity.user.is_org_admin }));\n    insights.chrome.identifyApp('rbac');\n    this.unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unregister && this.unregister();\n  }\n\n  render () {\n    const { userReady, isAdmin } = this.state;\n\n    if (!userReady) {\n      return <AppPlaceholder />;\n    }\n\n    if (!isAdmin) {\n      return <DeniedState/>;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, accessCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-accessCount` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            { accessCount }\n          </Link>\n        </Fragment>,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\n\nconst columns = [\n  { title: 'Name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Permissions' },\n  { title: 'Last modified', orderBy: 'modified' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"Roles\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n            filterPlaceholder=\"name\"\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrubms';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs }) => (\n  <Fragment>\n    { breadcrumbs &&\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs { ...breadcrumbs } />\n      </section>\n    }\n    <PageHeader className='ins-rbac-page-header'>\n      { children }\n    </PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <PageHeaderTitle title={ title || <ToolbarTitlePlaceholder /> } className='ins-rbac-page-header__title'/>\n    { description &&\n      <TextContent className=\"ins-rbac-page-header__description\">\n        <Text component={ TextVariants.p }>{ description }</Text>\n      </TextContent>\n    }\n    { children }\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  count: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport { ConditionalFilter } from '@redhat-cloud-services/frontend-components/components/ConditionalFilter';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  textFilters\n) => ({\n  items: [ ...textFilters && textFilters.length > 0 ? textFilters.map(({ key, value }) => ({\n    label: firstUpperCase(key),\n    type: 'text',\n    filterValues: {\n      id: `filter-by-${key}`,\n      key: `filter-by-${key}`,\n      placeholder: `Filter by ${key}`,\n      value,\n      onChange: (_e, filterBy) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          [key]: filterBy\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          ...textFilters.reduce((acc, curr) => ({\n            ...acc,\n            [curr.key]: curr.value\n          }), {}),\n          [key]: filterBy\n        }));\n      },\n      isDisabled: isLoading\n    }})) : [{\n    label: firstUpperCase(filterPlaceholder || titleSingular),\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${filterPlaceholder || titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }], ...filterItems || [] ]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  textFilters,\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: (textFilters && textFilters.length > 0) ? textFilters.map(({ key, value }) => value && ({\n    category: firstUpperCase(key),\n    type: key,\n    chips: [{ name: value }]\n  })).filter(Boolean) : [{\n    name: filterValue\n  }],\n  onDelete: (_e, [ deleted ], isAll) => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...textFilters ? textFilters.reduce((acc, { key, value }) => ({\n        ...acc,\n        [key]: deleted.type === key || isAll ? '' : value\n      }), {}) : {\n        name: 'sf'\n      }\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      ...textFilters ? textFilters.reduce((acc, { key, value }) => ({\n        ...acc,\n        [key]: deleted.type === key || isAll ? '' : value\n      }), {}) : {\n        name: ''\n      }\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  textFilters\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(\n        isLoading,\n        setFilterValue,\n        fetchData,\n        filterValue,\n        pagination,\n        titleSingular,\n        filterPlaceholder,\n        filterItems,\n        textFilters\n      )\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...(filterValue.length > 0 || (textFilters && textFilters.length > 0)) && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, textFilters, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  setFilterValue: PropTypes.func,\n  textFilters: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n    key: PropTypes.string\n  })),\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  filterItems: ConditionalFilter.propTypes.items,\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  textFilters: []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <EmptyState variant={ EmptyStateVariant.full } { ...props }>\n    <EmptyStateIcon icon={ icon || SearchIcon } />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      { title }\n    </Title>\n    <EmptyStateBody>\n      { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n    </EmptyStateBody>\n    { actions }\n  </EmptyState>\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.func,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination, EmptyStatePrimary } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  isCollapsible,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  textFilters,\n  sortBy\n}) => {\n  const [ opened, openRow ] = useState({});\n  const [ sortByState, setSortByState ] = useState({ index: undefined, direction: undefined });\n  useEffect(() => {\n    setSortByState({\n      ...sortByState,\n      ...sortBy\n    });\n  }, [ sortBy ]);\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <EmptyStatePrimary key=\"clear-filters\">\n            <Button\n              variant=\"link\"\n              onClick={ () => {\n                setFilterValue({\n                  ...pagination,\n                  offset: 0,\n                  name: ''\n                });\n                fetchData({\n                  ...pagination,\n                  offset: 0,\n                  name: ''\n                });\n              } }\n            >\n              Clear all filters\n            </Button>\n          </EmptyStatePrimary>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n        filterPlaceholder={ filterPlaceholder }\n        textFilters={ textFilters }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        { ...isCollapsible && { onCollapse } }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n        rowWrapper={ rowWrapper }\n        sortBy={ sortByState }\n        onSort={ (e, index, direction) => {\n          setSortByState({ index, direction });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            name: '',\n            orderBy: `${direction === 'desc' ? '-' : ''}${columns[index - isSelectable].key}`\n          });\n        }\n        }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && (filterValue.length === 0 && textFilters.every(({ value }) => !!value)) ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ PlusCircleIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n          { ...emptyProps }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n"],"sourceRoot":""}
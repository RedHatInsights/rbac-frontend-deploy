{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/redux/action-types.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/expandable-description.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/group/policy/expandable-content.js","webpack:///./src/smart-components/group/policy/policy-table-helpers.js","webpack:///./src/helpers/policy/policy-helper.js","webpack:///./src/redux/actions/policy-actions.js","webpack:///./src/smart-components/group/policy/policy-actions/summary-content.js","webpack:///./src/smart-components/group/add-group/policy-information.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/smart-components/group/policy/policy-actions/add-policy-wizard.js","webpack:///./src/smart-components/group/policy/policy-actions/edit-policy-info.js","webpack:///./src/smart-components/group/policy/policy-actions/edit-policy-roles.js","webpack:///./src/smart-components/group/policy/policies.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/utilities/constants.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","ADD_POLICY","UPDATE_POLICY","REMOVE_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","AppTabs","_ref","history","pathname","location","tabItems","activeTab","find","_ref2","includes","a","createElement","className","activeKey","eventKey","onSelect","_event","tabIndex","map","item","title","propTypes","PropTypes","shape","string","isRequired","func","array","withRouter","ListLoader","items","props","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_5__","aria-label","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","Array","_item","index","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","aria-labelledby","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","dataListCells","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","react_content_loader__WEBPACK_IMPORTED_MODULE_12__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","number","defaultProps","AppPlaceholder","ToolbarTitlePlaceholder","FormItemLoader","PolicyRolesLoader","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","fieldId","roleApi","getRoleApi","createRole","_x","_createRole","this","arguments","_callee","regenerator_default","wrap","_context","prev","next","createRoles","abrupt","sent","stop","fetchRolesWithPolicies","_x2","_fetchRolesWithPolicies","_callee2","limit","offset","orderBy","_context2","t0","objectSpread_default","t1","listRoles","t2","insights","chrome","auth","getUser","t3","fetchRole","_x3","_fetchRole","_callee3","uuid","_context3","getRole","removeRole","_x4","_removeRole","_callee4","roleId","_context4","deleteRole","role_actions_createRole","role_actions_fetchRole","role_actions_fetchRoles","role_actions_fetchRolesWithPolicies","role_actions_removeRole","roleData","type","ActionTypes","payload","RoleHelper","meta","notifications","variant","description","rejected","apiProps","fetchRoles","options","undefined","role","groupApi","getGroupApi","fetchGroups","_fetchGroups","listGroups","fetchGroup","_fetchGroup","getGroup","updateGroup","_updateGroup","members_list","addUsers","removeUsers","principals","user","username","user_list","filter","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","_addGroup","newGroup","createGroup","removeGroup","_x5","_removeGroup","_callee5","groupId","_context5","deleteGroup","deletePrincipalsFromGroup","_x6","_x7","_deletePrincipalsFromGroup","_callee6","users","_context6","addPrincipalsToGroup","_x8","_x9","_addPrincipalsToGroup","_callee7","_context7","GroupHelper","groupData","group","addMembersToGroup","members","removeMembersFromGroup","principalApi","getPrincipalApi","fetchUsers","listPrincipals","SummaryContent","formData","values","selectedUsers","selectedRoles","react_default","react","Stack","gutter","StackItem","Title","size","TextContent","Text","component","TextVariants","h5","Grid","GridItem","span","concat","label","groups","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","columns","createRows","expanded","checkedRows","reduce","acc","email","first_name","last_name","toConsumableArray_default","cells","selected","Boolean","row","UsersList","isLoading","pagination","setSelectedUsers","_useState","useState","_useState2","slicedToArray_default","filterValue","setFilterValue","useEffect","table_toolbar_view","isSelectable","isCompact","borders","fetchData","config","mappedProps","_ref4","request","setCheckedItems","newSelection","_ref3","titlePlural","titleSingular","goBack","bool","searchFilter","count","defaultCompactSettings","connect","_ref5","_ref5$userReducer","userReducer","isUserDataLoading","dispatch","addNotification","SetUsers","h6","Card","users_list","RolesList","roles","setSelectedRoles","_ref5$roleReducer","roleReducer","SetRoles","roles_list","AddGroupWizard","postMethod","closeUrl","_useState3","_useState4","_useState5","_useState6","setValues","_useState7","_useState8","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","asyncToGenerator_default","mark","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","_ref3$roleReducer","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","objectWithoutProperties_default","FormSelect","extends_default","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","pf4_select_wrapper_Select","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","dist_default","formFieldsMapper","defineProperty_default","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","selectedGroup","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","then","onCancel","schema","properties","required","Modal","style","minWidth","sm","form_renderer","schemaType","initialValues","react_select_browser_esm","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","groupReducer","RemoveGroupModal","_ref$history","isSmall","actions","Button","onClick","h1","loader_placeholders","_ref2$groupReducer","isRecordLoading","ExpandableDescription","loaded","frontend_components","SkeletonSize","activeGroup","opened","selectedRows","principalCount","modified","react_router_dom","to","date","parent","fullWidth","expandable_description","expandable_content","policyApi","getPolicyApi","axiosInstance","getAxiosInstance","fetchGroupPolicies","_fetchGroupPolicies","group_uuid","scope","groupName","listPolicies","fetchPolicy","_fetchPolicy","getPolicy","createPolicy","_createPolicy","createPolicies","updatePolicy","_updatePolicy","removePolicy","_removePolicy","policyId","deletePolicy","PolicyHelper","policyData","policy","PolicyInfoText","editType","PolicyInformation","setIsPolicyInfoValid","setError","validateName","RBAC_API_BASE","fetchPolicyByName","pol","setResult","debouncedValidator","validateCallback","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","asyncDebounce","policy_information_PolicyInfoText","onBlur","AddGroupPolicyWizard","setRoles","isPolicyInfoValid","policy_data","EditPolicyInfoModal","_ref$match$params","isFetching","setPolicy","policy_information","ActionGroup","Split","SplitItem","policyReducer","EditPolicyRolesModal","set_roles","oneOfType","_ref2$policyReducer","policies","selectedPolicy","cellFormatters","expandable","GroupPolicies","selectedPolicies","setSelectedPolicies","removePolicies","policiesToRemove","policyPromises","Promise","all","routes","react_router","path","render","args","add_policy_wizard","exact","edit_policy_info","edit_policy_roles","actionResolver","_policyData","rowIndex","_rowId","color","checkedPolicies","toolbarButtons","defaultSettings","_ref4$policyReducer","ExpandableContent","principal_expandable_content","AddGroupMembers","GroupPrincipals","selectedPrincipals","setSelectedPrincipals","removeMembers","userNames","add_group_members","_principalData","principal","Group","top_toolbar","breadcrumbs","isActive","app_tabs","_ref$groupReducer","Groups","setSelectedRows","rows","add_group_wizard","edit_group_modal","remove_group_modal","_groupData","group_group","paddingBottm","platforms","_ref5$groupReducer","system","policyCount","ResourceDefinitionsTable","handleChange","editable","_formData$resourceDef","resourceDefinitions","definition","operation","isInline","Table","TableVariant","compact","Header","Body","_formData$application","application","_formData$description","_formData$name","_formData$permission","permission","_formData$resourceTyp","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","applications","access","attributeFilter","onNext","_ref4$roleReducer","RemoveRoleModal","_ref2$roleReducer","selectedRole","Roles","userIdentity","userEntitlements","RemoveRole","userAllowed","isBeta","is_org_admin","areActionsDisabled","_roleData","cost_management","identity","entitlements","setLoadingState","state","user_reducer","_$concat$$concat$$con","FETCH_USER","selectedUser","group_reducer","group_reducer_$concat$$concat$$con","policy_reducer","policy_reducer_$concat$$concat$$con","role_reducer","role_reducer_$concat$$concat$$con","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","getStore","lazy","resolve","interopRequireWildcard_default","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","routes_InsightsRoute","childProps","App","chromeNavAvailable","_this2","init","setState","identifyApp","lib","locale","Fragment","frontend_components_notifications","marginLeft","padding","routes_Routes","Component","ReactDOM","es","store","basename","getBaseName","src_App_0","getCurrentPage","Math","floor","entries","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","debouncedFetch","debouncePromise","callback","calculateChecked","every","some","isSelected","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","arr","findIndex","_ref7","_ref6","itemCount","numberOfItems","Toolbar","PrimaryToolbar","bulkSelect","checked","filterConfig","filterValues","_e","actionsConfig","perPage","page","onSetPage","perPageOptions","onPerPageSelect","activeFiltersConfig","filters","onDelete","EmptyWithFilter","icon","Bullseye","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","text","node","TableToolbarView","openRow","onCollapse","_index","toolbar","canSelectAll","_idx","empty_filter","colSpan","UsersIcon","requests","_redhat_cloud_services_frontend_components_utilities_files_interceptors__WEBPACK_IMPORTED_MODULE_0__","_redhat_cloud_services_frontend_components_utilities_files_interceptors__WEBPACK_IMPORTED_MODULE_0___default","_redhat_cloud_services_rbac_client__WEBPACK_IMPORTED_MODULE_1__","_utilities_constants__WEBPACK_IMPORTED_MODULE_2__","PrincipalApi","GroupApi","RoleApi","PolicyApi","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","top_toolbar_TopToolbar","top_toolbar_TopToolbarTitle","TopToolbar","children","paddingBottom","Level","breadcrubms","TopToolbarTitle","LevelItem","process"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([412,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <ContentLoader\n                  height={ 12 }\n                  width={ 300 }\n                  speed={ 2 }\n                  primaryColor=\"#FFFFFF\"\n                  secondaryColor=\"#ecebeb\"\n                  { ...props }>\n                  <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"300\" height=\"12\" />\n                </ContentLoader>\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => (\n  <ContentLoader\n    height={ 21 }\n    width={ 200 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    { ...props }\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n  </ContentLoader>\n);\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","\nimport { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  return await groupApi.listGroups(limit, offset, name, orderBy);\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  if (data.user_list && data.user_list.length > 0) {\n    return groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  return newGroup;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers() {\n  return principalApi.listPrincipals();\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUser = () => ({\n  type: ActionTypes.FETCH_USER,\n  payload: new Promise(resolve => {\n    resolve(UserHelper.fetchUser());\n  })\n});\n\nexport const fetchUsers = () => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers()\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data,\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = { ...formData, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod()).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isRecordLoading }}) => ({\n  group: selectedGroup,\n  isLoading: isRecordLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { connect } from 'react-redux';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nconst ExpandableDescription = ({ members, fetchGroup, uuid, loaded }) => {\n  useEffect(() => {\n    fetchGroup(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"groups-table-detail heading\" component={ TextVariants.small }>Members</Text>\n        {\n          loaded ?\n            <Text className=\"groups-table-detail content\" component={ TextVariants.h5 }>\n              {\n                members.length === 0 ? 'No members' :\n                  members.map(({ first_name, last_name }) => `${first_name} ${last_name}`)\n              }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div>\n        }\n      </TextContent>\n    </Fragment>\n  );};\n\nExpandableDescription.propTypes = {\n  description: PropTypes.string,\n  uuid: PropTypes.string,\n  members: PropTypes.arrayOf(PropTypes.shape({\n    first_name: PropTypes.string,\n    last_name: PropTypes.string\n  })),\n  loaded: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nExpandableDescription.defaultProps = {\n  members: [],\n  loaded: false,\n  fetchGroup: () => undefined\n};\n\nconst mapStateToProps = ({ groupReducer: { groups }}, { uuid }) => {\n  const activeGroup = groups.data.find((group) => group.uuid === uuid) || {};\n  return ({\n    members: activeGroup.principals,\n    description: activeGroup.description,\n    loaded: activeGroup.loaded\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGroup: (uuid) => dispatch(fetchGroup(uuid))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpandableDescription);\n\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport ExpandableDescription from './expandable-description';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }, key) => ([\n    ...acc,\n    {\n      uuid,\n      isOpen: Boolean(opened[uuid]),\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: opened[uuid] ?\n          <ExpandableDescription uuid={ uuid } /> :\n          <Fragment />\n      }]\n    }\n  ]), [])\n);\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableDescription = ({ description, roles }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"groups-table-detail heading\" component={ TextVariants.small }>Description</Text>\n      <Text className=\"groups-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n    </TextContent>\n    <TextContent>\n      <Text className=\"groups-table-detail heading\" component={ TextVariants.small }>roles</Text>\n      <Text\n        className=\"groups-table-detail content\"\n        component={ TextVariants.h5 }>\n        { `${roles.map((role, index) => `${index !== 0 ? ', ' : ''} ${role.description}`)}` }\n      </Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableDescription.propTypes = {\n  description: PropTypes.string,\n  roles: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string\n  })).isRequired\n};\n\nexport default ExpandableDescription;\n\n","import React, { Fragment } from 'react';\nimport ExpandableContent from './expandable-content';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened = [], checkedRows = []) => (\n  data.reduce((acc,  { uuid, name, description, roles, modified }, key) => ([\n    ...acc, {\n      uuid,\n      isOpen: Boolean(opened[uuid]),\n      cells: [\n        name,\n        description,\n        roles.length,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(checkedRows.find(row => row.uuid === uuid))\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{ title: <ExpandableContent description={ description } roles={ roles }/> }]\n    }\n  ]), []));\n\n","import { RBAC_API_BASE } from '../../utilities/constants';\nimport { getPolicyApi, getAxiosInstance } from '../shared/user-login';\n\nconst policyApi = getPolicyApi();\nconst axiosInstance = getAxiosInstance();\n\nexport async function fetchGroupPolicies({ group_uuid, limit, offset, name, scope, groupName, orderBy }) {\n  return await policyApi.listPolicies(limit, offset, name, scope, groupName, group_uuid, orderBy);\n}\n\nexport async function fetchPolicy(uuid) {\n  return await policyApi.getPolicy(uuid);\n}\n\nexport async function createPolicy(data) {\n  return await policyApi.createPolicies(data);\n}\n\nexport async function updatePolicy(uuid, data) {\n  return await policyApi.updatePolicy(uuid, data);\n}\n\nexport async function removePolicy(policyId) {\n  return await policyApi.deletePolicy(policyId);\n}\n\nexport function fetchPolicyByName(name = '') {\n  return axiosInstance.get(`${RBAC_API_BASE}/policies/?name=${name}`);\n}\n","import * as ActionTypes from '../action-types';\nimport * as PolicyHelper from '../../helpers/policy/policy-helper';\n\nexport const fetchGroupPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUP_POLICIES,\n  payload: PolicyHelper.fetchGroupPolicies(options)\n});\n\nexport const fetchPolicy = apiProps => ({\n  type: ActionTypes.FETCH_POLICY,\n  payload: PolicyHelper.fetchPolicy(apiProps)\n});\n\nexport const createPolicy = (policyData) => ({\n  type: ActionTypes.ADD_POLICY,\n  payload: PolicyHelper.createPolicy(policyData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding policy',\n        description: 'The policy was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding policy',\n        description: 'The policy was not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removePolicy = (policy) => ({\n  type: ActionTypes.REMOVE_POLICY,\n  payload: PolicyHelper.removePolicy(policy),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing policy',\n        description: 'The policy was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const updatePolicy = (uuid, policyData) => ({\n  type: ActionTypes.UPDATE_POLICY,\n  payload: PolicyHelper.updatePolicy(uuid, policyData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating policy',\n        description: 'The policy was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating policy',\n        description: 'The policy was not updated successfully.'\n      }\n    }\n  }\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { policy } = formData.values ? formData.values : { policy: { name: '', description: '' }};\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ policy ? policy.name : '' }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ policy ? policy.description : '' }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Roles</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextArea,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchPolicyByName } from '../../../helpers/policy/policy-helper';\n\nconst PolicyInfoText = ({ title, editType }) => {\n  return (editType === 'edit') ?\n    <TextContent>\n      <Text component={ TextVariants.small }> All fields are required </Text>\n    </TextContent> :\n    <Fragment>\n      <StackItem>\n        <Title size=\"xl\">{ title }</Title>\n      </StackItem>\n      <TextContent>\n        <Text component={ TextVariants.h6 }>Policies are the permissions set for this group.\n        Groups can have one or more policies.\n        Policies are created for a group, they cannot be shared.\n        You can only create one policy at this time.\n        It is possible to create more for this group at a later time.<br/>\n        All fields are optional.</Text>\n      </TextContent>\n    </Fragment>;\n};\n\nPolicyInfoText.propTypes = {\n  title: PropTypes.string,\n  editType: PropTypes.string\n};\n\nconst PolicyInformation = ({ title, editType, formData, onHandleChange, setIsPolicyInfoValid }) => {\n  const [ error, setError ] = useState(undefined);\n  const policy = formData.policy ? formData.policy : { name: '', description: '' };\n\n  const validateName = (name) => fetchPolicyByName(name)\n  .then(({ data }) => {\n    return data.find(pol => name === pol.name)\n      ? 'Name has already been taken'\n      : undefined;\n  });\n\n  const setResult = (result) => {\n    setError(result);\n    setIsPolicyInfoValid(!result);\n  };\n\n  const debouncedValidator = (data, validateCallback) => asyncDebounce(validateName(data.name).then((result) => validateCallback(result)));\n\n  const handleNameChange = () => {\n    debouncedValidator(policy, setResult);\n  };\n\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <PolicyInfoText title= { title } editType = { editType }/>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Name\"\n              fieldId=\"policy-name\"\n              isValid={ !error }\n              helperTextInvalid={ error }\n            >\n              <TextInput\n                type=\"text\"\n                id=\"policy-name\"\n                name=\"policy-name\"\n                aria-describedby=\"policy-name\"\n                value={ policy.name }\n                onBlur={ handleNameChange }\n                onChange={ (_, event) => { setError(undefined); onHandleChange({ policy: { ...policy, name: event.currentTarget.value }}); } }\n              />\n            </FormGroup>\n          </StackItem>\n          <StackItem>\n            <FormGroup label=\"Description\" fieldId=\"policy-description\">\n              <TextArea\n                type=\"text\"\n                id=\"policy-description\"\n                name=\"policy-description\"\n                value={ policy.description }\n                onChange={ (_, event) => onHandleChange({ policy: { ...policy, description: event.currentTarget.value }}) }\n              />\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nPolicyInformation.propTypes = {\n  formData: PropTypes.object,\n  editType: PropTypes.string,\n  title: PropTypes.string,\n  onHandleChange: PropTypes.func.required,\n  setIsPolicyInfoValid: PropTypes.func.required\n};\n\nPolicyInformation.defaultProps = {\n  title: 'Create policy',\n  editType: 'add'\n};\n\nexport default PolicyInformation;\n\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction, debounceTime = 250, options = { onlyResolvesLast: false }) => awesomeDebouncePromise(\n  asyncFunction,\n  debounceTime,\n  options,\n);\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createPolicy } from '../../../../redux/actions/policy-actions';\nimport { fetchRoles } from '../../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport PolicyInformation from '../../add-group/policy-information';\nimport SetRoles from '../../add-group/set-roles';\n\nconst AddGroupPolicyWizard = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  createPolicy,\n  postMethod,\n  closeUrl\n}) => {\n  const [ roles, setRoles ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isPolicyInfoValid, setIsPolicyInfoValid ] = useState(true);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'Name and description',\n      component: new PolicyInformation(\n        { title: 'Create policy', formData, onHandleChange: handleChange, setIsPolicyInfoValid }),\n      enableNext: isPolicyInfoValid },\n    { name: 'Add roles',\n      component: new SetRoles({ formValue: formData,\n        selectedRoles, setSelectedRoles, roles, title: 'Add roles to policy' }) },\n    { name: 'Review', component: new SummaryContent({ values: formData, selectedRoles }),\n      enableNext: isPolicyInfoValid,\n      nextButtonText: 'Confirm' }\n  ];\n\n  const fetchData = () => {\n    fetchRoles().payload.then((data) => setRoles(data));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const  onSubmit =  async() => {\n    if (formData.policy && selectedRoles && selectedRoles.length > 0) {\n      const policy_data = {\n        name: formData.policy.name,\n        description: formData.policy.description,\n        group: uuid,\n        roles: selectedRoles.map(role => role.value)\n      };\n      return createPolicy(policy_data).then(() => postMethod()).then(push(closeUrl));\n    }\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Add policy',\n      dismissable: true,\n      description: 'Adding policy was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Wizard\n      title={ 'Add policy' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupPolicyWizard.defaultProps = {\n  roles: [],\n  selectedRoles: []\n};\n\nAddGroupPolicyWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createPolicy: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createPolicy,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupPolicyWizard));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { updatePolicy, fetchPolicy } from '../../../../redux/actions/policy-actions';\nimport { FormItemLoader } from '../../../../presentational-components/shared/loader-placeholders';\nimport PolicyInformation from '../../add-group/policy-information';\nimport '../../../../App.scss';\n\nconst EditPolicyInfoModal = ({\n  history: { push },\n  match: { params: { uuid, id }},\n  addNotification,\n  fetchPolicy,\n  updatePolicy,\n  postMethod,\n  closeUrl,\n  isFetching\n}) => {\n  const [ policy, setPolicy ] = useState(undefined);\n\n  const handleChange = data => { setPolicy(data.policy); };\n\n  useEffect(() => {\n    fetchPolicy(id).then((data) => setPolicy(data.value));\n  }, []);\n\n  const onSave = () => {\n    if (policy) {\n      const policy_data = {\n        name: policy.name,\n        description: policy.description,\n        group: policy.group.uuid,\n        roles: policy.roles.map(role => role.uuid)\n      };\n      return postMethod ? updatePolicy(policy.uuid, policy_data).then(() => postMethod()).then(() => push(closeUrl)) :\n        updatePolicy(policy.uuid, policy_data).then(() => push(closeUrl));\n    }\n    else {\n      if (postMethod) {\n        postMethod();\n      }\n\n      push(closeUrl || `/groups/detail/${uuid}/policies`);\n    }\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit policy's information`,\n      dismissable: true,\n      description: `Edit policy's information was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ `Edit policy information` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup>\n            { (isFetching || !policy) && <FormItemLoader/> }\n            { !isFetching && policy && (\n              <PolicyInformation\n                editType = { 'edit' }\n                formData = { { policy } }\n                onHandleChange = { handleChange }\n              />) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditPolicyInfoModal.defaultProps = {\n  isFetching: false\n};\n\nEditPolicyInfoModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchPolicy: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updatePolicy: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  closeUrl: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updatePolicy,\n  fetchPolicy\n}, dispatch);\n\nconst mapStateToProps = ({ policyReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditPolicyInfoModal));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { updatePolicy, fetchPolicy } from '../../../../redux/actions/policy-actions';\nimport { PolicyRolesLoader } from '../../../../presentational-components/shared/loader-placeholders';\nimport SetRoles from '../../add-group/set-roles';\nimport '../../../../App.scss';\n\nconst EditPolicyRolesModal = ({\n  roles,\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  policy,\n  fetchPolicy,\n  updatePolicy,\n  postMethod,\n  isFetching,\n  closeUrl\n}) => {\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n\n  const fetchData = () => {\n    fetchPolicy(id);\n  };\n\n  useEffect(() => {\n    fetchData();\n    setSelectedRoles(roles);\n  }, [ roles ]);\n\n  const onSave = () => {\n    if (policy) {\n      const policy_data = {\n        name: policy.name,\n        group: policy.group.uuid,\n        roles: selectedRoles.map(role => role.uuid)\n      };\n      return postMethod ? updatePolicy(policy.uuid, policy_data).then(() => postMethod()).then(() => push(closeUrl)) :\n        updatePolicy(policy.uuid, policy_data).then(() => push(closeUrl));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit policy's roles`,\n      dismissable: true,\n      description: `Edit policy's roles was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title={ `Edit policy roles` }\n      width={ '60%' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup>\n            { isFetching && <PolicyRolesLoader/> }\n            { !isFetching &&\n                  <SetRoles formValue={ policy }\n                    selectedRoles = { selectedRoles }\n                    setSelectedRoles = { setSelectedRoles }\n                    roles={ roles }\n                    description = { `At least one role must be selected for the ${policy.name} policy.` }\n                  /> }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditPolicyRolesModal.defaultProps = {\n  selectedRoles: [],\n  inputValue: '',\n  closeUrl: '/policies',\n  isFetching: false\n};\n\nEditPolicyRolesModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchPolicy: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updatePolicy: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  policy: PropTypes.any,\n  roles: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  closeUrl: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updatePolicy,\n  fetchPolicy\n}, dispatch);\n\nconst mapStateToProps = ({ policyReducer: { isRecordLoading, policies: { data }}}, { match: { params: { id }}}) => {\n  const selectedPolicy = data.find(({ uuid }) => uuid === id) || {};\n  return ({\n    isFetching: isRecordLoading,\n    policy: selectedPolicy,\n    roles: selectedPolicy.roles\n  });\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditPolicyRolesModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './policy-table-helpers';\nimport { fetchGroupPolicies, removePolicy } from '../../../redux/actions/policy-actions';\nimport { bindActionCreators } from 'redux';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button } from '@patternfly/react-core';\nimport AddGroupPolicy from './policy-actions/add-policy-wizard';\nimport EditPolicyInfo from './policy-actions/edit-policy-info';\nimport EditPolicyRoles from './policy-actions/edit-policy-roles';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [{ title: 'Policy name', cellFormatters: [ expandable ]}, 'Policy Description', 'Roles', 'Last modified' ];\n\nconst GroupPolicies = ({\n  match: { params: { uuid }},\n  history,\n  fetchGroupPolicies,\n  addNotification,\n  pagination,\n  policies,\n  isLoading\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPolicies, setSelectedPolicies ] = useState([]);\n\n  const fetchData = () => {\n    fetchGroupPolicies({ group_uuid: uuid });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/policies/add_policy` }\n      render={ args => <AddGroupPolicy fetchData={ fetchData } closeUrl={ `/groups/detail/${uuid}/policies` }\n        postMethod={ fetchData } { ...args }/> }/>\n    <Route exact path={ `/groups/detail/:uuid/policies/edit-info/:id` } render={ props => <EditPolicyInfo { ...props }\n      postMethod={ fetchData } closeUrl={ `/groups/detail/${uuid}/policies` }\n    /> }/>\n    <Route exact path={ `/groups/detail/:uuid/policies/edit-roles/:id` } render={ props => <EditPolicyRoles { ...props }\n      postMethod={ fetchData } closeUrl={ `/groups/detail/${uuid}/policies` }/>\n    }/>\n  </Fragment>;\n\n  const setCheckedPolicies = (checkedPolicies) =>\n    setSelectedPolicies((policies) => checkedPolicies(policies));\n\n  const removePolicies = (policiesToRemove) => {\n    const policyPromises = policiesToRemove.map(policy => removePolicy(policy));\n    return Promise.all(policyPromises).then(() => {\n      addNotification({\n        variant: 'success',\n        title: `Remove policy`,\n        dismissable: true,\n        description: `Policies were removed successfully`\n      });\n      fetchData();\n    });\n  };\n\n  const actionResolver = (_policyData, { rowIndex }) =>\n    rowIndex % 2 === 1 ? null :\n      [\n        {\n          title: 'Edit information',\n          onClick: (_event, _rowId, policy) =>\n            history.push(`/groups/detail/${uuid}/policies/edit-info/${policy.uuid}`)\n        },\n        {\n          title: 'Edit roles',\n          onClick: (_event, _rowId, policy) =>\n            history.push(`/groups/detail/${uuid}/policies/edit-roles/${policy.uuid}`)\n        },\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)'\t},\n          onClick: (_event, _rowId, policy) => {\n            removePolicies([ policy.uuid ]);\n          }\n        }\n      ];\n\n  const toolbarButtons = () => [\n    <Link to={ `/groups/detail/${uuid}/policies/add_policy` } key=\"add-policy\">\n      <Button\n        variant=\"primary\"\n        aria-label=\"Add policy\"\n      >\n        Add policy\n      </Button>\n    </Link>,\n    {\n      label: 'Remove selected',\n      props: {\n        isDisabled: !selectedPolicies.length > 0,\n        variant: 'danger',\n        onClick: () => removePolicies(selectedPolicies)\n      }\n    }\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-policies' }>\n      <TableToolbarView\n        data={ policies }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        request={ fetchGroupPolicies }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"policies\"\n        titleSingular=\"policy\"\n        pagination={ pagination }\n        filterValue={ filterValue }\n        fetchData={ (config) => fetchGroupPolicies({\n          group_uuid: uuid,\n          ...config\n        }) }\n        setFilterValue={ ({ name }) => setFilterValue(name) }\n        setCheckedItems={ setCheckedPolicies }\n        checkedRows={ selectedPolicies }\n        toolbarButtons={ toolbarButtons }\n        isLoading={ isLoading }\n      />\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ policyReducer: { policies, isLoading }}) => ({\n  policies: policies.data,\n  pagination: policies.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroupPolicies,\n  addNotification,\n  removePolicy\n}, dispatch);\n\nGroupPolicies.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  }),\n  policies: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroupPolicies: PropTypes.func.isRequired,\n  removePolicy: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nGroupPolicies.defaultProps = {\n  policies: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPolicies);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport { ActionGroup,\n  Button,\n  Modal,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  TextContent,\n  Text,\n  TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  fetchData,\n  closeUrl,\n  addMembersToGroup\n}) => {\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const onSubmit = () => {\n    const user_list = selectedUsers.map(user => ({ username: user.label }));\n    return addMembersToGroup(uuid, user_list).then(() => {\n      fetchData();\n      push(closeUrl);\n    });\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      title={ 'Add group members' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSubmit }\n                >\n                  Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    rowIndex % 2 === 1 ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            removeMembers([ principal.username ]);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    <Link\n      to={ `/groups/detail/${uuid}/members/add_members` }\n      key=\"remove-from-group\"\n    >\n      <Button\n        variant=\"primary\"\n        aria-label=\"Add member\"\n      >\n        Add member\n      </Button>\n    </Link>,\n    {\n      label: 'Remove selected',\n      props: {\n        isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n        variant: 'danger',\n        onClick: () => removeMembers(selectedPrincipals)\n      }\n    }\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-principals' }>\n      <TableToolbarView\n        data={ principals }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        request={ fetchGroup }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"principals\"\n        titleSingular=\"principal\"\n        pagination={ pagination }\n        filterValue={ filterValue }\n        fetchData={ () => fetchGroup(uuid) }\n        setFilterValue={ ({ name }) => setFilterValue(name) }\n        checkedRows={ selectedPrincipals }\n        isLoading={ isLoading }\n        setCheckedItems={ setCheckedPrincipals }\n        toolbarButtons={ toolbarButtons }\n      />\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups }}, { match: { params: { uuid }}}) => {\n  const activeGroup = groups.data.find((group) => group.uuid === uuid) || {};\n  return {\n    principals: (activeGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: activeGroup.principals && activeGroup.principals.length },\n    isLoading: !activeGroup.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPolicies from './policy/policies';\nimport GroupPrincipals from './principal/principals';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = (props) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: 'Group', isActive: true }\n  ];\n\n  const tabItems = [{ eventKey: 0, title: 'Members', name: `/groups/detail/${props.match.params.uuid}/members` },\n    { eventKey: 1, title: 'Policies', name: `/groups/detail/${props.match.params.uuid}/policies` }];\n\n  const fetchData = (apiProps) => {\n    props.fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(props.match.params.uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !props.isFetching && props.group ? props.group.name : undefined }\n          description={ !props.isFetching && props.group ? props.group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/policies` } component={ GroupPolicies } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${props.match.params.uuid}/members` } /> } />\n      </Switch>\n      { !props.group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ fetchData } /> } />\n  </Fragment>;\n\n  const actionResolver = (_groupData, { rowIndex }) =>\n    rowIndex % 2 === 1 ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    <Link to=\"/groups/add-group\" key=\"add-group\">\n      <Button\n        variant=\"primary\"\n        aria-label=\"Create group\"\n      >\n        Create a group\n      </Button>\n    </Link>,\n    {\n      label: 'Edit group',\n      props: {\n        isDisabled: !(selectedRows.length === 1)\n      },\n      onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n    },\n    {\n      label: 'Delete Group(s)',\n      props: {\n        isDisabled: !selectedRows.length > 0\n      }\n    }\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        name,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USER, FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUser = (state, { payload }) => ({ ...state, selectedUser: payload, isUserDataLoading: false });\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USER}_PENDING`]: setLoadingState,\n  [`${FETCH_USER}_FULFILLED`]: setUser,\n  [`${FETCH_USERS}_PENDIND`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: {\n        count: checkedRows.length,\n        items: [{\n          title: 'Select none (0)',\n          onClick: () => {\n            setCheckedItems(() => []);\n          }\n        },\n        {\n          ...!isLoading && data && data.length > 0 ? {\n            title: `Select page (${data.length})`,\n            onClick: () => {\n              setCheckedItems(selectedRows(data, true));\n            }\n          } : {}\n        }],\n        checked: calculateChecked(data, checkedRows),\n        onSelect: (value) => {\n          !isLoading && setCheckedItems(selectedRows(data, value));\n        }\n      }\n    } }\n    filterConfig={ {\n      items: [{\n        label: titleSingular,\n        type: 'text',\n        filterValues: {\n          id: 'filter-by-string',\n          key: 'filter-by-string',\n          placeholder: `Filter by ${titleSingular}`,\n          value: filterValue,\n          onChange: (_e, value) => {\n            setFilterValue({\n              ...pagination,\n              offset: 0,\n              name: value\n            });\n            debouncedFetch(() => fetchData({\n              ...pagination,\n              offset: 0,\n              name: value\n            }));\n          },\n          isDisabled: isLoading\n        }\n      }]\n    } }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: {\n        itemCount: pagination.count,\n        perPage: pagination.limit,\n        page: getCurrentPage(pagination.limit, pagination.offset),\n        onSetPage: (_event, page) => {\n          fetchData({\n            ...pagination,\n            offset: (page - 1) * pagination.limit,\n            name: filterValue\n          });\n        },\n        perPageOptions: [\n          { title: '5', value: 5 },\n          { title: '10', value: 10 },\n          { title: '20', value: 20 },\n          { title: '50', value: 50 }\n        ],\n        onPerPageSelect: (_event, perPage) => {\n          fetchData({\n            ...pagination,\n            offset: 0,\n            limit: perPage,\n            name: filterValue\n          });\n        }\n      }\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: {\n        filters: [{\n          name: filterValue\n        }],\n        onDelete: () => {\n          setFilterValue({\n            ...pagination,\n            offset: 0,\n            name: ''\n          });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            name: ''\n          });\n        }\n      }\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { Button } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  request: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  requests: [],\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n"],"sourceRoot":""}
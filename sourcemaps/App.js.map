{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/redux/action-types.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/expandable-description.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","AppTabs","_ref","history","pathname","location","tabItems","activeTab","find","_ref2","includes","a","createElement","className","activeKey","eventKey","onSelect","_event","tabIndex","map","item","title","propTypes","PropTypes","shape","string","isRequired","func","array","withRouter","RBAC_API_BASE","concat","process","__webpack_exports__","getPrincipalApi","getGroupApi","getRoleApi","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","getCurrentPage","limit","arguments","offset","Math","floor","mappedProps","apiProps","entries","reduce","acc","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","every","_ref4","uuid","row","some","_ref5","selectedRows","newSelection","isSelected","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","arr","findIndex","_ref7","_ref6","ListLoader","items","props","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_5__","aria-label","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","Array","_item","index","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","aria-labelledby","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","dataListCells","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_13__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","size","SkeletonSize","lg","number","defaultProps","AppPlaceholder","react_content_loader__WEBPACK_IMPORTED_MODULE_12__","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","style","BreadcrumbPlaceholder","FormItemLoader","fetchGroups","_x","_fetchGroups","this","_callee","orderBy","_ref3","groups","auth","regenerator_default","wrap","_context","prev","next","Promise","all","listGroups","insights","chrome","getUser","sent","slicedToArray_default","abrupt","objectSpread_default","stop","fetchGroup","_x2","_fetchGroup","_callee2","_context2","getGroup","updateGroup","_x3","_updateGroup","_callee3","members_list","addUsers","removeUsers","_context3","principals","user","username","user_list","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","_x4","_addGroup","_callee4","newGroup","_context4","createGroup","removeGroup","_x5","_removeGroup","_callee5","groupId","_context5","deleteGroup","deletePrincipalsFromGroup","_x6","_x7","_deletePrincipalsFromGroup","_callee6","users","_context6","addPrincipalsToGroup","_x8","_x9","_addPrincipalsToGroup","_callee7","_context7","fetchRolesForGroup","_x10","_fetchRolesForGroup","_callee8","_context8","listRolesForGroup","deleteRolesFromGroup","_x11","_x12","_deleteRolesFromGroup","_callee9","roles","_context9","deleteRoleFromGroup","addRolesToGroup","_x13","_x14","_addRolesToGroup","_callee10","_context10","addRoleToGroup","options","type","ActionTypes","payload","GroupHelper","groupData","meta","notifications","variant","description","rejected","group","addMembersToGroup","members","removeMembersFromGroup","fetchUsers","listPrincipals","SummaryContent","formData","values","selectedUsers","selectedRoles","react_default","react","Stack","gutter","StackItem","Title","TextContent","Text","component","TextVariants","h5","Grid","GridItem","span","label","role","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","columns","createRows","expanded","checkedRows","email","first_name","last_name","toConsumableArray_default","cells","Boolean","UsersList","isLoading","pagination","setSelectedUsers","_useState","useState","_useState2","filterValue","setFilterValue","useEffect","table_toolbar_view","isSelectable","isCompact","borders","fetchData","config","request","setCheckedItems","titlePlural","titleSingular","goBack","bool","searchFilter","count","defaultCompactSettings","connect","_ref5$userReducer","userReducer","isUserDataLoading","dispatch","addNotification","SetUsers","h6","Card","users_list","RolesList","fetchRoles","setSelectedRoles","_ref5$roleReducer","roleReducer","fetchRolesWithPolicies","SetRoles","roles_list","AddGroupWizard","postMethod","closeUrl","_useState3","_useState4","_useState5","_useState6","setValues","_useState7","_useState8","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","asyncToGenerator_default","mark","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","_ref3$roleReducer","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","objectWithoutProperties_default","FormSelect","extends_default","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","pf4_select_wrapper_Select","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","dist_default","formFieldsMapper","defineProperty_default","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","selectedGroup","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","then","onCancel","schema","properties","required","Modal","minWidth","sm","form_renderer","schemaType","initialValues","react_select_browser_esm","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","groupReducer","RemoveGroupModal","_ref$history","isSmall","actions","Button","onClick","h1","loader_placeholders","loaded","ExpandableDescription","frontend_components","activeGroup","opened","principalCount","modified","react_router_dom","to","date","parent","fullWidth","expandable_description","ExpandableContent","expandable_content","AddGroupMembers","ActionGroup","Split","SplitItem","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","removeMembers","userNames","platform_default","CardBody","Bullseye","is_org_admin","routes","react_router","path","render","args","add_group_members","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","defaultSettings","_ref4$groupReducer","identity","AddGroupRoles","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","add_group_roles","addRoles","removeRolesFromGroup","Group","isFetching","top_toolbar","breadcrumbs","isActive","app_tabs","_ref2$groupReducer","Groups","setSelectedRows","exact","add_group_wizard","edit_group_modal","remove_group_modal","_groupData","group_group","paddingBottm","platforms","_ref5$groupReducer","system","policyCount","ResourceDefinitionsTable","handleChange","editable","_formData$resourceDef","resourceDefinitions","definition","operation","isInline","Table","TableVariant","compact","Header","Body","_formData$application","application","_formData$description","_formData$name","_formData$permission","permission","_formData$resourceTyp","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","createRole","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","roleData","applications","access","attributeFilter","onNext","_ref4$roleReducer","RemoveRoleModal","removeRole","fetchRole","_ref2$roleReducer","selectedRole","isRecordLoading","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setLoadingState","state","user_reducer","_$concat$$concat$$con","FETCH_USER","selectedUser","group_reducer","group_reducer_$concat$$concat$$con","policy_reducer","policy_reducer_$concat$$concat$$con","selectedPolicy","role_reducer","role_reducer_$concat$$concat$$con","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","policyReducer","policy","getStore","lazy","resolve","interopRequireWildcard_default","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","routes_InsightsRoute","childProps","App","chromeNavAvailable","_this2","init","setState","identifyApp","lib","locale","Fragment","frontend_components_notifications","marginLeft","padding","routes_Routes","Component","ReactDOM","es","store","basename","getBaseName","src_App_0","_createRole","createRoles","_fetchRolesWithPolicies","t0","t1","listRoles","t2","t3","_fetchRole","getRole","_removeRole","roleId","deleteRole","role_actions_createRole","role_actions_fetchRole","role_actions_fetchRoles","role_actions_fetchRolesWithPolicies","role_actions_removeRole","RoleHelper","itemCount","numberOfItems","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","checked","filterConfigBuilder","filterValues","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","text","node","TableToolbarView","openRow","onCollapse","_index","toolbar","canSelectAll","_idx","empty_filter","colSpan","Pagination","dropDirection","UsersIcon","requests","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","top_toolbar_TopToolbar","top_toolbar_TopToolbarTitle","TopToolbar","children","paddingBottom","Level","breadcrubms","TopToolbarTitle","LevelItem"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([418,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  if (data.user_list && data.user_list.length > 0) {\n    return groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  return newGroup;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId) {\n  return await groupApi.listRolesForGroup(groupId);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers() {\n  return principalApi.listPrincipals();\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUser = () => ({\n  type: ActionTypes.FETCH_USER,\n  payload: new Promise(resolve => {\n    resolve(UserHelper.fetchUser());\n  })\n});\n\nexport const fetchUsers = () => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers()\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data,\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = { ...formData, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod()).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { connect } from 'react-redux';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nconst ExpandableDescription = ({ members, fetchGroup, uuid, loaded }) => {\n  useEffect(() => {\n    fetchGroup(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"groups-table-detail heading\" component={ TextVariants.small }>Members</Text>\n        {\n          loaded ?\n            <Text className=\"groups-table-detail content\" component={ TextVariants.h5 }>\n              {\n                members.length === 0 ? 'No members' :\n                  members.map(({ first_name, last_name }) => `${first_name} ${last_name}`)\n              }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div>\n        }\n      </TextContent>\n    </Fragment>\n  );};\n\nExpandableDescription.propTypes = {\n  description: PropTypes.string,\n  uuid: PropTypes.string,\n  members: PropTypes.arrayOf(PropTypes.shape({\n    first_name: PropTypes.string,\n    last_name: PropTypes.string\n  })),\n  loaded: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nExpandableDescription.defaultProps = {\n  members: [],\n  loaded: false,\n  fetchGroup: () => undefined\n};\n\nconst mapStateToProps = ({ groupReducer: { groups }}, { uuid }) => {\n  const activeGroup = groups.data.find((group) => group.uuid === uuid) || {};\n  return ({\n    members: activeGroup.principals,\n    description: activeGroup.description,\n    loaded: activeGroup.loaded\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGroup: (uuid) => dispatch(fetchGroup(uuid))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpandableDescription);\n\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport ExpandableDescription from './expandable-description';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }, key) => ([\n    ...acc,\n    {\n      uuid,\n      isOpen: Boolean(opened[uuid]),\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: opened[uuid] ?\n          <ExpandableDescription uuid={ uuid } /> :\n          <Fragment />\n      }]\n    }\n  ]), [])\n);\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport { ActionGroup,\n  Button,\n  Modal,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  TextContent,\n  Text,\n  TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  fetchData,\n  closeUrl,\n  addMembersToGroup\n}) => {\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const onSubmit = () => {\n    const user_list = selectedUsers.map(user => ({ username: user.label }));\n    return addMembersToGroup(uuid, user_list).then(() => {\n      fetchData();\n      push(closeUrl);\n    });\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      title={ 'Add group members' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSubmit }\n                >\n                  Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            removeMembers([ principal.username ]);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove selected',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger',\n            onClick: () => removeMembers(selectedPrincipals)\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-principals' }>\n      {\n        group.platform_default ?\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                  </Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card> :\n          <TableToolbarView\n            data={ principals }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            createRows={ createRows }\n            columns={ columns }\n            request={ fetchGroup }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"principals\"\n            titleSingular=\"principal\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ () => fetchGroup(uuid) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            checkedRows={ selectedPrincipals }\n            isLoading={ isLoading }\n            setCheckedItems={ setCheckedPrincipals }\n            toolbarButtons={ toolbarButtons }\n          /> }\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Form,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport RolesList from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  description,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles;\n    return addRolesToGroup(uuid, rolesList).then(() => {\n      fetchRolesForGroup(uuid);\n      push(closeUrl);\n    });\n  };\n\n  return (\n    <Modal\n      title={ 'Add group roles' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Fragment>\n        <Form>\n          <Stack gutter=\"md\">\n            { title && <StackItem>\n              <Title size=\"xl\">{ title }</Title>\n            </StackItem> }\n            <StackItem>\n              <TextContent>\n                <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </StackItem>\n            <StackItem>\n              <ActionGroup>\n                <Split gutter=\"md\">\n                  <SplitItem>\n                    <Button\n                      aria-label=\"Save\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={ onSubmit }\n                    >\n                      Save\n                    </Button>\n                  </SplitItem>\n                  <SplitItem>\n                    <Button\n                      aria-label='Cancel'\n                      variant='secondary'\n                      type='button'\n                      onClick={ onCancel }>Cancel</Button>\n                  </SplitItem>\n                </Split>\n              </ActionGroup>\n            </StackItem>\n          </Stack>\n        </Form>\n      </Fragment>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        name,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  // addRoles,\n  // fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n\n  useEffect(() => {\n    // !!!! HERE SHOULD BE fetchRolesForGroup !!!!\n    // fetchRolesForGroup({ ...pagination, name: filterValue });\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const actionResolver = () => (\n    [\n      ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n        [\n          {\n            title: 'Remove from group',\n            onClick: (_event, _rowId, role) => {\n              removeRoles(uuid, [ role.uuid ]);\n            }\n          }\n        ] : []\n    ]);\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRolesToGroup }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add a role\"\n          >\n        Add a role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger',\n            onClick: () => removeRoles(selectedRoles)\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-roles' }>\n      <TableToolbarView\n        columns={ columns }\n        isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n        createRows={ createRows }\n        data={ roles }\n        filterValue={ filterValue }\n        fetchData={ (config) => fetchRoles(mappedProps(config)) }\n        setFilterValue={ ({ name }) => setFilterValue(name) }\n        isLoading={ isLoading }\n        pagination={ pagination }\n        // !!!! HERE SHOULD BE fetchRolesForGroup !!!!\n        request={ fetchRoles }\n        checkedRows={ selectedRoles }\n        setCheckedItems={ setCheckedItems }\n        titlePlural=\"roles\"\n        titleSingular=\"role\"\n        toolbarButtons={ toolbarButtons }\n        actionResolver={ actionResolver }\n        routes={ routes }\n      />\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }, groupReducer: { groups }}) => {\n  return {\n    roles: roles.data,\n    pagination: roles.meta,\n    isLoading,\n    userIdentity: groups.identity\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (apiProps) => dispatch(addRolesToGroup(mappedProps(apiProps))),\n    removeRoles: (groupId, roles) => dispatch(removeRolesFromGroup(groupId, roles)),\n    fetchRolesForGroup: (groupId) => dispatch(fetchRolesForGroup(groupId)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !isFetching && group ? group.name : undefined }\n          description={ !isFetching && group ? group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ fetchData } /> } />\n  </Fragment>;\n\n  const actionResolver = (_groupData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create a group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        name,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USER, FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUser = (state, { payload }) => ({ ...state, selectedUser: payload, isUserDataLoading: false });\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USER}_PENDING`]: setLoadingState,\n  [`${FETCH_USER}_FULFILLED`]: setUser,\n  [`${FETCH_USERS}_PENDIND`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = ''\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  request: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  requests: [],\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n"],"sourceRoot":""}
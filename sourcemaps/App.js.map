{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/redux/action-types.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/expandable-description.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","AppTabs","_ref","history","pathname","location","tabItems","activeTab","find","_ref2","includes","a","createElement","className","activeKey","eventKey","onSelect","_event","tabIndex","map","item","title","propTypes","PropTypes","shape","string","isRequired","func","array","withRouter","RBAC_API_BASE","concat","process","__webpack_exports__","getPrincipalApi","getGroupApi","getRoleApi","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","FETCH_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUP","FETCH_USERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","getCurrentPage","limit","arguments","offset","Math","floor","mappedProps","apiProps","entries","reduce","acc","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","every","_ref4","uuid","row","some","_ref5","selectedRows","newSelection","isSelected","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","arr","findIndex","_ref7","_ref6","fetchGroups","_x","_fetchGroups","this","_callee","orderBy","_ref3","groups","auth","regenerator_default","wrap","_context","prev","next","Promise","all","listGroups","insights","chrome","getUser","sent","slicedToArray_default","abrupt","objectSpread_default","stop","fetchGroup","_x2","_fetchGroup","_callee2","_context2","getGroup","updateGroup","_x3","_updateGroup","_callee3","members_list","addUsers","removeUsers","_context3","principals","user","username","user_list","addPrincipalToGroup","deletePrincipalFromGroup","join","addGroup","_x4","_addGroup","_callee4","newGroup","_context4","createGroup","removeGroup","_x5","_removeGroup","_callee5","groupId","_context5","deleteGroup","deletePrincipalsFromGroup","_x6","_x7","_deletePrincipalsFromGroup","_callee6","users","_context6","addPrincipalsToGroup","_x8","_x9","_addPrincipalsToGroup","_callee7","_context7","fetchRolesForGroup","_x10","_fetchRolesForGroup","_callee8","_context8","listRolesForGroup","deleteRolesFromGroup","_x11","_x12","_deleteRolesFromGroup","_callee9","roles","_context9","deleteRoleFromGroup","addRolesToGroup","_x13","_x14","_addRolesToGroup","_callee10","_context10","addRoleToGroup","options","type","ActionTypes","payload","GroupHelper","groupData","meta","notifications","variant","description","rejected","group","addMembersToGroup","members","removeMembersFromGroup","fetchUsers","listPrincipals","SummaryContent","formData","values","selectedUsers","selectedRoles","react_default","react","Stack","gutter","StackItem","Title","size","TextContent","Text","component","TextVariants","h5","Grid","GridItem","span","index","label","role","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","id","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","columns","createRows","expanded","checkedRows","email","first_name","last_name","toConsumableArray_default","cells","Boolean","UsersList","isLoading","pagination","setSelectedUsers","_useState","useState","_useState2","filterValue","setFilterValue","useEffect","table_toolbar_view","isSelectable","isCompact","borders","fetchData","config","request","setCheckedItems","titlePlural","titleSingular","goBack","bool","searchFilter","number","count","defaultProps","defaultCompactSettings","connect","_ref5$userReducer","userReducer","isUserDataLoading","dispatch","addNotification","SetUsers","h6","Card","users_list","RolesList","fetchRoles","setSelectedRoles","_ref5$roleReducer","roleReducer","fetchRolesWithPolicies","SetRoles","roles_list","AddGroupWizard","postMethod","closeUrl","_useState3","_useState4","_useState5","_useState6","setValues","_useState7","_useState8","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","asyncToGenerator_default","mark","user_data","Wizard","isLarge","isOpen","onClose","dismissable","onSave","inputValue","match","_ref3$roleReducer","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","objectWithoutProperties_default","FormSelect","extends_default","selectOptions","createOptions","props","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","pf4_select_wrapper_Select","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","dist_default","formFieldsMapper","defineProperty_default","componentTypes","SELECT","layoutMapper","oneOf","components","DropdownIndicator","EditGroupModal","params","selectedGroup","setSelectedGroup","setInputValue","optionIdx","setOptionIdx","createOption","idx","setGroupData","then","onCancel","schema","properties","required","Modal","style","minWidth","sm","form_renderer","schemaType","initialValues","react_select_browser_esm","defaultValue","isClearable","isMulti","menuIsOpen","onInputChange","val","onKeyDown","preventDefault","placeholder","groupReducer","RemoveGroupModal","_ref$history","isSmall","actions","Button","onClick","h1","loader_placeholders","_ref2$groupReducer","isRecordLoading","ExpandableDescription","loaded","frontend_components","SkeletonSize","activeGroup","opened","principalCount","modified","react_router_dom","to","date","parent","fullWidth","expandable_description","ExpandableContent","expandable_content","AddGroupMembers","width","ActionGroup","Split","SplitItem","aria-label","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","removeMembers","userNames","platform_default","CardBody","Bullseye","is_org_admin","routes","react_router","path","render","args","add_group_members","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","defaultSettings","_ref4$groupReducer","identity","AddGroupRoles","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","add_group_roles","addRoles","removeRolesFromGroup","Group","isFetching","top_toolbar","breadcrumbs","isActive","app_tabs","Groups","setSelectedRows","exact","add_group_wizard","edit_group_modal","remove_group_modal","_groupData","group_group","paddingBottm","platforms","_ref5$groupReducer","ListLoader","items","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","Array","_item","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","aria-labelledby","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","dataListCells","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_13__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","lg","AppPlaceholder","react_content_loader__WEBPACK_IMPORTED_MODULE_12__","height","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","BreadcrumbPlaceholder","FormItemLoader","system","policyCount","ResourceDefinitionsTable","handleChange","editable","_formData$resourceDef","resourceDefinitions","definition","operation","isInline","Table","TableVariant","compact","Header","Body","_formData$application","application","_formData$description","_formData$name","_formData$permission","permission","_formData$resourceTyp","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","createRole","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","roleData","applications","access","attributeFilter","onNext","_ref4$roleReducer","RemoveRoleModal","removeRole","fetchRole","_ref2$roleReducer","selectedRole","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","areActionsDisabled","_roleData","policies","cost_management","oneOfType","entitlements","setLoadingState","state","user_reducer","_$concat$$concat$$con","FETCH_USER","selectedUser","group_reducer","group_reducer_$concat$$concat$$con","policy_reducer","policy_reducer_$concat$$concat$$con","selectedPolicy","role_reducer","role_reducer_$concat$$concat$$con","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","policyReducer","policy","getStore","lazy","resolve","interopRequireWildcard_default","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","routes_InsightsRoute","childProps","App","chromeNavAvailable","_this2","init","setState","identifyApp","lib","locale","Fragment","frontend_components_notifications","marginLeft","padding","routes_Routes","Component","ReactDOM","es","store","basename","getBaseName","src_App_0","_createRole","createRoles","_fetchRolesWithPolicies","t0","t1","listRoles","t2","t3","_fetchRole","getRole","_removeRole","roleId","deleteRole","role_actions_createRole","role_actions_fetchRole","role_actions_fetchRoles","role_actions_fetchRolesWithPolicies","role_actions_removeRole","RoleHelper","itemCount","numberOfItems","Toolbar","PrimaryToolbar","bulkSelect","checked","filterConfig","filterValues","_e","actionsConfig","perPage","page","onSetPage","perPageOptions","onPerPageSelect","activeFiltersConfig","filters","onDelete","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","text","node","TableToolbarView","openRow","onCollapse","_index","toolbar","canSelectAll","_idx","empty_filter","colSpan","UsersIcon","requests","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","top_toolbar_TopToolbar","top_toolbar_TopToolbarTitle","TopToolbar","children","paddingBottom","Level","breadcrubms","TopToolbarTitle","LevelItem"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([411,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n\n  const members_list = data.principals ? data.principals.map(user => user.username) : [];\n  let addUsers = data.user_list.filter(item => !members_list.includes(item.username));\n  let removeUsers = members_list.filter(item => !(data.user_list.map(user => user.username).includes(item)));\n  if (addUsers.length > 0) {\n    await groupApi.addPrincipalToGroup(data.uuid, { principals: addUsers });\n  }\n\n  if (removeUsers.length > 0) {\n    await groupApi.deletePrincipalFromGroup(data.uuid, removeUsers.join(','));\n  }\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  if (data.user_list && data.user_list.length > 0) {\n    return groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  return newGroup;\n}\n\nexport async function removeGroup(groupId) {\n  return await groupApi.deleteGroup(groupId);\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId) {\n  return await groupApi.listRolesForGroup(groupId);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroup = (group) => ({\n  type: ActionTypes.REMOVE_GROUP,\n  payload: GroupHelper.removeGroup(group),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing group',\n        description: 'The group was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers() {\n  return principalApi.listPrincipals();\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUser = () => ({\n  type: ActionTypes.FETCH_USER,\n  payload: new Promise(resolve => {\n    resolve(UserHelper.fetchUser());\n  })\n});\n\nexport const fetchUsers = () => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers()\n});\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'User name', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data,\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = { ...formData, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissable: true,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title={ 'Add group' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport FormRenderer from '../common/form-renderer';\nimport { Modal, Grid, GridItem, TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState({});\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n    if (groupData) {\n      setSelectedUsers(groupData.principals.map(user => (createOption(user.username))));\n    }\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = data => {\n    const user_data = { ...data, user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : []};\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissable: true,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: selectedGroup ? 'Group Name' : 'New Group Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name' ]\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ selectedGroup ? 'Edit group' : 'Add group' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <Grid gutter=\"md\" style={ { minWidth: '800px' } }>\n        <GridItem sm={ 6 }>\n          <FormRenderer\n            schema={ schema }\n            schemaType=\"mozilla\"\n            onSubmit={ onSubmit }\n            onCancel={ onCancel }\n            formContainer=\"modal\"\n            initialValues={ { ...selectedGroup } }\n          />\n        </GridItem>\n        <GridItem sm={ 6 }>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  closeUrl: '/groups'\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup, removeGroup } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeGroup,\n  group,\n  isLoading,\n  fetchGroup,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    fetchGroup(id);\n  }, []);\n\n  const onSubmit = () =>\n    postMethod ? removeGroup(id).then(() => postMethod()).then(push(closeUrl)) :\n      removeGroup(id).then(() => push(closeUrl));\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Group:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { group.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  group: {},\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isRecordLoading }}) => ({\n  group: selectedGroup,\n  isLoading: isRecordLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { connect } from 'react-redux';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nconst ExpandableDescription = ({ members, fetchGroup, uuid, loaded }) => {\n  useEffect(() => {\n    fetchGroup(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"groups-table-detail heading\" component={ TextVariants.small }>Members</Text>\n        {\n          loaded ?\n            <Text className=\"groups-table-detail content\" component={ TextVariants.h5 }>\n              {\n                members.length === 0 ? 'No members' :\n                  members.map(({ first_name, last_name }) => `${first_name} ${last_name}`)\n              }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div>\n        }\n      </TextContent>\n    </Fragment>\n  );};\n\nExpandableDescription.propTypes = {\n  description: PropTypes.string,\n  uuid: PropTypes.string,\n  members: PropTypes.arrayOf(PropTypes.shape({\n    first_name: PropTypes.string,\n    last_name: PropTypes.string\n  })),\n  loaded: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nExpandableDescription.defaultProps = {\n  members: [],\n  loaded: false,\n  fetchGroup: () => undefined\n};\n\nconst mapStateToProps = ({ groupReducer: { groups }}, { uuid }) => {\n  const activeGroup = groups.data.find((group) => group.uuid === uuid) || {};\n  return ({\n    members: activeGroup.principals,\n    description: activeGroup.description,\n    loaded: activeGroup.loaded\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGroup: (uuid) => dispatch(fetchGroup(uuid))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpandableDescription);\n\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport ExpandableDescription from './expandable-description';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, description, principalCount, modified }, key) => ([\n    ...acc,\n    {\n      uuid,\n      isOpen: Boolean(opened[uuid]),\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            <Button variant=\"link\"> { name } </Button>\n          </Link>\n        </Fragment>,\n        description,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: opened[uuid] ?\n          <ExpandableDescription uuid={ uuid } /> :\n          <Fragment />\n      }]\n    }\n  ]), [])\n);\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport { ActionGroup,\n  Button,\n  Modal,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  TextContent,\n  Text,\n  TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  fetchData,\n  closeUrl,\n  addMembersToGroup\n}) => {\n  const [ inputValue, setInputValue ] = useState('');\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ optionIdx, setOptionIdx ] = useState(0);\n\n  const createOption = (label) => {\n    let idx = optionIdx;\n    setOptionIdx(optionIdx + 1);\n    return {\n      label,\n      value: `${label}_${idx}`\n    };\n  };\n\n  const onSubmit = () => {\n    const user_list = selectedUsers.map(user => ({ username: user.label }));\n    return addMembersToGroup(uuid, user_list).then(() => {\n      fetchData();\n      push(closeUrl);\n    });\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const handleChange = (value) => {\n    setSelectedUsers(value);\n  };\n\n  const handleInputChange = (val) => {\n    setInputValue(val);\n  };\n\n  const handleKeyDown = (event) => {\n    if (!inputValue) {return;}\n\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (selectedUsers) {\n          if (!selectedUsers.find(user => (user.label === inputValue))) {\n            setSelectedUsers([ ...selectedUsers, createOption(inputValue) ]);\n          }\n        }\n        else {\n          setSelectedUsers([ createOption(inputValue) ]);\n        }\n\n        setInputValue('');\n        event.preventDefault();\n    }\n  };\n\n  return (\n    <Modal\n      title={ 'Add group members' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>Select Members for this group.</Text>\n          </TextContent>\n          <CreatableSelect\n            components={ components }\n            inputValue={ inputValue }\n            defaultValue={ selectedUsers }\n            isClearable\n            isMulti\n            menuIsOpen={ false }\n            onChange={ handleChange }\n            onInputChange={ handleInputChange }\n            onKeyDown={ handleKeyDown }\n            placeholder=\"Type the exact user name and press enter...\"\n            value={ selectedUsers }\n          />\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSubmit }\n                >\n                  Save\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            removeMembers([ principal.username ]);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove selected',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger',\n            onClick: () => removeMembers(selectedPrincipals)\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-principals' }>\n      {\n        group.platform_default ?\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                  </Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card> :\n          <TableToolbarView\n            data={ principals }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            createRows={ createRows }\n            columns={ columns }\n            request={ fetchGroup }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"principals\"\n            titleSingular=\"principal\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ () => fetchGroup(uuid) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            checkedRows={ selectedPrincipals }\n            isLoading={ isLoading }\n            setCheckedItems={ setCheckedPrincipals }\n            toolbarButtons={ toolbarButtons }\n          /> }\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Form,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport RolesList from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  description,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissable: true,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles;\n    return addRolesToGroup(uuid, rolesList).then(() => {\n      fetchRolesForGroup(uuid);\n      push(closeUrl);\n    });\n  };\n\n  return (\n    <Modal\n      title={ 'Add group roles' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Fragment>\n        <Form>\n          <Stack gutter=\"md\">\n            { title && <StackItem>\n              <Title size=\"xl\">{ title }</Title>\n            </StackItem> }\n            <StackItem>\n              <TextContent>\n                <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </StackItem>\n            <StackItem>\n              <ActionGroup>\n                <Split gutter=\"md\">\n                  <SplitItem>\n                    <Button\n                      aria-label=\"Save\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={ onSubmit }\n                    >\n                      Save\n                    </Button>\n                  </SplitItem>\n                  <SplitItem>\n                    <Button\n                      aria-label='Cancel'\n                      variant='secondary'\n                      type='button'\n                      onClick={ onCancel }>Cancel</Button>\n                  </SplitItem>\n                </Split>\n              </ActionGroup>\n            </StackItem>\n          </Stack>\n        </Form>\n      </Fragment>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        name,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  // addRoles,\n  // fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n\n  useEffect(() => {\n    // !!!! HERE SHOULD BE fetchRolesForGroup !!!!\n    // fetchRolesForGroup({ ...pagination, name: filterValue });\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const actionResolver = () => (\n    [\n      ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n        [\n          {\n            title: 'Remove from group',\n            onClick: (_event, _rowId, role) => {\n              removeRoles(uuid, [ role.uuid ]);\n            }\n          }\n        ] : []\n    ]);\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRolesToGroup }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add a role\"\n          >\n        Add a role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger',\n            onClick: () => removeRoles(selectedRoles)\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Section type=\"content\" id={ 'tab-roles' }>\n      <TableToolbarView\n        columns={ columns }\n        isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n        createRows={ createRows }\n        data={ roles }\n        filterValue={ filterValue }\n        fetchData={ (config) => fetchRoles(mappedProps(config)) }\n        setFilterValue={ ({ name }) => setFilterValue(name) }\n        isLoading={ isLoading }\n        pagination={ pagination }\n        // !!!! HERE SHOULD BE fetchRolesForGroup !!!!\n        request={ fetchRoles }\n        checkedRows={ selectedRoles }\n        setCheckedItems={ setCheckedItems }\n        titlePlural=\"roles\"\n        titleSingular=\"role\"\n        toolbarButtons={ toolbarButtons }\n        actionResolver={ actionResolver }\n        routes={ routes }\n      />\n    </Section>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }, groupReducer: { groups }}) => {\n  return {\n    roles: roles.data,\n    pagination: roles.meta,\n    isLoading,\n    userIdentity: groups.identity\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (apiProps) => dispatch(addRolesToGroup(mappedProps(apiProps))),\n    removeRoles: (groupId, roles) => dispatch(removeRolesFromGroup(groupId, roles)),\n    fetchRolesForGroup: (groupId) => dispatch(fetchRolesForGroup(groupId)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'User Access Management', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <TopToolbarTitle title= { !isFetching && group ? group.name : undefined }\n          description={ !isFetching && group ? group.description : undefined }/>\n        <AppTabs tabItems={ tabItems } />\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Description', 'Members', 'Last modified' ];\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows).map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/remove/:id\" render={ props => <RemoveGroup { ...props } postMethod={ fetchData } /> } />\n  </Fragment>;\n\n  const actionResolver = (_groupData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) =>\n            push(`/groups/remove/${group.uuid}`)\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create a group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle title=\"User access management\"/>\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, policyCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        name,\n        description,\n        policyCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissable: true,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nconst columns = [\n  { title: 'Role', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Policies' },\n  { title: 'Last Modified', orderBy: 'modified' }\n];\n\nconst tabItems = [\n  { eventKey: 0, title: 'Groups', name: '/groups' },\n  { eventKey: 1, title: 'Roles', name: '/roles' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const areActionsDisabled = (_roleData) => {\n    return _roleData.policies.title > 1;\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n          <AppTabs tabItems={ tabItems }/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            areActionsDisabled={ areActionsDisabled }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USER, FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUser = (state, { payload }) => ({ ...state, selectedUser: payload, isUserDataLoading: false });\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USER}_PENDING`]: setLoadingState,\n  [`${FETCH_USER}_FULFILLED`]: setUser,\n  [`${FETCH_USERS}_PENDIND`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: {\n        count: checkedRows.length,\n        items: [{\n          title: 'Select none (0)',\n          onClick: () => {\n            setCheckedItems(() => []);\n          }\n        },\n        {\n          ...!isLoading && data && data.length > 0 ? {\n            title: `Select page (${data.length})`,\n            onClick: () => {\n              setCheckedItems(selectedRows(data, true));\n            }\n          } : {}\n        }],\n        checked: calculateChecked(data, checkedRows),\n        onSelect: (value) => {\n          !isLoading && setCheckedItems(selectedRows(data, value));\n        }\n      }\n    } }\n    filterConfig={ {\n      items: [{\n        label: titleSingular,\n        type: 'text',\n        filterValues: {\n          id: 'filter-by-string',\n          key: 'filter-by-string',\n          placeholder: `Filter by ${titleSingular}`,\n          value: filterValue,\n          onChange: (_e, value) => {\n            setFilterValue({\n              ...pagination,\n              offset: 0,\n              name: value\n            });\n            debouncedFetch(() => fetchData({\n              ...pagination,\n              offset: 0,\n              name: value\n            }));\n          },\n          isDisabled: isLoading\n        }\n      }]\n    } }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: {\n        itemCount: pagination.count,\n        perPage: pagination.limit,\n        page: getCurrentPage(pagination.limit, pagination.offset),\n        onSetPage: (_event, page) => {\n          fetchData({\n            ...pagination,\n            offset: (page - 1) * pagination.limit,\n            name: filterValue\n          });\n        },\n        perPageOptions: [\n          { title: '5', value: 5 },\n          { title: '10', value: 10 },\n          { title: '20', value: 20 },\n          { title: '50', value: 50 }\n        ],\n        onPerPageSelect: (_event, perPage) => {\n          fetchData({\n            ...pagination,\n            offset: 0,\n            limit: perPage,\n            name: filterValue\n          });\n        }\n      }\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: {\n        filters: [{\n          name: filterValue\n        }],\n        onDelete: () => {\n          setFilterValue({\n            ...pagination,\n            offset: 0,\n            name: ''\n          });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            name: ''\n          });\n        }\n      }\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { Button } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { UsersIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        onCollapse={ onCollapse }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ UsersIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  request: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  requests: [],\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\n\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n"],"sourceRoot":""}
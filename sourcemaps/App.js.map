{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/smart-components/user/users.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/principal/expandable-content.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/group-row-wrapper.js","webpack:///./src/smart-components/group/groups.js","webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js","webpack:///./src/redux/reducers/user-reducer.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/entry.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/redux/action-types.js"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","jsonpArray","webpackJsonpCallback","columns","title","orderBy","createRows","data","expanded","checkedRows","reduce","acc","username","email","first_name","last_name","uuid","cells","selected","Boolean","find","row","UsersList","users","fetchUsers","isLoading","pagination","selectedUsers","setSelectedUsers","props","useState","filterValue","setFilterValue","useEffect","isSelectable","isCompact","borders","fetchData","config","mappedProps","name","noBottom","toggleTemplate","firstIndex","lastIndex","request","setCheckedItems","newSelection","map","label","titlePlural","titleSingular","propTypes","history","PropTypes","shape","goBack","func","isRequired","push","array","bool","searchFilter","string","limit","number","offset","count","defaultProps","defaultCompactSettings","connect","userReducer","isUserDataLoading","meta","dispatch","apiProps","addNotification","RBAC_API_BASE","process","principalApi","PrincipalApi","undefined","axiosInstance","groupApi","GroupApi","roleApi","RoleApi","PolicyApi","getPrincipalApi","getGroupApi","getRoleApi","permission","modified","split","appName","type","operation","date","transforms","cellWidth","Permissions","filter","setConfig","useSelector","state","role","roleReducer","selectedRole","isRecordLoading","shallowEqual","access","filteredRows","includes","className","TextContent","Text","component","TextVariants","h1","slice","Role","useParams","groupUuid","group","groupReducer","selectedGroup","useDispatch","fetchRole","fetchGroup","breadcrumbs","to","loaded","isActive","description","ActionTypes","payload","listPrincipals","then","isLast","currData","Infinity","fetchGroups","a","Promise","all","listGroups","insights","chrome","auth","getUser","groups","getGroup","updateGroup","addGroup","createGroup","newGroup","ret","user_list","addPrincipalToGroup","principals","roles_list","addRoleToGroup","roles","removeGroups","uuids","deleteGroup","deletePrincipalsFromGroup","groupId","deletePrincipalFromGroup","join","addPrincipalsToGroup","fetchRolesForGroup","excluded","options","listRolesForGroup","deleteRolesFromGroup","deleteRoleFromGroup","addRolesToGroup","GroupHelper","groupData","notifications","fulfilled","variant","rejected","addMembersToGroup","members","removeMembersFromGroup","fetchAddRolesForGroup","removeRolesFromGroup","defaultSettings","itemCount","numberOfItems","ListLoader","items","aria-label","Array","_item","index","aria-labelledby","dataListCells","size","SkeletonSize","lg","AppPlaceholder","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","ToolbarTitlePlaceholder","style","BreadcrumbPlaceholder","FormItemLoader","createRole","createRoles","fetchRoles","listRoles","fetchRolesWithPolicies","getRole","removeRole","roleId","deleteRole","roleData","RoleHelper","getCurrentPage","Math","floor","entries","debouncedFetch","debouncePromise","callback","calculateChecked","rows","every","some","selectedRows","isSelected","arr","findIndex","Users","isProd","window","href","paddingBottm","id","SummaryContent","formData","values","selectedRoles","Stack","gutter","StackItem","Title","h5","Grid","GridItem","span","p","user","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","aria-describedby","onChange","_","event","currentTarget","trim","TextArea","SetUsers","h6","Card","RolesList","setSelectedRoles","ExcludedRolesList","addRoles","propsFromState","propsFromDispatch","ownProps","SetRoles","AddGroupWizard","postMethod","closeUrl","setValues","isGroupInfoValid","steps","enableNext","nextButtonText","onSubmit","user_data","Wizard","isLarge","isOpen","onClose","dismissDelay","onSave","inputValue","match","withRouter","bindActionCreators","Select","input","isReadOnly","isDisabled","FieldProvider","rest","FormSelect","selectOptions","createOptions","FormSelectOption","toString","arrayOf","any","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","EditGroupModal","params","setSelectedGroup","setGroupData","onCancel","schema","fields","TEXT_FIELD","validate","validatorTypes","REQUIRED","TEXTAREA_FIELD","Modal","schemaType","initialValues","renderFormButtons","pristine","valid","submit","form","Button","onClick","RemoveGroupModal","groupsUuid","isModalOpen","checked","setChecked","multipleGroups","isSmall","actions","isFooterLeftAligned","Checkbox","isChecked","opened","roleCount","principalCount","isPlatformDefault","platform_default","AppTabs","pathname","location","tabItems","activeTab","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","item","Tab","ExpandableContent","parent","fullWidth","AddGroupMembers","userList","RemoveModal","text","confirmButtonLabel","Split","SplitItem","isFilled","cellFormatters","expandable","GroupPrincipals","userIdentity","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","removeModalText","plural","removeMembers","userNames","CardBody","Bullseye","isCollapsible","is_org_admin","routes","path","render","args","actionResolver","_principalData","rowIndex","color","_rowId","principal","toolbarButtons","multipleMembersSelected","emptyProps","identity","AddGroupRoles","ActionGroup","rolesList","GroupRoles","removeRoles","selectedAddRoles","setSelectedAddRoles","Fragment","multipleRolesSelected","reloadWrapper","Group","isFetching","showEdit","setShowEdit","Level","LevelItem","GroupRowWrapper","RowWrapper","clsx","Groups","setSelectedRows","removeGroupsList","setRemoveGroupsList","exact","ids","paddingBottom","filterPlaceholder","rowWrapper","platforms","system","accessCount","ResourceDefinitionsTable","handleChange","editable","resourceDefinitions","definition","isInline","Table","TableVariant","compact","application","resourceType","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","ResourceDefinitions","resourceDefinition","setResourceDefinition","hasDuplicates","result","isFormValid","updateDefinition","definitions","RoleInformation","PermissionInformation","getFormValues","AddRoleWizard","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","canJumpTo","applications","attributeFilter","onNext","RemoveRoleModal","Roles","userEntitlements","RemoveRole","userAllowed","isBeta","cost_management","oneOfType","entitlements","FETCH_USERS","setRecordLoadingState","FETCH_GROUPS","FETCH_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","RESET_SELECTED_GROUP","FETCH_GROUP_POLICIES","policies","FETCH_POLICY","selectedPolicy","FETCH_ROLE","FETCH_ROLES","registry","ReducerRegistry","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","register","applyReducerHash","selectedUser","policyReducer","policy","getStore","lazy","paths","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","setAttribute","Routes","fallback","childProps","App","chromeNavAvailable","this","init","setState","identifyApp","unregister","on","domEvent","navId","locale","marginLeft","padding","Component","ReactDOM","store","basename","getBaseName","RbacBreadcrumbs","Breadcrumb","BreadcrumbItem","TopToolbar","children","node","TopToolbarTitle","paginationBuilder","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","filterConfigBuilder","filterValues","placeholder","_e","activeFiltersConfigBuilder","filters","onDelete","Toolbar","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","EmptyWithFilter","icon","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","headingLevel","EmptyStateBody","TableToolbarView","areActionsDisabled","openRow","onCollapse","_index","canSelectAll","_idx","colSpan","Pagination","dropDirection","PlusCircleIcon","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUPS","ADD_ROLE","REMOVE_ROLE","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/rbac/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([469,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Username', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers, props }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    request={ fetchUsers }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n    { ...props }\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  props: PropTypes.object\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings,\n  selectedUsers: [],\n  setSelectedUsers: () => undefined\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","export const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { permission, modified }) => {\n    const [ appName, type, operation ] = permission.split(':');\n    return ([\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation,\n          <Fragment key={ `${appName}-modified` }>\n            <DateFormat date={ modified } type=\"relative\" />\n          </Fragment>\n        ]\n      }\n    ]);\n  }, [])\n);\n","import React, { useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-permissions-table-helpers';\nimport { cellWidth } from '@patternfly/react-table';\nimport './role-permissions.scss';\n\nconst columns = [\n  { title: 'Application' },\n  { title: 'Resource type' },\n  { title: 'Operation' },\n  { title: 'Last commit', transforms: [ cellWidth(15) ]}\n];\n\nconst Permissions = () => {\n  const [ config, setConfig ] = useState({\n    pagination: {\n      limit: 10,\n      offset: 0,\n      count: 0,\n      filter: ''\n    }\n  });\n  const { role, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading\n  }), shallowEqual);\n\n  const { pagination, filter } = config;\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0\n      }\n    });\n  }, [ role ]);\n\n  const filteredRows = (role && role.access) ?\n    (role.access || [])\n    .filter(({ permission }) => permission === '*' || filter ? permission.includes(filter) : true)\n    .map(acc => ({ ...acc, modified: role.modified })) :\n    [];\n\n  return <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n    <TextContent>\n      <Text component={ TextVariants.h1 }>Permissions</Text>\n    </TextContent>\n    <TableToolbarView\n      columns={ columns }\n      createRows={ createRows }\n      data={ filteredRows.slice(pagination.offset, pagination.offset + pagination.limit) }\n      filterValue={ filter }\n      fetchData={ ({ limit, offset, name }) => setConfig({\n        ...config,\n        filter: name,\n        pagination: {\n          ...config.pagination,\n          limit,\n          offset\n        }\n      }) }\n      setFilterValue={ ({ name }) => setConfig({\n        ...config,\n        filter: name\n      })  }\n      isLoading={ isRecordLoading }\n      pagination={ {\n        ...pagination,\n        count: filteredRows.length\n      } }\n      titlePlural=\"permissions\"\n      titleSingular=\"permission\"\n    />\n  </section>;\n};\n\nexport default Permissions;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup } from '../../redux/actions/group-actions';\n\nconst Role = () => {\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading,\n    ...groupUuid && { group: state.groupReducer.selectedGroup }\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRole(uuid));\n    groupUuid && dispatch(fetchGroup(groupUuid));\n  }, [ uuid, groupUuid ]);\n\n  return <Fragment>\n    <TopToolbar breadcrumbs={ [\n      ...[ groupUuid ? { title: 'Groups', to: '/groups' } : { title: 'Roles', to: '/roles' } ],\n      ...groupUuid ? [{\n        title: group && group.name,\n        to: `/groups/detail/${groupUuid}/roles`,\n        isLoading: group && group.loaded\n      }] : [],\n      { title: role && role.name, isActive: true }\n    ] }>\n      <TopToolbarTitle title= { !isRecordLoading && role ? role.name : undefined }\n        description={ !isRecordLoading && role ? role.description : undefined }/>\n    </TopToolbar>\n    { (isRecordLoading || !role) ? <ListLoader/> : <Permissions /> }\n  </Fragment>;\n};\n\nexport default Role;\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  let ret = newGroup;\n\n  if (data.user_list && data.user_list.length > 0) {\n    ret = groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  if (data.roles_list && data.roles_list.length > 0) {\n    ret = groupApi.addRoleToGroup(newGroup.uuid, { roles: data.roles_list });\n  }\n\n  return ret;\n}\n\nexport async function removeGroups(uuids) {\n  return await Promise.all(uuids.map((uuid) => groupApi.deleteGroup(uuid)));\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, limit, offset, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroups = (uuids) => ({\n  type: ActionTypes.REMOVE_GROUPS,\n  payload: GroupHelper.removeGroups(uuids),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: uuids.length > 1 ? 'Groups deleted successfully' :\n          'Group deleted successfully'\n      },\n      rejected: {\n        variant: 'danger',\n        title: uuids.length > 1 ? 'There was an error deleting the groups. Please try again.' :\n          'There was an error deleting the group. Please try again.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const defaultCompactSettings = {\n  limit: 5,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 5\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nexport const ListLoader = ({ items, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\">\n      { [ ...Array(items) ].map((_item, index) => (\n        <DataListItem key={ index } aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells dataListCells={ [\n              <DataListCell key=\"1\">\n                <Skeleton size={ SkeletonSize.lg } { ...props } />\n              </DataListCell>\n            ] }\n            />\n          </DataListItemRow>\n        </DataListItem>\n      )) }\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const AppPlaceholder = props => (\n  <div>\n    <ContentLoader\n      height={ 16 }\n      width={ 300 }\n      speed={ 2 }\n      primaryColor=\"#FFFFFF\"\n      secondaryColor=\"#FFFFFF\"\n      { ...props }>\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"420\" height=\"10\" />\n    </ContentLoader>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '21px' } }>\n      <ContentLoader\n        height={ 21 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"21\" />\n      </ContentLoader>\n    </div>\n  );};\n\nexport const BreadcrumbPlaceholder = props => {\n  return (\n    <div style={ { width: '200px', height: '18px' } }>\n      <ContentLoader\n        height={ 18 }\n        width={ 200 }\n        speed={ 2 }\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\"\n        { ...props }\n      >\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"200\" height=\"18\" />\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport const FormItemLoader = () => (\n  <ContentLoader\n    height={ 32 }\n    width={ 160 }\n    speed={ 2 }\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"160\" height=\"32\" />\n  </ContentLoader>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset }) {\n  return roleApi.listRoles(limit, offset);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, orderBy),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\n","import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n","import React from 'react';\nimport { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport UsersList from '../group/add-group/users-list';\n\nconst Users = () => {\n  const isProd = window.insights.chrome.isProd;\n  const description = (<TextContent>\n    <Text>\n    These are the users in your organization. To add new users to your organization go to{ ' ' }\n      <Text\n        component={ TextVariants.a }\n        href={ `https://www.${isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html` }>\n      user management list.\n      </Text>\n    </Text>\n  </TextContent>);\n\n  return (\n    <Stack >\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle\n            title=\"Users\"\n            description={ description }\n          />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'users' }>\n          <UsersList\n            props={ {\n              isSelectable: false,\n              isCompact: false\n            } }\n          />\n        </Section>\n      </StackItem>\n    </Stack >\n  );\n};\n\nUsers.propTypes = {\n\n};\n\nUsers.defaultProps = {\n\n};\n\nexport default Users;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {  } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedUsers.map((user, index) => `${index !== 0 ? ' ' : ''}${user.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { `${selectedRoles.map((role, index) => `${index !== 0 ? ' ' : ''}${role.label}`)}` }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport UsersList from './users-list';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select users from your organization to add to this group.' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    request={ fetchRoles }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h6 }>{ description || 'Select at least one role to add to this group' }</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              label=\"Select roles\"\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\n\nconst AddGroupWizard = ({\n  history: { push },\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = {\n      ...formData,\n      user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined,\n      roles_list: selectedRoles ? selectedRoles.map(role => role.uuid) : undefined\n    };\n    await addGroup(user_data);\n    postMethod();\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissDelay: 8000,\n      description: 'Adding group was cancelled by the user.'\n    });\n    push('/groups');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Create and configure a group\"\n      description=\"To give users access permissions, create a group and assign roles to it.\"\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components';\nimport { Button, Modal, Grid, GridItem, TextContent, Text } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nconst EditGroupModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl,\n  isOpen,\n  group,\n  onClose\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState(undefined);\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    fetchGroup(id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [ group ]);\n\n  const onSubmit = data => {\n    const user_data = { ...data };\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(push(closeUrl)) :\n      updateGroup(user_data).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was cancelled by the user.' : 'Adding group was cancelled by the user.'\n    });\n    onClose();\n    push(closeUrl);\n  };\n\n  const schema = {\n    fields: [{\n      name: 'name',\n      label: 'Name',\n      component: componentTypes.TEXT_FIELD,\n      validate: [{\n        type: validatorTypes.REQUIRED\n      }]\n    }, {\n      name: 'description',\n      label: 'Description',\n      component: componentTypes.TEXTAREA_FIELD\n    }]\n  };\n\n  // eslint-disable-next-line react/prop-types\n  const formButtons = ({ pristine, valid, form: { submit }}) => {\n    return (\n      <div>\n        <Button isDisabled={ pristine || !valid } onClick={ submit } variant=\"primary\">Submit</Button>\n        <Button variant='link' onClick={ onCancel }>Cancel</Button>\n      </div>\n    );\n  };\n\n  return (\n    <Modal\n      isLarge\n      width={ '50%' }\n      title={ 'Edit group\\'s information' }\n      isOpen={ isOpen }\n      onClose={ onCancel }\n    > { selectedGroup\n        ?\n        <Grid gutter=\"md\">\n          <TextContent>\n            <Text>\n              { `Make any changes to ${selectedGroup.name} group.` }\n            </Text>\n          </TextContent>\n          <GridItem>\n            <FormRenderer\n              schema={ schema }\n              schemaType=\"mozilla\"\n              onSubmit={ onSubmit }\n              formContainer=\"modal\"\n              initialValues={ { ...selectedGroup } }\n              renderFormButtons={ formButtons }\n            />\n          </GridItem>\n        </Grid>\n        : <Skeleton/>\n      }\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null\n};\n\nEditGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  selectedGroup: PropTypes.object.isRequired,\n  inputValue: PropTypes.string,\n  match: PropTypes.object,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n  isOpen: PropTypes.bool,\n  group: PropTypes.object,\n  onClose: PropTypes.func\n\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditGroupModal));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Text, TextContent, Checkbox } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  history: { goBack, push },\n  removeGroups,\n  group,\n  isLoading,\n  fetchGroup,\n  groupsUuid,\n  isModalOpen,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const [ checked, setChecked ] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids).then(() => postMethod(uuids)).then(push(closeUrl));\n  };\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen={ isModalOpen }\n      isSmall\n      title = {\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n        &nbsp; { multipleGroups ? 'Delete groups?' : 'Delete group?' }\n        </Text> }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"submit\" isDisabled={ !checked }  variant=\"danger\" type=\"button\" onClick={ onSubmit }>\n          { multipleGroups ? 'Delete groups' : 'Delete group' }\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <TextContent>\n        { multipleGroups ?\n          <Text>\n          Deleting these <b>{ groupsUuid.length }</b> groups removes all roles\n          from the members inside the group.\n          </Text> :\n          isLoading ?\n            <FormItemLoader/> :\n            <Text>\n          Deleting the <b>{ group.name }</b> group removes all roles\n          from the members inside the group.\n            </Text>\n        }\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={ checked }\n        onChange={ ()=> setChecked(!checked) }\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroups\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal));\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, roleCount, principalCount, modified, platform_default: isPlatformDefault }) => ([\n    ...acc,\n    {\n      uuid,\n      isPlatformDefault,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        roleCount,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ username, email, first_name, last_name }) => (\n  <Fragment>\n    <TextContent>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Username</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ username }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Email</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ email }</Text>\n      <Text className=\"principals-table-detail heading\" component={ TextVariants.small }>Name</Text>\n      <Text className=\"principals-table-detail content\" component={ TextVariants.h5 }>{ `${first_name} ${last_name}` }</Text>\n    </TextContent>\n  </Fragment>\n);\n\nExpandableContent.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string\n};\n\nexport default ExpandableContent;\n\n","import React from 'react';\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data, opened = [], checkedRows = []) => {\n  return (\n    data.reduce((acc,  { username, email, first_name, last_name }, key) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        isOpen: Boolean(opened[username]),\n        cells: [ username, email, first_name, last_name ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }, {\n        parent: key * 2,\n        fullWidth: true,\n        cells: [{ title: <ExpandableContent username={ username }\n          email={ email }\n          first_name={ first_name }\n          last_name={ last_name }/> }]\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '40%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n      <UsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Modal,\n  Button,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel }) => {\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default RemoveModal;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup, addMembersToGroup } from '../../../redux/actions/group-actions';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Email', 'First name', 'Last name' ];\n\nconst GroupPrincipals = ({\n  match: { params: { uuid }},\n  fetchGroup,\n  removeMembersFromGroup,\n  pagination,\n  principals,\n  isLoading,\n  userIdentity,\n  group\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const fetchData = () => {\n    fetchGroup(uuid);\n  };\n\n  const removeModalText = (name, group, plural) => (plural\n    ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n    : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n  );\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return removeMembersFromGroup(uuid, userNames).then(() => { setSelectedPrincipals([]); fetchData();});\n  };\n\n  const actionResolver = (_principalData, { rowIndex }) =>\n    (rowIndex % 2 === 1) || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Delete',\n          style: { color: 'var(--pf-global--danger-color--100)' },\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username, group.name, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/principals` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add user\"\n          >\n        Add user\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].name,\n                group.name,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          group.platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ principals }\n              isCollapsible\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              request={ fetchGroup }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              titlePlural=\"principals\"\n              titleSingular=\"principal\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ () => fetchGroup(uuid) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n              emptyProps={ { title: 'There are no members in this group', description: [ 'Add a user to configure user access.', '' ]} }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, selectedGroup }}) => {\n  return {\n    principals: (selectedGroup.principals || []).map(principal => ({ ...principal, uuid: principal.username })),\n    pagination: { ...defaultSettings, count: selectedGroup.principals && selectedGroup.principals.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    group: selectedGroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup,\n  addMembersToGroup,\n  removeMembersFromGroup\n}, dispatch);\n\nGroupPrincipals.propTypes = {\n  principals: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchGroup: PropTypes.func.isRequired,\n  removeMembersFromGroup: PropTypes.func.isRequired,\n  uuid: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired }).isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  group: PropTypes.shape({\n    platform_default: PropTypes.bool,\n    loaded: PropTypes.bool\n  })\n};\n\nGroupPrincipals.defaultProps = {\n  principals: [],\n  pagination: defaultSettings,\n  userIdentity: {},\n  group: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupPrincipals);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionGroup,\n  Button,\n  Split,\n  SplitItem,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  name\n}) => {\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding members to group',\n      dismissDelay: 8000,\n      description: 'Adding members to group was cancelled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => fetchRolesForGroup(uuid));\n    return push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add roles to group\"\n      width={ '70%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently </b> in <b> { name }</b>.\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label=\"Save\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  isDisabled={ selectedRoles.length === 0 }\n                  onClick={ onSubmit }\n                >\n                      Add to group\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst columns = [\n  { title: 'Role name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/groups/detail/${groupUuid}/roles/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove from group',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role['role-name'].title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        fetchRolesForGroup={ fetchRolesForGroup(pagination) }\n        name={ name }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add role\"\n          >\n        Add role\n          </Button>\n        </Link>,\n        {\n          label: 'Remove from group',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup(pagination)(uuid)));\n            setDeleteInfo({\n              title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(\n                name,\n                multipleRolesSelected ? selectedRoles.length : roles.find(role => role.uuid === selectedRoles[0].uuid).name,\n                multipleRolesSelected)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ (...props) => createRows(uuid, ...props) }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ config => fetchRolesForGroup(config)(uuid) }\n          setFilterValue={ ({ name }) => setFilterValue(name) }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          request={ fetchRolesForGroup(pagination) }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n          emptyProps={ { title: 'There are no roles in this group', description: [ 'Add a role to configure user access.', '' ]} }\n\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (pagination) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, pagination, options)),\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  })\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Button, Level, LevelItem } from '@patternfly/react-core';\nimport EditGroup from './edit-group-modal';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'Groups', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n  const [ showEdit, setShowEdit ] = useState(false);\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <Level>\n          <LevelItem>\n            <TopToolbarTitle title={ !isFetching && group ? group.name : undefined }\n              description={ !isFetching && group ? group.description : undefined } />\n            <AppTabs tabItems={ tabItems } />\n          </LevelItem>\n\n          <LevelItem>\n            <Button onClick={ () => setShowEdit(true) } variant='secondary'>Edit Group</Button>\n          </LevelItem>\n          <EditGroup\n            isOpen={ showEdit }\n            group={ group }\n            closeUrl={ `group/detail/${uuid}` }\n            onClose={ () => setShowEdit(false) }\n            postMethod={ () => {\n              fetchData(uuid);\n              setShowEdit(false);\n            }\n            }\n          />\n\n        </Level>\n\n      </TopToolbar>\n      <Switch>\n        <Route path={ `/groups/detail/:uuid/roles` } component={ GroupRoles } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/members` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nconst GroupRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={ clsx(className, {\n        'ins-c-rbac__group-default': row.isPlatformDefault\n      }) }\n      row={ row }\n      { ...props }\n    />\n  );\n};\n\nGroupRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    isPlatformDefault: PropTypes.bool\n  }),\n  className: PropTypes.string\n};\n\nexport default GroupRowWrapper;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { expandable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\nimport GroupRowWrapper from './group-row-wrapper';\nimport './groups.scss';\n\nconst columns = [{ title: 'Name', cellFormatters: [ expandable ]}, 'Roles', 'Members', 'Last modified' ];\n\nconst Groups = ({ fetchGroups, isLoading, pagination, history: { push }, groups, userIdentity }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n  const [ removeGroupsList, setRemoveGroupsList ] = useState([]);\n\n  useEffect(() => {\n    fetchGroups({ ...pagination, name: filterValue });\n  }, []);\n\n  const fetchData = (config) => {\n    fetchGroups(config);\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows)\n    .filter(({ platform_default: isPlatformDefault }) => !isPlatformDefault)\n    .map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/groups/add-group\" render={ props => <AddGroupWizard { ...props } postMethod={ fetchData } /> } />\n    <Route exact path=\"/groups/edit/:id\" render={ props => <EditGroup { ...props } postMethod={ fetchData } isOpen/> } />\n    <Route exact path=\"/groups/removegroups\" render={ props => <RemoveGroup { ...props } postMethod={ (ids) => {\n      fetchData();\n      setSelectedRows(selectedRows.filter(row => (!ids.includes(row.uuid))));\n      setFilterValue('');\n    } } isModalOpen groupsUuid={ removeGroupsList } /> } />\n  </Fragment>;\n\n  const actionResolver = ({ isPlatformDefault }) =>\n    isPlatformDefault || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) => {\n            setRemoveGroupsList([ group ]);\n            push(`/groups/removegroups`);\n          }\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          },\n          onClick: () => {\n            setRemoveGroupsList(selectedRows);\n            push(`/groups/removegroups`);\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottom>\n          <TopToolbarTitle title=\"Groups\"/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            request={ fetchGroups }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchGroups(config) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n            filterPlaceholder=\"Filter by name\"\n            rowWrapper={ GroupRowWrapper }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:groupUuid/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { groups, filterValue, isLoading }}) => ({\n  groups: groups.data,\n  pagination: groups.meta,\n  userIdentity: groups.identity,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroups\n}, dispatch);\n\nGroups.propTypes = {\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  groups: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchGroups: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nGroups.defaultProps = {\n  groups: [],\n  userIdentity: {},\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, accessCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-accessCount` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            { accessCount }\n          </Link>\n        </Fragment>,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding role',\n      dismissDelay: 8000,\n      description: 'Adding role was cancelled by the user.'\n    });\n    push('/roles');\n  };\n\n  return (\n    <Wizard\n      isLarge\n      title=\"Add role\"\n      isOpen\n      onClose={ onCancel }\n      onNext={ onNext }\n      onSave={ onSubmit }\n      steps={ steps }\n    />);\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRoles, fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  fetchRoles\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    fetchRoles();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  fetchRoles,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { createRows } from './role-table-helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\n\nconst columns = [\n  { title: 'Name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Permissions' },\n  { title: 'Last modified', orderBy: 'modified' }\n];\n\nconst Roles = ({\n  fetchRoles,\n  roles,\n  isLoading,\n  history: { push },\n  pagination,\n  userIdentity,\n  userEntitlements\n}) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  useEffect(() => {\n    fetchRoles({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\" component={ RemoveRole } />\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n          push(`/roles/remove/${role.uuid}`),\n        props: {\n          isDisabled: true\n        },\n        isDisabled: true\n      }\n    ];\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Add role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"User access management\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchRoles(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            request={ fetchRoles }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n            filterPlaceholder=\"Filter by name\"\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(apiProps));\n    }\n  };\n};\n\nRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  platforms: PropTypes.array,\n  isLoading: PropTypes.bool,\n  fetchRoles: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  }),\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      [PropTypes.string]: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ])\n    })\n  }),\n  userEntitlements: PropTypes.shape({\n    [PropTypes.string]: PropTypes.bool\n  })\n};\n\nRoles.defaultProps = {\n  roles: [],\n  pagination: defaultSettings\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roles);\n","import { FETCH_USERS } from '../../redux/action-types';\n\n// Initial State\nexport const usersInitialState = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: []\n};\n\nconst setLoadingState = state => ({ ...state, isUserDataLoading: true });\n\nconst setUsers = (state, { payload }) => ({ ...state, users: payload, isUserDataLoading: false });\n\nexport default {\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers\n};\n","import {\n  FETCH_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP\n} from '../../redux/action-types';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  selectedGroup: { addRoles: {}},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true, selectedGroup: { ...state.selectedGroup, loaded: false }});\nconst setGroups = (state, { payload }) => ({ ...state, groups: payload, isLoading: false });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  groups: {\n    ...state.groups,\n    data: state.groups.data.map((group) => ({\n      ...group,\n      ...payload.uuid === group.uuid && { ...payload, loaded: true }\n    }))\n  },\n  selectedGroup: { ...state.selectedGroup, ...payload, loaded: true }\n});\nconst resetSelectedGroup = state => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  selectedGroup: { ...state.selectedGroup, roles: payload.data, pagination: payload.meta, loaded: true }\n});\n\nconst setAddRolesLoading = state => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false }}\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { roles: payload.data, pagination: payload.meta, loaded: true }}\n});\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup\n};\n","import {\n  FETCH_POLICY,\n  FETCH_GROUP_POLICIES\n} from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0\n    }\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES\n} from '../../redux/action-types';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 5,\n      offset: 0\n    }\n  },\n  selectedRole: {}\n};\n\nconst setLoadingState = state => ({ ...state, isLoading: true });\nconst setRecordLoadingState = state => ({ ...state, isRecordLoading: true });\nconst setRole = (state, { payload }) => ({ ...state, selectedRole: payload, isRecordLoading: false });\nconst setRoles = (state, { payload }) => ({ ...state, roles: payload, isLoading: false });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState\n};\n","\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\n\nconst registry = new ReducerRegistry({}, [ thunk, promiseMiddleware(), notificationsMiddleware({\n  errorTitleKey: [ 'message' ],\n  errorDescriptionKey: [ 'errors', 'stack' ]\n}), reduxLogger ]);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  notifications\n});\n\nexport default registry.getStore();\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Roles = lazy(() => import('./smart-components/role/roles'));\nconst Users = lazy(() => import('./smart-components/user/users'));\n\nconst paths = {\n  rbac: '/',\n  groups: '/groups',\n  roles: '/roles',\n  users: '/users'\n};\n\nconst InsightsRoute = ({ rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-l-page__main', 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n  return (<Route { ...rest } />);\n};\n\nInsightsRoute.propTypes = {\n  rootClass: PropTypes.string\n};\n\nexport const Routes = () => {\n  return (\n    <Suspense fallback={ <AppPlaceholder /> }>\n      <Switch>\n        <InsightsRoute path={ paths.groups } component={ Groups } rootClass=\"groups\" />\n        <InsightsRoute path={ paths.roles } component={ Roles } rootClass=\"roles\" />\n        <InsightsRoute path={ paths.users } component={ Users } rootClass=\"roles\" />\n        <Route render={ () => <Redirect to={ paths.groups } /> } />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './routes';\nimport './App.scss';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { IntlProvider } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    chromeNavAvailable: true,\n    auth: false\n  }\n\n  componentDidMount () {\n    const { history } = this.props;\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => this.setState({ auth: true }));\n    insights.chrome.identifyApp('rbac');\n    this.unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unregister && this.unregister();\n  }\n\n  render () {\n    const { auth } = this.state;\n    if (!auth) {\n      return <AppPlaceholder />;\n    }\n\n    return (\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <Main style={ { marginLeft: 0, padding: 0 } }>\n            <Routes />\n          </Main>\n        </React.Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router basename={ getBaseName(location.pathname) }>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ clsx(\n    'pf-u-pt-xl pf-u-pr-xl pf-u-pl-lg top-toolbar',\n    { 'pf-u-pb-md': paddingBottom }\n  ) }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <RbacBreadcrumbs { ...breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n          <TextContent className=\"pf-u-pt-sm pf-u-mb-md top-toolbar-description\">\n            <Text component={ TextVariants.p }>{ description }</Text>\n          </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder\n) => ({\n  items: [{\n    label: titleSingular,\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: filterPlaceholder || `Filter by ${titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined\n) => ({\n  filters: [{\n    name: filterValue\n  }],\n  onDelete: () => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      name: ''\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons,\n  filterPlaceholder\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) }\n    }\n    filterConfig={\n      filterConfigBuilder(isLoading, setFilterValue, fetchData, filterValue, pagination, titleSingular, filterPlaceholder)\n    }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue)\n    } }\n    { ...filterValue.length > 0 && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, pagination, setFilterValue, fetchData)\n    }\n    }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.array,\n  setFilterValue: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <Bullseye { ...props }>\n    <EmptyState variant={ EmptyStateVariant.full }>\n      <EmptyStateIcon icon={ icon || SearchIcon } />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        { title }\n      </Title>\n      <EmptyStateBody>\n        { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n      </EmptyStateBody>\n      { actions }\n    </EmptyState>\n  </Bullseye >\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nEmptyWithFilter.propTypes = {\n  actions: []\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  isCollapsible,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper\n}) => {\n  const [ opened, openRow ] = useState({});\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <Button\n            variant=\"link\"\n            key=\"clear-filters\"\n            onClick={ () => {\n              setFilterValue({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n              fetchData({\n                ...pagination,\n                offset: 0,\n                name: ''\n              });\n            } }\n          >\n            Clear all filters\n          </Button>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n        filterPlaceholder={ filterPlaceholder }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        { ...isCollapsible && { onCollapse } }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n        rowWrapper={ rowWrapper }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && filterValue.length === 0 ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ PlusCircleIcon }\n          description={ [\n            `To configure user access to applicastions`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n          { ...emptyProps }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","\nexport const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUPS = 'REMOVE_GROUPS';\n\nexport const FETCH_USERS = 'FETCH_USERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\n"],"sourceRoot":""}
{"version":3,"file":"js/9970.34bcdde85356ea044a4a.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Dark/DarkContext.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./src/helpers/shared/filters.js","webpack:///./src/presentational-components/shared/ActiveUsers.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/presentational-components/shared/breadcrumbs.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/user/user-table-helpers.tsx","webpack:///./src/presentational-components/shared/table-composable-toolbar-view.tsx","webpack:///./src/smart-components/user/users-list-not-selectable.tsx","webpack:///./src/smart-components/user/users.tsx"],"sourcesContent":["import React from 'react';\nvar DarkContext = React.createContext('light');\nexport default DarkContext;\n//# sourceMappingURL=DarkContext.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { DarkContext } from '../Dark';\nimport '../PageHeader/page-header.css';\nvar PageHeader = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    var pageHeaderClasses = classNames(className, 'pf-v5-l-page-header', 'pf-v5-c-page-header', 'pf-v5-l-page__main-section', 'pf-v5-c-page__main-section');\n    return (_jsx(DarkContext.Consumer, { children: function (theme) {\n            var _a, _b;\n            if (theme === void 0) { theme = 'light'; }\n            var themeClasses = classNames((_a = {}, _a[\"pf-m-\".concat(theme, \"-200\")] = theme === 'dark', _a), (_b = {}, _b[\"pf-m-light\"] = theme === 'light', _b));\n            return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses), \"widget-type\": \"InsightsPageHeader\", children: children })));\n        } }));\n};\nexport default PageHeader;\n//# sourceMappingURL=PageHeader.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title, TitleProps } from \"@patternfly/react-core/dist/dynamic/components/Title\";\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, { headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\", children: title }));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../Section/section.css';\nvar Section = function (_a) {\n    var _b;\n    var type = _a.type, children = _a.children, className = _a.className, props = __rest(_a, [\"type\", \"children\", \"className\"]);\n    var sectionClasses = classNames(className, (_b = {}, _b[\"ins-l-\".concat(type)] = type !== undefined, _b));\n    return (_jsxs(\"section\", __assign({}, props, { className: sectionClasses, children: [' ', children, ' '] })));\n};\nexport default Section;\n//# sourceMappingURL=Section.js.map","export const syncDefaultFiltersWithUrl = (location, navigate, keys, defaults = {}) => {\n  const searchParams = new URLSearchParams(location.search);\n\n  let filters = keys.reduce((acc, key) => {\n    const values = searchParams.getAll(key);\n    return {\n      ...acc,\n      [key]: values.length > 1 ? values : values[0],\n    };\n  }, {});\n\n  Object.keys(defaults).forEach((key) => {\n    const value = defaults[key];\n    filters = {\n      ...filters,\n      [key]: Array.isArray(filters[key])\n        ? [...new Set([...filters[key], ...(Array.isArray(value) ? value : [value])])]\n        : (value?.length > 0 && value) || filters[key],\n    };\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => searchParams.getAll(key).includes(item) || searchParams.append(key, item));\n    } else {\n      searchParams.get(key) || (value && searchParams.set(key, value));\n    }\n  });\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n  return filters;\n};\n\nexport const areFiltersPresentInUrl = (location, keys) => {\n  const searchParams = new URLSearchParams(location.search);\n  return keys.some((key) => searchParams.get(key));\n};\n\nexport const applyFiltersToUrl = (location, navigate, newValues) => {\n  const searchParams = new URLSearchParams(location.search);\n  Object.keys(newValues).forEach((key) => searchParams.delete(key));\n\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => item && searchParams.append(key, item));\n    } else {\n      value && searchParams.set(key, value);\n    }\n  });\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n};\n","import React, { useContext } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport PermissionsContext from '../../utilities/permissions-context';\nimport messages from '../../Messages';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst ActiveUser = ({ linkDescription, linkTitle }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const env = chrome.getEnvironment();\n  const prefix = chrome.isProd() ? '' : `${env}.`;\n  const { orgAdmin } = useContext(PermissionsContext);\n  return orgAdmin ? (\n    <Text className=\"pf-v5-u-mt-0\" component={TextVariants.h7}>\n      {`${intl.formatMessage(messages.usersDescription)} `}\n      {linkDescription}\n      <Text\n        component={TextVariants.a}\n        href={`https://www.${prefix}redhat.com/wapps/ugc/protected/usermgt/userList.html`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {linkTitle}\n        <ExternalLinkAltIcon />\n      </Text>\n      .\n    </Text>\n  ) : (\n    <Text className=\"pf-v5-u-mt-0\" component={TextVariants.h7}>\n      {`${intl.formatMessage(messages.usersDescription)} `}\n    </Text>\n  );\n};\n\nActiveUser.propTypes = {\n  linkDescription: PropTypes.node,\n  linkTitle: PropTypes.node,\n};\n\nActiveUser.defaultProps = {\n  linkDescription: '',\n  linkTitle: ' user management list ',\n};\n\nexport default ActiveUser;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        'data-is-active': PropTypes.bool,\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return breadcrumbs ? (\n    <Breadcrumb>\n      {Object.values(breadcrumbs).map((item, index) =>\n        item.title ? (\n          <BreadcrumbItem key={item.title} isActive={item.isActive}>\n            {(item.to && (\n              <NavLink end to={item.to}>\n                {item.title}\n              </NavLink>\n            )) ||\n              item.title}\n          </BreadcrumbItem>\n        ) : (\n          <BreadcrumbPlaceholder key={index} />\n        )\n      )}\n    </Breadcrumb>\n  ) : null;\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object,\n};\n\nexport default RbacBreadcrumbs;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrumbs';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children, breadcrumbs }) => (\n  <Fragment>\n    {breadcrumbs && (\n      <section className=\"pf-v5-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs {...breadcrumbs} />\n      </section>\n    )}\n    <PageHeader className=\"rbac-page-header\">{children}</PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool,\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false,\n};\n\nexport const TopToolbarTitle = ({ title, renderTitleTag, description, children }) => (\n  <Fragment>\n    <Flex>\n      <FlexItem className=\"pf-v5-u-mb-sm\">\n        <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n      </FlexItem>\n      <FlexItem alignSelf={{ modifier: 'alignSelfCenter' }}>{renderTitleTag && renderTitleTag()}</FlexItem>\n    </Flex>\n    {description && (\n      <TextContent className=\"rbac-page-header__description\">\n        {typeof description === 'string' ? <Text component={TextVariants.p}>{description}</Text> : description}\n      </TextContent>\n    )}\n    {children}\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  renderTitleTag: PropTypes.func,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n};\n","import React, { Fragment } from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { IntlShape } from 'react-intl';\nimport { CheckIcon, CloseIcon } from '@patternfly/react-icons';\nimport messages from '../../Messages';\nimport pathnames from '../../utilities/pathnames';\nimport AppLink from '../../presentational-components/shared/AppLink';\n\ninterface UserProps {\n  email: string;\n  first_name: string;\n  is_active: boolean;\n  is_org_admin: boolean;\n  last_name: string;\n  username: string;\n  uuid: string;\n}\n\nexport type CellObject = { title: string | React.RefAttributes<HTMLAnchorElement>; props?: { 'data-is-active': boolean } };\n\nexport interface RowProps {\n  uuid: string; // username\n  cells: [\n    React.ReactNode, // yes or no for isOrgAdmin\n    CellObject, // link to user or just username\n    string, // email\n    string, // firstName\n    string, // lastName\n    CellObject // status\n  ];\n  selected: boolean;\n}\n\nexport const createRows = (userLinks: boolean, data: UserProps[] = [], intl: IntlShape, checkedRows = [], isSelectable = false): RowProps[] =>\n  data?.reduce<RowProps[]>((acc, { username, is_active: isActive, email, first_name: firstName, last_name: lastName, is_org_admin: isOrgAdmin }) => {\n    const newEntry: RowProps = {\n      uuid: username,\n      cells: [\n        isOrgAdmin ? (\n          <Fragment>\n            <CheckIcon key=\"yes-icon\" className=\"pf-v5-u-mr-sm\" />\n            <span key=\"yes\">{intl.formatMessage(messages.yes)}</span>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <CloseIcon key=\"no-icon\" className=\"pf-v5-u-mr-sm\" />\n            <span key=\"no\">{intl.formatMessage(messages.no)}</span>\n          </Fragment>\n        ),\n        {\n          title: userLinks ? (\n            <AppLink to={pathnames['user-detail'].link.replace(':username', username)}>{username.toString()}</AppLink>\n          ) : (\n            username.toString()\n          ),\n        },\n        email,\n        firstName,\n        lastName,\n        {\n          title: (\n            <Label key=\"status\" color={isActive ? 'green' : 'grey'}>\n              {intl.formatMessage(isActive ? messages.active : messages.inactive)}\n            </Label>\n          ),\n          props: {\n            'data-is-active': isActive,\n          },\n        },\n      ],\n      selected: isSelectable ? Boolean(checkedRows?.find?.(({ uuid }) => uuid === username)) : false,\n    };\n\n    return [...acc, newEntry];\n  }, []);\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { TableVariant, Table, Thead, Tr, Th, Tbody, Td } from '@patternfly/react-table';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\nimport { ISortBy, OnSort } from '@patternfly/react-table';\nimport { CellObject } from '../../smart-components/user/user-table-helpers';\n\ninterface FilterProps {\n  username?: string;\n  email?: string;\n  status?: string[];\n}\n\ninterface FetchDataProps {\n  limit?: number;\n  offset?: number;\n  count?: number;\n  noBottom?: boolean;\n\n  filters?: FilterProps;\n  orderBy?: string; // TODO: make required later\n\n  username?: string;\n  email?: string;\n  status?: string[];\n}\n\nfunction isCellObject(cell: any): cell is CellObject {\n  return typeof cell === 'object' && typeof cell.title !== 'undefined';\n}\n\ninterface TableProps extends MainTableProps {\n  emptyProps?: unknown;\n  rowWrapper?: any;\n  isExpandable?: boolean;\n  hideHeader?: boolean;\n}\n\ninterface MainTableProps {\n  columns: Array<{ title: string; key?: string; sortable?: boolean }>;\n  isSelectable: boolean;\n  isLoading: boolean;\n  noData?: boolean;\n  data?: Array<unknown>; // used only in toolbar for selectable items\n  title: { singular: string; plural: string };\n  filterValue?: string;\n  setFilterValue: (value: FilterProps) => void;\n  pagination: { limit?: number; offset?: number; count?: number; noBottom?: boolean };\n  fetchData: (config: FetchDataProps) => void;\n  toolbarButtons?: () => React.ReactNode[];\n  filterPlaceholder?: string;\n  filters: Array<{\n    value: string | number | Array<unknown>;\n    key: string;\n    placeholder?: string;\n    innerRef?: React.RefObject<HTMLInputElement | HTMLTextAreaElement>;\n    label?: string;\n    type?: any;\n    items?: any;\n  }>;\n  isFilterable?: boolean;\n  onShowMore?: () => void;\n  showMoreTitle?: string;\n  onFilter?: () => void;\n  onChange?: () => void;\n  value?: unknown;\n  hideFilterChips?: boolean;\n  tableId?: string;\n  textFilterRef?: undefined; // TODO: check the usage\n  rows: Array<any>;\n  sortBy: ISortBy;\n  onSort: OnSort;\n  isCompact: boolean;\n  borders: boolean;\n  ouiaId: string;\n  noDataDescription?: Array<React.ReactNode>;\n  emptyFilters: FilterProps;\n}\n\nconst MainTable = ({\n  // props for toolbar\n  columns,\n  isSelectable,\n  isLoading,\n  noData,\n  data,\n  title,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  toolbarButtons,\n  filterPlaceholder,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n  //\n  rows,\n  sortBy,\n  onSort,\n  isCompact,\n  borders,\n  ouiaId,\n  noDataDescription,\n  emptyFilters,\n}: MainTableProps) => {\n  const orderBy = sortBy?.index ? `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy.index]?.key}` : undefined;\n  const intl = useIntl();\n  return (\n    <Fragment>\n      <Toolbar\n        isSelectable={isSelectable}\n        isLoading={isLoading || noData}\n        data={data}\n        titleSingular={title.singular}\n        filterValue={filterValue}\n        setFilterValue={setFilterValue}\n        sortBy={orderBy}\n        pagination={pagination}\n        fetchData={fetchData}\n        toolbarButtons={toolbarButtons}\n        filterPlaceholder={filterPlaceholder}\n        filters={filters}\n        isFilterable={isFilterable}\n        onShowMore={onShowMore}\n        showMoreTitle={showMoreTitle}\n        onFilter={onFilter}\n        onChange={onChange}\n        value={value}\n        hideFilterChips={hideFilterChips}\n        tableId={tableId}\n        textFilterRef={textFilterRef}\n      />\n      {isLoading ? (\n        <SkeletonTable variant={isCompact ? TableVariant.compact : undefined} rows={pagination?.limit} columns={columns.map((item) => item.title)} />\n      ) : (\n        <Table\n          aria-label={`${title.plural.toLowerCase()} table`}\n          variant={isCompact ? TableVariant.compact : undefined}\n          borders={borders}\n          ouiaId={ouiaId} // [PF]: Value to overwrite the randomly generated data-ouia-component-id\n        >\n          <Thead>\n            <Tr>\n              {columns.map((column, i) => (\n                <Th key={i} sort={column?.sortable ? { columnIndex: i, sortBy, onSort } : undefined}>\n                  {column.title}\n                </Th>\n              ))}\n            </Tr>\n          </Thead>\n          <Tbody>\n            {rows?.length > 0 ? (\n              rows?.map((row, i) => (\n                <Tr key={i}>\n                  {row.cells.map((cell: CellObject, j: number) => (\n                    <Td key={j} dataLabel={columns[j].title}>\n                      {/* TODO: make more general */}\n                      {isCellObject(cell) ? (cell.title as string) : (cell as unknown as React.ReactNode)}\n                    </Td>\n                  ))}\n                </Tr>\n              ))\n            ) : (\n              <Tr>\n                {/* render one component full width for the entire row */}\n                <Td colSpan={columns.length}>\n                  <EmptyWithAction\n                    title={intl.formatMessage(messages.noMatchingItemsFound, { items: title.plural })}\n                    description={\n                      noData && noDataDescription\n                        ? noDataDescription\n                        : [\n                            intl.formatMessage(messages.filterMatchesNoItems, { items: title.plural }),\n                            intl.formatMessage(messages.tryChangingFilters),\n                          ]\n                    }\n                    actions={\n                      noData && noDataDescription\n                        ? undefined\n                        : [\n                            <EmptyStateActions key=\"clear-filters\">\n                              <Button\n                                variant=\"link\"\n                                ouiaId=\"clear-filters-button\"\n                                onClick={() => {\n                                  setFilterValue(emptyFilters);\n                                  fetchData({\n                                    ...pagination,\n                                    offset: 0,\n                                    ...(emptyFilters ? emptyFilters : { name: '' }),\n                                  });\n                                }}\n                              >\n                                {intl.formatMessage(messages.clearAllFilters)}\n                              </Button>\n                            </EmptyStateActions>,\n                          ]\n                    }\n                  />\n                </Td>\n              </Tr>\n            )}\n          </Tbody>\n        </Table>\n      )}\n      {!pagination.noBottom && (\n        <TableToolbar>\n          {!isLoading && <Pagination {...paginationBuilder(pagination, fetchData, filterValue, orderBy)} variant=\"bottom\" dropDirection=\"up\" />}\n        </TableToolbar>\n      )}\n    </Fragment>\n  );\n};\n\nexport const TableComposableToolbarView = ({\n  isCompact = false,\n  borders,\n  columns,\n  rows,\n  data,\n  toolbarButtons,\n  title,\n  pagination,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  isSelectable = false,\n  fetchData,\n  emptyProps,\n  filterPlaceholder,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  hideFilterChips,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  textFilterRef,\n}: TableProps) => {\n  const intl = useIntl();\n\n  return (\n    <Fragment>\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: title.plural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: title.singular }),\n          ]}\n          actions={toolbarButtons ? toolbarButtons()[0] : false}\n          {...(typeof emptyProps === 'object' ? emptyProps : {})}\n        />\n      ) : (\n        <MainTable\n          columns={columns}\n          isSelectable={isSelectable}\n          isLoading={isLoading}\n          noData={noData}\n          data={data}\n          title={title}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          pagination={pagination}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          textFilterRef={textFilterRef}\n          rows={rows}\n          sortBy={sortBy}\n          onSort={onSort}\n          isCompact={isCompact}\n          borders={borders}\n          ouiaId={ouiaId}\n          noDataDescription={noDataDescription}\n          emptyFilters={emptyFilters}\n        />\n      )}\n    </Fragment>\n  );\n};\n","import React, { useEffect, useState, useContext, useRef, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { TableComposableToolbarView } from '../../presentational-components/shared/table-composable-toolbar-view';\nimport { fetchUsers, updateUsersFilters } from '../../redux/actions/user-actions';\nimport UsersRow from '../../presentational-components/shared/UsersRow';\nimport {\n  defaultSettings,\n  defaultAdminSettings,\n  syncDefaultPaginationWithUrl,\n  applyPaginationToUrl,\n  isPaginationPresentInUrl,\n} from '../../helpers/shared/pagination';\nimport { syncDefaultFiltersWithUrl, applyFiltersToUrl, areFiltersPresentInUrl } from '../../helpers/shared/filters';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport PermissionsContext from '../../utilities/permissions-context';\nimport { createRows } from './user-table-helpers';\nimport { ISortBy } from '@patternfly/react-table';\nimport { UserFilters } from '../../redux/reducers/user-reducer';\n\ninterface UsersListNotSelectableI {\n  userLinks: boolean;\n  usesMetaInURL: boolean;\n  props: Record<string, unknown>;\n}\n\nconst UsersListNotSelectable = ({ userLinks, usesMetaInURL, props }: UsersListNotSelectableI) => {\n  const intl = useIntl();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { orgAdmin } = useContext(PermissionsContext);\n  // use for text filter to focus\n  const innerRef = useRef<HTMLInputElement | HTMLTextAreaElement>(null);\n\n  // for usesMetaInURL (Users page) store pagination settings in Redux, otherwise use results from meta\n  const pagination = useSelector(({ userReducer: { users } }) => ({\n    limit: (usesMetaInURL ? users.pagination.limit : users.meta.limit) ?? (orgAdmin ? defaultAdminSettings : defaultSettings).limit,\n    offset: (usesMetaInURL ? users.pagination.offset : users.meta.offset) ?? (orgAdmin ? defaultAdminSettings : defaultSettings).offset,\n    count: (usesMetaInURL ? users.pagination.count : users.meta.count) ?? 0,\n    redirected: usesMetaInURL && users.pagination.redirected,\n    itemCount: 0,\n  }));\n\n  const { users, isLoading, stateFilters } = useSelector(\n    ({\n      userReducer: {\n        users: { data, filters = {} },\n        isUserDataLoading,\n      },\n    }) => ({\n      users: data?.map?.((data: any) => ({ ...data, uuid: data.username })),\n      isLoading: isUserDataLoading,\n      stateFilters: location.search.length > 0 || Object.keys(filters).length > 0 ? filters : { status: ['Active'] },\n    })\n  );\n\n  const fetchData = useCallback((apiProps: Parameters<typeof fetchUsers>[0]) => dispatch(fetchUsers(apiProps)), [dispatch]);\n  const updateStateFilters = useCallback((filters: Parameters<typeof updateUsersFilters>[0]) => dispatch(updateUsersFilters(filters)), [dispatch]);\n\n  const columns = [\n    { title: intl.formatMessage(messages.orgAdministrator), key: 'org-admin' },\n    { title: intl.formatMessage(messages.username), key: 'username', sortable: true },\n    { title: intl.formatMessage(messages.email) },\n    { title: intl.formatMessage(messages.firstName) },\n    { title: intl.formatMessage(messages.lastName) },\n    { title: intl.formatMessage(messages.status) },\n  ];\n\n  const [sortByState, setSortByState] = useState<ISortBy>({ index: 1, direction: 'asc' });\n\n  const [filters, setFilters] = useState<UserFilters>(\n    usesMetaInURL\n      ? stateFilters\n      : {\n          username: '',\n          email: '',\n          status: [intl.formatMessage(messages.active)],\n        }\n  );\n\n  useEffect(() => {\n    usesMetaInURL && applyPaginationToUrl(location, navigate, pagination.limit, pagination.offset);\n  }, [pagination.offset, pagination.limit, pagination.count, pagination.redirected]);\n\n  useEffect(() => {\n    const { limit, offset } = syncDefaultPaginationWithUrl(location, navigate, pagination);\n    const newFilters: UserFilters = usesMetaInURL\n      ? syncDefaultFiltersWithUrl(location, navigate, ['username', 'email', 'status'], filters)\n      : { status: filters.status };\n    if (typeof newFilters.status !== 'undefined' && !Array.isArray(newFilters.status)) {\n      newFilters.status = [newFilters.status];\n    }\n    setFilters(newFilters);\n    fetchData({ ...mappedProps({ limit, offset, filters: newFilters }), usesMetaInURL });\n  }, []);\n\n  useEffect(() => {\n    if (usesMetaInURL) {\n      isPaginationPresentInUrl(location) || applyPaginationToUrl(location, navigate, pagination.limit, pagination.offset);\n      Object.values(filters).some((filter) => filter?.length > 0) &&\n        !areFiltersPresentInUrl(location, Object.keys(filters)) &&\n        syncDefaultFiltersWithUrl(location, navigate, Object.keys(filters), filters);\n    }\n  });\n\n  const updateFilters = (payload: any) => {\n    usesMetaInURL && updateStateFilters(payload);\n    setFilters({ username: '', ...payload });\n  };\n\n  return (\n    <TableComposableToolbarView\n      isSelectable={false}\n      isCompact={false}\n      borders={false}\n      columns={columns}\n      rows={createRows(userLinks, users, intl)}\n      sortBy={sortByState}\n      onSort={(e, index, direction) => {\n        const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n        setSortByState({ index, direction });\n        fetchData({ ...pagination, filters, usesMetaInURL, orderBy });\n      }}\n      ouiaId=\"users-table\"\n      fetchData={(config) => {\n        const status = Object.prototype.hasOwnProperty.call(config, 'status') ? config.status : filters.status;\n        const { username, email, count, limit, offset, orderBy } = config;\n\n        Promise.resolve(fetchData({ ...mappedProps({ count, limit, offset, orderBy, filters: { username, email, status } }), usesMetaInURL })).then(\n          () => {\n            if (innerRef !== null && innerRef.current !== null) {\n              innerRef.current.focus();\n            }\n          }\n        );\n        applyPaginationToUrl(location, navigate, limit || 0, offset || 0);\n        usesMetaInURL && applyFiltersToUrl(location, navigate, { username, email, status });\n      }}\n      emptyFilters={{ username: '', email: '', status: [] }}\n      setFilterValue={({ username, email, status }) => {\n        updateFilters({\n          username: typeof username === 'undefined' ? filters.username : username,\n          email: typeof email === 'undefined' ? filters.email : email,\n          status: typeof status === 'undefined' || status === filters.status ? filters.status : status,\n        });\n      }}\n      isLoading={isLoading}\n      pagination={pagination}\n      rowWrapper={UsersRow}\n      title={{ singular: intl.formatMessage(messages.user), plural: intl.formatMessage(messages.users).toLowerCase() }}\n      filters={[\n        {\n          key: 'username',\n          value: typeof filters?.username === 'object' || typeof filters?.username === 'undefined' ? '' : filters.username,\n          placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.username).toLowerCase() }),\n          innerRef,\n        },\n        {\n          key: 'email',\n          value: filters.email || '',\n          placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.email).toLowerCase() }),\n          innerRef,\n        },\n        {\n          key: 'status',\n          value: filters.status || [],\n          label: intl.formatMessage(messages.status),\n          type: 'checkbox',\n          items: [\n            { label: intl.formatMessage(messages.active), value: 'Active' },\n            { label: intl.formatMessage(messages.inactive), value: 'Inactive' },\n          ],\n        },\n      ]}\n      tableId=\"users-list\"\n      {...props}\n    />\n  );\n};\n\nexport default UsersListNotSelectable;\n","import React, { useEffect, useContext } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useIntl } from 'react-intl';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport UsersListNotSelectable from './users-list-not-selectable';\nimport ActiveUser from '../../presentational-components/shared/ActiveUsers';\nimport PermissionsContext from '../../utilities/permissions-context';\nimport messages from '../../Messages';\n\nconst Users = () => {\n  const intl = useIntl();\n  const activeUserPermissions = useContext(PermissionsContext);\n  const { appNavClick } = useChrome();\n\n  const description = <ActiveUser linkDescription={intl.formatMessage(messages.addNewUsersText)} />;\n\n  useEffect(() => {\n    appNavClick({ id: 'users', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title={intl.formatMessage(messages.users)} description={description} />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id=\"users\">\n          <UsersListNotSelectable\n            userLinks={activeUserPermissions.userAccessAdministrator || activeUserPermissions.orgAdmin}\n            props={{\n              isSelectable: false,\n              isCompact: false,\n            }}\n            usesMetaInURL\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n};\nexport default Users;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","className","children","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","pageHeaderClasses","Consumer","theme","_b","themeClasses","concat","title","pageHeaderTitleClasses","Title","headingLevel","size","type","sectionClasses","undefined","syncDefaultFiltersWithUrl","location","navigate","keys","defaults","searchParams","URLSearchParams","search","filters","reduce","acc","key","values","getAll","forEach","value","Array","isArray","Set","item","includes","append","get","set","pathname","toString","replace","areFiltersPresentInUrl","some","applyFiltersToUrl","newValues","delete","ActiveUser","linkDescription","linkTitle","intl","chrome","env","getEnvironment","prefix","isProd","orgAdmin","useContext","Text","component","TextVariants","h7","formatMessage","usersDescription","a","href","target","rel","propTypes","defaultProps","UsersRow","row","status","isActive","data","RbacBreadcrumbs","breadcrumbs","Breadcrumb","map","index","BreadcrumbItem","to","NavLink","end","icon","description","actions","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","EmptyStateBody","text","EmptyStateFooter","paginationBuilder","pagination","fetchData","filterValue","sortBy","paginationProps","itemCount","count","perPage","limit","page","offset","onSetPage","_event","name","orderBy","perPageOptions","onPerPageSelect","bulkSelectBuilder","isLoading","checkedRows","setCheckedItems","tableId","isRowSelectable","items","selectNone","onClick","selectPage","filter","checked","onSelect","id","filterConfigBuilder","setFilterValue","titleSingular","filterPlaceholder","filterItems","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","textFilterRef","label","selected","placeholder","groups","innerRef","filterValues","filterByKey","_e","filterBy","newFilter","pickBy","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","options","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","isSelectable","toolbarButtons","hideFilterChips","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","toggleTemplate","isCompact","isCollapsible","isRequired","TopToolbar","Fragment","paddingBottom","TopToolbarTitle","renderTitleTag","Flex","FlexItem","alignSelf","modifier","TextContent","createRows","userLinks","username","is_active","email","first_name","firstName","last_name","lastName","is_org_admin","isOrgAdmin","uuid","cells","yes","no","link","Label","color","active","inactive","find","MainTable","columns","noData","rows","onSort","borders","ouiaId","noDataDescription","emptyFilters","direction","singular","SkeletonTable","compact","Table","plural","toLowerCase","Thead","Tr","column","Th","sort","sortable","columnIndex","Tbody","cell","j","Td","dataLabel","isCellObject","colSpan","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","EmptyStateActions","Button","clearAllFilters","noBottom","TableToolbar","Pagination","dropDirection","TableComposableToolbarView","emptyProps","every","configureItems","toConfigureUserAccess","createAtLeastOneItem","usesMetaInURL","useNavigate","useLocation","dispatch","useDispatch","useRef","useSelector","userReducer","users","meta","redirected","stateFilters","isUserDataLoading","useCallback","apiProps","updateStateFilters","orgAdministrator","sortByState","setSortByState","useState","setFilters","useEffect","newFilters","config","Promise","resolve","payload","rowWrapper","user","activeUserPermissions","appNavClick","useChrome","addNewUsersText","secondaryNav","Stack","StackItem","Section","userAccessAdministrator"],"sourceRoot":""}
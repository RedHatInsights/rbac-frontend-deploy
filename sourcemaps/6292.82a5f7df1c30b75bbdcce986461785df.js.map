{"version":3,"file":"js/6292.98f3ae0eedae8641afe0.js","mappings":";yeAWMA,EAA2B,SAAC,GAAsB,IAApBC,EAAoB,EAApBA,cAC5BC,GAAOC,EAAAA,EAAAA,KACPC,GAAWC,EAAAA,EAAAA,eACjB,OACE,oCACE,kBAAC,EAAAC,WAAD,KACE,kBAAC,EAAAC,eAAD,CAAgBC,MAAM,QAAQC,KAAMC,EAAAA,KACpC,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BX,EAAKY,cAAcC,EAAAA,EAAAA,+BAEtB,kBAAC,EAAAC,eAAD,MACA,kBAACC,EAAA,EAAD,CAASC,GAAIC,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,UAAWlB,IAC5D,kBAAC,EAAAmB,OAAD,CAAQC,QAAS,kBAAMjB,GAASkB,EAAAA,EAAAA,IAAUrB,MAAkBC,EAAKY,cAAcC,EAAAA,EAAAA,WAOzF,UAEAf,EAAyBuB,UAAY,CACnCtB,cAAeuB,IAAAA,OAAAA,snBC3BjB,IAAMC,EAAiB,SAAC,GAAmB,MAAjBC,EAAiB,EAAjBA,WAGxB,OAFuBC,EAAAA,EAAAA,YAAWC,GAA1BC,WAIJ,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,QAAD,CAASlB,KAAK,QAKb,yBAAKmB,UAAU,QAAQ,CAAC,CAAC,EAAD,GAAMN,MAAAA,GAAN,UAAMA,EAAa,UAAnB,aAAM,EAAkB,QAGzDD,EAAeF,UAAY,CACzBG,WAAYF,IAAAA,OAGd,sGCvBA,oiGAAAS,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,20BAmBA,IAAMC,EAAe,SAACC,GAAD,OAAW,kBAAC,MAAD,UAAqBA,EAArB,CAA4BC,kBAAkB,MAEjEC,EAAkB,CAC7B,wBAAyBC,EAAAA,EACzB,wBAAyBC,EAAAA,EACzB,iBAAkBC,EAAAA,EAClBC,OCpBsC,WACtC,IAAMvC,GAAOC,EAAAA,EAAAA,KAEb,GADoBuC,EAAAA,EAAAA,WAOJC,WAAWC,OALZC,EADf,EACE,aACoBC,EAFtB,EAEE,oBACyBC,EAH3B,EAGE,yBACwBC,EAJ1B,EAIE,wBACsBC,EALxB,EAKE,sBAGF,OACE,kBAAC,EAAAC,MAAD,CAAOC,WAAS,GACd,kBAAC,EAAAC,UAAD,KACE,kBAAC,EAAAC,YAAD,KACE,kBAAC,EAAA1C,MAAD,CAAOC,aAAa,KAAKC,KAAK,KAAKmB,UAAU,cAC1C9B,EAAKY,cAAcC,EAAAA,EAAAA,kBAI1B,kBAAC,EAAAqC,UAAD,CAAWpB,UAAU,8BACnB,kBAAC,EAAAsB,KAAD,CAAMH,WAAS,GACb,kBAAC,EAAAI,SAAD,CAAUC,KAAM,GACd,kBAAC,EAAAC,KAAD,CAAMzB,UAAU,aAAa0B,UAAWC,EAAAA,aAAAA,IACrCzD,EAAKY,cAAcC,EAAAA,EAAAA,YAGxB,kBAAC,EAAAwC,SAAD,CAAUC,KAAM,GACd,kBAAC,EAAAC,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBd,IAEpC,kBAAC,EAAAU,SAAD,CAAUC,KAAM,GACd,kBAAC,EAAAC,KAAD,CAAMzB,UAAU,aAAa0B,UAAWC,EAAAA,aAAAA,IACrCzD,EAAKY,cAAcC,EAAAA,EAAAA,mBAGxB,kBAAC,EAAAwC,SAAD,CAAUC,KAAM,GACd,kBAAC,EAAAC,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBb,IAEpC,kBAAC,EAAAS,SAAD,CAAUC,KAAM,GACd,kBAAC,EAAAC,KAAD,CAAMzB,UAAU,aAAa0B,UAAWC,EAAAA,aAAAA,IACrCzD,EAAKY,cAAcC,EAAAA,EAAAA,oBAGxB,kBAAC,EAAAwC,SAAD,CAAUC,KAAM,GACd,kBAAC,EAAAH,YAAD,CAAaK,UAAWC,EAAAA,aAAAA,GACrBZ,EAAoBa,KAAI,SAACC,EAAYC,GAAb,OACvB,kBAAC,EAAAL,KAAD,CAAMM,IAAKD,GAAX,IAAoBD,EAAWG,KAA/B,UAILf,GACC,kBAAC,aAAD,KACE,kBAAC,EAAAM,SAAD,CAAUC,KAAM,GACd,kBAAC,EAAAC,KAAD,CAAMzB,UAAU,aAAa0B,UAAWC,EAAAA,aAAAA,IACrCzD,EAAKY,cAAcC,EAAAA,EAAAA,uBAGxB,kBAAC,EAAAwC,SAAD,CAAUC,KAAM,GACd,kBAAC,EAAAH,YAAD,CAAaK,UAAWC,EAAAA,aAAAA,GACrBX,EAAoBY,KAAI,qBAAGK,UAA0BL,KAAI,SAACM,EAAUJ,GAAX,OAAqB,kBAAC,EAAAL,KAAD,CAAMM,IAAKD,GAAX,IAAoBI,EAApB,mBDpCpFtC,GAAiCuC,EAAAA,EAAAA,eAAc,CAC1DC,SAAS,EACTvC,YAAY,EACZwC,WAAOC,IAGHC,EAA0B,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAC3BtE,GAAOC,EAAAA,EAAAA,KACb,GAAwDsE,EAAAA,EAAAA,WAAS,GAAjE,eAAOC,EAAP,KAA6BC,EAA7B,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOxE,EAAP,KAAsB2E,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,KACX1E,GAAWC,EAAAA,EAAAA,eACjB,GAAoDoE,EAAAA,EAAAA,UAAS,CAC3DL,SAAS,EACTvC,YAAY,EACZwC,WAAOC,EACPS,UAAU,IAJZ,eAAOC,EAAP,KAA2BC,EAA3B,KAMMC,GAAYC,EAAAA,EAAAA,QAAOC,SAASC,cAAc,QAI1CC,GAASC,EAAAA,EAAAA,UAAQ,kBEzCI,SAACL,GAC5B,IAAMM,GAAQC,EAAAA,EAAAA,MACRvF,GAAOwF,EAAAA,EAAAA,GAAW,CAAEC,OAAAA,EAAAA,EAAQ5E,SAAU6E,GAAoBJ,GAChE,MAAO,CACLK,OAAQ,CACN,CACEnC,UAAW,SACXb,KAAM,SACNiD,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,WAAY,CAAC,aACbC,MAAOhG,EAAKY,cAAcC,EAAAA,EAAAA,gBAC1BmE,UAAAA,EACAW,OAAQ,CACN,CACEhD,KAAM,kBACNqD,MAAOhG,EAAKY,cAAcC,EAAAA,EAAAA,gBAC1BoF,aAAcC,EAAAA,EACdC,SAAU,YAAgB,IAAbzD,EAAa,EAAbA,OACX,OAAO0D,EAAAA,EAAAA,GAAkC,kBAAmB1D,IAE9DiD,OAAQ,CACN,CACEnC,UAAW,wBACXb,KAAM,2BAIZ,CACEA,KAAM,wBACNqD,MAAOhG,EAAKY,cAAcC,EAAAA,EAAAA,4BAC1BoF,aAAcI,EAAAA,EACdF,SAAU,YAAgB,IAAbzD,EAAa,EAAbA,OACX,OAAO0D,EAAAA,EAAAA,GAAkC,wBAAyB1D,IAEpEiD,OAAQ,CACN,CACEnC,UAAW,aACXb,KAAM,mBACN2D,MAAO,2BAAItG,EAAKY,cAAcC,EAAAA,EAAAA,oCAEhC,CACE2C,UAAW,wBACXb,KAAM,2BAIZ,CACEA,KAAM,4BACNqD,MAAOhG,EAAKY,cAAcC,EAAAA,EAAAA,qBAC1BsF,SAAU,SACVR,OAAQ,CACN,CACEnC,UAAW,aACXb,KAAM,mBACN2D,MAAO,2BAAItG,EAAKY,cAAcC,EAAAA,EAAAA,2BAEhC,CACE2C,UAAW,iBACXb,KAAM,iBACN4D,SAAU,CACR,yEAAS,IACDC,OAAM,gBAAGzC,EAAH,EAAGA,UAAH,OAAmBA,GAAaA,EAAU0C,OAAS,UAC3DrC,EACApE,EAAKY,cAAcC,EAAAA,EAAAA,+BAKjC,CACE8B,KAAM,SACNqD,MAAOhG,EAAKY,cAAcC,EAAAA,EAAAA,eAC1BoF,aAAc1E,EACdoE,OAAQ,CACN,CACEnC,UAAW,SACXb,KAAM,gBFpCS+D,CAAc1B,EAAU2B,WAAU,KAE/DC,EAAAA,EAAAA,YAAU,WACRlC,EAAiBJ,EAAKR,UAGxB8C,EAAAA,EAAAA,YAAU,WACR5B,EAAU2B,QAAQE,OAASrC,IAC1B,CAACA,IAEJ,IAIMsC,EAAsB,WAC1BnC,EAAS1D,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,UAAWqD,EAAKR,QAG3DiD,EAAQ,mCAAG,WAAOC,GAAP,mFAEYnE,EAGvBmE,EAHF,yBAFa,EAKXA,EAFF,kBAAkBC,OAHL,MAGqB,GAHrB,IAKXD,EADF,yBAAyBE,OAJZ,MAI2B,GAJ3B,EAOTC,EAPS,kBAOmB7C,EAAK8C,OAAO1D,KAAI,SAAC2D,GAAD,OAAYA,EAAO1D,gBAPtD,OAOsEd,EAAoBa,KAAI,SAAC2D,GAAD,OAAYA,EAAOvD,UAC1HwD,EARS,OASVhD,GATU,IAUb8C,QAAQ,OACHvE,EAAoB0E,QACrB,SAACC,EAAD,OAAc7D,EAAd,EAAQG,KAAkB2D,EAA1B,EAA0BA,SAA1B,wBACKD,IADL,OAEK,CAAC7D,GAAD,eAAgB8D,EAASC,QAAO,SAACC,GAAD,OAAcR,EAAsBS,SAASD,QAAWjE,KAAI,SAACC,GAAD,gBAAiB,CAC9GA,WAAAA,EACAb,oBAAqB,4BAAImE,IAAJ,OAAsBC,WAAtB,SAAqCW,MAAK,SAACC,GAAD,OAAOA,EAAEnE,aAAeA,KACnFA,EAAWiE,SAAS,aAClB,CACE,CACEG,gBAAiB,CACflE,IAAK,WACLmE,UAAW,KACXC,MAAOf,MAAAA,GAAF,UAAEA,EAAcW,MAAK,SAACK,GAAD,OAAOA,EAAEvE,aAAeA,YAA7C,iBAAE,EAAwDwE,cAA1D,aAAE,EAAgEzE,KAAI,SAAC0E,GAAD,OAAWA,MAAAA,OAAX,EAAWA,EAAOC,SAInG1E,EAAWiE,SAAS,mBACpB,CACE,CACEG,gBAAiB,CACflE,IAAK,mBAAF,OAAqBF,EAAW2E,MAAM,KAAK,IAC9CN,UAAW,KACXC,MAAOhB,MAAAA,OAAF,EAAEA,EAAeY,MAAK,SAACC,GAAD,OAAOA,EAAEnE,aAAeA,KAAYI,aAIrE,GACF,WAGRO,EAAK8C,SAGTmB,YAAajE,EAAKiE,YAAc1F,EAAoB4D,SAGtD1B,GAAsB,SAACyD,GAAD,SAAC,KAAeA,GAAhB,IAAsB7G,YAAY,OACxDzB,GAASuI,EAAAA,EAAAA,IAAW1I,EAAeuH,IAChCoB,MAAK,kBAAM3D,GAAsB,SAACyD,GAAD,SAAC,KAAeA,GAAhB,IAAsB7G,YAAY,EAAOuC,SAAS,EAAMW,UAAU,UADtG,OAES,WACLE,GAAsB,SAACyD,GAAD,SAAC,KAAeA,GAAhB,IAAsB7G,YAAY,EAAOuC,SAAS,EAAOW,UAAU,OACzFF,EAAS1D,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,UAAWqD,EAAKR,UApDpD,2CAAH,sDAwDd,OACE,kBAACpC,EAA+BiH,SAAhC,CACEV,MAAK,OAAOnD,GAAP,IAA2B8D,eA/Eb,SAACzE,GAAD,OAAWY,GAAsB,SAACyD,GAAD,SAAC,KAAeA,GAAhB,IAAsBrE,MAAAA,QA+E1B0E,iBA9E3B,SAAC3E,GAAD,OAAaa,GAAsB,SAACyD,GAAD,SAAC,KAAeA,GAAhB,IAAsBtE,QAAAA,QA8EZ4E,YA7ElD,SAACjE,GAAD,OAAcE,GAAsB,SAACyD,GAAD,SAAC,KAAeA,GAAhB,IAAsB3D,SAAAA,QA6EKkE,gBAAiBzE,EAAK8C,UAErG,kBAAC,IAAD,CACE4B,KAAMhJ,EAAKY,cAAcC,EAAAA,EAAAA,YACzBoI,OAAQzE,EACR0E,cAAe,kBAAMzE,GAAwB,IAC7C0E,gBAAiBrC,IAElBhC,EAAmBD,SAClBC,EAAmBZ,QACjB,kBAAC,EAAAkF,OAAD,CACEpD,MAAOhG,EAAKY,cAAcC,EAAAA,EAAAA,gBAC1BoI,QAAM,EACNI,MAAO,CACL,CACE1G,KAAM,UACNa,UAAW,IAAI1D,EAAyB,CAAEC,cAAAA,IAC1CuJ,gBAAgB,IAGpBC,QAASzC,IAET,KAEJ,kBAAC,IAAD,CACE9B,UAAWA,EACXI,OAAQA,EACRoE,aAAc,CAAE9G,QAAQ,GACxBV,aAAcA,EACdyH,cAAe,CACb,YAAanF,EAAKR,KAClB,YAAa,SACb,YAAaQ,EAAKoF,aAClB,mBAAoBpF,EAAK1B,aAE3B+G,gBAAe,OAAOA,EAAAA,IAAoBxH,GAC1C4E,SAAUA,EACV6C,SAAU,SAAClH,GAAW,MAChBA,IAAU,UAAAA,EAAO,gCAAP,eAAiC+D,QAAS,EAvGhEhC,GAAwB,GA0GdqC,SASdzC,EAAwBwF,aAAe,CACrCvF,KAAM,IAGRD,EAAwBhD,UAAY,CAClCiD,KAAMhD,IAAAA,QAGR","sources":["webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-success.js","webpack:///./src/smart-components/role/add-role-permissions/review-template.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-wizard.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permissions-summary-content.js","webpack:///./src/smart-components/role/add-role-permissions/schema.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, Button, EmptyState, EmptyStateIcon, EmptyStateBody } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport { fetchRole } from '../../../redux/actions/role-actions.js';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames.js';\n\nconst AddRolePermissionSuccess = ({ currentRoleID }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <EmptyState>\n        <EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />\n        <Title headingLevel=\"h4\" size=\"lg\">\n          {intl.formatMessage(messages.permissionsAddedSuccessfully)}\n        </Title>\n        <EmptyStateBody />\n        <AppLink to={pathnames['role-detail'].link.replace(':roleId', currentRoleID)}>\n          <Button onClick={() => dispatch(fetchRole(currentRoleID))}>{intl.formatMessage(messages.exit)}</Button>\n        </AppLink>\n      </EmptyState>\n    </>\n  );\n};\n\nexport default AddRolePermissionSuccess;\n\nAddRolePermissionSuccess.propTypes = {\n  currentRoleID: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { AddRolePermissionWizardContext } from './add-role-permission-wizard';\nimport '../add-role/review.scss';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting } = useContext(AddRolePermissionWizardContext);\n\n  if (submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  return <div className=\"rbac\">{[[{ ...formFields?.[0]?.[0] }]]}</div>;\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React, { useState, useEffect, useRef, createContext, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { WarningModal } from '../../common/warningModal';\nimport { updateRole } from '../../../redux/actions/role-actions.js';\nimport AddPermissionsTable from '../add-role/add-permissions';\nimport AddRolePermissionSummaryContent from './add-role-permissions-summary-content';\nimport AddRolePermissionSuccess from './add-role-permission-success';\nimport CostResources from '../add-role/cost-resources';\nimport InventoryGroupsRole from '../add-role/inventory-groups-role';\nimport { schemaBuilder } from './schema';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nexport const mapperExtension = {\n  'add-permissions-table': AddPermissionsTable,\n  'inventory-groups-role': InventoryGroupsRole,\n  'cost-resources': CostResources,\n  review: AddRolePermissionSummaryContent,\n};\n\nexport const AddRolePermissionWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst AddRolePermissionWizard = ({ role }) => {\n  const intl = useIntl();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [currentRoleID, setCurrentRoleID] = useState('');\n  const navigate = useAppNavigate();\n  const dispatch = useDispatch();\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const container = useRef(document.createElement('div'));\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n  const schema = useMemo(() => schemaBuilder(container.current), []);\n\n  useEffect(() => {\n    setCurrentRoleID(role.uuid);\n  });\n\n  useEffect(() => {\n    container.current.hidden = cancelWarningVisible;\n  }, [cancelWarningVisible]);\n\n  const handleWizardCancel = () => {\n    setCancelWarningVisible(true);\n  };\n\n  const handleConfirmCancel = () => {\n    navigate(pathnames['role-detail'].link.replace(':roleId', role.uuid));\n  };\n\n  const onSubmit = async (formData) => {\n    const {\n      'add-permissions-table': selectedPermissions,\n      'cost-resources': costResources = [],\n      'inventory-groups-role': invResources = [],\n    } = formData;\n\n    const selectedPermissionIds = [...role.access.map((record) => record.permission), ...selectedPermissions.map((record) => record.uuid)];\n    const roleData = {\n      ...role,\n      access: [\n        ...selectedPermissions.reduce(\n          (acc, { uuid: permission, requires }) => [\n            ...acc,\n            ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => ({\n              permission,\n              resourceDefinitions: [...costResources, ...invResources]?.find((r) => r.permission === permission)\n                ? permission.includes('inventory')\n                  ? [\n                      {\n                        attributeFilter: {\n                          key: 'group.id',\n                          operation: 'in',\n                          value: invResources?.find((g) => g.permission === permission)?.groups?.map((group) => group?.id),\n                        },\n                      },\n                    ]\n                  : permission.includes('cost-management')\n                  ? [\n                      {\n                        attributeFilter: {\n                          key: `cost-management.${permission.split(':')[1]}`,\n                          operation: 'in',\n                          value: costResources?.find((r) => r.permission === permission).resources,\n                        },\n                      },\n                    ]\n                  : []\n                : [],\n            })),\n          ],\n          role.access\n        ),\n      ],\n      accessCount: role.accessCount + selectedPermissions.length,\n    };\n\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    dispatch(updateRole(currentRoleID, roleData))\n      .then(() => setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true })))\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        navigate(pathnames['role-detail'].link.replace(':roleId', role.uuid));\n      });\n  };\n\n  return (\n    <AddRolePermissionWizardContext.Provider\n      value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm, rolePermissions: role.access }}\n    >\n      <WarningModal\n        type={intl.formatMessage(messages.permission)}\n        isOpen={cancelWarningVisible}\n        onModalCancel={() => setCancelWarningVisible(false)}\n        onConfirmCancel={handleConfirmCancel}\n      />\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.addPermissions)}\n            isOpen\n            steps={[\n              {\n                name: 'success',\n                component: new AddRolePermissionSuccess({ currentRoleID }),\n                isFinishedStep: true,\n              },\n            ]}\n            onClose={handleConfirmCancel}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          container={container}\n          schema={schema}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-uuid': role.uuid,\n            'role-type': 'create',\n            'role-name': role.display_name,\n            'role-description': role.description,\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            if (values && values['add-permissions-table']?.length > 0) {\n              handleWizardCancel();\n            } else {\n              handleConfirmCancel();\n            }\n          }}\n        />\n      )}\n    </AddRolePermissionWizardContext.Provider>\n  );\n};\n\nAddRolePermissionWizard.defaultProps = {\n  role: {},\n};\n\nAddRolePermissionWizard.propTypes = {\n  role: PropTypes.object,\n};\n\nexport default AddRolePermissionWizard;\n","import React from 'react';\nimport { Grid, GridItem, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRolePermissionSummaryContent = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'add-permissions-table': selectedPermissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n  } = formOptions.getState().values;\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <TextContent>\n          <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-sm\">\n            {intl.formatMessage(messages.reviewDetails)}\n          </Title>\n        </TextContent>\n      </StackItem>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <Grid hasGutter>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleName)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{name}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleDescription)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{description}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.addedPermissions)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <TextContent component={TextVariants.p}>\n              {selectedPermissions.map((permission, index) => (\n                <Text key={index}> {permission.uuid} </Text>\n              ))}\n            </TextContent>\n          </GridItem>\n          {hasCostResources && (\n            <React.Fragment>\n              <GridItem span={3}>\n                <Text className=\"pf-c-title\" component={TextVariants.h6}>\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem span={9}>\n                <TextContent component={TextVariants.p}>\n                  {resourceDefinitions.map(({ resources }) => resources.map((resource, index) => <Text key={index}> {resource} </Text>))}\n                </TextContent>\n              </GridItem>\n            </React.Fragment>\n          )}\n        </Grid>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default AddRolePermissionSummaryContent;\n","import React from 'react';\nimport AddPermissionTemplate from '../add-role/add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\nimport { validateNextAddRolePermissionStep } from '../permission-wizard-helper';\nimport InventoryGroupsRoleTemplate from '../add-role/inventory-groups-role-template';\n\nexport const schemaBuilder = (container) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.addPermissions),\n        container,\n        fields: [\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) => {\n              return validateNextAddRolePermissionStep('add-permissions', values);\n            },\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            name: 'inventory-groups-role',\n            title: intl.formatMessage(messages.inventoryGroupsAccessTitle),\n            StepTemplate: InventoryGroupsRoleTemplate,\n            nextStep: ({ values }) => {\n              return validateNextAddRolePermissionStep('inventory-groups-role', values);\n            },\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(messages.inventoryGroupsAccessDescription)}</p>,\n              },\n              {\n                component: 'inventory-groups-role',\n                name: 'inventory-groups-role',\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) =>\n                    value.every(({ resources }) => resources && resources.length > 0)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneResource),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n"],"names":["AddRolePermissionSuccess","currentRoleID","intl","useIntl","dispatch","useDispatch","EmptyState","EmptyStateIcon","color","icon","CheckCircleIcon","Title","headingLevel","size","formatMessage","messages","EmptyStateBody","AppLink","to","pathnames","Button","onClick","fetchRole","propTypes","PropTypes","ReviewTemplate","formFields","useContext","AddRolePermissionWizardContext","submitting","Bullseye","Spinner","className","i","FormTemplate","props","showFormControls","mapperExtension","AddPermissionsTable","InventoryGroupsRole","CostResources","review","useFormApi","getState","values","name","description","selectedPermissions","resourceDefinitions","hasCostResources","Stack","hasGutter","StackItem","TextContent","Grid","GridItem","span","Text","component","TextVariants","map","permission","index","key","uuid","resources","resource","createContext","success","error","undefined","AddRolePermissionWizard","role","useState","cancelWarningVisible","setCancelWarningVisible","setCurrentRoleID","navigate","useAppNavigate","hideForm","wizardContextValue","setWizardContextValue","container","useRef","document","createElement","schema","useMemo","cache","createIntlCache","createIntl","locale","providerMessages","fields","isDynamic","inModal","showTitles","crossroads","title","StepTemplate","AddPermissionTemplate","nextStep","validateNextAddRolePermissionStep","InventoryGroupsRoleTemplate","label","validate","every","length","schemaBuilder","current","useEffect","hidden","handleConfirmCancel","onSubmit","formData","costResources","invResources","selectedPermissionIds","access","record","roleData","reduce","acc","requires","filter","require","includes","find","r","attributeFilter","operation","value","g","groups","group","id","split","accessCount","prev","updateRole","then","Provider","setWizardError","setWizardSuccess","setHideForm","rolePermissions","type","isOpen","onModalCancel","onConfirmCancel","Wizard","steps","isFinishedStep","onClose","subscription","initialValues","display_name","componentMapper","onCancel","defaultProps"],"sourceRoot":""}
{"version":3,"file":"js/7788.b3bb918847236b966cab.js","mappings":"kJACWA,EAKAC,E,YAJX,SAAWD,GACPA,EAAwB,MAAI,QAC5BA,EAAuB,KAAI,MAC9B,CAHD,CAGGA,IAAqBA,EAAmB,CAAC,IAE5C,SAAWC,GACPA,EAAsB,GAAI,KAC1BA,EAAwB,KAAI,MAC/B,CAHD,CAGGA,IAAsBA,EAAoB,CAAC,IACvC,MAAMC,EAAkB,gBAAoB,CAE/CC,SAAWC,IAAmB,EAC9BC,GAAI,GACJC,qBAAsB,GACtBC,gBAAiB,GACjBC,gBAAiB,GACjBC,UAAW,GACXC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,cAAe,MACfC,aAAc,GACdC,kBAAmB,GACnBC,iBAAkB,UAClBC,cAAe,GACfC,eAAgB,GAChBC,cAAe,OAENC,EAAuB,gBAAoB,CACpDC,WAAY,KACZC,QAAS,M,6PCjBb,MAAMC,EAAkB,EAAGC,kBACzB,MAAMC,GAAS,SACTC,GAAO,UACPC,GAAW,UACX,QAAEC,IAAY,IAAAC,aACdC,GAAW,IAAAC,gBAEVC,EAAeC,IAAoB,IAAAC,UAAS,IAqB7CC,EAAW,KACfL,GACE,IAAAM,iBAAgB,CACdC,QAAS,UACTC,MAAOZ,EAAKa,cAAcP,EAAcQ,OAAS,EAAI,IAASC,wBAA0B,IAASC,wBACjGC,aAAc,IACdC,YAAalB,EAAKa,cAAcP,EAAcQ,OAAS,EAAI,IAASK,4BAA8B,IAASC,+BAG/GnB,EAASH,EAAY,EAGvB,OACE,kBAAC,EAAAuB,MAAK,CACJT,MAAOZ,EAAKa,cAAc,IAASS,YACnCX,QAAS,EAAAY,aAAaC,OACtBC,QAAM,EACNC,QAAS,CACP,kBAAC,EAAAC,OAAM,CAACC,IAAI,UAAUC,OAAO,yBAAyBC,WAAqC,IAAzBxB,EAAcQ,OAAcH,QAAQ,UAAUoB,QArCrG,KACf,MAAMC,EAAW1B,EAAc2B,KAAKC,IAAS,CAAGC,SAAUD,EAAKE,UAC3DJ,EAASlB,OAAS,IACpBV,GACE,IAAAM,iBAAgB,CACdC,QAAS,OACTC,MAAOZ,EAAKa,cAAcmB,EAASlB,OAAS,EAAI,IAASC,wBAA0B,IAASC,wBAC5FC,aAAc,IACdC,YAAalB,EAAKa,cAAcmB,EAASlB,OAAS,EAAI,IAASuB,8BAAgC,IAASC,iCAG5GlC,GAAS,QAAkBF,EAAS8B,IAAWO,MAAK,KAClDnC,GAAS,QAAqBF,IAC9BE,GAAS,QAAY,CAAEoC,eAAe,EAAMzC,WAAU,KAG1DE,EAASH,EAAY,GAsBdE,EAAKa,cAAc,IAAS4B,aAE/B,kBAAC,EAAAd,OAAM,CAAChD,GAAG,oBAAoBkD,OAAO,0BAA0BD,IAAI,SAASjB,QAAQ,OAAOoB,QAAStB,GAClGT,EAAKa,cAAc,IAAS6B,UAGjCC,QAASlC,GAET,kBAAC,EAAAmC,MAAK,CAACC,WAAS,GACd,kBAAC,EAAAC,UAAS,KACR,kBAAC,EAAAC,YAAW,KACV,kBAAC,IAAU,CAACC,gBAAiBhD,EAAKa,cAAc,IAASoC,uBAG7D,kBAAC,EAAAH,UAAS,KACR,kBAAC,IAAS,CAACxC,cAAeA,EAAeC,iBAAkBA,EAAkB2C,eAAa,MAIjG,EAGHrD,EAAgBsD,aAAe,CAC7BrD,YAAa,IAAUsD,OAAOC,MAGhCxD,EAAgByD,UAAY,CAC1BxD,YAAa,YAGf,S","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/dropdownConstants.js","webpack:///./src/smart-components/group/member/add-group-members.js"],"sourcesContent":["import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant, StackItem, Stack, TextContent } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { addMembersToGroup, fetchMembersForGroup, fetchGroups } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\n\nconst AddGroupMembers = ({ cancelRoute }) => {\n  const chrome = useChrome();\n  const intl = useIntl();\n  const navigate = useAppNavigate();\n  const { groupId } = useParams();\n  const dispatch = useDispatch();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map((user) => ({ username: user.label }));\n    if (userList.length > 0) {\n      dispatch(\n        addNotification({\n          variant: 'info',\n          title: intl.formatMessage(userList.length > 1 ? messages.addingGroupMembersTitle : messages.addingGroupMemberTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(userList.length > 1 ? messages.addingGroupMembersDescription : messages.addingGroupMemberDescription),\n        })\n      );\n      dispatch(addMembersToGroup(groupId, userList)).then(() => {\n        dispatch(fetchMembersForGroup(groupId));\n        dispatch(fetchGroups({ usesMetaInURL: true, chrome }));\n      });\n    }\n    navigate(cancelRoute);\n  };\n\n  const onCancel = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        title: intl.formatMessage(selectedUsers.length > 1 ? messages.addingGroupMembersTitle : messages.addingGroupMemberTitle),\n        dismissDelay: 8000,\n        description: intl.formatMessage(selectedUsers.length > 1 ? messages.addingGroupMembersCancelled : messages.addingGroupMemberCancelled),\n      })\n    );\n    navigate(cancelRoute);\n  };\n\n  return (\n    <Modal\n      title={intl.formatMessage(messages.addMembers)}\n      variant={ModalVariant.medium}\n      isOpen\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={selectedUsers.length === 0} variant=\"primary\" onClick={onSubmit}>\n          {intl.formatMessage(messages.addToGroup)}\n        </Button>,\n        <Button id=\"add-groups-cancel\" ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <ActiveUser linkDescription={intl.formatMessage(messages.toManageUsersText)} />\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <UsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} displayNarrow />\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  cancelRoute: pathnames.groups.link,\n};\n\nAddGroupMembers.propTypes = {\n  cancelRoute: PropTypes.string,\n};\n\nexport default AddGroupMembers;\n"],"names":["DropdownPosition","DropdownDirection","DropdownContext","onSelect","event","id","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","menuComponent","DropdownArrowContext","keyHandler","sendRef","AddGroupMembers","cancelRoute","chrome","intl","navigate","groupId","useParams","dispatch","useDispatch","selectedUsers","setSelectedUsers","useState","onCancel","addNotification","variant","title","formatMessage","length","addingGroupMembersTitle","addingGroupMemberTitle","dismissDelay","description","addingGroupMembersCancelled","addingGroupMemberCancelled","Modal","addMembers","ModalVariant","medium","isOpen","actions","Button","key","ouiaId","isDisabled","onClick","userList","map","user","username","label","addingGroupMembersDescription","addingGroupMemberDescription","then","usesMetaInURL","addToGroup","cancel","onClose","Stack","hasGutter","StackItem","TextContent","linkDescription","toManageUsersText","displayNarrow","defaultProps","groups","link","propTypes"],"sourceRoot":""}
{"version":3,"file":"js/4954.60ebc23c70bc204dfaff.js","mappings":"yLAEO,MAAMA,EAAgC,CAC3CC,KAAM,0BACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,mcACTC,QAAS,EACTC,QAAS,GAGEC,GAA0B,QAAWP,GAElD,K,oECbIQ,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,GAEJH,EAASa,MAAMC,KAAMP,YAsBhC,QANc,SAAUQ,GACpB,IAAIC,EACAC,EAAOF,EAAGE,KAAMC,EAAWH,EAAGG,SAAUC,EAAYJ,EAAGI,UAAWC,EAhBpC,SAAUhB,EAAGiB,GAC/C,IAAIlB,EAAI,GACR,IAAK,IAAIM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,IAAMY,EAAEC,QAAQb,GAAK,IAC9EN,EAAEM,GAAKL,EAAEK,IACb,GAAS,MAALL,GAAqD,mBAAjCH,OAAOsB,sBACtB,KAAIlB,EAAI,EAAb,IAAgBI,EAAIR,OAAOsB,sBAAsBnB,GAAIC,EAAII,EAAED,OAAQH,IAC3DgB,EAAEC,QAAQb,EAAEJ,IAAM,GAAKJ,OAAOS,UAAUc,qBAAqBZ,KAAKR,EAAGK,EAAEJ,MACvEF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAE1B,OAAOF,EAOuEsB,CAAOV,EAAI,CAAC,OAAQ,WAAY,cAC1GW,EAAiB,IAAWP,IAAYH,EAAK,IAAO,SAASW,OAAOV,SAAkBW,IAATX,EAAoBD,IACrG,OAAQ,UAAM,UAAWhB,EAAS,GAAIoB,EAAO,CAAED,UAAWO,GAAkB,CAAER,SAAU,CAAC,IAAKA,EAAU,U,2DClB5G,QARuB,SAACW,GACtB,IAAMC,GAAWC,EAAAA,EAAAA,eAEjB,OAAO,SAACC,EAAIC,GACV,OAAOH,GAASI,EAAAA,EAAAA,GAAgBF,EAAIH,GAAeI,M,mICCjDE,EAAc,SAAC,GAAiF,IAA/EC,EAA+E,EAA/EA,MAAOC,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,mBAAoBC,EAAmB,EAAnBA,aAC3EC,GAAOC,EAAAA,EAAAA,KACb,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,kBAAC,EAAAC,MAAD,CACE7B,UAAU,OACViB,MACE,6BACE,kBAAC,KAAD,CAAyBjB,UAAU,oCADrC,IAC2EiB,GAG7EI,OAAQA,EACRS,QAASC,EAAAA,aAAAA,MACTZ,QAASA,EACTa,QAAS,CACP,kBAAC,EAAAC,OAAD,CAAQC,IAAI,UAAUC,OAAO,yBAAyBC,WAAYb,IAAiBI,EAASG,QAAQ,SAASO,QAASjB,GACnHE,GAEH,kBAAC,EAAAW,OAAD,CAAQC,IAAI,SAASC,OAAO,0BAA0BL,QAAQ,OAAOO,QAASlB,GAC3EK,EAAKc,cAAcC,EAAAA,EAAAA,WAIxB,kBAAC,EAAAC,MAAD,CAAOC,WAAS,GACd,kBAAC,EAAAC,UAAD,CAAWC,UAAQ,GACjB,kBAAC,EAAAC,MAAD,CAAOH,WAAS,GACd,kBAAC,EAAAI,YAAD,KAAc3B,MAInBK,EACC,kBAAC,EAAAuB,SAAD,CACEC,UAAWpB,EACXqB,SAAU,kBAAMpB,GAAYD,IAC5BsB,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,qBAC1BW,GAAG,qBACHlD,UAAU,eAEV,OAKVgB,EAAYmC,UAAY,CACtBjC,KAAMkC,IAAAA,IACNnC,MAAOmC,IAAAA,OACP9B,mBAAoB8B,IAAAA,OACpBhC,SAAUgC,IAAAA,KACVjC,QAASiC,IAAAA,KACT/B,OAAQ+B,IAAAA,KACR7B,aAAc6B,IAAAA,MAGhBpC,EAAYqC,aAAe,CACzB9B,cAAc,GAGhB,W,2IC7DM+B,EAAW,SAAC,GAAsB,MAApBC,EAAoB,EAApBA,IAAQtD,GAAY,YAC9BuD,EAAWD,EAAXC,OACFC,EAAWD,MAAAA,GAAH,UAAGA,EAAQvD,aAAX,aAAG,EAAgB,kBACjC,OAAO,kBAAC,EAAAyD,YAAD,QAAY1D,UAAW2D,GAAAA,CAAW,iBAAkB,CAAE,kBAAmBF,IAAaF,IAAKA,GAAStD,KAG7GqD,EAASH,UAAY,CACnBI,IAAKH,IAAAA,MAAgB,CACnBI,OAAQJ,IAAAA,MAAgB,CACtBnD,MAAOmD,IAAAA,MAAgB,CACrB,iBAAkBA,IAAAA,KAClBQ,KAAMR,IAAAA,MAAgB,CACpBK,SAAUL,IAAAA,cAOpB,W,w3BCJA,IAAMS,EAAW,SAAC,GAAD,QAAGC,aAAgBC,EAAnB,EAAmBA,cAAeC,EAAlC,EAAkCA,OAAlC,MAAkD,CACjEC,QAASF,EAAcE,QAAQL,KAC/BM,WAAYH,EAAcE,QAAQE,KAClCC,iBAAkBJ,EAAOE,YAAcF,EAAOG,KAC9CE,cAAeL,EAAOM,QACtBC,MAAOR,EACPS,aAAcT,EAAcU,cAC5BC,gBAAiBX,EAAcY,iBAC/BC,UAAWb,EAAcE,QAAQW,YAG7BC,EAAkB,SAACvG,EAAMiG,EAAOO,GAAd,OACtB,kBAAC,KAAD,UACOA,EAASvC,EAAAA,EAAAA,kBAA6BA,EAAAA,EAAAA,iBAD7C,CAEEwC,OAAQ,CACNC,EAAG,SAAC9D,GAAD,OAAU,2BAAIA,IACjB5C,KAAAA,EACAiG,MAAAA,OAoMN,QAhMqB,WAAM,MACnB/C,GAAOC,EAAAA,EAAAA,KACPwD,GAASC,EAAAA,EAAAA,KACf,GAAsCxD,EAAAA,EAAAA,UAAS,IAA/C,eAAOyD,EAAP,KAAoBC,EAApB,KACA,GAA8C1D,EAAAA,EAAAA,UAAS,IAAvD,eAAO2D,EAAP,KAAwBC,EAAxB,KACA,GAA8C5D,EAAAA,EAAAA,WAAS,GAAvD,eAAO6D,EAAP,KAAwBC,EAAxB,KACA,GAA0C9D,EAAAA,EAAAA,WAAS,kBAAM,QAAzD,eAAO+D,EAAP,KAAsBC,EAAtB,KACA,GAAoChE,EAAAA,EAAAA,UAAS,IAA7C,eAAOiE,EAAP,KAAmBC,EAAnB,KAEQC,GAAYC,EAAAA,EAAAA,aAAZD,QACR,GAAkHE,EAAAA,EAAAA,aAChHlC,EACAmC,EAAAA,cAFM/B,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYE,EAA7B,EAA6BA,iBAAkBC,EAA/C,EAA+CA,cAAeO,GAA9D,EAA8DA,UAAWJ,GAAzE,EAAyEA,aAAcE,GAAvF,EAAuFA,gBAAiBH,GAAxG,EAAwGA,MAIxG,IAA8C0B,EAAAA,EAAAA,YAAWC,EAAAA,GAAjDC,GAAR,GAAQA,wBAAyBC,GAAjC,GAAiCA,SAC3BC,IAAiBC,EAAAA,EAAAA,QAAOF,IAAYD,IAEpCI,GAAU,CACd,CAAEtF,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,QAAkBiE,WAAY,CAACC,EAAAA,SAC3D,CAAExF,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,WAC5B,CAAEtB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,QAC5B,CAAEtB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,WAC5B,CAAEtB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,aAGxBmE,IAAWC,EAAAA,EAAAA,eAEXC,GAAY,SAACC,GAAoC,IAAzB/F,EAAyB,uDAAfoD,EACtCwC,IAASI,EAAAA,EAAAA,IAAqBjB,EAASgB,EAAW/F,MAGpDiG,EAAAA,EAAAA,YAAU,WACRH,OACC,KAEHG,EAAAA,EAAAA,YAAU,WACRV,GAAeW,QAAUZ,IAAYD,KACpC,CAACC,GAAUD,KAEd,IAIMc,GAAgB,SAACC,GACrB,OAAOR,IAASS,EAAAA,EAAAA,IAAuBtB,EAASqB,IAAYE,MAAK,WAC/D9B,EAAmB,IACnBsB,QAAUnG,EAAD,OAAiByD,GAAjB,IAA6BmD,OAAQ,KAC9CX,IAASY,EAAAA,EAAAA,IAAY,CAAEC,eAAe,EAAMtC,OAAAA,SAkE1CrB,KA5CW4D,EAAAA,EAAAA,MA4CHvD,GAAW,IAAIwD,KAAI,SAACC,GAAD,cAAgBA,GAAhB,IAAsBC,KAAMD,EAAKE,eAC5DC,GCtJkB,SAACjE,GAA2B,IAArBkE,EAAqB,uDAAP,GACvCtG,GAAOC,EAAAA,EAAAA,KACb,OAAOmC,EAAKmE,QACV,SAACC,EAAD,OAAmBvE,EAAnB,EAAQwE,UAAqBL,EAA7B,EAA6BA,SAAUM,EAAvC,EAAuCA,MAAmBC,EAA1D,EAA8CC,WAAkCC,EAAhF,EAAqEC,UAArE,wBACKN,GADL,CAEE,CACEL,KAAMC,EACNA,SAAAA,EACAW,MAAO,CACL,CACEtH,MAAO,kBAAC,EAAAuH,MAAD,CAAOC,MAAOhF,GAAY,SAAUjC,EAAKc,cAAcmB,EAAWlB,EAAAA,EAAAA,OAAkBA,EAAAA,EAAAA,WAC3FtC,MAAO,CACL2D,KAAM,CAAEH,SAAAA,KAGZmE,EACAM,EACAG,EACAF,GAEFO,SAAUZ,EAAYa,MAAK,SAACpF,GAAD,OAASA,EAAIoE,OAASC,UAGrD,ID+HWgB,CAAWhF,GAAMyB,GAE9B,OACE,kBAAC,EAAAwD,SAAD,KACE,kBAAC7H,EAAA,EAAD,CACEE,KAAMyE,EAAWzE,KACjBD,MAAO0E,EAAW1E,MAClBK,mBAAoBqE,EAAWrE,mBAC/BD,OAAQkE,EACRpE,QAAS,kBAAMqE,GAAmB,IAClCpE,SAAU,WACRoE,GAAmB,GACnBC,OAGJ,kBAACqD,EAAA,EAAD,CAAShJ,KAAK,UAAUoD,GAAG,kBACxBwB,IAAmBF,GAClB,kBAAC,EAAAuE,KAAD,KACE,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAApG,YAAD,KACE,kBAAC,EAAAqG,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,IACd5H,EAAKc,cAAckC,GAAejC,EAAAA,EAAAA,uBAAkCA,EAAAA,EAAAA,yBAO/E,kBAAC,IAAD,CACEqB,KAAMA,GACNyF,aAAchD,GAAeW,QAC7Ba,KAAMA,GACNtB,QAASA,GACT+C,eAjGa,kBACpBjD,GAAeW,QAEZ,CACE,CACE/F,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,QAC1BF,QAAS,SAACkH,EAAQC,EAAQC,GACxB/D,GAAiB,kBAAM,kBAAMuB,GAAc,CAACwC,EAAO7B,SAAS3G,YAC5D2E,EAAc,CACZ3E,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,sBAC1BrB,KAAM2D,EAAgB4E,EAAO7B,SAAS3G,MAAOsD,GAAMjG,MAAM,GACzDgD,mBAAoBE,EAAKc,cAAcC,EAAAA,EAAAA,gBAEzCiD,GAAmB,MAXzB,MAgGIkE,kBAAmBlI,EAAKc,cAAcC,EAAAA,EAAAA,UAAmBoH,cACzDC,YAAapI,EAAKc,cAAcC,EAAAA,EAAAA,SAAkBoH,cAClDE,cAAerI,EAAKc,cAAcC,EAAAA,EAAAA,QAClCJ,OAAO,gBACP+B,WAAYA,EACZiB,YAAaA,EACbyB,UAAW,gBAAGkD,EAAH,EAAGA,MAAOzC,EAAV,EAAUA,OAAQ/I,EAAlB,EAAkBA,KAAlB,OAA6BsI,GAAUtI,EAAM,CAAEwL,MAAAA,EAAOzC,OAAAA,KACjEjC,eAAgB,gBAAG9G,EAAH,EAAGA,KAAH,OAAc8G,EAAe9G,IAC7CwJ,YAAazC,EACbT,UAAWA,GACXmF,WAAYzG,EAAAA,EACZ0G,gBAzHgB,SAACC,GACzB3E,GAAmB,SAACrB,GAAD,OAAagG,EAAahG,OAyHrCiG,eA1Fa,yBACjB7D,GAAeW,QACf,CACE,kBAACmD,EAAA,EAAD,CAAStJ,GAAIuJ,EAAAA,EAAAA,qBAAAA,KAAAA,QAA4C,WAAYvE,GAAU3D,IAAI,oBAAoBlC,UAAU,qBAC/G,kBAAC,EAAAiC,OAAD,CAAQH,QAAQ,UAAU,aAAW,cAClCN,EAAKc,cAAcC,EAAAA,EAAAA,aAGxB,CACEU,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,WAC1BtC,MAAO,CACLD,UAAW,qBAEbqC,QAAS,cAIX,CACEY,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,QAC1BtC,MAAO,CACLmC,YAAaiD,IAAoBA,EAAgBhG,OAAS,EAC1DyC,QAAS,UAEXO,QAAS,WACP,IAAMgI,EAA0BhF,EAAgBhG,OAAS,EACnDiL,EAAa9I,EAAKc,cAAc+H,EAA0B9H,EAAAA,EAAAA,sBAAiCA,EAAAA,EAAAA,sBACjGmD,GAAiB,kBAAM,kBAAMuB,GAAc5B,EAAgBoC,KAAI,SAACC,GAAD,OAAUA,EAAKC,aAC9E/B,EAAc,CACZ3E,MAAOqJ,EACPhJ,mBAAoBgJ,EACpBpJ,KAAM2D,EACJwF,EAA0BhF,EAAgBhG,OAASgG,EAAgB,GAAGsC,KACtEpD,GAAMjG,KACN+L,KAGJ7E,GAAmB,MAIzB,KAmDI+E,WAAY,CAAEtJ,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,gBAA0BiI,YAAa,CAAChJ,EAAKc,cAAcC,EAAAA,EAAAA,oBAA8B,KACjIkI,QAAQ,mBAId,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,OAAD,CACEC,SAAO,eACJR,EAAAA,EAAAA,4BAAAA,KAA6C,CAC5C7F,MAAAA,GACAsG,YAAaT,EAAAA,EAAAA,wBAAAA,KAAAA,QAA+C,WAAYvE,GACxEiF,WAAY,kBAAMpE,IAASqE,EAAAA,EAAAA,IAAWxG,GAAMoD,WAJzC,SAMJyC,EAAAA,EAAAA,8BAAAA,KAA+C,CAC9CU,WAAY,kBAAMpE,IAASY,EAAAA,EAAAA,IAAY,EAAD,KAAMlD,GAAN,IAAwBiD,OAAQ,EAAG/C,QAASD,EAAekD,eAAe,EAAMtC,OAAAA,OACtH4F,YAAaT,EAAAA,EAAAA,wBAAAA,KAAAA,QAA+C,WAAYvE,GACxEmF,aAAaC,EAAAA,EAAAA,IAAab,EAAAA,EAAAA,OAAAA,KAAD,OAA6BhG,GAA7B,IAA+CiD,OAAQ,IAAKhD,GACrF6G,WAAY,CAAC3G,OAVV,SAYJ6F,EAAAA,EAAAA,qBAAAA,KAAsC,CACrCxD,UAAAA,GACAiE,YAAaT,EAAAA,EAAAA,wBAAAA,KAAAA,QAA+C,WAAYvE,KAdrE,S,+EEnMjB,SAASsF,EAAiBlL,GACtB,IAAIuB,GAAO,SACPc,EAAgBd,EAAKc,cAAe1C,EAAK4B,EAAK4J,cAAelC,OAAc,IAAPtJ,EAAgB,WAAiBA,EACrGsD,EAAKjD,EAAMiD,GAAIsH,EAAcvK,EAAMuK,YAAaa,EAAiBpL,EAAMoL,eAAgBtG,EAAS9E,EAAM8E,OAAQhF,EAAWE,EAAMF,SAAUF,EAAKI,EAAMqL,QAASC,OAAmB,IAAP1L,EAAgBqJ,EAAOrJ,EAEhM2L,EAAQlJ,EADK,CAAEY,GAAIA,EAAIsH,YAAaA,EAAaa,eAAgBA,GAC/BtG,EAAQ,CAC1C0G,UAHgNxL,EAAMwL,YAK1N,MAAwB,mBAAb1L,EACAA,EAAS2L,MAAMC,QAAQH,GAASA,EAAQ,CAACA,IAEhDD,EACO,gBAAoBA,EAAW,KAAM,mBAAuBC,IAEhE,gBAAoB,WAAgB,KAAMA,GAErDL,EAAiBS,YAAc,mBAC/B,IAAIC,EAA2B,OAAWV,GAvB1C,SAAkBW,EAAWC,GACzB,IAAIhH,EAAS+G,EAAU/G,OAAQiH,GAAa,IAAA1L,QAAOwL,EAAW,CAAC,WAC3DG,EAAaF,EAAUhH,OAAQmH,GAAiB,IAAA5L,QAAOyL,EAAW,CAAC,WACvE,OAAQ,QAAaE,EAAYlH,KAC7B,QAAaiH,EAAYE,MAoBjCL,EAAyBD,YAAc,2BACvC","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/smart-components/group/member/group-members.js","webpack:///./src/smart-components/group/member/member-table-helpers.js","webpack:///./node_modules/react-intl/lib/src/components/message.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationTriangleIcon = createIcon(ExclamationTriangleIconConfig);\n\nexport default ExclamationTriangleIcon;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../Section/section.css';\nvar Section = function (_a) {\n    var _b;\n    var type = _a.type, children = _a.children, className = _a.className, props = __rest(_a, [\"type\", \"children\", \"className\"]);\n    var sectionClasses = classNames(className, (_b = {}, _b[\"ins-l-\".concat(type)] = type !== undefined, _b));\n    return (_jsxs(\"section\", __assign({}, props, { className: sectionClasses }, { children: [' ', children, ' '] })));\n};\nexport default Section;\n//# sourceMappingURL=Section.js.map","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, ModalVariant, Split, SplitItem, Stack, TextContent } from '@patternfly/react-core';\nimport './RemoveModal.scss';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, withCheckbox }) => {\n  const intl = useIntl();\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <Modal\n      className=\"rbac\"\n      title={\n        <div>\n          <ExclamationTriangleIcon className=\"ins-m-alert rbac-c__delete-icon\" /> {title}\n        </div>\n      }\n      isOpen={isOpen}\n      variant={ModalVariant.small}\n      onClose={onClose}\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={withCheckbox && !checked} variant=\"danger\" onClick={onSubmit}>\n          {confirmButtonLabel}\n        </Button>,\n        <Button key=\"cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onClose}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <Stack hasGutter>\n            <TextContent>{text}</TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n      {withCheckbox ? (\n        <Checkbox\n          isChecked={checked}\n          onChange={() => setChecked(!checked)}\n          label={intl.formatMessage(messages.confirmCheckMessage)}\n          id=\"remove-modal-check\"\n          className=\"pf-u-mt-lg\"\n        />\n      ) : null}\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.any,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  withCheckbox: PropTypes.bool,\n};\n\nRemoveModal.defaultProps = {\n  withCheckbox: false,\n};\n\nexport default RemoveModal;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        'data-is-active': PropTypes.bool,\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import { nowrap } from '@patternfly/react-table';\nimport React, { Fragment, useState, useEffect, useContext, useRef, Suspense } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './member-table-helpers';\nimport { fetchMembersForGroup, removeMembersFromGroup, fetchGroups, fetchGroup } from '../../../redux/actions/group-actions';\nimport { getBackRoute } from '../../../helpers/shared/helpers';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\n\nconst selector = ({ groupReducer: { selectedGroup, groups } }) => ({\n  members: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  groupsPagination: groups.pagination || groups.meta,\n  groupsFilters: groups.filters,\n  group: selectedGroup,\n  adminDefault: selectedGroup.admin_default,\n  platformDefault: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading,\n});\n\nconst removeModalText = (name, group, plural) => (\n  <FormattedMessage\n    {...(plural ? messages.removeMembersText : messages.removeMemberText)}\n    values={{\n      b: (text) => <b>{text}</b>,\n      name,\n      group,\n    }}\n  />\n);\nconst GroupMembers = () => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  const { groupId } = useParams();\n  const { members, pagination, groupsPagination, groupsFilters, isLoading, adminDefault, platformDefault, group } = useSelector(\n    selector,\n    shallowEqual\n  );\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n\n  const columns = [\n    { title: intl.formatMessage(messages.status), transforms: [nowrap] },\n    { title: intl.formatMessage(messages.username) },\n    { title: intl.formatMessage(messages.email) },\n    { title: intl.formatMessage(messages.lastName) },\n    { title: intl.formatMessage(messages.firstName) },\n  ];\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options = pagination) => {\n    dispatch(fetchMembersForGroup(groupId, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const setCheckedMembers = (newSelection) => {\n    setSelectedMembers((members) => newSelection(members));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(groupId, userNames)).then(() => {\n      setSelectedMembers([]);\n      fetchData(undefined, { ...pagination, offset: 0 });\n      dispatch(fetchGroups({ usesMetaInURL: true, chrome }));\n    });\n  };\n\n  const actionResolver = () =>\n    !hasPermissions.current\n      ? null\n      : [\n          {\n            title: intl.formatMessage(messages.remove),\n            onClick: (_event, _rowId, member) => {\n              setConfirmDelete(() => () => removeMembers([member.username.title]));\n              setDeleteInfo({\n                title: intl.formatMessage(messages.removeMemberQuestion),\n                text: removeModalText(member.username.title, group.name, false),\n                confirmButtonLabel: intl.formatMessage(messages.removeMember),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ];\n\n  const navigate = useAppNavigate();\n\n  const toolbarButtons = () => [\n    ...(hasPermissions.current\n      ? [\n          <AppLink to={pathnames['group-add-members'].link.replace(':groupId', groupId)} key=\"remove-from-group\" className=\"rbac-m-hide-on-sm\">\n            <Button variant=\"primary\" aria-label=\"Add member\">\n              {intl.formatMessage(messages.addMember)}\n            </Button>\n          </AppLink>,\n          {\n            label: intl.formatMessage(messages.addMember),\n            props: {\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => {\n              () => navigate(pathnames['group-add-members'].link.replace(':groupId', groupId));\n            },\n          },\n          {\n            label: intl.formatMessage(messages.remove),\n            props: {\n              isDisabled: !selectedMembers || !selectedMembers.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleMembersSelected = selectedMembers.length > 1;\n              const removeText = intl.formatMessage(multipleMembersSelected ? messages.removeMembersQuestion : messages.removeMemberQuestion);\n              setConfirmDelete(() => () => removeMembers(selectedMembers.map((user) => user.uuid)));\n              setDeleteInfo({\n                title: removeText,\n                confirmButtonLabel: removeText,\n                text: removeModalText(\n                  multipleMembersSelected ? selectedMembers.length : selectedMembers[0].uuid,\n                  group.name,\n                  multipleMembersSelected\n                ),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n  const data = (members || []).map((user) => ({ ...user, uuid: user.username }));\n  const rows = createRows(data, selectedMembers);\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        isOpen={showRemoveModal}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        }}\n      />\n      <Section type=\"content\" id=\"tab-principals\">\n        {platformDefault || adminDefault ? (\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={TextVariants.h1}>\n                    {intl.formatMessage(adminDefault ? messages.allOrgAdminsAreMembers : messages.allUsersAreMembers)}\n                  </Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card>\n        ) : (\n          <TableToolbarView\n            data={data}\n            isSelectable={hasPermissions.current}\n            rows={rows}\n            columns={columns}\n            actionResolver={actionResolver}\n            filterPlaceholder={intl.formatMessage(messages.username).toLowerCase()}\n            titlePlural={intl.formatMessage(messages.members).toLowerCase()}\n            titleSingular={intl.formatMessage(messages.member)}\n            ouiaId=\"members-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={({ limit, offset, name }) => fetchData(name, { limit, offset })}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            checkedRows={selectedMembers}\n            isLoading={isLoading}\n            rowWrapper={UsersRow}\n            setCheckedItems={setCheckedMembers}\n            toolbarButtons={toolbarButtons}\n            emptyProps={{ title: intl.formatMessage(messages.noGroupMembers), description: [intl.formatMessage(messages.addUserToConfigure), ''] }}\n            tableId=\"group-members\"\n          />\n        )}\n      </Section>\n      <Suspense>\n        <Outlet\n          context={{\n            [pathnames['group-members-edit-group'].path]: {\n              group,\n              cancelRoute: pathnames['group-detail-members'].link.replace(':groupId', groupId),\n              postMethod: () => dispatch(fetchGroup(group.uuid)),\n            },\n            [pathnames['group-members-remove-group'].path]: {\n              postMethod: () => dispatch(fetchGroups({ ...groupsPagination, offset: 0, filters: groupsFilters, usesMetaInURL: true, chrome })),\n              cancelRoute: pathnames['group-detail-members'].link.replace(':groupId', groupId),\n              submitRoute: getBackRoute(pathnames.groups.link, { ...groupsPagination, offset: 0 }, groupsFilters),\n              groupsUuid: [group],\n            },\n            [pathnames['group-add-members'].path]: {\n              fetchData,\n              cancelRoute: pathnames['group-detail-members'].link.replace(':groupId', groupId),\n            },\n          }}\n        />\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default GroupMembers;\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const createRows = (data, checkedRows = []) => {\n  const intl = useIntl();\n  return data.reduce(\n    (acc, { is_active: isActive, username, email, first_name: firstName, last_name: lastName }) => [\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [\n          {\n            title: <Label color={isActive && 'green'}>{intl.formatMessage(isActive ? messages.active : messages.inactive)}</Label>,\n            props: {\n              data: { isActive },\n            },\n          },\n          username,\n          email,\n          lastName,\n          firstName,\n        ],\n        selected: checkedRows.find((row) => row.uuid === username),\n      },\n    ],\n    []\n  );\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n"],"names":["ExclamationTriangleIconConfig","name","height","width","svgPath","yOffset","xOffset","ExclamationTriangleIcon","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","_b","type","children","className","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","sectionClasses","concat","undefined","linkBasename","navigate","useNavigate","to","options","mergeToBasename","RemoveModal","title","text","onClose","onSubmit","isOpen","confirmButtonLabel","withCheckbox","intl","useIntl","useState","checked","setChecked","Modal","variant","ModalVariant","actions","Button","key","ouiaId","isDisabled","onClick","formatMessage","messages","Split","hasGutter","SplitItem","isFilled","Stack","TextContent","Checkbox","isChecked","onChange","label","id","propTypes","PropTypes","defaultProps","UsersRow","row","status","isActive","RowWrapper","classNames","data","selector","groupReducer","selectedGroup","groups","members","pagination","meta","groupsPagination","groupsFilters","filters","group","adminDefault","admin_default","platformDefault","platform_default","isLoading","removeModalText","plural","values","b","chrome","useChrome","filterValue","setFilterValue","selectedMembers","setSelectedMembers","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","groupId","useParams","useSelector","shallowEqual","useContext","PermissionsContext","userAccessAdministrator","orgAdmin","hasPermissions","useRef","columns","transforms","nowrap","dispatch","useDispatch","fetchData","usernames","fetchMembersForGroup","useEffect","current","removeMembers","userNames","removeMembersFromGroup","then","offset","fetchGroups","usesMetaInURL","useAppNavigate","map","user","uuid","username","rows","checkedRows","reduce","acc","is_active","email","firstName","first_name","lastName","last_name","cells","Label","color","selected","find","createRows","Fragment","Section","Card","CardBody","Bullseye","Text","component","TextVariants","isSelectable","actionResolver","_event","_rowId","member","filterPlaceholder","toLowerCase","titlePlural","titleSingular","limit","rowWrapper","setCheckedItems","newSelection","toolbarButtons","AppLink","pathnames","multipleMembersSelected","removeText","emptyProps","description","tableId","Suspense","Outlet","context","cancelRoute","postMethod","fetchGroup","submitRoute","getBackRoute","groupsUuid","FormattedMessage","textComponent","defaultMessage","tagName","Component","nodes","ignoreTag","Array","isArray","displayName","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps"],"sourceRoot":""}
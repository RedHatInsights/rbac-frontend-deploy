{"version":3,"file":"js/817.6e7987f8c04a665c4c79.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/TextArea/TextArea.js","webpack:///./src/helpers/shared/filters.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/ActiveUsers.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/smart-components/common/review-step-buttons.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/common/wizard-error.js","webpack:///./src/smart-components/group/add-group/review-template.js","webpack:///./src/smart-components/group/add-group/set-name.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/add-group-success.tsx","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/smart-components/group/add-group/schema.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/validators.js","webpack:///./src/smart-components/user/user-table-helpers.tsx","webpack:///./src/utilities/async-debounce.ts"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { ASTERISK } from '../../helpers/htmlConstants';\nimport { css } from '@patternfly/react-styles';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport const FormGroup = (_a) => {\n    var { children = null, className = '', label, labelInfo, labelIcon, isRequired = false, isInline = false, hasNoPaddingTop = false, isStack = false, fieldId, role } = _a, props = __rest(_a, [\"children\", \"className\", \"label\", \"labelInfo\", \"labelIcon\", \"isRequired\", \"isInline\", \"hasNoPaddingTop\", \"isStack\", \"fieldId\", \"role\"]);\n    const isGroupOrRadioGroup = role === 'group' || role === 'radiogroup';\n    const LabelComponent = isGroupOrRadioGroup ? 'span' : 'label';\n    const labelContent = (React.createElement(React.Fragment, null,\n        React.createElement(LabelComponent, Object.assign({ className: css(styles.formLabel) }, (!isGroupOrRadioGroup && { htmlFor: fieldId })),\n            React.createElement(\"span\", { className: css(styles.formLabelText) }, label),\n            isRequired && (React.createElement(\"span\", { className: css(styles.formLabelRequired), \"aria-hidden\": \"true\" },\n                ' ',\n                ASTERISK))),\n        ' ',\n        React.isValidElement(labelIcon) && labelIcon));\n    return (React.createElement(GenerateId, null, (randomId) => (React.createElement(\"div\", Object.assign({ className: css(styles.formGroup, className) }, (role && { role }), (isGroupOrRadioGroup && { 'aria-labelledby': `${fieldId || randomId}-legend` }), props),\n        label && (React.createElement(\"div\", Object.assign({ className: css(styles.formGroupLabel, labelInfo && styles.modifiers.info, hasNoPaddingTop && styles.modifiers.noPaddingTop) }, (isGroupOrRadioGroup && { id: `${fieldId || randomId}-legend` })),\n            labelInfo && (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: css(styles.formGroupLabelMain) }, labelContent),\n                React.createElement(\"div\", { className: css(styles.formGroupLabelInfo) }, labelInfo))),\n            !labelInfo && labelContent)),\n        React.createElement(\"div\", { className: css(styles.formGroupControl, isInline && styles.modifiers.inline, isStack && styles.modifiers.stack) }, children)))));\n};\nFormGroup.displayName = 'FormGroup';\n//# sourceMappingURL=FormGroup.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { capitalize, ValidatedOptions, canUseDOM } from '../../helpers';\nimport { FormControlIcon } from '../FormControl/FormControlIcon';\nexport var TextAreResizeOrientation;\n(function (TextAreResizeOrientation) {\n    TextAreResizeOrientation[\"horizontal\"] = \"horizontal\";\n    TextAreResizeOrientation[\"vertical\"] = \"vertical\";\n    TextAreResizeOrientation[\"both\"] = \"both\";\n})(TextAreResizeOrientation || (TextAreResizeOrientation = {}));\nexport var TextAreaReadOnlyVariant;\n(function (TextAreaReadOnlyVariant) {\n    TextAreaReadOnlyVariant[\"default\"] = \"default\";\n    TextAreaReadOnlyVariant[\"plain\"] = \"plain\";\n})(TextAreaReadOnlyVariant || (TextAreaReadOnlyVariant = {}));\nclass TextAreaBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.setAutoHeight = (field) => {\n            const parent = field.parentElement;\n            parent.style.setProperty('height', 'inherit');\n            const computed = window.getComputedStyle(field);\n            // Calculate the height\n            const height = parseInt(computed.getPropertyValue('border-top-width')) +\n                parseInt(computed.getPropertyValue('padding-top')) +\n                field.scrollHeight +\n                parseInt(computed.getPropertyValue('padding-bottom')) +\n                parseInt(computed.getPropertyValue('border-bottom-width'));\n            parent.style.setProperty('height', `${height}px`);\n        };\n        this.handleChange = (event) => {\n            // https://gomakethings.com/automatically-expand-a-textarea-as-the-user-types-using-vanilla-javascript/\n            const field = event.currentTarget;\n            if (this.props.autoResize && canUseDOM) {\n                this.setAutoHeight(field);\n            }\n            if (this.props.onChange) {\n                this.props.onChange(event, field.value);\n            }\n        };\n        if (!props.id && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('TextArea: TextArea requires either an id or aria-label to be specified');\n        }\n    }\n    componentDidMount() {\n        const inputRef = this.props.innerRef || this.inputRef;\n        if (this.props.autoResize && canUseDOM) {\n            const field = inputRef.current;\n            this.setAutoHeight(field);\n        }\n    }\n    render() {\n        const _a = this.props, { className, value, validated, isRequired, isDisabled, readOnlyVariant, resizeOrientation, innerRef, disabled, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        autoResize, onChange, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        onBlur, onFocus } = _a, props = __rest(_a, [\"className\", \"value\", \"validated\", \"isRequired\", \"isDisabled\", \"readOnlyVariant\", \"resizeOrientation\", \"innerRef\", \"disabled\", \"autoResize\", \"onChange\", \"onBlur\", \"onFocus\"]);\n        const orientation = `resize${capitalize(resizeOrientation)}`;\n        const hasStatusIcon = ['success', 'error', 'warning'].includes(validated);\n        return (React.createElement(\"span\", { className: css(styles.formControl, readOnlyVariant && styles.modifiers.readonly, readOnlyVariant === 'plain' && styles.modifiers.plain, resizeOrientation && styles.modifiers[orientation], isDisabled && styles.modifiers.disabled, hasStatusIcon && styles.modifiers[validated], className) },\n            React.createElement(\"textarea\", Object.assign({ onChange: this.handleChange, onFocus: onFocus, onBlur: onBlur }, (typeof this.props.defaultValue !== 'string' && { value }), { \"aria-invalid\": validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled || disabled, readOnly: !!readOnlyVariant, ref: innerRef || this.inputRef }, props)),\n            hasStatusIcon && (React.createElement(\"span\", { className: css(styles.formControlUtilities) },\n                React.createElement(FormControlIcon, { status: validated })))));\n    }\n}\nTextAreaBase.displayName = 'TextArea';\nTextAreaBase.defaultProps = {\n    innerRef: React.createRef(),\n    className: '',\n    isRequired: false,\n    isDisabled: false,\n    validated: 'default',\n    resizeOrientation: 'both',\n    'aria-label': null\n};\nexport const TextArea = React.forwardRef((props, ref) => (React.createElement(TextAreaBase, Object.assign({}, props, { innerRef: ref }))));\nTextArea.displayName = 'TextArea';\n//# sourceMappingURL=TextArea.js.map","export const syncDefaultFiltersWithUrl = (location, navigate, keys, defaults = {}) => {\n  const searchParams = new URLSearchParams(location.search);\n\n  let filters = keys.reduce((acc, key) => {\n    const values = searchParams.getAll(key);\n    return {\n      ...acc,\n      [key]: values.length > 1 ? values : values[0],\n    };\n  }, {});\n\n  Object.keys(defaults).forEach((key) => {\n    const value = defaults[key];\n    filters = {\n      ...filters,\n      [key]: Array.isArray(filters[key])\n        ? [...new Set([...filters[key], ...(Array.isArray(value) ? value : [value])])]\n        : (value?.length > 0 && value) || filters[key],\n    };\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => searchParams.getAll(key).includes(item) || searchParams.append(key, item));\n    } else {\n      searchParams.get(key) || (value && searchParams.set(key, value));\n    }\n  });\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n  return filters;\n};\n\nexport const areFiltersPresentInUrl = (location, keys) => {\n  const searchParams = new URLSearchParams(location.search);\n  return keys.some((key) => searchParams.get(key));\n};\n\nexport const applyFiltersToUrl = (location, navigate, newValues) => {\n  const searchParams = new URLSearchParams(location.search);\n  Object.keys(newValues).forEach((key) => searchParams.delete(key));\n\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => item && searchParams.append(key, item));\n    } else {\n      value && searchParams.set(key, value);\n    }\n  });\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useContext } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport PermissionsContext from '../../utilities/permissions-context';\nimport messages from '../../Messages';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst ActiveUser = ({ linkDescription, linkTitle }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const env = chrome.getEnvironment();\n  const prefix = chrome.isProd() ? '' : `${env}.`;\n  const { orgAdmin } = useContext(PermissionsContext);\n  return orgAdmin ? (\n    <Text className=\"pf-v5-u-mt-0\" component={TextVariants.h7}>\n      {`${intl.formatMessage(messages.usersDescription)} `}\n      {linkDescription}\n      <Text\n        component={TextVariants.a}\n        href={`https://www.${prefix}redhat.com/wapps/ugc/protected/usermgt/userList.html`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {linkTitle}\n        <ExternalLinkAltIcon />\n      </Text>\n      .\n    </Text>\n  ) : (\n    <Text className=\"pf-v5-u-mt-0\" component={TextVariants.h7}>\n      {`${intl.formatMessage(messages.usersDescription)} `}\n    </Text>\n  );\n};\n\nActiveUser.propTypes = {\n  linkDescription: PropTypes.node,\n  linkTitle: PropTypes.node,\n};\n\nActiveUser.defaultProps = {\n  linkDescription: '',\n  linkTitle: ' user management list ',\n};\n\nexport default ActiveUser;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        'data-is-active': PropTypes.bool,\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <ListLoader isCompact={isCompact} items={pagination?.limit} />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import { Button } from '@patternfly/react-core';\nimport React, { useContext, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst selectNext = (nextStep, getState) =>\n  ({\n    string: nextStep,\n    function: nextStep({ values: getState().values }),\n  }?.[typeof nextStep] || nextStep.stepMapper?.[get(getState().values, nextStep.when)]);\n\nconst NextButton = ({ nextStep, valid, handleNext, nextLabel, getState, handleSubmit, submitLabel }) => (\n  <Button\n    variant=\"primary\"\n    type=\"button\"\n    isDisabled={!valid || getState().validating}\n    onClick={() => (nextStep ? handleNext(selectNext(nextStep, getState)) : handleSubmit())}\n  >\n    {nextStep ? nextLabel : submitLabel}\n  </Button>\n);\n\nNextButton.propTypes = {\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n  handleSubmit: PropTypes.func.isRequired,\n  submitLabel: PropTypes.node.isRequired,\n  valid: PropTypes.bool,\n  handleNext: PropTypes.func.isRequired,\n  nextLabel: PropTypes.node.isRequired,\n  getState: PropTypes.func.isRequired,\n};\n\nconst ReviewStepButtons = ({ renderNextButton, disableBack, handlePrev, buttonLabels: { cancel, back }, context }) => {\n  const formOptions = useFormApi();\n  const { success, error, submitting } = useContext(context);\n  if (success || typeof error === 'undefined' || error || submitting) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {renderNextButton()}\n      <Button type=\"button\" variant=\"secondary\" isDisabled={disableBack} onClick={handlePrev}>\n        {back}\n      </Button>\n      <Button type=\"button\" variant=\"link\" onClick={formOptions.onCancel}>\n        {cancel}\n      </Button>\n    </Fragment>\n  );\n};\n\nReviewStepButtons.propTypes = {\n  disableBack: PropTypes.bool,\n  handlePrev: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  nextStep: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      when: PropTypes.string.isRequired,\n      stepMapper: PropTypes.object.isRequired,\n    }),\n    PropTypes.func,\n  ]),\n  buttonLabels: PropTypes.shape({\n    submit: PropTypes.node.isRequired,\n    cancel: PropTypes.node.isRequired,\n    back: PropTypes.node.isRequired,\n    next: PropTypes.node.isRequired,\n  }).isRequired,\n  context: PropTypes.object.isRequired,\n  renderNextButton: PropTypes.func,\n};\n\nexport default ReviewStepButtons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button, Icon } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/dynamic/icons/exclamation-triangle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './warningModal.scss';\n\nexport const WarningModal = ({\n  type,\n  isOpen,\n  onModalCancel,\n  onModalConfirm,\n  customTitle,\n  customDescription,\n  customPrimaryButtonTitle,\n  customSecondaryButtonTitle,\n}) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      data-testid=\"warning-modal\"\n      title={\n        <span className=\"rbac-c-wizard__cancel-warning-header\">\n          <Icon size=\"lg\" className=\"pf-v5-u-mr-md\">\n            <ExclamationTriangleIcon className=\"rbac-c-wizard__cancel-warning-header--icon\" />\n          </Icon>\n          {customTitle || intl.formatMessage(messages.exitItemCreation, { item: type })}\n        </span>\n      }\n      variant={ModalVariant.small}\n      className=\"rbac rbac-c-wizard__cancel-warning\"\n      isOpen={isOpen}\n      onClose={onModalCancel}\n      actions={[\n        <Button ouiaId=\"primary-exit-button\" key=\"confirm\" variant=\"primary\" onClick={onModalConfirm}>\n          {customPrimaryButtonTitle ?? intl.formatMessage(messages.exit)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onModalCancel}>\n          {customSecondaryButtonTitle ?? intl.formatMessage(messages.stay)}\n        </Button>,\n      ]}\n    >\n      <span>{customDescription || intl.formatMessage(messages.discardedInputsWarning)} </span>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  customTitle: PropTypes.node,\n  customDescription: PropTypes.node,\n  customPrimaryButtonTitle: PropTypes.string,\n  customSecondaryButtonTitle: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onModalConfirm: PropTypes.func,\n};\n","import React, { useContext } from 'react';\nimport { Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\n\nconst WizardError = ({ context, title, text }) => {\n  const intl = useIntl();\n  const { jumpToStep } = useContext(WizardContext);\n  const { setWizardError } = useContext(context);\n  return (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon color=\"red\" icon={ExclamationCircleIcon} />} headingLevel=\"h4\" />\n      <EmptyStateBody>{text}</EmptyStateBody>\n      <EmptyStateFooter>\n        <Button\n          onClick={() => {\n            setWizardError(undefined);\n            jumpToStep(0);\n          }}\n          variant=\"primary\"\n        >\n          {intl.formatMessage(messages.returnToStepNumber, { number: 1 })}\n        </Button>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nWizardError.propTypes = {\n  context: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default WizardError;\n","import React, { useContext, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Bullseye, Spinner, Title } from '@patternfly/react-core';\nimport { AddGroupWizardContext } from './add-group-wizard';\nimport { asyncValidator } from '../validators';\nimport WizardError from '../../common/wizard-error';\nimport messages from '../../../Messages';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  const { submitting, error, setWizardError } = useContext(AddGroupWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['group-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner className=\"pf-v5-u-mt-xl\" size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  return error === true ? (\n    <WizardError\n      context={AddGroupWizardContext}\n      title={intl.formatMessage(messages.groupNameTakenTitle)}\n      text={intl.formatMessage(messages.groupNameTakenText)}\n    />\n  ) : (\n    <React.Fragment>\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-lg\">\n        {intl.formatMessage(messages.reviewDetails)}\n      </Title>\n      {[[{ ...formFields?.[0]?.[0] }]]}\n    </React.Fragment>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormHelperText, HelperText, HelperTextItem, Stack, StackItem } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput/TextInput';\nimport { TextArea } from '@patternfly/react-core/dist/esm/components/TextArea/TextArea';\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { debouncedAsyncValidator } from '../validators';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst groupNameValidated = (groupName, groupNameError) =>\n  groupName === undefined || groupNameError || groupName?.length > 150 ? 'error' : 'default';\nconst groupDescriptionValidated = (groupDescription) => (groupDescription?.length > 150 ? 'error' : 'default');\n\nconst SetName = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const { 'group-name': name, 'group-description': description } = formOptions.getState().values;\n  const [groupName, setGroupName] = useState(name || '');\n  const [groupNameError, setGroupNameError] = useState();\n  const [groupDescription, setGroupDescription] = useState(description);\n\n  const processGroupName = (value) => {\n    input.onChange(undefined);\n    debouncedAsyncValidator(value)\n      .then(() => {\n        input.onChange(value);\n        setGroupNameError(undefined);\n      })\n      .catch((error) => {\n        setGroupNameError(error);\n        input.onChange(undefined);\n      });\n    setGroupName(value);\n  };\n\n  useEffect(() => {\n    groupName?.length > 0 && processGroupName(groupName);\n  }, []);\n\n  const groupNameValid = groupNameValidated(groupName, groupNameError);\n  const groupDescriptionValid = groupDescriptionValidated(groupDescription);\n  return (\n    <Stack hasGutter>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <FormGroup label={intl.formatMessage(messages.groupName)} isRequired>\n          <TextInput\n            value={groupName}\n            type=\"text\"\n            validated={groupNameValid}\n            onBlur={() => groupName === '' && setGroupName(undefined)}\n            onChange={(_event, value) => processGroupName(value)}\n            aria-label=\"Group name\"\n          />\n          {groupNameValid === 'error' && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant={groupNameValid}>{groupName ? groupNameError : intl.formatMessage(messages.required)}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n      <StackItem>\n        <FormGroup label={intl.formatMessage(messages.groupDescription)}>\n          <TextArea\n            value={groupDescription}\n            validated={groupDescriptionValid}\n            onChange={(_event, value) => {\n              setGroupDescription(value);\n              formOptions.change('group-description', value);\n            }}\n            aria-label=\"Group description\"\n            resizeOrientation=\"vertical\"\n          />\n          {groupDescriptionValid === 'error' && (\n            <FormHelperText>\n              <HelperText variant={groupDescriptionValid}>\n                <HelperTextItem>{intl.formatMessage(messages.maxCharactersWarning, { number: 150 })}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSetName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SetName;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormGroup, Stack, StackItem, Text, TextContent } from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport '../../../App.scss';\n\nconst SetRoles = (props) => {\n  const intl = useIntl();\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedRoles(formOptions.getState().values['roles-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedRoles);\n    formOptions.change('roles-list', selectedRoles);\n  }, [selectedRoles]);\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text>{intl.formatMessage(messages.selectRolesForGroupText)}</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <FormGroup fieldId=\"select-role\">\n            <RolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} rolesExcluded={false} />\n          </FormGroup>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetRoles;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Form, FormGroup, Stack, StackItem, TextContent } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport UsersList from './users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport '../../../App.scss';\n\nconst SetUsers = (props) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { input } = useFieldApi(props);\n  const intl = useIntl();\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedUsers(formOptions.getState().values['users-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedUsers);\n    formOptions.change('users-list', selectedUsers);\n  }, [selectedUsers]);\n\n  return (\n    <Fragment>\n      <Form>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <ActiveUser linkDescription={intl.formatMessage(messages.toManageUsersText)} />\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup fieldId=\"select-user\">\n              <Card>\n                <UsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} displayNarrow />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst SummaryContent = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'group-name': name,\n    'group-description': description,\n    'users-list': selectedUsers,\n    'roles-list': selectedRoles,\n  } = formOptions.getState().values;\n\n  return (\n    <div className=\"rbac\">\n      <Stack hasGutter>\n        <StackItem>\n          <Stack hasGutter>\n            <StackItem className=\"rbac-l-stack__item-summary\">\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    {intl.formatMessage(messages.groupName)}\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{name}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    {intl.formatMessage(messages.groupDescription)}\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{description}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    {intl.formatMessage(messages.roles)}\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  {selectedRoles.map((role, index) => (\n                    <Text className=\"pf-v5-u-mb-0\" key={index}>\n                      {role.label}\n                    </Text>\n                  ))}\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    {intl.formatMessage(messages.members)}\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  {selectedUsers.map((role, index) => (\n                    <Text className=\"pf-v5-u-mb-0\" key={index}>\n                      {role.label}\n                    </Text>\n                  ))}\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SummaryContent;\n","import React, { useContext } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateActions, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { AddGroupWizardContext } from './add-group-wizard';\nimport messages from '../../../Messages';\n\ninterface AddGroupSuccessProps {\n  onClose: () => void;\n}\n\nconst AddGroupSuccess = ({ onClose }: AddGroupSuccessProps) => {\n  const intl = useIntl();\n  const { setHideForm, setWizardSuccess } = useContext(AddGroupWizardContext);\n\n  return (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader\n        titleText={<>{intl.formatMessage(messages.groupCreatedSuccessfully)}</>}\n        icon={<EmptyStateIcon className=\"pf-v5-u-mt-xl\" color=\"green\" icon={CheckCircleIcon} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateFooter>\n        <Button onClick={onClose} variant=\"primary\">\n          {intl.formatMessage(messages.exit)}\n        </Button>\n        <EmptyStateActions>\n          <Button\n            onClick={() => {\n              setHideForm(false);\n              setWizardSuccess(false);\n            }}\n            variant=\"link\"\n          >\n            {intl.formatMessage(messages.createAnotherGroup)}\n          </Button>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nexport default AddGroupSuccess;\n","import React, { useState, createContext, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core/deprecated';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { WarningModal } from '../../common/warningModal';\nimport { schemaBuilder } from './schema';\nimport { addGroup } from '../../../redux/actions/group-actions';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport SetName from './set-name';\nimport SetRoles from './set-roles';\nimport SetUsers from './set-users';\nimport SummaryContent from './summary-content';\nimport AddGroupSuccess from './add-group-success';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport paths from '../../../utilities/pathnames';\nimport messages from '../../../Messages';\n\nexport const AddGroupWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n  // eslint-disable-next-line no-unused-vars\n  setHideForm: (newValue) => null,\n  // eslint-disable-next-line no-unused-vars\n  setWizardSuccess: (newValue) => null,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  description: Description,\n  'set-name': SetName,\n  'set-roles': SetRoles,\n  'set-users': SetUsers,\n  'summary-content': SummaryContent,\n};\n\nexport const onCancel = (emptyCallback, nonEmptyCallback, setGroupData) => (formData) => {\n  setGroupData(formData);\n  if (Object.keys(formData).length > 0) {\n    nonEmptyCallback(true);\n  } else {\n    emptyCallback();\n  }\n};\n\nconst AddGroupWizard = ({ postMethod, pagination, filters, orderBy }) => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const schema = useRef(schemaBuilder());\n  const navigate = useAppNavigate();\n  const [groupData, setGroupData] = useState({});\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n\n  const redirectToGroups = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        title: intl.formatMessage(messages.addingGroupTitle),\n        dismissDelay: 8000,\n        description: intl.formatMessage(messages.addingGroupCanceledDescription),\n      })\n    );\n    navigate({\n      pathname: paths.groups.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardCanceled = (canceled) => setWizardContextValue((prev) => ({ ...prev, canceled }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    const groupData = {\n      name: formData['group-name'],\n      description: formData['group-description'],\n      user_list: formData['users-list'].map((user) => ({ username: user.label })),\n      roles_list: formData['roles-list'].map((role) => role.uuid),\n    };\n    dispatch(addGroup(groupData)).then(() => {\n      setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true }));\n    });\n  };\n\n  const onClose = () => {\n    setWizardContextValue((prev) => ({ ...prev, success: false, hideForm: false }));\n    postMethod({ limit: pagination.limit, offset: 0, orderBy, filters: {} });\n    navigate({\n      pathname: paths.groups.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit }),\n    });\n  };\n\n  return (\n    <AddGroupWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      {wizardContextValue.success ? (\n        <Wizard\n          isOpen\n          title={intl.formatMessage(messages.createGroup)}\n          onClose={onClose}\n          steps={[\n            {\n              name: 'success',\n              component: <AddGroupSuccess onClose={onClose} />,\n              isFinishedStep: true,\n            },\n          ]}\n        />\n      ) : wizardContextValue.canceled ? (\n        <WarningModal isOpen type=\"group\" onModalCancel={() => setWizardCanceled(false)} onModalConfirm={redirectToGroups} />\n      ) : !wizardContextValue.hideForm ? (\n        <FormRenderer\n          schema={schema.current}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          initialValues={groupData}\n          onCancel={onCancel(redirectToGroups, setWizardCanceled, setGroupData)}\n        />\n      ) : null}\n    </AddGroupWizardContext.Provider>\n  );\n};\n\nAddGroupWizard.propTypes = {\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.object.isRequired,\n  orderBy: PropTypes.string,\n};\n\nexport default AddGroupWizard;\n","import React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport ReviewTemplate from './review-template';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddGroupWizardContext } from './add-group-wizard';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const schemaBuilder = () => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        title: intl.formatMessage(messages.createGroup),\n        fields: [\n          {\n            name: 'name-and-description',\n            nextStep: 'add-roles',\n            title: intl.formatMessage(messages.nameAndDescription),\n            fields: [\n              {\n                component: 'set-name',\n                name: 'group-name',\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                component: componentTypes.TEXTAREA,\n                name: 'group-description',\n                hideField: true,\n                validate: [\n                  {\n                    type: validatorTypes.MAX_LENGTH,\n                    threshold: 150,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            name: 'add-roles',\n            nextStep: 'add-users',\n            title: intl.formatMessage(messages.addRoles),\n            fields: [\n              {\n                component: 'set-roles',\n                name: 'roles-list',\n              },\n            ],\n          },\n          {\n            name: 'add-users',\n            nextStep: 'review',\n            title: intl.formatMessage(messages.addMembers),\n            fields: [\n              {\n                component: 'set-users',\n                name: 'users-list',\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            // eslint-disable-next-line react/display-name\n            buttons: (props) => <ReviewStepButtons {...props} context={AddGroupWizardContext} />,\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'summary-content',\n                name: 'summary-content',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { sortable } from '@patternfly/react-table';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\nimport messages from '../../../Messages';\n\nconst createRows = (data, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description }) => [\n          ...acc,\n          {\n            uuid,\n            cells: [display_name || name, description],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst RolesList = ({ selectedRoles, setSelectedRoles, rolesExcluded, groupId: groupUuid }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const dispatch = useDispatch();\n  const textFilterRef = useRef(null);\n  const selector = ({ roleReducer: { roles, isLoading } }) => ({\n    roles: roles.data,\n    pagination: roles.meta,\n    isLoading: isLoading,\n    filters: roles.filters,\n  });\n  const selectorRolesExluded = ({\n    groupReducer: {\n      selectedGroup: {\n        addRoles: { roles, pagination, loaded },\n        uuid,\n      },\n    },\n  }) => ({\n    roles,\n    pagination: pagination || { ...defaultCompactSettings, count: roles?.length },\n    isLoading: !loaded,\n    groupId: groupUuid || uuid,\n  });\n  const { roles, pagination, isLoading, groupId, filters } = useSelector(rolesExcluded ? selectorRolesExluded : selector, shallowEqual);\n\n  const { current: columns } = useRef([\n    { title: intl.formatMessage(messages.name), key: 'display_name', ...(rolesExcluded ? { orderBy: 'name' } : { transforms: [sortable] }) },\n    { title: intl.formatMessage(messages.description) },\n  ]);\n\n  const [filterValue, setFilterValue] = useState('');\n  const [sortByState, setSortByState] = useState({ index: 1, direction: 'asc' });\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name })));\n  };\n\n  const fetchRoles = useCallback(\n    (groupId, config) =>\n      rolesExcluded ? dispatch(fetchAddRolesForGroup(groupId, config)) : dispatch(fetchRolesWithPolicies(mappedProps({ ...config, chrome }))),\n    [rolesExcluded]\n  );\n  const fetchTableData = (groupId, config) => {\n    const { name, count, limit, offset, orderBy } = config;\n    return fetchRoles(groupId, mappedProps({ count, limit, offset, orderBy, filters: { display_name: name } }));\n  };\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n  const rows = createRows(roles, selectedRoles);\n\n  useEffect(() => {\n    fetchRoles(groupId, { ...pagination, orderBy });\n  }, []);\n\n  return (\n    <TableToolbarView\n      isSelectable\n      isCompact\n      borders={false}\n      columns={columns}\n      rows={rows}\n      sortBy={sortByState}\n      onSort={(e, index, direction, isSelectable) => {\n        const orderBy = `${direction === 'desc' ? '-' : ''}${columns[isSelectable ? index - 1 : index].key}`;\n        setSortByState({ index, direction });\n        fetchTableData(groupId, {\n          ...pagination,\n          offset: 0,\n          orderBy,\n          ...(filters?.length > 0\n            ? {\n                ...filters.reduce(\n                  (acc, curr) => ({\n                    ...acc,\n                    [curr.key]: curr.value,\n                  }),\n                  {}\n                ),\n              }\n            : { name: filterValue }),\n        });\n      }}\n      data={roles}\n      filterValue={filterValue}\n      filterPlaceholder={intl.formatMessage(messages.roleName).toLowerCase()}\n      fetchData={(config) => fetchRoles(groupId, { ...config, filters: { display_name: config.name } })}\n      setFilterValue={({ name }) => setFilterValue(name)}\n      isLoading={isLoading}\n      ouiaId=\"roles-table\"\n      pagination={pagination}\n      checkedRows={selectedRoles}\n      setCheckedItems={setCheckedItems}\n      titlePlural={intl.formatMessage(messages.roles).toLowerCase()}\n      titleSingular={intl.formatMessage(messages.role)}\n      tableId=\"roles-list\"\n      textFilterRef={textFilterRef}\n    />\n  );\n};\n\nRolesList.propTypes = {\n  canSort: PropTypes.bool,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  rolesExcluded: PropTypes.bool.isRequired,\n  groupId: PropTypes.string,\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  canSort: true,\n};\n\nexport default RolesList;\n","import React, { useEffect, useState, useContext, useRef, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { sortable, nowrap } from '@patternfly/react-table';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { fetchUsers, updateUsersFilters } from '../../../redux/actions/user-actions';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport {\n  defaultSettings,\n  defaultAdminSettings,\n  syncDefaultPaginationWithUrl,\n  applyPaginationToUrl,\n  isPaginationPresentInUrl,\n} from '../../../helpers/shared/pagination';\nimport { syncDefaultFiltersWithUrl, applyFiltersToUrl, areFiltersPresentInUrl } from '../../../helpers/shared/filters';\nimport messages from '../../../Messages';\nimport { createRows } from '../../user/user-table-helpers';\n\nconst UsersList = ({ selectedUsers, setSelectedUsers, userLinks, usesMetaInURL, displayNarrow, props }) => {\n  const intl = useIntl();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { orgAdmin } = useContext(PermissionsContext);\n  // use for text filter to focus\n  const innerRef = useRef(null);\n\n  // for usesMetaInURL (Users page) store pagination settings in Redux, otherwise use results from meta\n  let pagination = useSelector(({ userReducer: { users } }) => ({\n    limit: (usesMetaInURL ? users.pagination.limit : users.meta.limit) ?? (orgAdmin ? defaultAdminSettings : defaultSettings).limit,\n    offset: (usesMetaInURL ? users.pagination.offset : users.meta.offset) ?? (orgAdmin ? defaultAdminSettings : defaultSettings).offset,\n    count: usesMetaInURL ? users.pagination.count : users.meta.count,\n    redirected: usesMetaInURL && users.pagination.redirected,\n  }));\n\n  const { users, isLoading, stateFilters } = useSelector(\n    ({\n      userReducer: {\n        users: { data, filters = {} },\n        isUserDataLoading,\n      },\n    }) => ({\n      users: data?.map?.((data) => ({ ...data, uuid: data.username })),\n      isLoading: isUserDataLoading,\n      stateFilters: location.search.length > 0 || Object.keys(filters).length > 0 ? filters : { status: ['Active'] },\n    })\n  );\n\n  const fetchData = useCallback((apiProps) => dispatch(fetchUsers(apiProps)), [dispatch]);\n  const updateStateFilters = useCallback((filters) => dispatch(updateUsersFilters(filters)), [dispatch]);\n  const columns = [\n    { title: intl.formatMessage(displayNarrow ? messages.orgAdmin : messages.orgAdministrator), key: 'org-admin', transforms: [nowrap] },\n    { title: intl.formatMessage(messages.username), key: 'username', transforms: [sortable] },\n    { title: intl.formatMessage(messages.email) },\n    { title: intl.formatMessage(messages.firstName), transforms: [nowrap] },\n    { title: intl.formatMessage(messages.lastName), transforms: [nowrap] },\n    { title: intl.formatMessage(messages.status), transforms: [nowrap] },\n  ];\n  const [sortByState, setSortByState] = useState({ index: 1, direction: 'asc' });\n\n  const [filters, setFilters] = useState(\n    usesMetaInURL\n      ? stateFilters\n      : {\n          username: '',\n          email: '',\n          status: [intl.formatMessage(messages.active)],\n        }\n  );\n\n  useEffect(() => {\n    usesMetaInURL && applyPaginationToUrl(location, navigate, pagination.limit, pagination.offset);\n  }, [pagination.offset, pagination.limit, pagination.count, pagination.redirected]);\n\n  useEffect(() => {\n    const { limit, offset } = syncDefaultPaginationWithUrl(location, navigate, pagination);\n    const newFilters = usesMetaInURL\n      ? syncDefaultFiltersWithUrl(location, navigate, ['username', 'email', 'status'], filters)\n      : { status: filters.status };\n    setFilters(newFilters);\n    fetchData({ ...mappedProps({ limit, offset, filters: newFilters }), usesMetaInURL });\n  }, []);\n\n  useEffect(() => {\n    if (usesMetaInURL) {\n      isPaginationPresentInUrl(location) || applyPaginationToUrl(location, navigate, pagination.limit, pagination.offset);\n      Object.values(filters).some((filter) => filter?.length > 0) &&\n        !areFiltersPresentInUrl(location, Object.keys(filters)) &&\n        syncDefaultFiltersWithUrl(location, navigate, Object.keys(filters), filters);\n    }\n  });\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, username }) => ({ uuid, label: username || uuid }));\n    });\n  };\n\n  const updateFilters = (payload) => {\n    usesMetaInURL && updateStateFilters(payload);\n    setFilters({ username: '', ...payload });\n  };\n  return (\n    <TableToolbarView\n      isCompact\n      isSelectable\n      borders={false}\n      columns={columns}\n      rows={createRows(userLinks, users, intl, selectedUsers, true)}\n      sortBy={sortByState}\n      onSort={(e, index, direction) => {\n        const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n        setSortByState({ index, direction });\n        fetchData({ ...pagination, filters, usesMetaInURL, orderBy });\n      }}\n      data={users}\n      ouiaId=\"users-table\"\n      fetchData={(config) => {\n        const status = Object.prototype.hasOwnProperty.call(config, 'status') ? config.status : filters.status;\n        const { username, email, count, limit, offset, orderBy } = config;\n\n        fetchData({ ...mappedProps({ count, limit, offset, orderBy, filters: { username, email, status } }), usesMetaInURL }).then(() => {\n          innerRef?.current?.focus();\n        });\n        usesMetaInURL && applyFiltersToUrl(location, navigate, { username, email, status });\n      }}\n      emptyFilters={{ username: '', email: '', status: '' }}\n      setFilterValue={({ username, email, status }) => {\n        updateFilters({\n          username: typeof username === 'undefined' ? filters.username : username,\n          email: typeof email === 'undefined' ? filters.email : email,\n          status: typeof status === 'undefined' || status === filters.status ? filters.status : status,\n        });\n      }}\n      isLoading={isLoading}\n      pagination={pagination}\n      checkedRows={selectedUsers}\n      setCheckedItems={setCheckedItems}\n      rowWrapper={UsersRow}\n      titlePlural={intl.formatMessage(messages.users).toLowerCase()}\n      titleSingular={intl.formatMessage(messages.user)}\n      filters={[\n        {\n          key: 'username',\n          value: filters.username,\n          placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.username).toLowerCase() }),\n          innerRef,\n        },\n        {\n          key: 'email',\n          value: filters.email,\n          placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.email).toLowerCase() }),\n          innerRef,\n        },\n        {\n          key: 'status',\n          value: filters.status,\n          label: intl.formatMessage(messages.status),\n          type: 'checkbox',\n          items: [\n            { label: intl.formatMessage(messages.active), value: 'Active' },\n            { label: intl.formatMessage(messages.inactive), value: 'Inactive' },\n          ],\n        },\n      ]}\n      tableId=\"users-list\"\n      {...props}\n    />\n  );\n};\n\nUsersList.propTypes = {\n  displayNarrow: PropTypes.bool,\n  users: PropTypes.array,\n  searchFilter: PropTypes.string,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  userLinks: PropTypes.bool,\n  props: PropTypes.object,\n  usesMetaInURL: PropTypes.bool,\n};\n\nUsersList.defaultProps = {\n  displayNarrow: false,\n  users: [],\n  selectedUsers: [],\n  setSelectedUsers: () => undefined,\n  userLinks: false,\n  usesMetaInURL: false,\n};\n\nexport default UsersList;\n","import { fetchGroups } from '../../helpers/group/group-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { locale } from '../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../Messages';\nimport providerMessages from '../../locales/data.json';\n\nexport const asyncValidator = async (groupName, idKey, id) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  if (!groupName) {\n    return undefined;\n  }\n\n  if (groupName.length > 150) {\n    throw intl.formatMessage(messages.maxCharactersWarning, { number: 150 });\n  }\n\n  const response = await fetchGroups({ limit: 10, offset: 0, filters: { name: groupName }, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (id ? response?.data?.some((item) => item[idKey] !== id) : response?.data?.length > 0) {\n    throw intl.formatMessage(messages.nameAlreadyTaken);\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce((value, idKey, id) => asyncValidator(value, idKey, id));\n","import React, { Fragment } from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { IntlShape } from 'react-intl';\nimport { CheckIcon, CloseIcon } from '@patternfly/react-icons';\nimport messages from '../../Messages';\nimport pathnames from '../../utilities/pathnames';\nimport AppLink from '../../presentational-components/shared/AppLink';\n\ninterface UserProps {\n  email: string;\n  first_name: string;\n  is_active: boolean;\n  is_org_admin: boolean;\n  last_name: string;\n  username: string;\n  uuid: string;\n}\n\nexport type CellObject = { title: string | React.RefAttributes<HTMLAnchorElement>; props?: { 'data-is-active': boolean } };\n\nexport interface RowProps {\n  uuid: string; // username\n  cells: [\n    React.ReactNode, // yes or no for isOrgAdmin\n    CellObject, // link to user or just username\n    string, // email\n    string, // firstName\n    string, // lastName\n    CellObject // status\n  ];\n  selected: boolean;\n}\n\nexport const createRows = (userLinks: boolean, data: UserProps[] = [], intl: IntlShape, checkedRows = [], isSelectable = false): RowProps[] =>\n  data?.reduce<RowProps[]>((acc, { username, is_active: isActive, email, first_name: firstName, last_name: lastName, is_org_admin: isOrgAdmin }) => {\n    const newEntry: RowProps = {\n      uuid: username,\n      cells: [\n        isOrgAdmin ? (\n          <Fragment>\n            <CheckIcon key=\"yes-icon\" className=\"pf-v5-u-mr-sm\" />\n            <span key=\"yes\">{intl.formatMessage(messages.yes)}</span>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <CloseIcon key=\"no-icon\" className=\"pf-v5-u-mr-sm\" />\n            <span key=\"no\">{intl.formatMessage(messages.no)}</span>\n          </Fragment>\n        ),\n        {\n          title: userLinks ? (\n            <AppLink to={pathnames['user-detail'].link.replace(':username', username)}>{username.toString()}</AppLink>\n          ) : (\n            username.toString()\n          ),\n        },\n        email,\n        firstName,\n        lastName,\n        {\n          title: (\n            <Label key=\"status\" color={isActive ? 'green' : 'grey'}>\n              {intl.formatMessage(isActive ? messages.active : messages.inactive)}\n            </Label>\n          ),\n          props: {\n            'data-is-active': isActive,\n          },\n        },\n      ],\n      selected: isSelectable ? Boolean(checkedRows?.find?.(({ uuid }) => uuid === username)) : false,\n    };\n\n    return [...acc, newEntry];\n  }, []);\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction: (...args: any[]) => Promise<any>, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"names":["FormGroup","_a","children","className","label","labelInfo","labelIcon","isRequired","isInline","hasNoPaddingTop","isStack","fieldId","role","props","__rest","isGroupOrRadioGroup","LabelComponent","labelContent","Object","assign","css","formLabel","htmlFor","formLabelText","formLabelRequired","randomId","formGroup","formGroupLabel","modifiers","info","noPaddingTop","id","formGroupLabelMain","formGroupLabelInfo","formGroupControl","inline","stack","displayName","TextAreResizeOrientation","TextAreaReadOnlyVariant","TextAreaBase","constructor","super","this","inputRef","setAutoHeight","field","parent","parentElement","style","setProperty","computed","window","getComputedStyle","height","parseInt","getPropertyValue","scrollHeight","handleChange","event","currentTarget","autoResize","onChange","value","console","error","componentDidMount","innerRef","current","render","validated","isDisabled","readOnlyVariant","resizeOrientation","disabled","onBlur","onFocus","orientation","hasStatusIcon","includes","formControl","readonly","plain","defaultValue","required","readOnly","ref","formControlUtilities","status","defaultProps","TextArea","syncDefaultFiltersWithUrl","location","navigate","keys","defaults","searchParams","URLSearchParams","search","filters","reduce","acc","key","values","getAll","length","forEach","Array","isArray","Set","item","append","get","set","pathname","toString","replace","areFiltersPresentInUrl","some","applyFiltersToUrl","newValues","delete","linkBasename","useNavigate","to","options","ActiveUser","linkDescription","linkTitle","intl","chrome","env","getEnvironment","prefix","isProd","orgAdmin","useContext","Text","component","TextVariants","h7","formatMessage","usersDescription","a","href","target","rel","propTypes","UsersRow","row","isActive","data","title","icon","description","actions","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","map","text","EmptyStateFooter","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","isFilterable","onShowMore","showMoreTitle","onFilter","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","Fragment","every","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","orderBy","direction","index","limit","canSelectAll","toLowerCase","compact","onSelect","_e","isSelected","_idx","uuid","cells","name","requires","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","undefined","EmptyStateActions","Button","onClick","offset","clearAllFilters","colSpan","e","noBottom","Pagination","dropDirection","directions","count","toggleTemplate","paginationBuilder","itemCount","perPage","page","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","checked","filterConfigBuilder","filterItems","selected","placeholder","type","groups","filterValues","filterByKey","filterBy","newFilter","pickBy","curr","then","focus","activeFiltersConfigBuilder","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","ReviewStepButtons","renderNextButton","disableBack","handlePrev","buttonLabels","cancel","back","context","formOptions","success","submitting","onCancel","handleNext","nextStep","when","stepMapper","submit","next","WarningModal","isOpen","onModalCancel","onModalConfirm","customTitle","customDescription","customPrimaryButtonTitle","customSecondaryButtonTitle","Modal","Icon","size","exitItemCreation","ModalVariant","small","onClose","exit","stay","discardedInputsWarning","WizardError","jumpToStep","setWizardError","lg","color","returnToStepNumber","number","ReviewTemplate","formFields","AddGroupWizardContext","getState","useEffect","catch","Bullseye","Spinner","groupNameTakenTitle","groupNameTakenText","Title","reviewDetails","SetName","input","groupName","setGroupName","useState","groupNameError","setGroupNameError","groupDescription","setGroupDescription","processGroupName","groupNameValid","groupNameValidated","groupDescriptionValid","groupDescriptionValidated","Stack","hasGutter","StackItem","TextInput","FormHelperText","HelperText","HelperTextItem","change","maxCharactersWarning","SetRoles","selectedRoles","setSelectedRoles","TextContent","selectRolesForGroupText","rolesExcluded","SetUsers","selectedUsers","setSelectedUsers","Form","toManageUsersText","Card","displayNarrow","SummaryContent","Grid","GridItem","md","h4","p","roles","members","setHideForm","setWizardSuccess","groupCreatedSuccessfully","createAnotherGroup","createContext","newValue","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","emptyCallback","nonEmptyCallback","setGroupData","formData","AddGroupWizard","postMethod","dispatch","useDispatch","schema","useRef","cache","locale","messages","fields","isDynamic","inModal","showTitles","createGroup","nameAndDescription","validate","REQUIRED","TEXTAREA","hideField","MAX_LENGTH","threshold","addRoles","addMembers","buttons","StepTemplate","schemaBuilder","useAppNavigate","groupData","wizardContextValue","setWizardContextValue","hideForm","redirectToGroups","addNotification","addingGroupTitle","dismissDelay","addingGroupCanceledDescription","link","per_page","setWizardCanceled","canceled","prev","Provider","Wizard","steps","isFinishedStep","subscription","componentMapper","onSubmit","user_list","user","username","roles_list","initialValues","RolesList","groupId","groupUuid","useSelector","groupReducer","selectedGroup","loaded","roleReducer","meta","shallowEqual","transforms","sortByState","setSortByState","fetchRoles","useCallback","config","display_name","find","createRows","fetchTableData","roleName","newSelection","canSort","UsersList","userLinks","usesMetaInURL","useLocation","userReducer","users","redirected","stateFilters","isUserDataLoading","apiProps","updateStateFilters","orgAdministrator","email","firstName","lastName","setFilters","active","newFilters","prototype","hasOwnProperty","call","payload","inactive","searchFilter","asyncValidator","async","idKey","response","nameMatch","nameAlreadyTaken","debouncedAsyncValidator","is_active","first_name","last_name","is_org_admin","isOrgAdmin","yes","no","Label","asyncFunction","debounceTime","onlyResolvesLast"],"sourceRoot":""}
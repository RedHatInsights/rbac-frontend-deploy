{"version":3,"sources":["webpack:///./src/smart-components/role/add-role-new/validators.js","webpack:///./src/smart-components/role/add-role-new/review-template.js","webpack:///./src/smart-components/role/add-role-new/cost-resources-template.js","webpack:///./src/smart-components/role/add-role-new/add-role-success.js","webpack:///./src/smart-components/role/add-role-new/base-role-table.js","webpack:///./src/smart-components/role/add-role-new/review.js","webpack:///./src/smart-components/role/add-role-new/add-role-wizard.js","webpack:///./src/smart-components/role/add-role-new/type-selector.js","webpack:///./src/smart-components/role/add-role-new/schema.js"],"names":["asyncValidator","roleName","undefined","fetchRoles","limit","offset","name","nameMatch","error","console","response","data","length","debouncedAsyncValidator","asyncDebounce","ValidatorReset","formOptions","useFormApi","useEffect","setTimeout","change","ReviewTemplate","formFields","useContext","AddRoleWizardContext","submitting","setWizardError","getState","values","then","Bullseye","Spinner","size","context","title","text","className","Title","headingLevel","TextContent","Text","propTypes","PropTypes","CostResourcesTemplate","AddRoleSuccess","onClose","setHideForm","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","color","icon","CheckCircleIcon","EmptyStateBody","Button","onClick","EmptyStateSecondaryActions","component","props","Link","to","columns","key","transforms","sortable","selector","roleReducer","rolesForWizard","isLoading","roles","pagination","meta","stickyTable","rows","Grid","map","col","GridItem","span","row","cells","cell","createContext","success","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","dispatch","useDispatch","fetchData","options","fetchRolesForWizard","useState","filterValue","setFilterValue","useSelector","shallowEqual","input","useFieldApi","itemCount","orderBy","Alert","isInline","createRows","role","Radio","id","uuid","aria-label","ouiaId","value","isChecked","onChange","batch","display_name","description","config","mappedProps","titlePlural","titleSingular","filterPlaceholder","isCompact","tableId","AddPermissionsTable","CostResources","review","copyName","copyDescription","permissions","resourceDefinitions","hasCostResources","type","permission","split","resourceDefinitionsRows","resources","join","Stack","StackItem","sm","md","TextVariants","checked","setChecked","handleChange","val","label","AddRoleWizard","filters","push","useHistory","hideForm","wizardContextValue","setWizardContextValue","cancelWarningVisible","setCancelWarningVisible","container","useRef","document","createElement","schema","setSchema","fields","isDynamic","inModal","showTitles","crossroads","nextStep","when","stepMapper","copy","create","isRequired","validate","validatorTypes","condition","is","threshold","StepTemplate","AddPermissionTemplate","some","includes","every","p","buttons","schemaBuilder","current","hidden","pathname","paths","search","createQueryParams","page","per_page","onCancel","addNotification","dismissDelay","dismissable","Provider","prev","setWizardSuccess","isOpen","onModalCancel","onConfirmCancel","Wizard","steps","isFinishedStep","subscription","initialValues","componentMapper","onSubmit","formData","roleData","applications","Set","access","find","r","attributeFilter","operation","createRole","fetchRolesWithPolicies","Boolean"],"mappings":"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","file":"js/3287.5908299ff0778cc401a1.js","sourcesContent":["import { useEffect } from 'react';\nimport { fetchRoles } from '../../../helpers/role/role-helper';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nexport const asyncValidator = async (roleName) => {\n  if (!roleName) {\n    return undefined;\n  }\n\n  const response = await fetchRoles({ limit: 10, offset: 0, name: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (response?.data?.length > 0) {\n    throw 'Name has already been taken';\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce(asyncValidator);\n\nexport const ValidatorReset = ({ name }) => {\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setTimeout(() => formOptions.change(name, '1'));\n\n    return () => formOptions.change(name, '');\n  }, []);\n\n  return null;\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner, Text, TextContent, Title } from '@patternfly/react-core';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { asyncValidator } from './validators';\nimport './review.scss';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport WizardError from '../../common/wizard-error';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting, error, setWizardError } = useContext(AddRoleWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['role-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  if (error === true) {\n    return (\n      <WizardError\n        context={AddRoleWizardContext}\n        title=\"Role name already taken\"\n        text=\"Please return to Step 1: Create role and choose a unique role name for your custom role.\"\n      />\n    );\n  }\n\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"ins-c-rbac__gutter-sm\">\n        Review details\n      </Title>\n      <TextContent className=\"ins-c-rbac__gutter-md\">\n        <Text>Review and confirm the details for your role, or click Back to revise.</Text>\n      </TextContent>\n      {[[{ ...formFields?.[0]?.[0] }]]}\n    </div>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\n\nconst CostResourcesTemplate = ({ formFields }) => (\n  <div className=\"rbac\">\n    <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-lg\">\n      Review details\n    </Title>\n    {formFields}\n  </div>\n);\n\nCostResourcesTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default CostResourcesTemplate;\n","import React, { useContext } from 'react';\nimport { Title, Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, EmptyStateSecondaryActions } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport PropTypes from 'prop-types';\n\nconst AddRoleSuccess = ({ onClose }) => {\n  const { setHideForm } = useContext(AddRoleWizardContext);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        You have successfully created a new role\n      </Title>\n      <EmptyStateBody></EmptyStateBody>\n      <Button onClick={onClose} variant=\"primary\">\n        Exit\n      </Button>\n      <EmptyStateSecondaryActions>\n        <Button\n          onClick={() => {\n            setHideForm(false);\n          }}\n          variant=\"link\"\n        >\n          Create another role\n        </Button>\n        <Button component={(props) => <Link to=\"/groups\" {...props} />} variant=\"link\">\n          Add role to group\n        </Button>\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  );\n};\n\nAddRoleSuccess.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddRoleSuccess;\n","import React, { useState, useEffect } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Radio, Alert } from '@patternfly/react-core';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesForWizard } from '../../../redux/actions/role-actions';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { sortable } from '@patternfly/react-table';\n\nconst columns = ['', { title: 'Name', key: 'display_name', transforms: [sortable] }, 'Description'];\nconst selector = ({ roleReducer: { rolesForWizard, isLoading } }) => ({\n  roles: rolesForWizard.data,\n  pagination: rolesForWizard.meta,\n  isLoading,\n});\n\nconst BaseRoleTable = (props) => {\n  const dispatch = useDispatch();\n  const fetchData = (options) => dispatch(fetchRolesForWizard(options));\n  const [filterValue, setFilterValue] = useState('');\n  const { roles, pagination } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    fetchData({\n      limit: 50,\n      offset: 0,\n      itemCount: 0,\n      orderBy: 'display_name',\n    });\n  }, []);\n\n  const createRows = (roles) =>\n    roles.map((role) => ({\n      cells: [\n        {\n          title: (\n            <Radio\n              id={`${role.uuid}-radio`}\n              name={`${role.name}-radio`}\n              aria-label={`${role.name}-radio`}\n              ouiaId={`${role.name}-radio`}\n              value={role.uuid}\n              isChecked={input.value.uuid === role.uuid}\n              onChange={() => {\n                formOptions.batch(() => {\n                  input.onChange(role);\n                  formOptions.change('role-copy-name', `Copy of ${role.display_name || role.name}`);\n                  formOptions.change('role-copy-description', role.description);\n                  formOptions.change('add-permissions-table', []);\n                  formOptions.change('base-permissions-loaded', false);\n                });\n              }}\n            />\n          ),\n          props: { className: 'pf-c-table__check' },\n        },\n        role.display_name || role.name,\n        role.description,\n      ],\n    }));\n  return (\n    <div>\n      <Alert\n        variant=\"info\"\n        isInline\n        title={`Only granular permissions will be copied into a custom role \\\n        (for example, approval:requests:read). Wildcard permissions will not \\\n        be copied into a custom role (for example, approval:*:read).\n        `}\n      />\n      <TableToolbarView\n        columns={columns}\n        createRows={createRows}\n        data={roles}\n        fetchData={(config) => fetchData(mappedProps(config))}\n        filterValue={filterValue}\n        setFilterValue={({ name }) => setFilterValue(name)}\n        isLoading={false}\n        pagination={pagination}\n        titlePlural=\"roles\"\n        titleSingular=\"role\"\n        filterPlaceholder=\"role name\"\n        ouiaId=\"roles-table\"\n        isCompact\n        tableId=\"base-role\"\n      />\n    </div>\n  );\n};\n\nexport default BaseRoleTable;\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { Stack, StackItem, Grid, GridItem, Text, TextVariants } from '@patternfly/react-core';\nimport './review.scss';\n\nconst stickyTable = (columns, rows) => (\n  <div className=\"ins-c-rbac__sticky\">\n    <Grid className=\"ins-c-rbac__sticky--title\">\n      {columns.map((col) => (\n        <GridItem span={12 / columns.length} key={col}>\n          {col}\n        </GridItem>\n      ))}\n    </Grid>\n    <Grid className=\"ins-c-rbac__sticky--data\">\n      {rows.map((row) =>\n        row.cells.map((cell) => (\n          <GridItem span={12 / columns.length} key={cell}>\n            {cell}\n          </GridItem>\n        ))\n      )}\n    </Grid>\n  </div>\n);\n\nconst ReviewStep = () => {\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'role-copy-name': copyName,\n    'role-copy-description': copyDescription,\n    'add-permissions-table': permissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n    'role-type': type,\n  } = formOptions.getState().values;\n  const columns = ['Application', 'Resource type', 'Operation'];\n  const rows = permissions.map((permission) => ({\n    cells: permission.uuid.split(':'),\n  }));\n\n  const resourceDefinitionsRows = (resourceDefinitions || []).map(({ permission, resources }) => ({\n    cells: [permission, resources.join(', ')],\n  }));\n\n  return (\n    <React.Fragment>\n      <Stack>\n        <StackItem className=\"ins-c-rbac__summary\">\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                Name\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? name : copyName}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                Description\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? description : copyDescription}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                Permissions\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              {stickyTable(columns, rows)}\n            </GridItem>\n          </Grid>\n          {hasCostResources && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                  Resource definitions\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable(['Permission', 'Resource definitions'], resourceDefinitionsRows)}\n              </GridItem>\n            </Grid>\n          )}\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useState, useEffect, useRef, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/esm/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/esm/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\nimport { Wizard } from '@patternfly/react-core';\nimport schemaBuilder from './schema';\nimport { createRole, fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { WarningModal } from '../../../smart-components/common/warningModal';\nimport AddRoleSuccess from './add-role-success';\nimport BaseRoleTable from './base-role-table';\nimport AddPermissionsTable from './add-permissions';\nimport ReviewStep from './review';\nimport CostResources from './cost-resources';\nimport TypeSelector from './type-selector';\nimport { useHistory } from 'react-router-dom';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport { routes as paths } from '../../../../package.json';\nimport './add-role-wizard.scss';\n\nexport const AddRoleWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  'base-role-table': BaseRoleTable,\n  'add-permissions-table': AddPermissionsTable,\n  'cost-resources': CostResources,\n  review: ReviewStep,\n  description: Description,\n  'type-selector': TypeSelector,\n};\n\nconst AddRoleWizard = ({ pagination, filters }) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const container = useRef(document.createElement('div'));\n  const [schema, setSchema] = useState({});\n\n  useEffect(() => {\n    setSchema(schemaBuilder(container.current));\n  }, []);\n\n  useEffect(() => {\n    container.current.hidden = cancelWarningVisible;\n  }, [cancelWarningVisible]);\n\n  const onClose = () =>\n    push({\n      pathname: paths.roles,\n      search: createQueryParams({ page: 1, per_page: pagination.limit }),\n    });\n\n  const onCancel = () => {\n    if (!wizardContextValue.success) {\n      dispatch(\n        addNotification({\n          variant: 'warning',\n          title: 'Creating role was canceled by the user',\n          dismissDelay: 8000,\n          dismissable: false,\n        })\n      );\n    }\n\n    push({\n      pathname: paths.roles,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    const {\n      'role-name': name,\n      'role-description': description,\n      'role-copy-name': copyName,\n      'role-copy-description': copyDescription,\n      'add-permissions-table': permissions,\n      'cost-resources': resourceDefinitions,\n      'role-type': type,\n    } = formData;\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    const roleData = {\n      applications: [...new Set(permissions.map(({ uuid: permission }) => permission.split(':')[0]))],\n      description: (type === 'create' ? description : copyDescription) || null,\n      name: type === 'create' ? name : copyName,\n      access: permissions.map(({ uuid: permission }) => ({\n        permission,\n        resourceDefinitions: resourceDefinitions?.find((r) => r.permission === permission)\n          ? [\n              {\n                attributeFilter: {\n                  key: `cost-management.${permission.split(':')[1]}`,\n                  operation: 'in',\n                  value: resourceDefinitions?.find((r) => r.permission === permission).resources,\n                },\n              },\n            ]\n          : [],\n      })),\n    };\n    return dispatch(createRole(roleData)).then(() => {\n      setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true }));\n      dispatch(fetchRolesWithPolicies({ limit: pagination.limit, inModal: false }));\n    });\n  };\n\n  return (\n    <AddRoleWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <WarningModal type=\"role\" isOpen={cancelWarningVisible} onModalCancel={() => setCancelWarningVisible(false)} onConfirmCancel={onCancel} />\n      {wizardContextValue.hideForm ? (\n        <Wizard\n          title=\"Create role\"\n          isOpen\n          onClose={onClose}\n          steps={[\n            {\n              name: 'success',\n              component: <AddRoleSuccess onClose={onClose} />,\n              isFinishedStep: true,\n            },\n          ]}\n        />\n      ) : (\n        <FormRenderer\n          schema={schema}\n          container={container}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-type': 'create',\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            const showWarning = Boolean((values && values['role-name']) || values['role-description'] || values['copy-base-role']);\n            if (showWarning) {\n              setCancelWarningVisible(true);\n            } else {\n              onCancel();\n            }\n          }}\n        />\n      )}\n    </AddRoleWizardContext.Provider>\n  );\n};\n\nAddRoleWizard.propTypes = {\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default AddRoleWizard;\n","import React, { useState } from 'react';\nimport { Radio } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst TypeSelector = (props) => {\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const [checked, setChecked] = useState(formOptions.getState().values['role-type']);\n  const handleChange = (val) => {\n    setChecked(val);\n    input.onChange(val);\n    formOptions.change('add-permissions-table', []);\n    formOptions.change('base-permissions-loaded', false);\n  };\n\n  return (\n    <div>\n      <Radio\n        isChecked={checked === 'create'}\n        className=\"pf-u-mb-sm\"\n        name=\"role-type-create\"\n        onChange={() => handleChange('create')}\n        label=\"Create a role from scratch\"\n        id=\"role-type-create\"\n        value=\"create\"\n      />\n      <Radio\n        isChecked={checked === 'copy'}\n        name=\"role-type-copy\"\n        onChange={() => handleChange('copy')}\n        label=\"Copy an existing role\"\n        id=\"role-type-copy\"\n        value=\"copy\"\n      />\n    </div>\n  );\n};\n\nexport default TypeSelector;\n","import React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport AddPermissionTemplate from './add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport CostResourcesTemplate from './cost-resources-template';\nimport { debouncedAsyncValidator, ValidatorReset } from './validators';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddRoleWizardContext } from './add-role-wizard';\n\nexport default (container) => ({\n  fields: [\n    {\n      component: 'wizard',\n      name: 'wizard',\n      isDynamic: true,\n      inModal: true,\n      showTitles: true,\n      crossroads: ['role-type'],\n      title: 'Create role',\n      container,\n      fields: [\n        {\n          title: 'Create role',\n          name: 'step-1',\n          nextStep: {\n            when: 'role-type',\n            stepMapper: {\n              copy: 'name-and-description',\n              create: 'add-permissions',\n            },\n          },\n          fields: [\n            {\n              component: 'type-selector',\n              name: 'role-type',\n              isRequired: true,\n              validate: [\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n              ],\n            },\n            {\n              component: 'text-field',\n              name: 'role-name',\n              type: 'text',\n              label: 'Role name',\n              isRequired: true,\n              condition: {\n                when: 'role-type',\n                is: 'create',\n              },\n              validate: [\n                debouncedAsyncValidator,\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n                {\n                  type: validatorTypes.MAX_LENGTH,\n                  threshold: 150,\n                },\n              ],\n            },\n            {\n              component: 'text-field',\n              name: 'role-description',\n              type: 'text',\n              label: 'Role description',\n              condition: {\n                when: 'role-type',\n                is: 'create',\n              },\n              validate: [\n                {\n                  type: 'max-length',\n                  threshold: 150,\n                },\n              ],\n            },\n            {\n              component: 'base-role-table',\n              name: 'copy-base-role',\n              label: 'Base role',\n              isRequired: true,\n              condition: {\n                when: 'role-type',\n                is: 'copy',\n              },\n              validate: [\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n              ],\n            },\n            {\n              condition: {\n                when: 'role-type',\n                is: 'create',\n              },\n              component: 'description',\n              name: 'fixasyncvalidation',\n              Content: ValidatorReset,\n            },\n            {\n              condition: {\n                when: 'role-type',\n                is: 'copy',\n              },\n              component: 'description',\n              name: 'fixasyncvalidation2',\n              Content: ValidatorReset,\n            },\n          ],\n        },\n        {\n          title: 'Name and description',\n          name: 'name-and-description',\n          nextStep: 'add-permissions',\n          fields: [\n            {\n              component: 'text-field',\n              name: 'role-copy-name',\n              type: 'text',\n              label: 'Role name',\n              isRequired: true,\n              validate: [\n                debouncedAsyncValidator,\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n                {\n                  type: 'max-length',\n                  threshold: 150,\n                },\n              ],\n            },\n            {\n              component: 'text-field',\n              name: 'role-copy-description',\n              type: 'text',\n              label: 'Role description',\n              validate: [\n                {\n                  type: 'max-length',\n                  threshold: 150,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'add-permissions',\n          title: 'Add permissions',\n          StepTemplate: AddPermissionTemplate,\n          nextStep: ({ values }) =>\n            values &&\n            values['add-permissions-table'] &&\n            values['add-permissions-table'].some(({ uuid }) => uuid.split(':')[0].includes('cost-management'))\n              ? 'cost-resources-definition'\n              : 'review',\n          fields: [\n            {\n              component: 'add-permissions-table',\n              name: 'add-permissions-table',\n            },\n          ],\n        },\n        {\n          name: 'cost-resources-definition',\n          title: 'Define Cost Management resources',\n          nextStep: 'review',\n          StepTemplate: CostResourcesTemplate,\n          fields: [\n            {\n              component: 'plain-text',\n              name: 'text-description',\n              label: <p>Specify where you would like to apply each cost permission selected in the previous step, using the dropdown below.</p>,\n            },\n            {\n              component: 'cost-resources',\n              name: 'cost-resources',\n              validate: [\n                (value = []) =>\n                  value.every((p) => p.resources.length > 0) ? undefined : 'You need to assign at least one resource to each permission.',\n              ],\n            },\n          ],\n        },\n        {\n          name: 'review',\n          title: 'Review details',\n          // eslint-disable-next-line react/display-name\n          buttons: (props) => <ReviewStepButtons {...props} context={AddRoleWizardContext} />,\n          StepTemplate: ReviewTemplate,\n          fields: [\n            {\n              component: 'review',\n              name: 'review',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n"],"sourceRoot":""}
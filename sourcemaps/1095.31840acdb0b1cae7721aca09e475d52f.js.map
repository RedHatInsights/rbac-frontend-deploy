{"version":3,"file":"js/1095.0bf2ca00c2bcf1931c73.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/smart-components/group/service-account/group-service-accounts.js","webpack:///./node_modules/react-intl/lib/src/components/message.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../Section/section.css';\nvar Section = function (_a) {\n    var _b;\n    var type = _a.type, children = _a.children, className = _a.className, props = __rest(_a, [\"type\", \"children\", \"className\"]);\n    var sectionClasses = classNames(className, (_b = {}, _b[\"ins-l-\".concat(type)] = type !== undefined, _b));\n    return (_jsxs(\"section\", __assign({}, props, { className: sectionClasses }, { children: [' ', children, ' '] })));\n};\nexport default Section;\n//# sourceMappingURL=Section.js.map","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useState, useEffect, useContext, useRef, Suspense, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Alert, Button } from '@patternfly/react-core';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchGroup, fetchGroups } from '../../../redux/actions/group-actions';\nimport { fetchServiceAccountsForGroup } from '../../../redux/actions/group-actions';\nimport { getBackRoute, getDateFormat } from '../../../helpers/shared/helpers';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\nimport './group-service-accounts.scss';\n\nconst createRows = (data = [], checkedRows = []) =>\n  data?.reduce(\n    (acc, { description, client_id, owner, time_created }) => [\n      ...acc,\n      {\n        uuid: description,\n        title: description,\n        cells: [\n          description,\n          client_id,\n          owner,\n          <Fragment key={`${description}-modified`}>\n            <DateFormat date={time_created} type={getDateFormat(time_created)} />\n          </Fragment>,\n        ],\n        selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === description)),\n      },\n    ],\n    []\n  );\n\nconst reducer = ({ groupReducer: { selectedGroup, systemGroup, groups } }) => ({\n  serviceAccounts: selectedGroup.serviceAccounts?.data || [],\n  pagination: selectedGroup.pagination || { ...defaultSettings, count: selectedGroup?.serviceAccounts && selectedGroup.serviceAccounts.length },\n  groupsPagination: groups.pagination || groups.meta,\n  groupsFilters: groups.filters,\n  isLoading: !selectedGroup.loaded,\n  isAdminDefault: selectedGroup.admin_default,\n  systemGroupUuid: systemGroup?.uuid,\n  group: selectedGroup,\n});\n\nconst GroupServiceAccounts = () => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const { groupId } = useParams();\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [ownerValue, setOwnerValue] = useState('');\n  const [timeCreatedValue, setTimeCreatedValue] = useState('');\n  const [selectedAccounts, setSelectedAccounts] = useState([]);\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n  const { serviceAccounts, pagination, groupsPagination, groupsFilters, isLoading, group, isAdminDefault, systemGroupUuid } = useSelector(reducer);\n\n  const fetchGroupAccounts = (config) => (groupId, options) => dispatch(fetchServiceAccountsForGroup(groupId, config, options));\n\n  const columns = [\n    { title: intl.formatMessage(messages.description), orderBy: 'description' },\n    { title: intl.formatMessage(messages.clientId), orderBy: 'clientId' },\n    { title: intl.formatMessage(messages.owner), orderBy: 'owner' },\n    { title: intl.formatMessage(messages.timeCreated), orderBy: 'timeCreated' },\n  ];\n\n  useEffect(() => {\n    if (groupId !== 'default-access') {\n      fetchGroupAccounts(pagination)(groupId);\n    } else {\n      systemGroupUuid && fetchGroupAccounts(pagination)(systemGroupUuid);\n    }\n  }, [systemGroupUuid]);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedAccounts((accounts) => newSelection(accounts).map(({ uuid, name, label }) => ({ uuid, label: label || name })));\n  };\n\n  const actionResolver = () => [\n    ...(hasPermissions.current && !isAdminDefault\n      ? [\n          {\n            title: intl.formatMessage(messages.remove),\n            onClick: () => null, // TODO: add service account removal\n          },\n        ]\n      : []),\n  ];\n\n  const toolbarButtons = () => [\n    <AppLink className=\"rbac-m-hide-on-sm\" to={pathnames['group-add-service-account'].link.replace(':groupId', groupId)} key=\"add-to-group\">\n      <Button ouiaId=\"add-service-account-button\" variant=\"primary\" className=\"rbac-m-hide-on-sm\" aria-label=\"Add service account\">\n        {intl.formatMessage(messages.addServiceAccount)}\n      </Button>\n    </AppLink>,\n    {\n      label: intl.formatMessage(messages.addServiceAccount),\n      props: {\n        className: 'rbac-m-hide-on-md',\n      },\n      onClick: () => navigate(pathnames['group-add-service-account'].link.replace(':groupId', groupId)),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <Section type=\"content\" id=\"tab-service-accounts\">\n        <Alert\n          className=\"rbac-service-accounts-alert\"\n          variant=\"info\"\n          isInline\n          isPlain\n          title={\n            <FormattedMessage\n              id=\"visitServiceAccountsPage\"\n              defaultMessage=\"To add, reset credentials, or delete service accounts visit the {link}.\"\n              values={{\n                link: (\n                  <AppLink to=\"/service-accounts\" linkBasename=\"/iam\">\n                    {intl.formatMessage(messages.serviceAccountsPage)}\n                  </AppLink>\n                ),\n              }}\n            />\n          }\n        />\n        <TableToolbarView\n          columns={columns}\n          isSelectable\n          rows={createRows(serviceAccounts, selectedAccounts)}\n          data={serviceAccounts}\n          filterValue={descriptionValue}\n          fetchData={(config) => {\n            fetchGroupAccounts(config)(groupId);\n          }}\n          emptyFilters={{ owner: '', description: '', timeCreated: '' }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setOwnerValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n            typeof timeCreatedValue !== 'undefined' && setTimeCreatedValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedAccounts}\n          setCheckedItems={setCheckedItems}\n          titlePlural={intl.formatMessage(messages.serviceAccounts).toLowerCase()}\n          titleSingular={intl.formatMessage(messages.serviceAccount)}\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          ouiaId=\"service-accounts-table\"\n          emptyProps={{\n            title: intl.formatMessage(messages.noGroupAccounts),\n            description: [intl.formatMessage(isAdminDefault ? messages.contactServiceTeamForAccounts : messages.addAccountsToThisGroup), ''],\n          }}\n          filters={[\n            { key: 'description', value: descriptionValue },\n            { key: 'owner', value: ownerValue },\n          ]}\n          tableId=\"group-accounts\"\n        />\n      </Section>\n      <Suspense>\n        <Outlet\n          context={{\n            [pathnames['group-service-accounts-edit-group'].path]: {\n              group,\n              cancelRoute: pathnames['group-detail-service-accounts'].link.replace(':groupId', groupId),\n              postMethod: () => dispatch(fetchGroup(groupId)),\n            },\n            [pathnames['group-service-accounts-remove-group'].path]: {\n              postMethod: () => dispatch(fetchGroups({ ...groupsPagination, offset: 0, filters: groupsFilters, usesMetaInURL: true, chrome })),\n              cancelRoute: pathnames['group-detail-service-accounts'].link.replace(':groupId', groupId),\n              submitRoute: getBackRoute(pathnames.groups.link, { ...groupsPagination, offset: 0 }, groupsFilters),\n              groupsUuid: [group],\n            },\n          }}\n        />\n      </Suspense>\n    </React.Fragment>\n  );\n};\n\nexport default GroupServiceAccounts;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","value","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","children","addTooltip","_a","_b","dateObj","dateType","toString","className","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","sectionClasses","undefined","linkBasename","navigate","useNavigate","to","options","mergeToBasename","createRows","data","checkedRows","client_id","owner","time_created","uuid","title","cells","Fragment","key","getDateFormat","selected","Boolean","find","row","reducer","groupReducer","selectedGroup","systemGroup","groups","serviceAccounts","pagination","defaultSettings","count","groupsPagination","meta","groupsFilters","filters","isLoading","loaded","isAdminDefault","admin_default","systemGroupUuid","group","intl","useIntl","chrome","useChrome","dispatch","useDispatch","useAppNavigate","groupId","useParams","useState","descriptionValue","setDescriptionValue","ownerValue","setOwnerValue","timeCreatedValue","setTimeCreatedValue","selectedAccounts","setSelectedAccounts","useContext","PermissionsContext","userAccessAdministrator","orgAdmin","hasPermissions","useRef","useSelector","fetchGroupAccounts","config","fetchServiceAccountsForGroup","columns","formatMessage","messages","orderBy","useEffect","current","id","Alert","variant","isInline","isPlain","defaultMessage","values","link","isSelectable","rows","filterValue","fetchData","emptyFilters","timeCreated","setFilterValue","name","setCheckedItems","newSelection","accounts","map","label","titlePlural","toLowerCase","titleSingular","toolbarButtons","pathnames","Button","ouiaId","onClick","actionResolver","emptyProps","tableId","Suspense","Outlet","context","cancelRoute","postMethod","fetchGroup","fetchGroups","offset","usesMetaInURL","submitRoute","getBackRoute","groupsUuid","FormattedMessage","textComponent","Text","tagName","Component","nodes","ignoreTag","Array","isArray","displayName","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps"],"sourceRoot":""}
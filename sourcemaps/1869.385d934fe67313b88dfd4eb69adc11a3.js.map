{"version":3,"file":"js/1869.bfc8ead251c08a786dae.js","mappings":"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","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/utilities/constants.js","webpack:///./src/utilities/store.js","webpack:///./node_modules/react-redux/es/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ErroReducerCatcher from './presentational-components/shared/ErrorReducerCatcher';\nimport PermissionsContext from './utilities/permissions-context';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { updateGroupsFilters } from './redux/actions/group-actions';\nimport { updateRolesFilters } from './redux/actions/role-actions';\nimport { updateUsersFilters } from './redux/actions/user-actions';\nimport { groupsInitialState } from './redux/reducers/group-reducer';\nimport { rolesInitialState } from './redux/reducers/role-reducer';\nimport { usersInitialState } from './redux/reducers/user-reducer';\nimport useUserData from './hooks/useUserData';\nimport Routing from './Routing';\n\nimport './App.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const userData = useUserData();\n\n  useEffect(() => {\n    return () => {\n      dispatch(updateUsersFilters(usersInitialState.users.filters));\n      dispatch(updateGroupsFilters(groupsInitialState.groups.filters));\n      dispatch(updateRolesFilters(rolesInitialState.roles.filters));\n    };\n  }, []);\n\n  if (!userData.ready) {\n    return <AppPlaceholder />;\n  }\n\n  return (\n    <PermissionsContext.Provider value={{ ...userData }}>\n      <ErroReducerCatcher>\n        <section style={{ marginLeft: 0, padding: 0 }}>\n          <Routing />\n        </section>\n      </ErroReducerCatcher>\n    </PermissionsContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport registry, { RegistryContext } from './utilities/store';\nimport App from './App';\nimport { IntlProvider } from 'react-intl';\nimport messages from './locales/data.json';\n\nexport const locale = 'en';\n\nconst InsightsRbac = () => (\n  <IntlProvider locale={locale} messages={messages[locale]}>\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <App />\n      </Provider>\n    </RegistryContext.Provider>\n  </IntlProvider>\n);\n\nexport default InsightsRbac;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InsightsRbac from './AppEntry';\n\nReactDOM.render(<InsightsRbac />, document.getElementById('root'));\n","import { getLastPageOffset, isOffsetValid } from '../shared/pagination';\nimport { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({\n  limit,\n  offset,\n  name,\n  displayName,\n  nameMatch,\n  scope,\n  orderBy = 'display_name',\n  addFields,\n  username,\n  application,\n  permission,\n  options,\n}) {\n  return roleApi.listRoles(\n    limit,\n    offset,\n    name,\n    undefined,\n    displayName,\n    nameMatch,\n    scope,\n    orderBy,\n    addFields,\n    username,\n    application,\n    permission,\n    options\n  );\n}\n\nexport async function fetchRolesWithPolicies({\n  limit,\n  offset,\n  filters = {},\n  nameMatch,\n  scope = 'account',\n  orderBy = 'display_name',\n  addFields = ['groups_in_count', 'groups_in', 'access'],\n  username,\n  options,\n  permission,\n  application,\n  usesMetaInURL = false,\n  chrome,\n}) {\n  const roles = await roleApi.listRoles(\n    limit,\n    offset,\n    filters.name,\n    undefined,\n    filters.display_name,\n    nameMatch,\n    scope,\n    orderBy,\n    addFields,\n    username,\n    application,\n    permission,\n    options\n  );\n\n  const isPaginationValid = isOffsetValid(offset, roles?.meta?.count);\n  offset = isPaginationValid ? offset : getLastPageOffset(roles.meta.count, limit);\n  let { data, meta } = isPaginationValid\n    ? roles\n    : await roleApi.listRoles(\n        limit,\n        offset,\n        filters.name,\n        undefined,\n        undefined,\n        nameMatch,\n        scope,\n        orderBy,\n        addFields,\n        username,\n        application,\n        permission,\n        options\n      );\n\n  return {\n    data,\n    meta,\n    ...(usesMetaInURL\n      ? {\n          filters,\n          pagination: {\n            ...meta,\n            offset,\n            limit,\n            redirected: !isPaginationValid,\n          },\n        }\n      : {}),\n    ...(await chrome?.auth?.getUser()),\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function fetchRoleForPrincipal(uuid) {\n  return await roleApi.getRole(uuid, 'principal');\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n\nexport const updateRole = async (roleId, data, useCustomAccess) => {\n  const { data: access } = await roleApi.getRoleAccess(roleId);\n  return roleApi.updateRole(roleId, useCustomAccess ? { ...data, access } : data);\n};\n\nexport const removeRolePermissions = async (role, permissionsToRemove) => {\n  const { data: access } = await roleApi.getRoleAccess(role.uuid);\n  const newRole = { ...role, access: access.filter((item) => !permissionsToRemove.includes(item.permission)) };\n  return roleApi.updateRole(role.uuid, { ...newRole });\n};\n\nexport const patchRole = async (roleId, data) => {\n  return roleApi.patchRole(roleId, data);\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport axios from 'axios';\nimport {\n  authInterceptor,\n  responseDataInterceptor,\n  interceptor401,\n  interceptor500,\n  errorInterceptor,\n} from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi, AccessApi, PermissionApi } from '@redhat-cloud-services/rbac-client';\nimport { HostsApi } from '@redhat-cloud-services/host-inventory-client';\nimport { BaseAPI } from '@redhat-cloud-services/rbac-client/dist/base';\n\nimport { RBAC_API_BASE, COST_API_BASE, INVENTORY_API_BASE } from '../../utilities/constants';\nimport registry from '../../utilities/store';\nimport { API_ERROR } from '../../redux/action-types';\n\nconst interceptor403 = (error) => {\n  const store = registry.getStore();\n\n  if (error.response && error.response.status === 403) {\n    store.dispatch({ type: API_ERROR, payload: 403 });\n  }\n\n  throw error;\n};\n\nconst axiosInstance = axios.create();\naxiosInstance.interceptors.request.use(authInterceptor);\naxiosInstance.interceptors.response.use(responseDataInterceptor);\n\naxiosInstance.interceptors.response.use(null, interceptor401);\naxiosInstance.interceptors.response.use(null, interceptor403);\naxiosInstance.interceptors.response.use(null, interceptor500);\naxiosInstance.interceptors.response.use(null, errorInterceptor);\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\nconst accessApi = new AccessApi(undefined, RBAC_API_BASE, axiosInstance);\nconst permissionApi = new PermissionApi(undefined, RBAC_API_BASE, axiosInstance);\nconst costApi = new BaseAPI(undefined, COST_API_BASE, axiosInstance);\nconst inventoryApi = new HostsApi(undefined, INVENTORY_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAccessApi() {\n  return accessApi;\n}\n\nexport function getPermissionApi() {\n  return permissionApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n\nexport function getCostApi() {\n  return {\n    getResourceTypes: () => costApi.axios.get(`${COST_API_BASE}/resource-types/`),\n    getResource: (path) => costApi.axios.get(`${path}?limit=20000`),\n  };\n}\n\nexport const getInventoryGroupsApi = () => ({\n  getInventoryGroups: (config) =>\n    inventoryApi.axios.get(\n      `${INVENTORY_API_BASE}/resource-types/inventory-groups?per_page=${config?.limit ?? 50}&page=${config?.page ?? 1}${\n        config?.name ? `&name=${config?.name}` : ''\n      }`\n    ),\n});\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\nimport { BAD_UUID } from '../../helpers/shared/helpers';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../Messages';\nimport providerMessages from '../../locales/data.json';\nimport { locale } from '../../AppEntry';\n\nexport const createRole = (roleData) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.ADD_ROLE,\n    payload: RoleHelper.createRole(roleData),\n    meta: {\n      notifications: {\n        rejected: (payload) => ({\n          variant: 'danger',\n          title: intl.formatMessage(messages.createRoleErrorTitle),\n          dismissDelay: 8000,\n          description: payload?.errors?.[0]?.detail || intl.formatMessage(messages.createRoleErrorDescription),\n        }),\n      },\n    },\n  };\n};\n\nexport const fetchRole = (apiProps) => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps).catch((err) => {\n    const error = err?.errors?.[0] || {};\n    if (error.status === '400' && error.source === 'role uuid validation') {\n      return { error: BAD_UUID };\n    }\n\n    throw err;\n  }),\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options).catch((err) => {\n    const error = err?.errors?.[0] || {};\n    if (error.status === '400' && error.source === 'detail') {\n      return { error: BAD_UUID };\n    }\n\n    throw err;\n  }),\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options),\n});\n\nexport const removeRole = (role) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.REMOVE_ROLE,\n    payload: RoleHelper.removeRole(role),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(messages.removeRoleSuccessTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.removeRoleSuccessDescription),\n        },\n        rejected: {\n          variant: 'danger',\n          title: intl.formatMessage(messages.removeRoleErrorTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.removeRoleErrorDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const fetchRoleForUser = (apiProps) => ({\n  type: ActionTypes.FETCH_ROLE_FOR_USER,\n  payload: RoleHelper.fetchRole(apiProps),\n});\n\nexport const fetchRoleForPrincipal = (apiProps) => ({\n  type: ActionTypes.FETCH_ROLE_FOR_PRINCIPAL,\n  payload: RoleHelper.fetchRoleForPrincipal(apiProps),\n});\n\nexport const fetchRolesForWizard = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_WIZARD,\n  payload: RoleHelper.fetchRoles(options),\n});\n\nexport const updateRole = (roleId, data, useCustomAccess) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.UPDATE_ROLE,\n    payload: RoleHelper.updateRole(roleId, data, useCustomAccess),\n    meta: {\n      notifications: {\n        rejected: (payload) => ({\n          variant: 'danger',\n          title: intl.formatMessage(messages.editRoleErrorTitle),\n          dismissDelay: 8000,\n          description: payload?.errors?.[0]?.detail || intl.formatMessage(messages.editRoleErrorDescription),\n        }),\n      },\n    },\n  };\n};\n\nexport const patchRole = (roleId, data) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.PATCH_ROLE,\n    payload: RoleHelper.patchRole(roleId, data),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(messages.editRoleSuccessTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.editRoleSuccessDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const removeRolePermissions = (role, permissionsToRemove) => ({\n  type: ActionTypes.UPDATE_ROLE,\n  payload: RoleHelper.removeRolePermissions(role, permissionsToRemove),\n});\n\nexport const updateRolesFilters = (filters) => ({\n  type: ActionTypes.UPDATE_ROLES_FILTERS,\n  payload: filters,\n});\n","export const RBAC_API_BASE = `/api/rbac/v1`;\nexport const COST_API_BASE = `/api/cost-management/v1`;\nexport const INVENTORY_API_BASE = `/api/inventory/v1`;\n\nexport const DEFAULT_MUA_BUNDLE = 'rhel';\n","import { createContext } from 'react';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\nimport accessReducer, { accessInitialState } from '../redux/reducers/access-reducer';\nimport permissionReducer, { permissionInitialState } from '../redux/reducers/permission-reducer';\nimport costReducer, { costInitialState } from '../redux/reducers/cost-reducer';\nimport errorReducer from '../redux/reducers/errorReducer';\nimport inventoryReducer, { inventoryGroupsInitialState } from '../redux/reducers/inventory-reducer';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nconst middlewares = [\n  thunk,\n  promiseMiddleware,\n  notificationsMiddleware({\n    errorTitleKey: ['statusText', 'message', 'errors[0].status'],\n    errorDescriptionKey: ['errors[0].detail', 'errors', 'stack'],\n  }),\n  reduxLogger,\n].filter((middleware) => typeof middleware === 'function');\n\nconst registry = new ReducerRegistry({}, middlewares);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  accessReducer: applyReducerHash(accessReducer, accessInitialState),\n  permissionReducer: applyReducerHash(permissionReducer, permissionInitialState),\n  inventoryReducer: applyReducerHash(inventoryReducer, inventoryGroupsInitialState),\n  costReducer: applyReducerHash(costReducer, costInitialState),\n  errorReducer: applyReducerHash(errorReducer),\n  notifications: notificationsReducer,\n});\n\nexport default registry;\n","export * from './exports';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch'; // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };"],"names":["dispatch","useDispatch","userData","useUserData","useEffect","updateUsersFilters","usersInitialState","updateGroupsFilters","groupsInitialState","updateRolesFilters","rolesInitialState","ready","value","style","marginLeft","padding","locale","messages","getRegistry","registry","Provider","store","ReactDOM","document","getElementById","i","roleApi","getRoleApi","createRole","data","createRoles","fetchRoles","limit","offset","name","displayName","nameMatch","scope","orderBy","addFields","username","application","permission","options","listRoles","undefined","fetchRolesWithPolicies","filters","usesMetaInURL","chrome","display_name","roles","isPaginationValid","isOffsetValid","meta","count","getLastPageOffset","pagination","redirected","auth","getUser","fetchRole","uuid","getRole","removeRole","roleId","deleteRole","updateRole","useCustomAccess","getRoleAccess","access","removeRolePermissions","role","permissionsToRemove","newRole","filter","item","includes","patchRole","axiosInstance","axios","interceptors","request","use","authInterceptor","response","responseDataInterceptor","interceptor401","error","status","type","API_ERROR","payload","interceptor500","errorInterceptor","principalApi","PrincipalApi","RBAC_API_BASE","groupApi","GroupApi","RoleApi","permissionApi","PolicyApi","AccessApi","PermissionApi","costApi","BaseAPI","COST_API_BASE","inventoryApi","HostsApi","INVENTORY_API_BASE","getPrincipalApi","getGroupApi","getPermissionApi","getCostApi","getResourceTypes","get","getResource","path","getInventoryGroupsApi","getInventoryGroups","config","page","roleData","cache","createIntlCache","intl","createIntl","providerMessages","ActionTypes","RoleHelper","notifications","rejected","variant","title","formatMessage","dismissDelay","description","errors","detail","apiProps","err","source","BAD_UUID","fulfilled","fetchRoleForUser","fetchRolesForWizard","RegistryContext","createContext","middlewares","thunk","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","reduxLogger","middleware","ReducerRegistry","register","userReducer","applyReducerHash","groupReducer","policyReducer","policiesInitialState","roleReducer","accessReducer","accessInitialState","permissionReducer","permissionInitialState","inventoryReducer","inventoryGroupsInitialState","costReducer","costInitialState","errorReducer","notificationsReducer"],"sourceRoot":""}
{"version":3,"file":"js/7228.0bf2ca00c2bcf1931c73.js","mappings":"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","sources":["webpack:///./src/helpers/group/group-helper.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/utilities/sample-quickstart.js","webpack:///./src/utilities/quickstarts-test-buttons.js","webpack:///./src/smart-components/common/ElementWrapper.ts","webpack:///./src/Routing.tsx"],"sourcesContent":["import { getLastPageOffset, isOffsetValid } from '../shared/pagination';\nimport { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({\n  limit,\n  offset,\n  nameMatch,\n  scope,\n  username,\n  excludeUsername,\n  filters = {},\n  uuid,\n  roleNames,\n  roleDiscriminator,\n  orderBy,\n  platformDefault,\n  adminDefault,\n  system,\n  options,\n  usesMetaInURL = false,\n  chrome,\n}) {\n  const [groups, auth] = await Promise.all([\n    groupApi.listGroups(\n      limit,\n      offset,\n      filters.name,\n      nameMatch,\n      scope,\n      username,\n      excludeUsername,\n      uuid,\n      roleNames,\n      roleDiscriminator,\n      orderBy,\n      platformDefault,\n      adminDefault,\n      system,\n      options\n    ),\n    chrome?.auth?.getUser(),\n  ]);\n  const isPaginationValid = isOffsetValid(offset, groups?.meta?.count);\n  offset = isPaginationValid ? offset : getLastPageOffset(groups.meta.count, limit);\n  let response = isPaginationValid\n    ? groups\n    : await groupApi.listGroups(\n        limit,\n        offset,\n        filters.name,\n        nameMatch,\n        scope,\n        username,\n        uuid,\n        roleNames,\n        roleDiscriminator,\n        orderBy,\n        options,\n        system,\n        platformDefault,\n        adminDefault\n      );\n  return {\n    ...response,\n    ...(usesMetaInURL\n      ? {\n          filters,\n          pagination: {\n            ...response?.meta,\n            offset,\n            limit,\n            redirected: !isPaginationValid,\n          },\n        }\n      : {}),\n    ...auth,\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  const promises = [];\n\n  if (data.user_list && data.user_list.length > 0) {\n    promises.push(groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list }));\n  }\n\n  if (data.roles_list && data.roles_list.length > 0) {\n    promises.push(groupApi.addRoleToGroup(newGroup.uuid, { roles: data.roles_list }));\n  }\n\n  await Promise.all(promises);\n  return newGroup;\n}\n\nexport async function removeGroups(uuids) {\n  return await Promise.all(uuids.map((uuid) => groupApi.deleteGroup(uuid)));\n}\n\nexport async function deleteMembersFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addMembersToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset, name, description }, options = {}) {\n  return await groupApi.listRolesForGroup(\n    groupId,\n    excluded,\n    undefined,\n    name,\n    description,\n    undefined,\n    undefined,\n    limit,\n    offset,\n    'display_name',\n    options\n  );\n}\n\nexport async function fetchAccountsForGroup() {\n  return {\n    data: [\n      { description: 'This is account 1', client_id: 'abra1234-ca56-da789-fg1011', owner: 'rhn-support1', time_created: 123456456 },\n      { description: 'This is account 2', client_id: 'bbra1234-ca56-da789-fg1012', owner: 'rhn-support2', time_created: 123456478 },\n    ],\n    meta: { count: 0 },\n  };\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\nexport async function fetchMembersForGroup(groupId, usernames, options = {}) {\n  return await groupApi.getPrincipalsFromGroup(groupId, usernames, options.limit, options.offset, options.orderBy);\n}\n\nexport async function fetchMemberGroups(username) {\n  return await groupApi.listGroups(undefined, undefined, undefined, undefined, 'principal', username, undefined);\n}\n","export const BAD_UUID = 'bad uuid';\n\nimport debouncePromise from '@redhat-cloud-services/frontend-components-utilities/debounce';\nimport { calculatePage } from './pagination';\n\nexport const scrollToTop = () =>\n  document.getElementById('root').scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0,\n  });\n\nexport const mappedProps = (apiProps) =>\n  Object.entries(apiProps).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      ...(value && { [key]: value }),\n    }),\n    {}\n  );\n\nexport const debouncedFetch = debouncePromise((callback) => callback());\n\nexport const calculateChecked = (rows = [], selected, isRowSelectable = () => true) => {\n  const nonDefaults = rows.filter(isRowSelectable);\n  return (\n    (nonDefaults.length !== 0 && nonDefaults.every(({ uuid }) => selected.find((row) => row.uuid === uuid))) || (selected.length > 0 ? null : false)\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [...selected, ...newSelection].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n\nexport const firstUpperCase = (text) => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const createQueryParams = (params) => {\n  const searchParams = new URLSearchParams();\n  Object.keys(params).forEach((key) => {\n    const value = params[key];\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => item && searchParams.append(key, item));\n    } else {\n      value && searchParams.set(key, value);\n    }\n  });\n  return searchParams.toString();\n};\n\nexport const removeQueryParams = (location, navigate) => {\n  navigate(\n    {\n      pathname: location.pathname,\n      search: '',\n    },\n    {\n      replace: true,\n    }\n  );\n};\n\nexport const getBackRoute = (pathname, pagination, filters) => ({\n  pathname,\n  search: createQueryParams({\n    per_page: pagination.limit,\n    page: calculatePage(pagination.limit, pagination.offset),\n    ...filters,\n  }),\n});\n\nexport const getDateFormat = (date) => {\n  const monthAgo = new Date(Date.now());\n  return Date.parse(date) < monthAgo.setMonth(monthAgo.getMonth() - 1) ? 'onlyDate' : 'relative';\n};\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport { BAD_UUID } from '../../helpers/shared/helpers';\nimport messages from '../../Messages';\nimport providerMessages from '../../locales/data.json';\nimport { locale } from '../../AppEntry';\n\nconst handleUuidError = (err) => {\n  const error = err?.errors?.[0] || {};\n  if (error.status === '400' && error.source === 'group uuid validation') {\n    return { error: BAD_UUID };\n  }\n\n  throw err;\n};\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options),\n});\n\nexport const fetchAdminGroup = ({ filterValue, chrome } = {}) => ({\n  type: ActionTypes.FETCH_ADMIN_GROUP,\n  payload: GroupHelper.fetchGroups({\n    limit: 1,\n    ...(filterValue?.length > 0 ? { filters: { name: filterValue }, nameMatch: 'partial' } : {}),\n    adminDefault: true,\n    chrome,\n  }),\n});\n\nexport const fetchSystemGroup = ({ filterValue, chrome } = {}) => ({\n  type: ActionTypes.FETCH_SYSTEM_GROUP,\n  payload: GroupHelper.fetchGroups({\n    limit: 1,\n    ...(filterValue?.length > 0 ? { filters: { name: filterValue }, nameMatch: 'partial' } : {}),\n    platformDefault: true,\n    chrome,\n  }),\n});\n\nexport const fetchGroup = (apiProps) => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps).catch(handleUuidError),\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData).catch((err) => {\n    const error = err?.errors?.[0] || {};\n    if (error.status === '400' && error.source === 'name') {\n      return {\n        error: true,\n      };\n    }\n\n    /**\n     * Convert any other API error response to not crash notifications.\n     * It has different format than other API requests.\n     */\n    throw {\n      message: error.detail,\n      description: error.source,\n    };\n  }),\n});\n\nexport const updateGroup = (groupData) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.UPDATE_GROUP,\n    payload: GroupHelper.updateGroup(groupData),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(messages.editGroupSuccessTitle),\n          dismissDelay: 8000,\n          dismissable: true,\n          description: intl.formatMessage(messages.editGroupSuccessDescription),\n        },\n        rejected: {\n          variant: 'danger',\n          title: intl.formatMessage(messages.editGroupErrorTitle),\n          dismissDelay: 8000,\n          dismissable: true,\n          description: intl.formatMessage(messages.editGroupErrorDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const removeGroups = (uuids) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.REMOVE_GROUPS,\n    payload: GroupHelper.removeGroups(uuids),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          dismissDelay: 8000,\n          title: intl.formatMessage(uuids.length > 1 ? messages.removeGroupsSuccess : messages.removeGroupSuccess),\n        },\n        rejected: {\n          variant: 'danger',\n          dismissDelay: 8000,\n          title: intl.formatMessage(uuids.length > 1 ? messages.removeGroupsError : messages.removeGroupError),\n        },\n      },\n    },\n  };\n};\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP,\n});\n\nexport const addMembersToGroup = (groupId, members) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  const singleMember = members.length > 1;\n  return {\n    type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n    payload: GroupHelper.addMembersToGroup(groupId, members),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(singleMember ? messages.addGroupMembersSuccessTitle : messages.addGroupMemberSuccessTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(singleMember ? messages.addGroupMembersSuccessDescription : messages.addGroupMemberSuccessDescription),\n        },\n        rejected: {\n          variant: 'danger',\n          title: intl.formatMessage(singleMember ? messages.addGroupMemberErrorTitle : messages.addGroupMembersErrorTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(singleMember ? messages.addGroupMemberErrorDescription : messages.addGroupMembersErrorDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const removeMembersFromGroup = (groupId, members) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n    payload: GroupHelper.deleteMembersFromGroup(groupId, members),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(messages.removeGroupMembersSuccessTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.removeGroupMembersSuccessDescription),\n        },\n        rejected: {\n          variant: 'danger',\n          title: intl.formatMessage(messages.removeGroupMembersErrorTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.removeGroupMembersErrorDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options).catch(handleUuidError),\n});\n\nexport const fetchServiceAccountsForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_SERVICE_ACCOUNTS_FOR_GROUP,\n  payload: GroupHelper.fetchAccountsForGroup(groupId, false, pagination, options).catch(handleUuidError),\n});\n\nexport const fetchMembersForGroup = (groupId, usernames, options) => ({\n  type: ActionTypes.FETCH_MEMBERS_FOR_GROUP,\n  payload: GroupHelper.fetchMembersForGroup(groupId, usernames, options).catch(handleUuidError),\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options).catch(handleUuidError),\n});\n\nexport const addRolesToGroup = (groupId, roles) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.ADD_ROLES_TO_GROUP,\n    payload: GroupHelper.addRolesToGroup(groupId, roles),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(messages.addGroupRolesSuccessTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.addGroupRolesSuccessDescription),\n        },\n        rejected: {\n          variant: 'danger',\n          title: intl.formatMessage(messages.addGroupRolesErrorTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.addGroupRolesErrorDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const removeRolesFromGroup = (groupId, roles) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n    payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(messages.removeGroupRolesSuccessTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.removeGroupRolesSuccessDescription),\n        },\n        rejected: {\n          variant: 'danger',\n          title: intl.formatMessage(messages.removeGroupRolesErrorTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.removeGroupRolesErrorDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const updateGroupsFilters = (filters) => ({\n  type: ActionTypes.UPDATE_GROUPS_FILTERS,\n  payload: filters,\n});\n","import { getLastPageOffset, isOffsetValid } from '../shared/pagination';\nimport { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nconst principalStatusApiMap = {\n  Active: 'enabled',\n  Inactive: 'disabled',\n  All: 'all',\n};\nexport async function fetchUsers({ limit, offset = 0, orderBy, filters = {}, usesMetaInURL, matchCriteria = 'partial' }) {\n  const { username, email, status = [] } = filters;\n  const sortOrder = orderBy === '-username' ? 'desc' : 'asc';\n  const mappedStatus =\n    typeof status === 'string'\n      ? principalStatusApiMap[status]\n      : status.length === 2\n      ? principalStatusApiMap.All\n      : principalStatusApiMap[status[0]] || principalStatusApiMap.All;\n  const response = await principalApi.listPrincipals(limit, offset, matchCriteria, username, sortOrder, email, mappedStatus);\n  const isPaginationValid = isOffsetValid(offset, response?.meta?.count);\n  offset = isPaginationValid ? offset : getLastPageOffset(response.meta.count, limit);\n  const { data, meta } = isPaginationValid\n    ? response\n    : await principalApi.listPrincipals(limit, offset, matchCriteria, username, sortOrder, email, mappedStatus);\n  return {\n    data,\n    meta: {\n      ...meta,\n      offset,\n      limit,\n    },\n    ...(usesMetaInURL\n      ? {\n          filters,\n          pagination: {\n            ...meta,\n            offset,\n            limit,\n            redirected: !isPaginationValid,\n          },\n        }\n      : {}),\n  };\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps),\n});\n\nexport const updateUsersFilters = (filters) => ({\n  type: ActionTypes.UPDATE_USERS_FILTERS,\n  payload: filters,\n});\n","import GithubIcon from '@patternfly/react-icons/dist/js/icons/github-icon';\nimport React from 'react'; //eslint-disable-line\n// importing due to web-pack config not defined error\n\nconst monitorSampleAppQuickStart = {\n  metadata: {\n    name: 'monitor-sampleapp',\n  },\n  spec: {\n    displayName: 'Monitoring your sample application',\n    durationMinutes: 10,\n    icon: <GithubIcon />,\n    description: `Now that you’ve created a sample application and added health checks, let’s monitor your application.`,\n    prerequisites: [`You completed the \"Getting started with a sample\" quick start.`],\n    introduction: `### This quick start shows you how to monitor your sample application.\nYou should have previously created the **sample-app** application and **nodejs-sample** deployment via the **Get started with a sample** quick start. If you haven't, you may be able to follow these tasks with any existing deployment.`,\n    tasks: [\n      {\n        title: `Viewing the monitoring details of your sample application`,\n        description: `### To view the details of your sample application:\n1. Go to the project your sample application was created in.\n2. In the **</> Developer** perspective, go to **Topology** view.\n3. Click on the **nodejs-sample** deployment to view its details.\n4. Click on the **Monitoring** tab in the side panel.\nYou can see context sensitive metrics and alerts in the **Monitoring** tab.`,\n        review: {\n          instructions: `#### To verify you can view the monitoring information:\n1. Do you see a **Metrics** accordion in the side panel?\n2. Do you see a **View monitoring dashboard** link in the **Metrics** accordion?\n3. Do you see three charts in the **Metrics** accordion: **CPU Usage**, **Memory Usage** and **Receive Bandwidth**?`,\n          failedTaskHelp: `This task isn’t verified yet. Try the task again.`,\n        },\n        summary: {\n          success: `You have learned how you can monitor your sample app!`,\n          failed: `Try the steps again.`,\n        },\n      },\n      {\n        title: `Viewing your project monitoring dashboard`,\n        description: `### To view the project monitoring dashboard in the context of **nodejs-sample**:\n1. Click on the **View monitoring dashboard** link in the side panel.\n2. You can change the **Time Range** and **Refresh Interval** of the dashboard.\n3. You can change the context of the dashboard as well by clicking on the drop-down list. Select a specific workload or **All Workloads** to view the dashboard in the context of the entire project.`,\n        review: {\n          instructions: `#### To verify that you are able to view the monitoring dashboard:\nDo you see metrics charts in the dashboard?`,\n          failedTaskHelp: `This task isn’t verified yet. Try the task again.`,\n        },\n        summary: {\n          success: `You have learned how to view the dashboard in the context of your sample app!`,\n          failed: `Try the steps again.`,\n        },\n      },\n      {\n        title: `Viewing custom metrics`,\n        description: `### To view custom metrics:\n1. Click on the **Metrics** tab of the **Monitoring** page.\n2. Click the **Select Query** drop-down list to see the available queries.\n3. Click on **Filesystem Usage** from the list to run the query.`,\n        review: {\n          instructions: `#### Verify you can see the chart associated with the query:\nDo you see a chart displayed with filesystem usage for your project?  Note: select **Custom Query** from the dropdown to create and run a custom query utilizing PromQL.\n`,\n          failedTaskHelp: `This task isn’t verified yet. Try the task again.`,\n        },\n        summary: {\n          success: `You have learned how to run a query!`,\n          failed: `Try the steps again.`,\n        },\n      },\n    ],\n    conclusion: `You have learned how to access workload monitoring and metrics!`,\n\n    nextQuickStart: [``],\n  },\n};\n\nexport default monitorSampleAppQuickStart;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport pathnames from '../utilities/pathnames';\nimport monitorSampleAppQuickStart from './sample-quickstart';\nimport { QuickStartContext } from '@patternfly/quickstarts';\nimport { useIntl } from 'react-intl';\nimport messages from '../Messages';\n\nconst QuickstartsTestButtons = () => {\n  const intl = useIntl();\n  const [openQuickstart, setOpenQuickstart] = useState(false);\n  const chromeHook = useChrome();\n  const navigate = useNavigate();\n  const quickstartsContext = React.useContext(QuickStartContext);\n  const { quickStarts } = chromeHook;\n  const [isQuickstartEnabled, setIsQuickstartEnabled] = useState(false);\n\n  /*\n    This effect is to populate our catalog for this test 'environment' given that there is still no db being connected to the platform to pull\n    persistant quickstarts from. For now, we enable the quickstarts while pushing a new entry to the catalog in Chrome through the set function.\n  */\n  useEffect(() => {\n    const flag = localStorage.getItem('quickstarts:enabled') === 'true';\n\n    if (flag) {\n      quickStarts.set('monitor-sampleapp', [monitorSampleAppQuickStart]);\n      setIsQuickstartEnabled(flag);\n    }\n  }, []);\n\n  useEffect(() => {\n    setOpenQuickstart(quickstartsContext.activeQuickStartID === '' ? false : true);\n  }, [quickstartsContext]);\n\n  const handleActivateQuickstart = () => {\n    openQuickstart & !!quickstartsContext.activeQuickStartID ? quickStarts.toggle() : quickStarts.toggle('monitor-sampleapp', {});\n    setOpenQuickstart(!openQuickstart);\n  };\n\n  const handleOpenCatalog = () => {\n    navigate(pathnames['quickstarts-test'].link);\n  };\n\n  const btnStyle = {\n    margin: '24px 0px 24px 24px',\n  };\n\n  return (\n    <>\n      {isQuickstartEnabled && (\n        <>\n          <Button onClick={handleActivateQuickstart} variant=\"primary\" style={btnStyle} isDisabled={openQuickstart}>\n            {intl.formatMessage(messages.triggerMyQuickstart)}\n          </Button>\n          <Button onClick={handleOpenCatalog} variant=\"primary\" style={btnStyle}>\n            {intl.formatMessage(messages.triggerMyCatalog)}\n          </Button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default QuickstartsTestButtons;\n","import React, { cloneElement } from 'react';\nimport { useOutletContext } from 'react-router-dom';\n\ninterface ElementWrapperProps {\n  path?: string;\n  children: React.ReactElement;\n}\n\nexport const ElementWrapper: React.FC<ElementWrapperProps> = ({ children, path }) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const componentProps: any = useOutletContext();\n  return cloneElement(children, { ...componentProps, ...((path && componentProps?.[path]) || {}) });\n};\n\nexport default ElementWrapper;\n","import { Navigate, Route as RouterRoute, Routes as RouterRoutes, matchPath, useLocation } from 'react-router-dom';\nimport React, { lazy, Suspense, useEffect, useMemo } from 'react';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport pathnames from './utilities/pathnames';\nimport QuickstartsTestButtons from './utilities/quickstarts-test-buttons';\nimport ElementWrapper from './smart-components/common/ElementWrapper';\nimport { mergeToBasename } from './presentational-components/shared/AppLink';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nconst Users = lazy(() => import('./smart-components/user/users'));\nconst UserDetail = lazy(() => import('./smart-components/user/user'));\nconst AddUserToGroup = lazy(() => import('./smart-components/user/add-user-to-group/add-user-to-group'));\n\nconst Roles = lazy(() => import('./smart-components/role/roles'));\nconst Role = lazy(() => import('./smart-components/role/role'));\nconst AddRoleWizard = lazy(() => import('./smart-components/role/add-role/add-role-wizard'));\nconst EditRole = lazy(() => import('./smart-components/role/edit-role-modal'));\nconst RemoveRole = lazy(() => import('./smart-components/role/remove-role-modal'));\nconst AddRolePermissionWizard = lazy(() => import('./smart-components/role/add-role-permissions/add-role-permission-wizard'));\nconst ResourceDefinitions = lazy(() => import('./smart-components/role/role-resource-definitions'));\nconst EditResourceDefinitionsModal = lazy(() => import('./smart-components/role/edit-resource-definitions-modal'));\n\nconst Groups = lazy(() => import('./smart-components/group/groups'));\nconst Group = lazy(() => import('./smart-components/group/group'));\nconst AddGroupWizard = lazy(() => import('./smart-components/group/add-group/add-group-wizard'));\nconst EditGroup = lazy(() => import('./smart-components/group/edit-group-modal'));\nconst RemoveGroup = lazy(() => import('./smart-components/group/remove-group-modal'));\nconst GroupMembers = lazy(() => import('./smart-components/group/member/group-members'));\nconst GroupRoles = lazy(() => import('./smart-components/group/role/group-roles'));\nconst GroupServiceAccounts = lazy(() => import('./smart-components/group/service-account/group-service-accounts'));\nconst AddGroupRoles = lazy(() => import('./smart-components/group/role/add-group-roles'));\nconst AddGroupMembers = lazy(() => import('./smart-components/group/member/add-group-members'));\nconst AddGroupServiceAccounts = lazy(() => import('./smart-components/group/service-account/add-group-service-accounts'));\n\nconst QuickstartsTest = lazy(() => import('./smart-components/quickstarts/quickstarts-test'));\n\nconst getRoutes = ({ enableServiceAccounts }: Record<string, boolean>) => [\n  {\n    path: pathnames['user-detail'].path,\n    element: UserDetail,\n    childRoutes: [\n      {\n        path: pathnames['add-user-to-group'].path,\n        element: AddUserToGroup,\n      },\n      {\n        path: pathnames['user-add-group-roles'].path,\n        element: AddGroupRoles,\n      },\n    ],\n  },\n  {\n    path: pathnames.users.path,\n    element: Users,\n  },\n\n  {\n    path: pathnames['role-detail'].path,\n    element: Role,\n    childRoutes: [\n      {\n        path: pathnames['role-detail-remove'].path,\n        element: RemoveRole,\n      },\n      {\n        path: pathnames['role-detail-edit'].path,\n        element: EditRole,\n      },\n      {\n        path: pathnames['role-add-permission'].path,\n        element: AddRolePermissionWizard,\n      },\n    ],\n  },\n  {\n    path: pathnames['role-detail-permission'].path,\n    element: ResourceDefinitions,\n    childRoutes: [\n      {\n        path: pathnames['role-detail-permission-edit'].path,\n        element: EditResourceDefinitionsModal,\n      },\n    ],\n  },\n  {\n    path: pathnames.roles.path,\n    element: Roles,\n    childRoutes: [\n      {\n        path: pathnames['add-role'].path,\n        element: AddRoleWizard,\n      },\n      {\n        path: pathnames['remove-role'].path,\n        element: RemoveRole,\n      },\n      {\n        path: pathnames['edit-role'].path,\n        element: EditRole,\n      },\n    ],\n  },\n\n  {\n    path: pathnames['group-detail-role-detail'].path,\n    element: Role,\n  },\n  {\n    path: pathnames['group-detail'].path,\n    element: Group,\n    childRoutes: [\n      {\n        path: pathnames['group-detail'].path,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        element: (({ groupId }) => <Navigate to={mergeToBasename(pathnames['group-detail-roles'].link).replace(':groupId', groupId)} />) as React.FC,\n      },\n      {\n        path: pathnames['group-detail-roles'].path,\n        element: GroupRoles,\n        childRoutes: [\n          {\n            path: pathnames['group-roles-edit-group'].path,\n            element: EditGroup,\n          },\n          {\n            path: pathnames['group-roles-remove-group'].path,\n            element: RemoveGroup,\n          },\n          {\n            path: pathnames['group-add-roles'].path,\n            element: AddGroupRoles,\n          },\n        ],\n      },\n      {\n        path: pathnames['group-detail-members'].path,\n        element: GroupMembers,\n        childRoutes: [\n          {\n            path: pathnames['group-members-edit-group'].path,\n            element: EditGroup,\n          },\n          {\n            path: pathnames['group-members-remove-group'].path,\n            element: RemoveGroup,\n          },\n          {\n            path: pathnames['group-add-members'].path,\n            element: AddGroupMembers,\n          },\n        ],\n      },\n      ...(enableServiceAccounts\n        ? [\n            {\n              path: pathnames['group-detail-service-accounts'].path,\n              element: GroupServiceAccounts,\n              childRoutes: [\n                {\n                  path: pathnames['group-service-accounts-edit-group'].path,\n                  element: EditGroup,\n                },\n                {\n                  path: pathnames['group-service-accounts-remove-group'].path,\n                  element: RemoveGroup,\n                },\n                {\n                  path: pathnames['group-add-service-account'].path,\n                  element: AddGroupServiceAccounts,\n                },\n              ],\n            },\n          ]\n        : []),\n    ],\n  },\n  {\n    path: pathnames.groups.path,\n    element: Groups,\n    childRoutes: [\n      {\n        path: pathnames['add-group'].path,\n        element: AddGroupWizard,\n      },\n      {\n        path: pathnames['edit-group'].path,\n        element: EditGroup,\n      },\n      {\n        path: pathnames['remove-group'].path,\n        element: RemoveGroup,\n      },\n    ],\n  },\n\n  ...(localStorage.getItem('quickstarts:enabled') === 'true' ? [{ path: pathnames['quickstarts-test'].path, element: QuickstartsTest }] : []),\n];\n\ninterface RouteType {\n  path?: string;\n  element: React.ComponentType;\n  childRoutes?: RouteType[];\n  elementProps?: Record<string, unknown>;\n}\n\nconst renderRoutes = (routes: RouteType[] = []) =>\n  routes.map(({ path, element: Element, childRoutes, elementProps }) => (\n    <RouterRoute\n      key={path}\n      path={path}\n      element={\n        <ElementWrapper path={path}>\n          <Element {...elementProps} />\n        </ElementWrapper>\n      }\n    >\n      {renderRoutes(childRoutes)}\n    </RouterRoute>\n  ));\n\nconst Routing = () => {\n  const location = useLocation();\n  const { updateDocumentTitle } = useChrome();\n  const enableServiceAccounts = useFlag('platform.rbac.group-service-accounts');\n\n  useEffect(() => {\n    const currPath = Object.values(pathnames).find(\n      (item) =>\n        !!matchPath(\n          {\n            path: item.path,\n            end: true,\n          },\n          location.pathname\n        )\n    );\n    if (currPath?.title) {\n      updateDocumentTitle(`${currPath.title} - User Access`);\n    }\n  }, [location.pathname, updateDocumentTitle]);\n\n  const routes = getRoutes({ enableServiceAccounts });\n  const renderedRoutes = useMemo(() => renderRoutes(routes as never), [routes]);\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <QuickstartsTestButtons />\n      <RouterRoutes>\n        {renderedRoutes}\n        {/* Catch all unmatched routes */}\n        <RouterRoute path=\"*\" element={<Navigate to={mergeToBasename(pathnames.users.link)} />} />\n      </RouterRoutes>\n    </Suspense>\n  );\n};\n\nexport default Routing;\n"],"names":["i","groupApi","getGroupApi","fetchGroups","limit","offset","nameMatch","scope","username","excludeUsername","filters","uuid","roleNames","roleDiscriminator","orderBy","platformDefault","adminDefault","system","options","usesMetaInURL","chrome","Promise","all","listGroups","name","auth","getUser","groups","isPaginationValid","isOffsetValid","meta","count","getLastPageOffset","response","pagination","redirected","fetchGroup","getGroup","updateGroup","data","addGroup","createGroup","newGroup","promises","user_list","length","push","addPrincipalToGroup","principals","roles_list","addRoleToGroup","roles","removeGroups","uuids","map","deleteGroup","deleteMembersFromGroup","groupId","users","deletePrincipalFromGroup","join","addMembersToGroup","fetchRolesForGroup","excluded","description","listRolesForGroup","undefined","fetchAccountsForGroup","client_id","owner","time_created","deleteRolesFromGroup","deleteRoleFromGroup","addRolesToGroup","fetchMembersForGroup","usernames","getPrincipalsFromGroup","BAD_UUID","mappedProps","apiProps","Object","entries","reduce","acc","key","value","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","isRowSelectable","nonDefaults","filter","every","find","row","selectedRows","newSelection","isSelected","arr","findIndex","firstUpperCase","text","charAt","toUpperCase","slice","createQueryParams","params","searchParams","URLSearchParams","keys","forEach","Array","isArray","item","append","set","toString","removeQueryParams","location","navigate","pathname","search","replace","getBackRoute","per_page","page","calculatePage","getDateFormat","date","monthAgo","Date","now","parse","setMonth","getMonth","handleUuidError","err","error","errors","status","source","type","ActionTypes","payload","GroupHelper","fetchAdminGroup","filterValue","fetchSystemGroup","groupData","message","detail","cache","createIntlCache","intl","createIntl","locale","messages","providerMessages","notifications","fulfilled","variant","title","formatMessage","dismissDelay","dismissable","rejected","members","singleMember","removeMembersFromGroup","fetchServiceAccountsForGroup","fetchAddRolesForGroup","removeRolesFromGroup","updateGroupsFilters","principalApi","getPrincipalApi","principalStatusApiMap","Active","Inactive","All","fetchUsers","matchCriteria","email","sortOrder","mappedStatus","listPrincipals","UserHelper","updateUsersFilters","metadata","spec","displayName","durationMinutes","icon","prerequisites","introduction","tasks","review","instructions","failedTaskHelp","summary","success","failed","conclusion","nextQuickStart","useIntl","useState","openQuickstart","setOpenQuickstart","chromeHook","useChrome","useNavigate","quickstartsContext","React","QuickStartContext","quickStarts","isQuickstartEnabled","setIsQuickstartEnabled","useEffect","flag","localStorage","getItem","monitorSampleAppQuickStart","activeQuickStartID","btnStyle","margin","Button","onClick","toggle","style","isDisabled","pathnames","children","path","componentProps","useOutletContext","cloneElement","Users","lazy","UserDetail","AddUserToGroup","Roles","Role","AddRoleWizard","EditRole","RemoveRole","AddRolePermissionWizard","ResourceDefinitions","EditResourceDefinitionsModal","Groups","Group","AddGroupWizard","EditGroup","RemoveGroup","GroupMembers","GroupRoles","GroupServiceAccounts","AddGroupRoles","AddGroupMembers","AddGroupServiceAccounts","QuickstartsTest","renderRoutes","routes","element","Element","childRoutes","elementProps","Route","useLocation","updateDocumentTitle","enableServiceAccounts","useFlag","currPath","values","matchPath","end","Navigate","to","getRoutes","renderedRoutes","useMemo","Suspense","fallback"],"sourceRoot":""}
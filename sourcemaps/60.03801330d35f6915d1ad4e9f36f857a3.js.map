{"version":3,"file":"js/60.12941bacf110034c5b75.js","mappings":"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","sources":["webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-state.tsx"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStatePrimary } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStatePrimary key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStatePrimary>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <ListLoader isCompact={isCompact} items={pagination?.limit} />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy)} variant=\"bottom\" dropDirection=\"up\" />}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = [], setCheckedItems = () => undefined, data = [], tableId) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter((row) => !(row.platform_default || row.admin_default || row.system)).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type,\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    useMobileLayout\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { SVGIconProps } from '@patternfly/react-icons/dist/esm/createIcon';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<SVGIconProps, any>;\n  description: any;\n  actions: any;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.small} {...props}>\n    <EmptyStateIcon icon={icon || SearchIcon} />\n    <Title headingLevel=\"h4\" size=\"lg\">\n      {title}\n    </Title>\n    <EmptyStateBody className=\"pf-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    {actions}\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n"],"names":["TableToolbarView","orderBy","isCompact","borders","columns","rows","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","value","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","intl","useIntl","Fragment","length","every","title","formatMessage","messages","items","icon","PlusCircleIcon","description","item","actions","direction","index","key","limit","Table","canSelectAll","toLowerCase","variant","TableVariant","onSelect","_e","isSelected","_idx","uuid","name","cells","requires","selectedRows","fullWidth","undefined","EmptyStatePrimary","Button","onClick","offset","props","colSpan","className","e","TableHeader","TableBody","noBottom","Pagination","paginationBuilder","dropDirection","propTypes","Toolbar","directions","defaultProps","itemCount","count","perPage","page","calculatePage","onSetPage","_event","calculateOffset","perPageOptions","onPerPageSelect","bulkSelectBuilder","filter","row","platform_default","admin_default","system","checked","calculateChecked","id","filterConfigBuilder","filterItems","map","label","selected","placeholder","type","groups","innerRef","firstUpperCase","filterValues","filterBy","newFilter","Array","isArray","Object","keys","debouncedFetch","reduce","acc","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","options","category","chips","Boolean","onDelete","isAll","deleted","filtersValue","setKeyValue","bulkSelect","filterConfig","useMobileLayout","actionsConfig","activeFiltersConfig","PropTypes","isCollapsible","defaultSettings","EmptyState","EmptyStateVariant","EmptyStateIcon","SearchIcon","Title","headingLevel","size","EmptyStateBody","text"],"sourceRoot":""}
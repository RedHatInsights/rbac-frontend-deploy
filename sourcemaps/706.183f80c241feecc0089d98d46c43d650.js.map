{"version":3,"file":"js/706.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/Radio/radio.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Radio/Radio.js","webpack:///./src/smart-components/common/review-step-buttons.js","webpack:///./src/smart-components/common/wizard-error.js","webpack:///./src/smart-components/role/add-role/validators.js","webpack:///./src/smart-components/role/add-role/review-template.js","webpack:///./src/smart-components/role/add-role/cost-resources-template.js","webpack:///./src/smart-components/role/add-role/add-role-success.js","webpack:///./src/smart-components/role/add-role/base-role-table.js","webpack:///./src/smart-components/role/add-role/review.js","webpack:///./src/smart-components/role/add-role/set-name.js","webpack:///./src/smart-components/common/silent-error-boundary.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/add-role/type-selector.js","webpack:///./src/smart-components/role/add-role/schema.js","webpack:///./src/utilities/async-debounce.ts"],"sourcesContent":["import './radio.css';\nexport default {\n  \"modifiers\": {\n    \"standalone\": \"pf-m-standalone\",\n    \"disabled\": \"pf-m-disabled\"\n  },\n  \"radio\": \"pf-v5-c-radio\",\n  \"radioBody\": \"pf-v5-c-radio__body\",\n  \"radioDescription\": \"pf-v5-c-radio__description\",\n  \"radioInput\": \"pf-v5-c-radio__input\",\n  \"radioLabel\": \"pf-v5-c-radio__label\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nclass Radio extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event, event.currentTarget.checked);\n        };\n        if (!props.label && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('Radio:', 'Radio requires an aria-label to be specified');\n        }\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Radio.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, checked, className, inputClassName, defaultChecked, isLabelWrapped, isLabelBeforeButton, isChecked, isDisabled, isValid, label, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onChange, description, body, ouiaId, ouiaSafe = true, component } = _a, props = __rest(_a, ['aria-label', \"checked\", \"className\", \"inputClassName\", \"defaultChecked\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isChecked\", \"isDisabled\", \"isValid\", \"label\", \"onChange\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\", \"component\"]);\n        if (!props.id) {\n            // eslint-disable-next-line no-console\n            console.error('Radio:', 'id is required to make input accessible');\n        }\n        const inputRendered = (React.createElement(\"input\", Object.assign({}, props, { className: css(styles.radioInput, inputClassName), type: \"radio\", onChange: this.handleChange, \"aria-invalid\": !isValid, disabled: isDisabled, checked: checked || isChecked }, (checked === undefined && { defaultChecked }), (!label && { 'aria-label': ariaLabel }), getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))));\n        const wrapWithLabel = (isLabelWrapped && !component) || component === 'label';\n        const Label = wrapWithLabel ? 'span' : 'label';\n        const labelRendered = label ? (React.createElement(Label, { className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled), htmlFor: !wrapWithLabel ? props.id : undefined }, label)) : null;\n        const Component = component !== null && component !== void 0 ? component : (wrapWithLabel ? 'label' : 'div');\n        return (React.createElement(Component, { className: css(styles.radio, !label && styles.modifiers.standalone, className), htmlFor: wrapWithLabel ? props.id : undefined },\n            isLabelBeforeButton ? (React.createElement(React.Fragment, null,\n                labelRendered,\n                inputRendered)) : (React.createElement(React.Fragment, null,\n                inputRendered,\n                labelRendered)),\n            description && React.createElement(\"span\", { className: css(styles.radioDescription) }, description),\n            body && React.createElement(\"span\", { className: css(styles.radioBody) }, body)));\n    }\n}\nRadio.displayName = 'Radio';\nRadio.defaultProps = {\n    className: '',\n    isDisabled: false,\n    isValid: true,\n    onChange: () => { }\n};\nexport { Radio };\n//# sourceMappingURL=Radio.js.map","import { Button } from '@patternfly/react-core';\nimport React, { useContext, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst selectNext = (nextStep, getState) =>\n  ({\n    string: nextStep,\n    function: nextStep({ values: getState().values }),\n  }?.[typeof nextStep] || nextStep.stepMapper?.[get(getState().values, nextStep.when)]);\n\nconst NextButton = ({ nextStep, valid, handleNext, nextLabel, getState, handleSubmit, submitLabel }) => (\n  <Button\n    variant=\"primary\"\n    type=\"button\"\n    isDisabled={!valid || getState().validating}\n    onClick={() => (nextStep ? handleNext(selectNext(nextStep, getState)) : handleSubmit())}\n  >\n    {nextStep ? nextLabel : submitLabel}\n  </Button>\n);\n\nNextButton.propTypes = {\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n  handleSubmit: PropTypes.func.isRequired,\n  submitLabel: PropTypes.node.isRequired,\n  valid: PropTypes.bool,\n  handleNext: PropTypes.func.isRequired,\n  nextLabel: PropTypes.node.isRequired,\n  getState: PropTypes.func.isRequired,\n};\n\nconst ReviewStepButtons = ({ renderNextButton, disableBack, handlePrev, buttonLabels: { cancel, back }, context }) => {\n  const formOptions = useFormApi();\n  const { success, error, submitting } = useContext(context);\n  if (success || typeof error === 'undefined' || error || submitting) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {renderNextButton()}\n      <Button type=\"button\" variant=\"secondary\" isDisabled={disableBack} onClick={handlePrev}>\n        {back}\n      </Button>\n      <Button type=\"button\" variant=\"link\" onClick={formOptions.onCancel}>\n        {cancel}\n      </Button>\n    </Fragment>\n  );\n};\n\nReviewStepButtons.propTypes = {\n  disableBack: PropTypes.bool,\n  handlePrev: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  nextStep: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      when: PropTypes.string.isRequired,\n      stepMapper: PropTypes.object.isRequired,\n    }),\n    PropTypes.func,\n  ]),\n  buttonLabels: PropTypes.shape({\n    submit: PropTypes.node.isRequired,\n    cancel: PropTypes.node.isRequired,\n    back: PropTypes.node.isRequired,\n    next: PropTypes.node.isRequired,\n  }).isRequired,\n  context: PropTypes.object.isRequired,\n  renderNextButton: PropTypes.func,\n};\n\nexport default ReviewStepButtons;\n","import React, { useContext } from 'react';\nimport { Button, ButtonVariant } from '@patternfly/react-core';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { ErrorState } from '@patternfly/react-component-groups';\n\nconst WizardError = ({ context, title, text, customFooter }) => {\n  const intl = useIntl();\n  const { jumpToStep } = useContext(WizardContext);\n  const { setWizardError } = useContext(context);\n  return (\n    <ErrorState\n      errorTitle={title}\n      errorDescription={text}\n      customFooter={\n        customFooter || (\n          <Button\n            onClick={() => {\n              setWizardError(undefined);\n              jumpToStep(0);\n            }}\n            variant={ButtonVariant.primary}\n          >\n            {intl.formatMessage(messages.returnToStepNumber, { number: 1 })}\n          </Button>\n        )\n      }\n    />\n  );\n};\n\nWizardError.propTypes = {\n  context: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  customFooter: PropTypes.element,\n};\n\nexport default WizardError;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchRoles } from '../../../helpers/role/role-helper';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const asyncValidator = async (roleName) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  if (!roleName) {\n    return undefined;\n  }\n\n  const response = await fetchRoles({ limit: 10, offset: 0, name: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  // it has to be here twice because API is using AND instead of OR\n  const responseName = await fetchRoles({ limit: 10, offset: 0, displayName: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (response?.data?.length > 0 || responseName?.data?.length > 0) {\n    throw intl.formatMessage(messages.nameAlreadyTaken);\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce(asyncValidator);\n\nexport const ValidatorReset = ({ name }) => {\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setTimeout(() => formOptions.change(name, '1'));\n\n    return () => formOptions.change(name, '');\n  }, []);\n\n  return null;\n};\n\nValidatorReset.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner, Text, TextContent, Title } from '@patternfly/react-core';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { asyncValidator } from './validators';\nimport './review.scss';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport WizardError from '../../common/wizard-error';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  const { submitting, error, setWizardError } = useContext(AddRoleWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['role-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  if (error === true) {\n    return (\n      <WizardError\n        context={AddRoleWizardContext}\n        title={intl.formatMessage(messages.roleNameTakenTitle)}\n        text={intl.formatMessage(messages.roleNameTakenText)}\n      />\n    );\n  }\n\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-sm\">\n        {intl.formatMessage(messages.reviewDetails)}\n      </Title>\n      <TextContent className=\"pf-v5-u-mb-md\">\n        <Text>{intl.formatMessage(messages.reviewRoleDetails)}</Text>\n      </TextContent>\n      {formFields?.[0]?.[0]}\n    </div>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CostResourcesTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-lg\">\n        {intl.formatMessage(messages.defineCostResources)}\n      </Title>\n      {formFields}\n    </div>\n  );\n};\n\nCostResourcesTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default CostResourcesTemplate;\n","import React, { useContext } from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateActions,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../../Messages';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport pathnames from '../../../utilities/pathnames';\n\nconst AddRoleSuccess = ({ onClose }) => {\n  const { setHideForm, setWizardSuccess } = useContext(AddRoleWizardContext);\n  const intl = useIntl();\n  return (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader\n        titleText={<>{intl.formatMessage(messages.roleCreatedSuccessfully)}</>}\n        icon={<EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateBody></EmptyStateBody>\n      <EmptyStateFooter>\n        <Button onClick={onClose} variant=\"primary\">\n          {intl.formatMessage(messages.exit)}\n        </Button>\n        <EmptyStateActions>\n          <Button\n            onClick={() => {\n              setHideForm(false);\n              setWizardSuccess(false);\n            }}\n            variant=\"link\"\n          >\n            {intl.formatMessage(messages.createAnotherRole)}\n          </Button>\n          <Button component={(props) => <AppLink to={pathnames.groups.link} {...props} />} variant=\"link\">\n            {intl.formatMessage(messages.addRoleToGroup)}\n          </Button>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nAddRoleSuccess.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddRoleSuccess;\n","import React, { useState, useEffect } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Radio, Alert } from '@patternfly/react-core';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesForWizard } from '../../../redux/actions/role-actions';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { sortable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst selector = ({ roleReducer: { rolesForWizard, isWizardLoading } }) => ({\n  roles: rolesForWizard.data,\n  pagination: rolesForWizard.meta,\n  isWizardLoading,\n});\n\nconst BaseRoleTable = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (options) => dispatch(fetchRolesForWizard(options));\n  const [filterValue, setFilterValue] = useState('');\n  const { roles, pagination, isWizardLoading } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const columns = [\n    { title: '' },\n    { title: intl.formatMessage(messages.name), key: 'display_name', transforms: [sortable] },\n    { title: intl.formatMessage(messages.description) },\n  ];\n\n  const [sortByState, setSortByState] = useState({ index: 1, direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n\n  useEffect(() => {\n    fetchData({\n      limit: 50,\n      offset: 0,\n      itemCount: 0,\n      orderBy,\n    });\n  }, []);\n\n  const createRows = (roles) =>\n    roles.map((role) => ({\n      cells: [\n        {\n          title: (\n            <Radio\n              id={`${role.uuid}-radio`}\n              name={`${role.name}-radio`}\n              aria-label={`${role.name}-radio`}\n              ouiaId={`${role.name}-radio`}\n              value={role.uuid}\n              isChecked={input.value.uuid === role.uuid}\n              onChange={() => {\n                formOptions.batch(() => {\n                  input.onChange(role);\n                  formOptions.change('role-copy-name', `Copy of ${role.display_name || role.name}`);\n                  formOptions.change('role-copy-description', role.description);\n                  formOptions.change('add-permissions-table', []);\n                  formOptions.change('base-permissions-loaded', false);\n                  formOptions.change('not-allowed-permissions', []);\n                });\n              }}\n            />\n          ),\n          props: { className: 'pf-v5-c-table__check' },\n        },\n        role.display_name || role.name,\n        role.description,\n      ],\n    }));\n  return (\n    <div>\n      <Alert variant=\"info\" isInline title={intl.formatMessage(messages.granularPermissionsWillBeCopied)} />\n      <TableToolbarView\n        columns={columns}\n        rows={createRows(roles)}\n        data={roles}\n        fetchData={(config) => {\n          fetchData(mappedProps(config));\n        }}\n        filterValue={filterValue}\n        setFilterValue={({ name }) => setFilterValue(name)}\n        isLoading={isWizardLoading}\n        sortBy={sortByState}\n        onSort={(e, index, direction) => {\n          const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n          setSortByState({ index, direction });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            orderBy,\n          });\n        }}\n        pagination={pagination}\n        titlePlural={intl.formatMessage(messages.roles)}\n        titleSingular={intl.formatMessage(messages.role)}\n        filterPlaceholder={intl.formatMessage(messages.roleName).toLowerCase()}\n        ouiaId=\"roles-table\"\n        isCompact\n        tableId=\"base-role\"\n      />\n    </div>\n  );\n};\n\nexport default BaseRoleTable;\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Stack, StackItem, Grid, GridItem, Text, TextVariants } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './review.scss';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nconst stickyTable = (columns, rows) => (\n  <div className=\"rbac-c-sticky\">\n    <Grid className=\"rbac-c-sticky--title\">\n      {columns.map((col) => (\n        <GridItem span={12 / columns.length} key={col}>\n          {col}\n        </GridItem>\n      ))}\n    </Grid>\n    <Grid className=\"rbac-c-sticky--data\">\n      {rows.map((row) =>\n        row.cells.map((cell) => (\n          <GridItem span={12 / columns.length} key={cell}>\n            {cell}\n          </GridItem>\n        ))\n      )}\n    </Grid>\n  </div>\n);\n\nconst ReviewStep = () => {\n  const intl = useIntl();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'role-copy-name': copyName,\n    'role-copy-description': copyDescription,\n    'add-permissions-table': permissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n    'inventory-group-permissions': inventoryGroupPermissions,\n    'role-type': type,\n  } = formOptions.getState().values;\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n  const rows = permissions.map((permission) => ({\n    cells: permission.uuid.split(':'),\n  }));\n\n  const resourceDefinitionsRows = (resourceDefinitions || []).map(({ permission, resources }) => ({\n    cells: [permission, resources.join(', ')],\n  }));\n\n  const groupPermissionsRows = (inventoryGroupPermissions || []).map(({ permission, groups }) => ({\n    cells: [permission, groups?.map((group) => (group?.id === null ? intl.formatMessage(messages.ungroupedSystems) : group?.name)).join(', ')],\n  }));\n\n  return (\n    <React.Fragment>\n      <Stack>\n        <StackItem className=\"rbac-l-stack__item-summary\">\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.name)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? name : copyName}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.description)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? description : copyDescription}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.permissions)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              {stickyTable(columns, rows)}\n            </GridItem>\n          </Grid>\n          {inventoryGroupPermissions && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable(\n                  [\n                    intl.formatMessage(messages.permission),\n                    intl.formatMessage(enableWorkspacesNameChange ? messages.workspacesDefinition : messages.groupDefinition),\n                  ],\n                  groupPermissionsRows\n                )}\n              </GridItem>\n            </Grid>\n          )}\n          {hasCostResources && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable([intl.formatMessage(messages.permission), intl.formatMessage(messages.resourceDefinitions)], resourceDefinitionsRows)}\n              </GridItem>\n            </Grid>\n          )}\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { FormHelperText, HelperText, HelperTextItem, Stack, StackItem } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { debouncedAsyncValidator } from './validators';\nimport { trimAll } from '../../../helpers/shared/helpers';\nimport messages from '../../../Messages';\n\nconst roleNameValidated = (roleName, roleNameError) => (roleName === undefined || roleNameError || roleName?.length > 150 ? 'error' : 'default');\nconst roleDescriptionValidated = (roleDescription) => (roleDescription?.length > 150 ? 'error' : 'default');\n\nconst SetName = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const { 'role-name': name, 'role-description': description } = formOptions.getState().values;\n  const [roleName, setRoleName] = useState(name || '');\n  const [roleNameError, setRoleNameError] = useState();\n  const [roleDescription, setRoleDescription] = useState(description);\n\n  const processRoleName = (value) => {\n    const trimmedValue = trimAll(value);\n    input.onChange(undefined);\n    debouncedAsyncValidator(trimmedValue)\n      .then(() => {\n        input.onChange(trimmedValue);\n        setRoleNameError(undefined);\n      })\n      .catch((error) => {\n        setRoleNameError(error);\n        input.onChange(undefined);\n      });\n    setRoleName(value);\n  };\n\n  useEffect(() => {\n    roleName?.length > 0 && processRoleName(roleName);\n  }, []);\n\n  const roleNameValid = roleNameValidated(roleName, roleNameError);\n  const roleDescriptionValid = roleDescriptionValidated(roleDescription);\n  return (\n    <Stack hasGutter>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <FormGroup label={intl.formatMessage(messages.roleName)} isRequired>\n          <TextInput\n            id=\"role-name\"\n            value={roleName}\n            type=\"text\"\n            validated={roleNameValid}\n            onBlur={() => roleName === '' && setRoleName(undefined)}\n            onChange={(_event, value) => processRoleName(value)}\n            aria-label=\"Role name\"\n          />\n          {roleNameValid === 'error' && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant={roleNameValid}>{roleName ? roleNameError : intl.formatMessage(messages.required)}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n      <StackItem>\n        <FormGroup label={intl.formatMessage(messages.roleDescription)}>\n          <TextArea\n            id=\"role-description\"\n            value={roleDescription}\n            validated={roleDescriptionValid}\n            onChange={(_event, value) => {\n              setRoleDescription(value);\n              formOptions.change('role-description', value);\n            }}\n            aria-label=\"Role description\"\n            resizeOrientation=\"vertical\"\n          />\n          {roleDescriptionValid === 'error' && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant={roleDescriptionValid}>{intl.formatMessage(messages.maxCharactersWarning, { number: 150 })}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSetName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetName;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SilentErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error) {\n    /**\n     * Propagate error if it does not match the configuration\n     */\n    if (!error.message.includes(this.props.silentErrorString)) {\n      this.setState({ hasError: false });\n      throw error;\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Silently fail\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n\nSilentErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n  silentErrorString: PropTypes.string.isRequired,\n};\n\nexport default SilentErrorBoundary;\n","import React, { useState, useEffect, useRef, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { Wizard } from '@patternfly/react-core/deprecated';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { schemaBuilder } from './schema';\nimport { createRole, fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport AddRoleSuccess from './add-role-success';\nimport BaseRoleTable from './base-role-table';\nimport AddPermissionsTable from './add-permissions';\nimport ReviewStep from './review';\nimport InventoryGroupsRole from './inventory-groups-role';\nimport CostResources from './cost-resources';\nimport TypeSelector from './type-selector';\nimport SetName from './set-name';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport SilentErrorBoundary from '../../common/silent-error-boundary';\nimport messages from '../../../Messages';\nimport paths from '../../../utilities/pathnames';\nimport './add-role-wizard.scss';\n\nexport const AddRoleWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  'set-name': SetName,\n  'base-role-table': BaseRoleTable,\n  'add-permissions-table': AddPermissionsTable,\n  'cost-resources': CostResources,\n  'inventory-groups-role': InventoryGroupsRole,\n  review: ReviewStep,\n  description: Description,\n  'type-selector': TypeSelector,\n};\n\nconst AddRoleWizard = ({ pagination, filters, orderBy }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const chrome = useChrome();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const container = useRef(document.createElement('div'));\n  const [schema, setSchema] = useState();\n\n  useEffect(() => {\n    setSchema(schemaBuilder(container.current, enableWorkspacesNameChange));\n  }, []);\n\n  const onClose = () =>\n    navigate({\n      pathname: paths.roles.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n\n  const onCancel = () => {\n    if (!wizardContextValue.success) {\n      dispatch(\n        addNotification({\n          variant: 'warning',\n          title: intl.formatMessage(messages.creatingRoleCanceled),\n          dismissDelay: 8000,\n        })\n      );\n    }\n\n    setCancelWarningVisible(false);\n\n    navigate({\n      pathname: paths.roles.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    const {\n      'role-name': name,\n      'role-description': description,\n      'role-copy-name': copyName,\n      'role-copy-description': copyDescription,\n      'add-permissions-table': permissions,\n      'inventory-groups-role': invResources,\n      'cost-resources': costResources,\n      'role-type': type,\n    } = formData;\n    const selectedPermissionIds = permissions.map((record) => record.uuid);\n\n    const roleData = {\n      applications: [...new Set(permissions.map(({ uuid: permission }) => permission.split(':')[0]))],\n      description: (type === 'create' ? description : copyDescription) || null,\n      name: type === 'create' ? name : copyName,\n      access: permissions.reduce(\n        (acc, { uuid: permission, requires = [] }) => [\n          ...acc,\n          ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => {\n            let attributeFilter;\n\n            if (permission.includes('cost-management')) {\n              attributeFilter = {\n                key: `cost-management.${permission.split(':')[1]}`,\n                operation: 'in',\n                value: costResources?.find((r) => r.permission === permission)?.resources,\n              };\n            } else if (permission.includes('inventory')) {\n              attributeFilter = {\n                key: 'group.id',\n                operation: 'in',\n                value: invResources?.find((g) => g.permission === permission)?.groups?.map((group) => group?.id),\n              };\n            }\n\n            return {\n              permission,\n              resourceDefinitions: attributeFilter ? [{ attributeFilter }] : [],\n            };\n          }),\n        ],\n        []\n      ),\n    };\n\n    return dispatch(createRole(roleData))\n      .then(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true }));\n        dispatch(fetchRolesWithPolicies({ limit: pagination.limit, orderBy, usesMetaInURL: true, chrome }));\n      })\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        dispatch(fetchRolesWithPolicies({ limit: pagination.limit, orderBy, usesMetaInURL: true, chrome }));\n        onClose();\n      });\n  };\n\n  if (!schema) {\n    return null;\n  }\n  return (\n    <AddRoleWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <SilentErrorBoundary silentErrorString=\"focus-trap\">\n        <WarningModal\n          title={intl.formatMessage(messages.exitItemCreation, { item: intl.formatMessage(messages.role).toLocaleLowerCase() })}\n          confirmButtonLabel={intl.formatMessage(messages.discard)}\n          isOpen={cancelWarningVisible}\n          onClose={() => {\n            container.current.hidden = false;\n            setCancelWarningVisible(false);\n          }}\n          onConfirm={onCancel}\n        >\n          {intl.formatMessage(messages.discardedInputsWarning)}\n        </WarningModal>\n      </SilentErrorBoundary>\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.createRole)}\n            isOpen\n            onClose={onClose}\n            steps={[\n              {\n                name: 'success',\n                component: <AddRoleSuccess onClose={onClose} />,\n                isFinishedStep: true,\n              },\n            ]}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          schema={schema}\n          container={container}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-type': 'create',\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            const showWarning = Boolean((values && values['role-name']) || values['role-description'] || values['copy-base-role']);\n            if (showWarning) {\n              container.current.hidden = true;\n              setCancelWarningVisible(true);\n            } else {\n              onCancel();\n            }\n          }}\n        />\n      )}\n    </AddRoleWizardContext.Provider>\n  );\n};\n\nAddRoleWizard.propTypes = {\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  orderBy: PropTypes.string,\n};\n\nexport default AddRoleWizard;\n","import React, { useState } from 'react';\nimport { Radio } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst TypeSelector = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const [checked, setChecked] = useState(formOptions.getState().values['role-type']);\n  const handleChange = (val) => {\n    setChecked(val);\n    input.onChange(val);\n    formOptions.change('add-permissions-table', []);\n    formOptions.change('base-permissions-loaded', false);\n    formOptions.change('not-allowed-permissions', []);\n  };\n\n  return (\n    <div>\n      <Radio\n        isChecked={checked === 'create'}\n        className=\"pf-v5-u-mb-sm\"\n        name=\"role-type-create\"\n        onChange={() => handleChange('create')}\n        label={intl.formatMessage(messages.createRoleFromScratch)}\n        id=\"role-type-create\"\n        value=\"create\"\n      />\n      <Radio\n        isChecked={checked === 'copy'}\n        name=\"role-type-copy\"\n        onChange={() => handleChange('copy')}\n        label={intl.formatMessage(messages.copyAnExistingRole)}\n        id=\"role-type-copy\"\n        value=\"copy\"\n      />\n    </div>\n  );\n};\n\nexport default TypeSelector;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport AddPermissionTemplate from './add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport CostResourcesTemplate from './cost-resources-template';\nimport { debouncedAsyncValidator, ValidatorReset } from './validators';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\nimport { validateNextAddRolePermissionStep } from '../permission-wizard-helper';\nimport InventoryGroupsRoleTemplate from './inventory-groups-role-template';\n\nexport const schemaBuilder = (container, featureFlag) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.createRole),\n        style: { overflow: 'hidden' },\n        container,\n        fields: [\n          {\n            title: intl.formatMessage(messages.createRole),\n            name: 'step-1',\n            nextStep: {\n              when: 'role-type',\n              stepMapper: {\n                copy: 'name-and-description',\n                create: 'add-permissions',\n              },\n            },\n            fields: [\n              {\n                component: 'type-selector',\n                name: 'role-type',\n                isRequired: true,\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                component: 'set-name',\n                name: 'role-name',\n                type: 'text',\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                  {\n                    type: validatorTypes.MAX_LENGTH,\n                    threshold: 150,\n                  },\n                ],\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n              },\n              {\n                component: 'text-field',\n                name: 'role-description',\n                hideField: true,\n              },\n              {\n                component: 'base-role-table',\n                name: 'copy-base-role',\n                label: intl.formatMessage(messages.baseRole),\n                isRequired: true,\n                condition: {\n                  when: 'role-type',\n                  is: 'copy',\n                },\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n                component: 'description',\n                name: 'fixasyncvalidation',\n                Content: ValidatorReset,\n              },\n              {\n                condition: {\n                  when: 'role-type',\n                  is: 'copy',\n                },\n                component: 'description',\n                name: 'fixasyncvalidation2',\n                Content: ValidatorReset,\n              },\n            ],\n          },\n          {\n            title: intl.formatMessage(messages.nameAndDescription),\n            name: 'name-and-description',\n            nextStep: 'add-permissions',\n            fields: [\n              {\n                component: 'text-field',\n                name: 'role-copy-name',\n                type: 'text',\n                label: intl.formatMessage(messages.roleName),\n                isRequired: true,\n                validate: [\n                  debouncedAsyncValidator,\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n              {\n                component: 'text-field',\n                name: 'role-copy-description',\n                type: 'text',\n                label: intl.formatMessage(messages.roleDescription),\n                validate: [\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('add-permissions', values),\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            title: intl.formatMessage(featureFlag ? messages.workspacesAccessTitle : messages.inventoryGroupsAccessTitle),\n            name: 'inventory-groups-role',\n            StepTemplate: InventoryGroupsRoleTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('inventory-groups-role', values),\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'cost-resources',\n                label: (\n                  <p className=\"pf-v5-u-mb-md\">\n                    {intl.formatMessage(featureFlag ? messages.applyWorkspacesRolePermission : messages.applyInventoryGroupsRolePermission)}\n                  </p>\n                ),\n              },\n              {\n                component: 'inventory-groups-role',\n                name: 'inventory-groups-role',\n                validate: [\n                  (value = []) =>\n                    value?.every(({ groups, permission }) => groups?.length > 0 && permission)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneInventoryGroup),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            StepTemplate: CostResourcesTemplate,\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p className=\"pf-v5-u-mb-md\">{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) =>\n                    value?.every(({ resources }) => resources?.length > 0) ? undefined : intl.formatMessage(messages.assignAtLeastOneResource),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            buttons: (props) => <ReviewStepButtons {...props} context={AddRoleWizardContext} />,\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction: (...args: any[]) => Promise<any>, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"names":["Radio","constructor","props","super","this","handleChange","event","onChange","currentTarget","checked","label","console","error","state","ouiaStateId","getDefaultOUIAId","displayName","render","_a","ariaLabel","className","inputClassName","defaultChecked","isLabelWrapped","isLabelBeforeButton","isChecked","isDisabled","isValid","description","body","ouiaId","ouiaSafe","component","__rest","id","inputRendered","Object","assign","css","type","disabled","undefined","getOUIAProps","wrapWithLabel","Label","labelRendered","htmlFor","Component","defaultProps","isRequired","ReviewStepButtons","renderNextButton","disableBack","handlePrev","buttonLabels","cancel","back","context","formOptions","success","submitting","useContext","Fragment","variant","onClick","onCancel","propTypes","handleNext","nextStep","when","stepMapper","submit","next","WizardError","title","text","customFooter","intl","jumpToStep","setWizardError","errorTitle","errorDescription","primary","formatMessage","returnToStepNumber","number","asyncValidator","async","roleName","cache","locale","messages","response","limit","offset","name","nameMatch","catch","responseName","data","length","nameAlreadyTaken","debouncedAsyncValidator","ValidatorReset","useEffect","setTimeout","change","ReviewTemplate","formFields","AddRoleWizardContext","getState","values","then","Bullseye","Spinner","size","roleNameTakenTitle","roleNameTakenText","Title","headingLevel","reviewDetails","TextContent","Text","reviewRoleDetails","CostResourcesTemplate","defineCostResources","AddRoleSuccess","onClose","setHideForm","setWizardSuccess","EmptyState","lg","EmptyStateHeader","titleText","roleCreatedSuccessfully","icon","EmptyStateIcon","color","EmptyStateBody","EmptyStateFooter","Button","exit","EmptyStateActions","createAnotherRole","AppLink","to","pathnames","groups","link","addRoleToGroup","selector","roleReducer","rolesForWizard","isWizardLoading","roles","pagination","meta","stickyTable","columns","rows","Grid","map","col","GridItem","span","key","row","cells","cell","SetName","input","setRoleName","useState","roleNameError","setRoleNameError","roleDescription","setRoleDescription","processRoleName","value","trimmedValue","roleNameValid","roleNameValidated","roleDescriptionValid","roleDescriptionValidated","Stack","hasGutter","StackItem","FormGroup","TextInput","validated","onBlur","_event","FormHelperText","HelperText","HelperTextItem","required","TextArea","resizeOrientation","maxCharactersWarning","SilentErrorBoundary","hasError","getDerivedStateFromError","componentDidCatch","message","includes","silentErrorString","setState","children","createContext","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","dispatch","useDispatch","fetchData","options","filterValue","setFilterValue","useSelector","shallowEqual","transforms","sortable","sortByState","setSortByState","index","direction","orderBy","itemCount","Alert","isInline","granularPermissionsWillBeCopied","role","uuid","batch","display_name","createRows","config","isLoading","sortBy","onSort","e","titlePlural","titleSingular","filterPlaceholder","toLowerCase","isCompact","tableId","review","enableWorkspacesNameChange","useFlag","copyName","copyDescription","permissions","resourceDefinitions","hasCostResources","inventoryGroupPermissions","application","resourceType","operation","permission","split","resourceDefinitionsRows","resources","join","groupPermissionsRows","group","ungroupedSystems","sm","md","h4","p","workspacesDefinition","groupDefinition","setChecked","val","createRoleFromScratch","copyAnExistingRole","AddRoleWizard","filters","navigate","useAppNavigate","chrome","useChrome","wizardContextValue","setWizardContextValue","hideForm","cancelWarningVisible","setCancelWarningVisible","container","useRef","document","createElement","schema","setSchema","featureFlag","fields","isDynamic","inModal","showTitles","crossroads","createRole","style","overflow","copy","create","validate","REQUIRED","MAX_LENGTH","threshold","condition","is","hideField","baseRole","nameAndDescription","addPermissions","StepTemplate","workspacesAccessTitle","inventoryGroupsAccessTitle","applyWorkspacesRolePermission","applyInventoryGroupsRolePermission","every","assignAtLeastOneInventoryGroup","applyCostPermissionText","assignAtLeastOneResource","buttons","schemaBuilder","current","pathname","search","page","per_page","addNotification","creatingRoleCanceled","dismissDelay","Provider","prev","WarningModal","exitItemCreation","item","toLocaleLowerCase","confirmButtonLabel","discard","isOpen","hidden","onConfirm","discardedInputsWarning","Wizard","steps","isFinishedStep","subscription","initialValues","componentMapper","onSubmit","formData","invResources","costResources","selectedPermissionIds","record","roleData","applications","Set","access","reduce","acc","requires","filter","require","attributeFilter","find","r","g","usesMetaInURL","Boolean","asyncFunction","debounceTime","onlyResolvesLast"],"sourceRoot":""}
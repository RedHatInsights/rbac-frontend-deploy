{"version":3,"file":"js/5278.83a6b98a7d39f7d65a11.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/plus-circle-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/smart-components/group/service-account/group-service-accounts.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PlusCircleIcon = createIcon(PlusCircleIconConfig);\n\nexport default PlusCircleIcon;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../Section/section.css';\nvar Section = function (_a) {\n    var _b;\n    var type = _a.type, children = _a.children, className = _a.className, props = __rest(_a, [\"type\", \"children\", \"className\"]);\n    var sectionClasses = classNames(className, (_b = {}, _b[\"ins-l-\".concat(type)] = type !== undefined, _b));\n    return (_jsxs(\"section\", __assign({}, props, { className: sectionClasses }, { children: [' ', children, ' '] })));\n};\nexport default Section;\n//# sourceMappingURL=Section.js.map","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useState, useEffect, useContext, useRef, Suspense, Fragment, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Outlet, createSearchParams, useParams } from 'react-router-dom';\nimport { Alert, Button } from '@patternfly/react-core';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchServiceAccountsForGroup } from '../../../redux/actions/group-actions';\nimport { getDateFormat } from '../../../helpers/shared/helpers';\nimport { DEFAULT_ACCESS_GROUP_ID } from '../../../utilities/constants';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\nimport './group-service-accounts.scss';\n\nconst createRows = (data = [], checkedRows = []) =>\n  data?.reduce(\n    (acc, { uuid, name, clientID, owner, time_created: timeCreated }) => [\n      ...acc,\n      {\n        uuid,\n        title: name,\n        cells: [\n          name,\n          clientID,\n          owner,\n          <Fragment key={`${name}-modified`}>\n            <DateFormat date={timeCreated} type={getDateFormat(timeCreated)} />\n          </Fragment>,\n        ],\n        selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  );\n\nconst reducer = ({ groupReducer: { selectedGroup, systemGroup, groups } }) => ({\n  serviceAccounts: selectedGroup.serviceAccounts?.data || [],\n  pagination: { ...defaultSettings, ...(selectedGroup?.serviceAccounts?.meta || {}) },\n  groupsPagination: groups.pagination || groups.meta,\n  groupsFilters: groups.filters,\n  isLoading: selectedGroup.serviceAccounts.isLoading,\n  isAdminDefault: selectedGroup.admin_default,\n  systemGroupUuid: systemGroup?.uuid,\n  group: selectedGroup,\n});\n\nconst GroupServiceAccounts = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const { groupId } = useParams();\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [ownerValue, setOwnerValue] = useState('');\n  const [timeCreatedValue, setTimeCreatedValue] = useState('');\n  const [selectedAccounts, setSelectedAccounts] = useState([]);\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n  const { serviceAccounts, pagination, isLoading, isAdminDefault, systemGroupUuid } = useSelector(reducer);\n\n  const fetchGroupAccounts = (groupId, options) => dispatch(fetchServiceAccountsForGroup(groupId, options));\n\n  const columns = [\n    { title: intl.formatMessage(messages.description), orderBy: 'description' },\n    { title: intl.formatMessage(messages.clientId), orderBy: 'clientID' },\n    { title: intl.formatMessage(messages.owner), orderBy: 'owner' },\n    { title: intl.formatMessage(messages.timeCreated), orderBy: 'timeCreated' },\n  ];\n\n  const fetchData = useCallback(() => {\n    if (groupId !== DEFAULT_ACCESS_GROUP_ID) {\n      fetchGroupAccounts(groupId, pagination);\n    } else {\n      systemGroupUuid && fetchGroupAccounts(systemGroupUuid, pagination);\n    }\n  }, [systemGroupUuid, groupId]);\n\n  useEffect(() => {\n    fetchData();\n  }, [systemGroupUuid]);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const actionResolver = ({ uuid }) => [\n    ...(hasPermissions.current && !isAdminDefault\n      ? [\n          {\n            title: intl.formatMessage(messages.remove),\n            onClick: () =>\n              navigate({\n                pathname: pathnames['group-service-accounts-remove-group'].link.replace(':groupId', groupId),\n                search: createSearchParams({ name: uuid }).toString(),\n              }),\n          },\n        ]\n      : []),\n  ];\n\n  const toolbarButtons = () => [\n    <AppLink className=\"rbac-m-hide-on-sm\" to={pathnames['group-add-service-account'].link.replace(':groupId', groupId)} key=\"add-to-group\">\n      <Button ouiaId=\"add-service-account-button\" variant=\"primary\" className=\"rbac-m-hide-on-sm\" aria-label=\"Add service account to group\">\n        {intl.formatMessage(messages.addServiceAccount)}\n      </Button>\n    </AppLink>,\n    {\n      label: intl.formatMessage(messages.remove),\n      value: 'remove',\n      props: {\n        isDisabled: selectedAccounts.length === 0,\n        isDanger: true,\n      },\n      onClick: () => {\n        const searchParams = createSearchParams();\n        selectedAccounts.forEach(({ name }) => searchParams.append('id', name));\n        navigate({\n          pathname: pathnames['group-service-accounts-remove-group'].link.replace(':groupId', groupId),\n          search: searchParams.toString(),\n        });\n      },\n    },\n    {\n      label: intl.formatMessage(messages.addServiceAccount),\n      props: {\n        className: 'rbac-m-hide-on-md',\n      },\n      onClick: () => navigate(pathnames['group-add-service-account'].link.replace(':groupId', groupId)),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <Section type=\"content\" id=\"tab-service-accounts\">\n        <Alert\n          className=\"rbac-service-accounts-alert\"\n          variant=\"info\"\n          isInline\n          isPlain\n          title={intl.formatMessage(messages.visitServiceAccountsPage, {\n            link: (\n              <AppLink to=\"/service-accounts\" linkBasename=\"/iam\">\n                {intl.formatMessage(messages.serviceAccountsPage)}\n              </AppLink>\n            ),\n          })}\n        />\n        <TableToolbarView\n          columns={columns}\n          isSelectable\n          rows={createRows(serviceAccounts, selectedAccounts)}\n          data={serviceAccounts}\n          filterValue={descriptionValue}\n          fetchData={(config) => {\n            fetchGroupAccounts(groupId, config);\n          }}\n          emptyFilters={{ owner: '', description: '', timeCreated: '' }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setOwnerValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n            typeof timeCreatedValue !== 'undefined' && setTimeCreatedValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedAccounts}\n          setCheckedItems={setSelectedAccounts}\n          titlePlural={intl.formatMessage(messages.serviceAccounts).toLowerCase()}\n          titleSingular={intl.formatMessage(messages.serviceAccount)}\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          emptyProps={{\n            title: intl.formatMessage(messages.noGroupAccounts),\n            description: [intl.formatMessage(isAdminDefault ? messages.contactServiceTeamForAccounts : messages.addAccountsToThisGroup), ''],\n          }}\n          filters={[\n            { key: 'description', value: descriptionValue },\n            { key: 'owner', value: ownerValue },\n          ]}\n          tableId=\"group-accounts\"\n          ouiaId=\"group-accounts\"\n        />\n      </Section>\n      <Suspense>\n        <Outlet\n          context={{\n            [pathnames['group-service-accounts-remove-group'].path]: {\n              postMethod: (promise) => {\n                navigate(pathnames['group-detail-service-accounts'].link.replace(':groupId', groupId));\n                if (promise) {\n                  promise.then(fetchData);\n                }\n              },\n            },\n            [pathnames['group-add-service-account'].path]: {\n              postMethod: (promise) => {\n                navigate(pathnames['group-detail-service-accounts'].link.replace(':groupId', groupId));\n                if (promise) {\n                  promise.then(fetchData);\n                }\n              },\n            },\n          }}\n        />\n      </Suspense>\n    </React.Fragment>\n  );\n};\n\nexport default GroupServiceAccounts;\n"],"names":["PlusCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","PlusCircleIcon","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","value","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","children","addTooltip","_a","_b","dateObj","dateType","toString","className","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","sectionClasses","undefined","linkBasename","navigate","useNavigate","to","options","mergeToBasename","createRows","data","checkedRows","uuid","clientID","owner","timeCreated","time_created","title","cells","Fragment","key","getDateFormat","selected","Boolean","find","row","reducer","groupReducer","selectedGroup","systemGroup","groups","serviceAccounts","pagination","defaultSettings","meta","groupsPagination","groupsFilters","filters","isLoading","isAdminDefault","admin_default","systemGroupUuid","group","intl","useIntl","dispatch","useDispatch","useAppNavigate","groupId","useParams","useState","descriptionValue","setDescriptionValue","ownerValue","setOwnerValue","timeCreatedValue","setTimeCreatedValue","selectedAccounts","setSelectedAccounts","useContext","PermissionsContext","userAccessAdministrator","orgAdmin","hasPermissions","useRef","useSelector","fetchGroupAccounts","fetchServiceAccountsForGroup","columns","formatMessage","messages","orderBy","fetchData","useCallback","DEFAULT_ACCESS_GROUP_ID","useEffect","current","id","Alert","variant","isInline","isPlain","link","isSelectable","rows","filterValue","config","emptyFilters","setFilterValue","setCheckedItems","titlePlural","toLowerCase","titleSingular","toolbarButtons","pathnames","Button","ouiaId","label","isDisabled","isDanger","onClick","searchParams","createSearchParams","forEach","append","pathname","search","actionResolver","emptyProps","tableId","Suspense","Outlet","context","postMethod","promise","then"],"sourceRoot":""}
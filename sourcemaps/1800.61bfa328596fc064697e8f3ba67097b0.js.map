{"version":3,"file":"js/1800.1661947321641.7ad40f542dccb70ea95f.js","mappings":"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","sources":["webpack:///./src/presentational-components/shared/empty-state.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }) => (\n  <EmptyState variant={EmptyStateVariant.small} {...props}>\n    <EmptyStateIcon icon={icon || SearchIcon} />\n    <Title headingLevel=\"h4\" size=\"lg\">\n      {title}\n    </Title>\n    <EmptyStateBody className=\"pf-u-mb-md\">\n      {description.map((text, key) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    {actions}\n  </EmptyState>\n);\n\nEmptyWithAction.propTypes = {\n  icon: PropTypes.func,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n  className: PropTypes.string,\n};\n\nexport default EmptyWithAction;\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '', sortBy = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = [], setCheckedItems = () => undefined, data = [], tableId) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, { length: data.length }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items }) => ({\n            label: label || firstUpperCase(key),\n            type,\n            filterValues: {\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                );\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  );\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy\n    )}\n    useMobileLayout\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStatePrimary } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  isCollapsible,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n}) => {\n  const intl = useIntl();\n  const [opened, openRow] = useState({});\n  const [sortByState, setSortByState] = useState({ index: undefined, direction: undefined });\n  useEffect(() => {\n    setSortByState({\n      ...sortBy,\n      ...(sortByState.index !== undefined && sortByState),\n    });\n  }, [sortBy]);\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) =>\n    openRow((opened) => ({\n      ...opened,\n      [uuid]: isOpen,\n    }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStatePrimary key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStatePrimary>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse),\n    },\n  });\n\n  const renderTable = () => {\n    const selectColumnOffset = isSelectable && data?.length > 0;\n    const sortByIndex = Math.min((sortByState?.index || selectColumnOffset) - selectColumnOffset, columns?.length - 1);\n    const sortBy =\n      (sortByState.index !== undefined &&\n        sortByIndex >= 0 &&\n        sortByIndex < columns.length &&\n        `${sortByState.direction === 'desc' ? '-' : ''}${columns[sortByIndex].key}`) ||\n      undefined;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={sortBy}\n          pagination={pagination}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n        />\n        {isLoading ? (\n          <ListLoader />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isCollapsible && { onCollapse })}\n            {...(isSelectable &&\n              rows.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows.length > 0 && { actionResolver })}\n            className={rows.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortByState}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction) => {\n              const sortByIndex = Math.min((index || selectColumnOffset) - selectColumnOffset, columns?.length - 1);\n              const orderBy = `${direction === 'desc' ? '-' : ''}${columns[sortByIndex].key}`;\n              setSortByState({ index, direction });\n              filters && filters.length > 0\n                ? fetchData({\n                    ...pagination,\n                    offset: 0,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    orderBy,\n                  })\n                : fetchData({\n                    ...pagination,\n                    offset: 0,\n                    name: filterValue,\n                    orderBy,\n                  });\n            }}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy)} variant=\"bottom\" dropDirection=\"up\" />}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows.length === 0 && filterValue.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n"],"names":["EmptyWithAction","title","icon","description","actions","props","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","SearchIcon","Title","headingLevel","size","EmptyStateBody","className","map","text","key","propTypes","PropTypes","paginationBuilder","pagination","fetchData","filterValue","sortBy","itemCount","count","perPage","limit","page","calculatePage","offset","onSetPage","_event","calculateOffset","name","orderBy","perPageOptions","value","onPerPageSelect","bulkSelectBuilder","isLoading","checkedRows","setCheckedItems","data","tableId","intl","useIntl","length","items","formatMessage","messages","onClick","selectedRows","checked","calculateChecked","onSelect","id","filterConfigBuilder","setFilterValue","titleSingular","filterPlaceholder","filterItems","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","label","selected","placeholder","type","groups","firstUpperCase","filterValues","_e","filterBy","newFilter","Array","isArray","Object","keys","debouncedFetch","reduce","acc","curr","isDisabled","activeFiltersConfigBuilder","options","category","chips","filter","Boolean","onDelete","isAll","deleted","filtersValue","setKeyValue","Toolbar","isSelectable","toolbarButtons","hideFilterChips","PrimaryToolbar","bulkSelect","filterConfig","useMobileLayout","actionsConfig","activeFiltersConfig","isCollapsible","defaultProps","defaultSettings","undefined","TableToolbarView","isCompact","createRows","borders","columns","actionResolver","areActionsDisabled","routes","titlePlural","emptyFilters","emptyProps","rowWrapper","isExpandable","onExpand","hideHeader","noData","noDataDescription","ouiaId","containerRef","useState","opened","openRow","index","direction","sortByState","setSortByState","useEffect","rows","onCollapse","_index","isOpen","uuid","Fragment","every","PlusCircleIcon","item","selectColumnOffset","sortByIndex","Math","min","Table","canSelectAll","toLowerCase","TableVariant","isSelected","_idx","cells","requires","fullWidth","EmptyStatePrimary","Button","colSpan","onSort","e","TableHeader","TableBody","noBottom","TableToolbar","Pagination","dropDirection","renderTable","directions"],"sourceRoot":""}
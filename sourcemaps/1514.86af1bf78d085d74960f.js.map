{"version":3,"sources":["webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js","webpack:///./src/smart-components/role/ResourceDefinitionsFormTemplate.js","webpack:///./src/smart-components/role/edit-resource-definitions-modal.js","webpack:///./src/smart-components/role/role-resource-definitions.js","webpack:///./src/smart-components/role/roles.js"],"names":["createRows","data","reduce","acc","uuid","display_name","name","description","system","accessCount","groupsCount","groups_in_count","modified","cells","Fragment","key","Link","to","DateFormat","date","type","value","ResourceDefinitionsFormTemplate","ModalProps","props","values","useFormApi","getState","ModalFormTemplate","onClose","alert","undefined","className","Alert","variant","isInline","title","propTypes","PropTypes","initialState","changedResources","cancelWarningVisible","resourcesPath","loadingStateVisible","reducer","state","action","payload","Error","createEditResourceDefinitionsSchema","resources","options","fields","component","componentTypes","leftTitle","rightTitle","filterOptionsTitle","filterValueTitle","validate","validatorMapper","length","EditResourceDefinitionsModal","cancelRoute","routeMatch","useRouteMatch","paths","params","permissionId","roleId","useHistory","replace","push","dispatch","useDispatch","useReducer","dispatchLocally","useSelector","role","roleReducer","selectedRole","definedResources","access","flatten","filter","a","permission","map","resourceDefinitions","resource","attributeFilter","isRecordLoading","shallowEqual","costReducer","resourceTypes","isLoading","loadingResources","isLoadingResources","selector","useEffect","getResourceDefinitions","path","find","r","split","getResource","onCancel","handleCancel","Object","entries","label","createOptions","customTitle","customDescription","isOpen","onModalCancel","onConfirmCancel","Modal","Spinner","schema","componentMapper","initialValues","onSubmit","newAccess","operation","updateRole","item","then","fetchRole","FormTemplate","useState","pagination","defaultSettings","config","setConfig","useParams","count","filteredRows","definition","includes","breadcrumbs","isActive","Level","LevelItem","PageHeaderTitle","TextContent","Text","TextVariants","columns","slice","offset","limit","filterValue","fetchData","isCompact","routes","Route","exact","setFilterValue","toolbarButtons","Button","aria-label","titlePlural","titleSingular","hideHeader","tableId","AddRoleWizard","lazy","transforms","cellWidth","sortable","nowrap","roles","meta","userIdentity","identity","fetchRolesWithPolicies","insights","chrome","appNavClick","id","secondaryNav","Suspense","fallback","afterSubmit","actionResolver","onClick","_event","_rowId","user","is_org_admin","ouiaId","Switch","pageAction","onDelete","render","Stack","StackItem","Section","dedicatedAction","sortBy","index","direction","mappedProps","filterPlaceholder"],"mappings":"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","file":"js/1514.759b1423806c076ba9d6.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\n\nexport const createRows = (data) =>\n  data.reduce(\n    (acc, { uuid, display_name, name, description, system, accessCount, groups_in_count: groupsCount, modified }) => [\n      ...acc,\n      {\n        uuid,\n        system,\n        cells: [\n          <Fragment key={`${uuid}-name`}>\n            <Link to={`/roles/detail/${uuid}`}>{display_name || name}</Link>\n          </Fragment>,\n          description,\n          <Fragment key={`${uuid}-accessCount`}>\n            <Link to={`/roles/detail/${uuid}`}>{accessCount}</Link>\n          </Fragment>,\n          groupsCount,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type=\"relative\" />\n          </Fragment>,\n        ],\n      },\n    ],\n    []\n  );\n","export const createRows = (data) =>\n  data.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n","import React from 'react';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { Alert } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport PropTypes from 'prop-types';\nimport './role-permissions.scss';\n\nconst ResourceDefinitionsFormTemplate = ({ ModalProps, ...props }) => {\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  return (\n    <ModalFormTemplate\n      {...props}\n      ModalProps={{\n        ...ModalProps,\n        onClose: () => ModalProps.onClose(values),\n      }}\n      alert={\n        values['dual-list-select']\n          ? undefined\n          : () => (\n              <div className=\"ins-m-resource-definitions\">\n                <Alert className=\"pf-c-modal__alert\" variant=\"danger\" isInline title=\"At least one resource must be defined for this permission\" />\n              </div>\n            )\n      }\n    />\n  );\n};\n\nResourceDefinitionsFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ResourceDefinitionsFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { updateRole, fetchRole } from '../../redux/actions/role-actions';\nimport { routes as paths } from '../../../package.json';\nimport { getResource, getResourceDefinitions } from '../../redux/actions/cost-management-actions';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\nimport { WarningModal } from '../common/warningModal';\nimport { Spinner, Modal } from '@patternfly/react-core';\nimport ResourceDefinitionsFormTemplate from './ResourceDefinitionsFormTemplate';\nimport flatten from 'lodash/flattenDeep';\nimport './role-permissions.scss';\n\nconst createOptions = (resources) =>\n  Object.entries(resources).reduce(\n    (acc, [key, value]) => [\n      ...acc,\n      ...value.map((r) => ({\n        value: r.value,\n        path: key,\n        label: r.value,\n      })),\n    ],\n    []\n  );\n\nconst initialState = {\n  changedResources: undefined,\n  cancelWarningVisible: false,\n  resourcesPath: undefined,\n  loadingStateVisible: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst createEditResourceDefinitionsSchema = (resources, resourcesPath, options) => ({\n  fields: [\n    {\n      component: componentTypes.DUAL_LIST_SELECT,\n      name: 'dual-list-select',\n      leftTitle: 'Resources available for the permission',\n      rightTitle: 'Resources defined for the permission',\n      filterOptionsTitle: 'Filter by resource...',\n      filterValueTitle: 'Filter by resource...',\n      options: [...(resourcesPath && resources ? options : [])],\n      validate: [{ type: 'validate-resources' }],\n    },\n  ],\n});\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }, resourcesPath) => ({\n  resourceTypes: resourceTypes.data,\n  resources: resources[resourcesPath] ? { resourcesPath: resources[resourcesPath] } : resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst validatorMapper = {\n  'validate-resources': () => (value) => (value && value.length > 0 ? undefined : 'At least one resource must be defined for this permission'),\n};\n\nconst EditResourceDefinitionsModal = ({ cancelRoute }) => {\n  const routeMatch = useRouteMatch(paths['role-detail-permission-edit']);\n  const {\n    params: { permissionId, roleId },\n  } = useRouteMatch(routeMatch);\n  const { replace, push } = useHistory();\n\n  const dispatch = useDispatch();\n  const fetchResourceDefinitions = () => dispatch(getResourceDefinitions());\n\n  const [state, dispatchLocally] = useReducer(reducer, initialState);\n\n  const { definedResources, role } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      definedResources: state.roleReducer.selectedRole?.access\n        ? flatten(\n            state.roleReducer.selectedRole.access\n              .filter((a) => a.permission === permissionId)\n              .map((access) => access.resourceDefinitions.map((resource) => resource.attributeFilter.value))\n          )\n        : [],\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector((props) => selector(props, state.resourcesPath), shallowEqual);\n\n  useEffect(() => {\n    fetchResourceDefinitions();\n  }, [permissionId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let path = resourceTypes.find((r) => r.value === permissionId.split(':')?.[1])?.path;\n      if (path) {\n        dispatchLocally({ type: 'update', payload: { resourcesPath: path.split('/')[5] } });\n        dispatch(getResource(path));\n      }\n    }\n  }, [resourceTypes]);\n\n  const onCancel = () => replace(cancelRoute);\n\n  const handleCancel = (data) => {\n    if (data['dual-list-select'] === definedResources) {\n      onCancel();\n    } else {\n      dispatchLocally({\n        type: 'update',\n        payload: {\n          changedResources: data['dual-list-select'],\n          cancelWarningVisible: true,\n        },\n      });\n    }\n  };\n\n  const handleSubmit = (data) => {\n    dispatchLocally({ type: 'update', payload: { changedResources: data['dual-list-select'] } });\n    const newAccess = {\n      permission: permissionId,\n      resourceDefinitions: [\n        {\n          attributeFilter: {\n            key: `cost-management.${permissionId.split(':')?.[1]}`,\n            operation: data['dual-list-select'].length === 1 ? 'equal' : 'in',\n            value: data['dual-list-select'].length === 1 ? data['dual-list-select'][0] : data['dual-list-select'],\n          },\n        },\n      ],\n    };\n    dispatch(updateRole(roleId, { ...role, access: [...role.access.filter((item) => item.permission !== permissionId), newAccess] }), true).then(\n      () => {\n        dispatch(fetchRole(roleId));\n        push(cancelRoute);\n      }\n    );\n  };\n\n  const options = createOptions(resources);\n\n  return (\n    <React.Fragment>\n      <WarningModal\n        customTitle=\"Exit edit resource definitions?\"\n        customDescription=\"All changes will be lost.\"\n        isOpen={state.cancelWarningVisible}\n        onModalCancel={() => dispatchLocally({ type: 'update', payload: { cancelWarningVisible: false } })}\n        onConfirmCancel={onCancel}\n      ></WarningModal>\n      {(isLoading || isLoadingResources) && state.loadingStateVisible ? (\n        <Modal\n          className=\"ins-m-resource-definitions\"\n          isOpen={true}\n          title=\"Edit resource definitions\"\n          onClose={() => {\n            dispatchLocally({ type: 'update', payload: { loadingStateVisible: false } });\n            onCancel();\n          }}\n        >\n          <Spinner />\n        </Modal>\n      ) : (\n        <FormRenderer\n          schema={createEditResourceDefinitionsSchema(resources, state.resourcesPath, options)}\n          componentMapper={componentMapper}\n          initialValues={{ 'dual-list-select': state.changedResources || definedResources || [] }}\n          onSubmit={handleSubmit}\n          onCancel={(data) => handleCancel(data)}\n          validatorMapper={validatorMapper}\n          FormTemplate={(props) => (\n            <ResourceDefinitionsFormTemplate\n              {...props}\n              ModalProps={{\n                onClose: handleCancel,\n                isOpen: !state.cancelWarningVisible,\n                variant: 'large',\n                title: 'Edit resource definitions',\n                description: 'Give or remove permissions to specific resources using the arrows below.',\n              }}\n            />\n          )}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nEditResourceDefinitionsModal.propTypes = {\n  routeMatch: PropTypes.string.isRequired,\n  cancelRoute: PropTypes.string.isRequired,\n  resources: PropTypes.array,\n  resourcesPath: PropTypes.string,\n};\n\nexport default EditResourceDefinitionsModal;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants, Level, LevelItem, Button } from '@patternfly/react-core';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-resource-definitions-table-helpers';\nimport { useParams, Link, Route } from 'react-router-dom';\nimport { TopToolbar } from '../../presentational-components/shared/top-toolbar';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { ToolbarTitlePlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { routes as paths } from '../../../package.json';\nimport EditResourceDefinitionsModal from './edit-resource-definitions-modal';\nimport flatten from 'lodash/flatten';\nimport './role-permissions.scss';\n\nconst ResourceDefinitions = () => {\n  const [config, setConfig] = useState({\n    pagination: {\n      ...defaultSettings,\n      filter: '',\n    },\n  });\n\n  const { pagination, filter } = config;\n\n  const dispatch = useDispatch();\n\n  const { roleId, permissionId } = useParams();\n\n  const { role, permission, isRecordLoading } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      permission: state.roleReducer.selectedRole.access\n        ? {\n            ...state.roleReducer.selectedRole?.access.find((a) => a.permission === permissionId),\n          }\n        : {},\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const fetchData = () => {\n    dispatch(fetchRole(roleId));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [roleId]);\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0,\n      },\n    });\n  }, [role]);\n\n  const filteredRows = permission.resourceDefinitions\n    ? flatten(permission.resourceDefinitions.map((definition) => definition.attributeFilter.value)).filter((value) =>\n        filter ? value.includes(filter) : true\n      )\n    : [];\n\n  const routes = () => (\n    <Fragment>\n      <Route exact path={paths['role-detail-permission-edit']}>\n        <EditResourceDefinitionsModal\n          cancelRoute={paths['role-detail-permission'].replace(':roleId', roleId).replace(':permissionId', permissionId)}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const toolbarButtons = () =>\n    !role.system\n      ? [\n          <Fragment key=\"edit-resource-definitions\">\n            <Link to={`/roles/detail/${roleId}/permission/${permissionId}/edit`}>\n              <Button variant=\"primary\" aria-label=\"Edit\">\n                Edit\n              </Button>\n            </Link>\n          </Fragment>,\n        ]\n      : [];\n\n  return (\n    <Fragment>\n      <TopToolbar\n        breadcrumbs={[\n          { title: 'Roles', to: '/roles' },\n          { title: isRecordLoading ? undefined : role && (role.display_name || role.name), to: `/roles/detail/${roleId}` },\n          { title: permissionId, isActive: true },\n        ]}\n      >\n        <Level>\n          <LevelItem>\n            <PageHeaderTitle title={permissionId || <ToolbarTitlePlaceholder />} className=\"ins-rbac-page-header__title\" />\n          </LevelItem>\n        </Level>\n      </TopToolbar>\n      <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n        <TextContent>\n          <Text component={TextVariants.h1}>Defined resources</Text>\n        </TextContent>\n        <TableToolbarView\n          columns={[{}]}\n          createRows={createRows}\n          data={filteredRows.slice(pagination.offset, pagination.offset + pagination.limit)}\n          filterValue={filter}\n          fetchData={({ limit, offset, name }) =>\n            setConfig({\n              ...config,\n              filter: name,\n              pagination: {\n                ...config.pagination,\n                limit,\n                offset,\n              },\n            })\n          }\n          isCompact\n          routes={routes}\n          setFilterValue={({ name }) =>\n            setConfig({\n              ...config,\n              filter: name,\n            })\n          }\n          toolbarButtons={toolbarButtons}\n          isLoading={isRecordLoading}\n          pagination={{\n            ...pagination,\n            count: filteredRows.length,\n          }}\n          titlePlural=\"resources\"\n          titleSingular=\"resource\"\n          hideHeader\n          tableId=\"role-resource-definitions\"\n        />\n      </section>\n    </Fragment>\n  );\n};\n\nexport default ResourceDefinitions;\n","import React, { Fragment, useState, useEffect, lazy } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { cellWidth, nowrap, sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport { createRows } from './role-table-helpers';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\nimport { routes as paths } from '../../../package.json';\nimport EditRole from './edit-role-modal';\nimport PageActionRoute from '../common/page-action-route';\nimport ResourceDefinitions from './role-resource-definitions';\nimport { Suspense } from 'react';\n\nconst AddRoleWizard = lazy(() => import(/* webpackChunkname: \"AddRoleWizard\" */ './add-role-new/add-role-wizard'));\n\nconst columns = [\n  { title: 'Name', key: 'display_name', transforms: [cellWidth(20), sortable] },\n  { title: 'Description' },\n  { title: 'Permissions', transforms: [nowrap] },\n  { title: 'Groups', transforms: [nowrap] },\n  { title: 'Last modified', key: 'modified', transforms: [nowrap, sortable] },\n];\n\nconst selector = ({ roleReducer: { roles, isLoading } }) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  isLoading,\n});\n\nconst Roles = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const { roles, isLoading, pagination, userIdentity } = useSelector(selector, shallowEqual);\n  const fetchData = (options) => dispatch(fetchRolesWithPolicies(options));\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'roles', secondaryNav: true });\n    fetchData({ ...pagination, name: filterValue });\n  }, []);\n\n  const routes = () => (\n    <Suspense fallback={<Fragment />}>\n      <Route exact path={paths['add-role']}>\n        <AddRoleWizard pagination={pagination} />\n      </Route>\n      <Route exact path={paths['remove-role']}>\n        {!isLoading && (\n          <RemoveRole\n            routeMatch={paths['remove-role']}\n            cancelRoute={paths.roles}\n            afterSubmit={() => fetchData({ ...pagination, name: filterValue })}\n          />\n        )}\n      </Route>\n      <Route exact path={paths['edit-role']}>\n        {!isLoading && (\n          <EditRole afterSubmit={() => fetchData({ ...pagination, name: filterValue })} routeMatch={paths['edit-role']} cancelRoute={paths.roles} />\n        )}\n      </Route>\n    </Suspense>\n  );\n\n  const actionResolver = ({ system }) => {\n    return system\n      ? []\n      : [\n          {\n            title: 'Edit',\n            onClick: (_event, _rowId, role) => push(`/roles/edit/${role.uuid}`),\n          },\n          {\n            title: 'Delete',\n            onClick: (_event, _rowId, role) => push(`/roles/remove/${role.uuid}`),\n          },\n        ];\n  };\n\n  const toolbarButtons = () =>\n    userIdentity?.user?.is_org_admin\n      ? [\n          <Link to={paths['add-role']} key=\"add-role\" className=\"pf-m-visible-on-md\">\n            <Button ouiaId=\"create-role-button\" variant=\"primary\" aria-label=\"Create role\">\n              Create role\n            </Button>\n          </Link>,\n        ]\n      : [];\n\n  const renderRolesList = () => (\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"Roles\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={'tab-roles'}>\n          <TableToolbarView\n            dedicatedAction={\n              userIdentity?.user?.is_org_admin ? (\n                <Link to={paths['add-role']}>\n                  <Button ouiaId=\"create-role-button\" variant=\"primary\" aria-label=\"Create role\" className=\"pf-m-visible-on-md\">\n                    Create role\n                  </Button>\n                </Link>\n              ) : undefined\n            }\n            actionResolver={actionResolver}\n            sortBy={{ index: 0, direction: 'asc' }}\n            columns={columns}\n            createRows={createRows}\n            data={roles}\n            filterValue={filterValue}\n            fetchData={(config) => fetchData(mappedProps(config))}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            isLoading={isLoading}\n            pagination={pagination}\n            routes={routes}\n            ouiaId=\"roles-table\"\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons={toolbarButtons}\n            filterPlaceholder=\"name\"\n            tableId=\"roles\"\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n\n  return (\n    <Switch>\n      <PageActionRoute pageAction=\"role-detail-permission\" path={paths['role-detail-permission']}>\n        <ResourceDefinitions />\n      </PageActionRoute>\n      <PageActionRoute pageAction=\"role-detail\" path={paths['role-detail']}>\n        <Role onDelete={() => setFilterValue('')} />\n      </PageActionRoute>\n      <PageActionRoute pageAction=\"roles-list\" path={paths.roles} render={() => renderRolesList()} />\n    </Switch>\n  );\n};\n\nexport default Roles;\n"],"sourceRoot":""}
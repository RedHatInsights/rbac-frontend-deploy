{"version":3,"file":"js/6927.4ee3be14dfa66a7da9cc.js","mappings":"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","sources":["webpack:///./src/Messages.js","webpack:///./src/helpers/service-account/service-account-helper.ts","webpack:///./src/helpers/shared/pagination.ts","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/hooks/useUserData.js","webpack:///./src/presentational-components/shared/AppLink.tsx","webpack:///./src/presentational-components/shared/ErrorReducerCatcher.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/redux/action-types.js","webpack:///./src/redux/reducers/group-reducer.js","webpack:///./src/redux/reducers/role-reducer.js","webpack:///./src/redux/reducers/user-reducer.ts","webpack:///./src/utilities/constants.js","webpack:///./src/utilities/pathnames.js","webpack:///./src/utilities/permissions-context.js","webpack:///./src/redux/reducers/policy-reducer.js","webpack:///./src/redux/reducers/access-reducer.js","webpack:///./src/redux/reducers/permission-reducer.js","webpack:///./src/redux/reducers/cost-reducer.js","webpack:///./src/redux/reducers/service-account-reducer.ts","webpack:///./src/redux/reducers/errorReducer.js","webpack:///./src/redux/reducers/inventory-reducer.js","webpack:///./src/utilities/store.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  notApplicable: {\n    id: 'notApplicable',\n    description: 'Not applicable text for resource definitions',\n    defaultMessage: 'N/A',\n  },\n  orgAdministrator: {\n    id: 'orgAdministrator',\n    description: 'Org. Administrator name',\n    defaultMessage: 'Org. Administrator',\n  },\n  orgAdmin: {\n    id: 'orgAdmin',\n    description: 'Org. Admin name',\n    defaultMessage: 'Org. Admin',\n  },\n  userAccessAdmin: {\n    id: 'userAccessAdmin',\n    description: 'User Access Admin name',\n    defaultMessage: 'User Access Admin',\n  },\n  orgAdminHint: {\n    id: 'orgAdminHint',\n    description: 'User Access Admin hint about permissions',\n    defaultMessage: \"You can manage other users' permissions with 'User access'\",\n  },\n  userAccessAdminHint: {\n    id: 'userAccessAdminHint',\n    description: 'Org. Admin hint about permissions',\n    defaultMessage: \"You can manage other users' permissions with 'User access'\",\n  },\n  pageNotExists: {\n    id: 'pageNotExists',\n    description: 'Placeholder text for non existing page',\n    defaultMessage: 'Page you are looking for does not exist.',\n  },\n  usersDescription: {\n    id: 'usersDescription',\n    description: 'Description text for user list',\n    defaultMessage: 'These are all of the users in your Red Hat organization.',\n  },\n  rbacUsers: {\n    id: 'rbacUsers',\n    description: 'RBAC Users error cather title',\n    defaultMessage: 'RBAC Users',\n  },\n  rbacGroups: {\n    id: 'rbacGroups',\n    description: 'RBAC Groups error cather title',\n    defaultMessage: 'RBAC Groups',\n  },\n  pleaseChoose: {\n    id: 'pleaseChoose',\n    description: 'Select placehoder',\n    defaultMessage: 'Please choose',\n  },\n  yes: {\n    id: 'yes',\n    description: 'Yes label',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'no',\n    description: 'No label',\n    defaultMessage: 'No',\n  },\n  active: {\n    id: 'active',\n    description: 'Active label',\n    defaultMessage: 'Active',\n  },\n  inactive: {\n    id: 'inactive',\n    description: 'Inactive label',\n    defaultMessage: 'Inactive',\n  },\n  none: {\n    id: 'none',\n    description: 'None select option text',\n    defaultMessage: 'None',\n  },\n  cancel: {\n    id: 'cancel',\n    description: 'Cancel button text',\n    defaultMessage: 'Cancel',\n  },\n  close: {\n    id: 'close',\n    description: 'Close button text',\n    defaultMessage: 'Close',\n  },\n  exit: {\n    id: 'exit',\n    description: 'Exit button text',\n    defaultMessage: 'Exit',\n  },\n  stay: {\n    id: 'stay',\n    description: 'Stay button text',\n    defaultMessage: 'Stay',\n  },\n  save: {\n    id: 'save',\n    description: 'Save button text',\n    defaultMessage: 'Save',\n  },\n  edit: {\n    id: 'edit',\n    description: 'Edit button text',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'delete',\n    description: 'Delete button text',\n    defaultMessage: 'Delete',\n  },\n  review: {\n    id: 'review',\n    description: 'Review label',\n    defaultMessage: 'Review',\n  },\n  confirm: {\n    id: 'confirm',\n    description: 'Confirm button text',\n    defaultMessage: 'Confirm',\n  },\n  confirmCheckMessage: {\n    id: 'confirmCheckMessage',\n    description: 'Confirm modal check message',\n    defaultMessage: 'I understand, and I want to continue.',\n  },\n  noMatchingItemsFound: {\n    id: 'noMatchingItemsFound',\n    description: 'No matching items found message',\n    defaultMessage: 'No matching {items} found',\n  },\n  filterMatchesNoItems: {\n    id: 'filterMatchesNoItems',\n    description: 'No matching items for filter criteria message',\n    defaultMessage: 'This filter criteria matches no {items}.',\n  },\n  tryChangingFilters: {\n    id: 'tryChangingFilters',\n    description: 'Message advising change of the filter settings',\n    defaultMessage: 'Try changing your filter settings.',\n  },\n  checkFilterBeginning: {\n    id: 'checkFilterBeginning',\n    description: 'Message advising checking the filter value',\n    defaultMessage:\n      'Make sure the beginning of your search input corresponds to the beginning of the value you are looking for, or try changing your filter settings.',\n  },\n  clearAllFilters: {\n    id: 'clearAllFilters',\n    description: 'Clear all filters message',\n    defaultMessage: 'Clear all filters',\n  },\n  filterMatchesNoFilters: {\n    id: 'filterMatchesNoFilters',\n    description: 'No matching items for filter criteria message',\n    defaultMessage: 'This filter criteria matches no {items}.',\n  },\n  configureItems: {\n    id: 'configureItems',\n    description: 'Configure items message',\n    defaultMessage: 'Configure {items}',\n  },\n  toConfigureUserAccess: {\n    id: 'toConfigureUserAccess',\n    description: 'Empty state description 1st part',\n    defaultMessage: 'To configure user access to applications',\n  },\n  createAtLeastOneItem: {\n    id: 'createAtLeastOneItem',\n    description: 'Empty state description 2nd part',\n    defaultMessage: 'create at least one {item}',\n  },\n  selectNone: {\n    id: 'selectNone',\n    description: 'Select none button label',\n    defaultMessage: 'Select none (0)',\n  },\n  selectPage: {\n    id: 'selectPage',\n    description: 'Select page button label',\n    defaultMessage: 'Select page ({length})',\n  },\n  selectAll: {\n    id: 'selectAll',\n    description: 'Select all button label',\n    defaultMessage: 'Select all ({length})',\n  },\n  ungroupedSystems: {\n    id: 'ungroupedSystems',\n    description: 'Ungrouped systems button label',\n    defaultMessage: 'Ungrouped systems',\n  },\n  filterByKey: {\n    id: 'filterByKey',\n    description: 'Filter by data key label',\n    defaultMessage: 'Filter by {key}',\n  },\n  editGroupSuccessTitle: {\n    id: 'editGroupSuccessTitle',\n    description: 'Edit group success notification title',\n    defaultMessage: 'Success updating group',\n  },\n  editGroupSuccessDescription: {\n    id: 'editGroupSuccessDescription',\n    description: 'Edit group success notification description',\n    defaultMessage: 'The group was updated successfully.',\n  },\n  editGroupErrorTitle: {\n    id: 'editGroupErrorTitle',\n    description: 'Edit group error notification title',\n    defaultMessage: 'Failed updating group',\n  },\n  editGroupErrorDescription: {\n    id: 'editGroupErrorDescription',\n    description: 'Edit group error notification description',\n    defaultMessage: 'The group was not updated successfuly.',\n  },\n  removeGroupSuccess: {\n    id: 'removeGroupSuccess',\n    description: 'Remove group success notification title',\n    defaultMessage: 'Group deleted successfully',\n  },\n  removeGroupsSuccess: {\n    id: 'removeGroupsSuccess',\n    description: 'Remove groups success notification title',\n    defaultMessage: 'Groups deleted successfully',\n  },\n  removeGroupError: {\n    id: 'removeGroupError',\n    description: 'Remove group error notification title',\n    defaultMessage: 'There was an error deleting the group. Please try again.',\n  },\n  removeGroupsError: {\n    id: 'removeGroupsError',\n    description: 'Remove groups error notification title',\n    defaultMessage: 'There was an error deleting the groups. Please try again.',\n  },\n  addGroupMembersSuccessTitle: {\n    id: 'addGroupMembersSuccessTitle',\n    description: 'Add group members success notification title',\n    defaultMessage: 'Success adding members to group',\n  },\n  addGroupMemberSuccessTitle: {\n    id: 'addGroupMemberSuccessTitle',\n    description: 'Add group member success notification title',\n    defaultMessage: 'Success adding member to group',\n  },\n  addGroupMembersSuccessDescription: {\n    id: 'addGroupMembersSuccessDescription',\n    description: 'Add group members success notification description',\n    defaultMessage: 'The members were successfully added to the group.',\n  },\n  addGroupMemberSuccessDescription: {\n    id: 'addGroupMemberSuccessDescription',\n    description: 'Add group member success notification description',\n    defaultMessage: 'The member was successfully added to the group.',\n  },\n  addGroupMembersErrorTitle: {\n    id: 'addGroupMembersErrorTitle',\n    description: 'Add group members error notification title',\n    defaultMessage: 'Failed adding members to group',\n  },\n  addGroupMemberErrorTitle: {\n    id: 'addGroupMemberErrorTitle',\n    description: 'Add group member error notification title',\n    defaultMessage: 'Failed adding member to group',\n  },\n  addGroupMembersErrorDescription: {\n    id: 'addGroupMembersErrorDescription',\n    description: 'Add group members error notification description',\n    defaultMessage: 'The members were not added successfully.',\n  },\n  addGroupMemberErrorDescription: {\n    id: 'addGroupMemberErrorDescription',\n    description: 'Add group member error notification description',\n    defaultMessage: 'The member was not added successfully.',\n  },\n  removeGroupMembersSuccessTitle: {\n    id: 'removeGroupMembersSuccessTitle',\n    description: 'Remove group members success notification title',\n    defaultMessage: 'Success removing members from group',\n  },\n  removeGroupMembersSuccessDescription: {\n    id: 'removeGroupMembersSuccessDescription',\n    description: 'Remove group members success notification description',\n    defaultMessage: 'The members were successfully removed from the group.',\n  },\n  removeGroupMembersErrorTitle: {\n    id: 'removeGroupMembersErrorTitle',\n    description: 'Remove group members error notification title',\n    defaultMessage: 'Failed removing members from the group',\n  },\n  removeGroupMembersErrorDescription: {\n    id: 'removeGroupMembersErrorDescription',\n    description: 'Remove group members error notification description',\n    defaultMessage: 'The members were not removed successfully.',\n  },\n  addGroupRolesSuccessTitle: {\n    id: 'addGrouprolesSuccessTitle',\n    description: 'Add group roles success notification title',\n    defaultMessage: 'Success adding roles to group',\n  },\n  addGroupRolesSuccessDescription: {\n    id: 'addGroupRolesSuccessDescription',\n    description: 'Add group roles success notification description',\n    defaultMessage: 'The roles were successfully added to the group.',\n  },\n  addGroupRolesErrorTitle: {\n    id: 'addGroupRolesErrorTitle',\n    description: 'Add group roles error notification title',\n    defaultMessage: 'Failed adding roles to group',\n  },\n  addGroupRolesErrorDescription: {\n    id: 'addGroupRolesErrorDescription',\n    description: 'Add group roles error notification description',\n    defaultMessage: 'The roles were not added successfully.',\n  },\n  addGroupServiceAccountsSuccessTitle: {\n    id: 'addGroupServiceAccountsSuccessTitle',\n    description: 'Add group service accounts success notification title',\n    defaultMessage: 'Success adding service accounts to group',\n  },\n  addGroupServiceAccountsSuccessDescription: {\n    id: 'addGroupServiceAccountsSuccessDescription',\n    description: 'Add group service accounts success notification description',\n    defaultMessage: 'The service accounts were successfully added to the group.',\n  },\n  addGroupServiceAccountsErrorTitle: {\n    id: 'addGroupServiceAccountsErrorTitle',\n    description: 'Add group service accounts error notification title',\n    defaultMessage: 'Failed adding service accounts to group',\n  },\n  addGroupServiceAccountsErrorDescription: {\n    id: 'addGroupServiceAccountsErrorDescription',\n    description: 'Add group service accounts error notification description',\n    defaultMessage: 'The service accounts were not added successfully.',\n  },\n  removeGroupServiceAccountsSuccessTitle: {\n    id: 'removeGroupServiceAccountsSuccessTitle',\n    description: 'Removal of group service accounts success notification title',\n    defaultMessage: 'Successfull remove of service accounts from group',\n  },\n  removeGroupServiceAccountsSuccessDescription: {\n    id: 'removeGroupServiceAccountsSuccessDescription',\n    description: 'Removal of  group service accounts success notification description',\n    defaultMessage: 'The service accounts were successfully removed from the group.',\n  },\n  removeGroupServiceAccountsErrorTitle: {\n    id: 'removeGroupServiceAccountsErrorTitle',\n    description: 'Removal of  group service accounts error notification title',\n    defaultMessage: 'Failed removing service accounts from group',\n  },\n  removeGroupServiceAccountsErrorDescription: {\n    id: 'removeGroupServiceAccountsErrorDescription',\n    description: 'Removal of  group service accounts error notification description',\n    defaultMessage: 'The service accounts were NOT removed from the group because of error.',\n  },\n  removeGroupRolesSuccessTitle: {\n    id: 'removeGroupRolesSuccessTitle',\n    description: 'Remove group roles success notification title',\n    defaultMessage: 'Success removing roles from group',\n  },\n  removeGroupRolesSuccessDescription: {\n    id: 'removeGroupRolesSuccessDescription',\n    description: 'Remove group roles success notification description',\n    defaultMessage: 'The roles were successfully removed from the group.',\n  },\n  removeGroupRolesErrorTitle: {\n    id: 'removeGroupRolesErrorTitle',\n    description: 'Remove group roles error notification title',\n    defaultMessage: 'Failed removing roles from the group',\n  },\n  removeGroupRolesErrorDescription: {\n    id: 'removeGroupRolesErrorDescription',\n    description: 'Remove group roles error notification description',\n    defaultMessage: 'The roles were not removed successfully.',\n  },\n  addPolicySuccessTitle: {\n    id: 'addPolicySuccessTitle',\n    description: 'Add policy success notification title',\n    defaultMessage: 'Success adding policy',\n  },\n  addPolicySuccessDescription: {\n    id: 'addPolicySuccessDescription',\n    description: 'Add policy success notification description',\n    defaultMessage: 'The policy was added successfully.',\n  },\n  addPolicyErrorTitle: {\n    id: 'addPolicyErrorTitle',\n    description: 'Add policy error notification title',\n    defaultMessage: 'Failed adding policy',\n  },\n  addPolicyErrorDescription: {\n    id: 'addPolicyErrorDescription',\n    description: 'Add policy error notification description',\n    defaultMessage: 'The policy was not added successfully.',\n  },\n  removePolicySuccessTitle: {\n    id: 'removePolicySuccessTitle',\n    description: 'Remove policy success notification title',\n    defaultMessage: 'Success removing policy',\n  },\n  removePolicySuccessDescription: {\n    id: 'removePolicySuccessDescription',\n    description: 'Remove policy success notification description',\n    defaultMessage: 'The policy was removed successfully.',\n  },\n  editPolicySuccessTitle: {\n    id: 'editPolicySuccessTitle',\n    description: 'Edit policy success notification title',\n    defaultMessage: 'Success updating policy',\n  },\n  editPolicySuccessDescription: {\n    id: 'editPolicySuccessDescription',\n    description: 'Edit policy success notification description',\n    defaultMessage: 'The policy was updated successfully.',\n  },\n  editPolicyErrorTitle: {\n    id: 'editPolicyErrorTitle',\n    description: 'Edit policy error notification title',\n    defaultMessage: 'Failed updating policy',\n  },\n  editPolicyErrorDescription: {\n    id: 'editPolicyErrorDescription',\n    description: 'Edit policy error notification description',\n    defaultMessage: 'The policy was not updated successfully.',\n  },\n  createRoleErrorTitle: {\n    id: 'createRoleErrorTitle',\n    description: 'Create role error notification title',\n    defaultMessage: 'Failed adding role',\n  },\n  createRoleErrorDescription: {\n    id: 'createRoleErrorDescription',\n    description: 'Create role error notification description',\n    defaultMessage: 'The role was not added successfuly.',\n  },\n  removeRoleSuccessTitle: {\n    id: 'removeRoleSuccessTitle',\n    description: 'Remove role success notification title',\n    defaultMessage: 'Success removing role',\n  },\n  removeRoleSuccessDescription: {\n    id: 'removeRoleSuccessDescription',\n    description: 'Remove role success notification description',\n    defaultMessage: 'The role was removed successfully.',\n  },\n  removeRoleErrorTitle: {\n    id: 'removeRoleErrorTitle',\n    description: 'Remove role error notification title',\n    defaultMessage: 'Failed removing role',\n  },\n  removeRoleErrorDescription: {\n    id: 'removeRoleErrorDescription',\n    description: 'Remove role error notification description',\n    defaultMessage: 'The role was not removed successfully.',\n  },\n  editRoleSuccessTitle: {\n    id: 'editRoleSuccessTitle',\n    description: 'Edit role success notification title',\n    defaultMessage: 'Success updating role',\n  },\n  editRoleSuccessDescription: {\n    id: 'editRoleSuccessDescription',\n    description: 'Edit role success notification description',\n    defaultMessage: 'The role was updated successfully.',\n  },\n  editRoleErrorTitle: {\n    id: 'editRoleErrorTitle',\n    description: 'Edit role error notification title',\n    defaultMessage: 'Failed updating role',\n  },\n  editRoleErrorDescription: {\n    id: 'editRoleErrorDescription',\n    description: 'Edit role error notification description',\n    defaultMessage: 'The role was not updated successfully.',\n  },\n  exitItemCreation: {\n    id: 'exitItemCreation',\n    description: 'Exit item creation modal title',\n    defaultMessage: 'Exit {item} creation?',\n  },\n  discardedInputsWarning: {\n    id: 'discardedInputsWarning',\n    description: 'Warning saying that all inputs will be discarded',\n    defaultMessage: 'All inputs will be discarded',\n  },\n  returnToStepNumber: {\n    id: 'returnToStepNumber',\n    description: 'Return to step wizard label',\n    defaultMessage: 'Return to step {number}',\n  },\n  addingGroupTitle: {\n    id: 'addingGroupTitle',\n    description: 'Adding group notification title',\n    defaultMessage: 'Adding group',\n  },\n  editingGroupTitle: {\n    id: 'editingGroupTitle',\n    description: 'Editing group notification title',\n    defaultMessage: 'Editing group',\n  },\n  editingRoleTitle: {\n    id: 'editingRoleTitle',\n    description: 'Editing role notification title',\n    defaultMessage: 'Editing role',\n  },\n  editingRoleCanceledDescription: {\n    id: 'editingRoleCanceledDescription',\n    description: 'Editing role canceled notification description',\n    defaultMessage: 'Edit role was canceled by the user.',\n  },\n  addingGroupCanceledDescription: {\n    id: 'addingGroupCanceledDescription',\n    description: 'Adding group canceled notification description',\n    defaultMessage: 'Adding group was canceled by the user.',\n  },\n  editGroupCanceledDescription: {\n    id: 'editGroupCanceledDescription',\n    description: 'Edit group canceled notification description',\n    defaultMessage: 'Edit group was canceled by the user.',\n  },\n  addGroupSuccessTitle: {\n    id: 'addGroupSuccessTitle',\n    description: 'Add group success notification title',\n    defaultMessage: 'Success adding group',\n  },\n  addGroupSuccessDescription: {\n    id: 'addGroupSuccessDescription',\n    description: 'Add group success notification description',\n    defaultMessage: 'The group was added successfully.',\n  },\n  addingGroupMemberTitle: {\n    id: 'addingGroupMemberTitle',\n    description: 'Adding group member notification title',\n    defaultMessage: 'Adding member to group',\n  },\n  addingGroupMembersTitle: {\n    id: 'addingGroupMembersTitle',\n    description: 'Adding group members notification title',\n    defaultMessage: 'Adding members to group',\n  },\n  addingGroupMemberDescription: {\n    id: 'addingGroupMemberDescription',\n    description: 'Adding group member notification description',\n    defaultMessage: 'Adding member to group initialized.',\n  },\n  addingGroupMembersDescription: {\n    id: 'addingGroupMembersDescription',\n    description: 'Adding group members notification description',\n    defaultMessage: 'Adding members to group initialized.',\n  },\n  addingGroupMemberCancelled: {\n    id: 'addingGroupMemberCancelled',\n    description: 'Adding group member cancelled notification description',\n    defaultMessage: 'Adding member to group was canceled by the user.',\n  },\n  addingGroupMembersCancelled: {\n    id: 'addingGroupMembersCancelled',\n    description: 'Adding group members cancelled notification description',\n    defaultMessage: 'Adding member to group was canceled by the user.',\n  },\n  groupNameTakenTitle: {\n    id: 'groupNameTakenTitle',\n    description: 'Group name taken error title',\n    defaultMessage: 'Group name already taken',\n  },\n  groupNameTakenText: {\n    id: 'groupNameTakenText',\n    description: 'Group name taken error text',\n    defaultMessage: 'Please return to Step 1: Group information and choose a unique group name for your group.',\n  },\n  roleNameTakenTitle: {\n    id: 'roleNameTakenTitle',\n    description: 'Role name taken error title',\n    defaultMessage: 'Role name already taken',\n  },\n  roleNameTakenText: {\n    id: 'roleNameTakenText',\n    description: 'Role name taken error text',\n    defaultMessage: 'Please return to Step 1: Create role and choose a unique role name for your custom role.',\n  },\n  reviewDetails: {\n    id: 'reviewDetails',\n    description: 'Review details label',\n    defaultMessage: 'Review details',\n  },\n  name: {\n    id: 'name',\n    description: 'Name column label',\n    defaultMessage: 'Name',\n  },\n  description: {\n    id: 'description',\n    description: 'Description column label',\n    defaultMessage: 'Description',\n  },\n  clientId: {\n    id: 'clientId',\n    description: 'Client ID column label',\n    defaultMessage: 'Client ID',\n  },\n  owner: {\n    id: 'owner',\n    description: 'Owner column label',\n    defaultMessage: 'Owner',\n  },\n  timeCreated: {\n    id: 'timeCreated',\n    description: 'Time created column label',\n    defaultMessage: 'Time created',\n  },\n  lastModified: {\n    id: 'lastModified',\n    description: 'Last modified column label',\n    defaultMessage: 'Last modified',\n  },\n  roleName: {\n    id: 'roleName',\n    description: 'Role name filter placeholder',\n    defaultMessage: 'Role name',\n  },\n  roleDescription: {\n    id: 'roleDescription',\n    description: 'Role description label',\n    defaultMessage: 'Role description',\n  },\n  baseRole: {\n    id: 'baseRole',\n    description: 'Base role label',\n    defaultMessage: 'Base role',\n  },\n  role: {\n    id: 'role',\n    description: 'Role singular',\n    defaultMessage: 'role',\n  },\n  roles: {\n    id: 'roles',\n    description: 'Roles plural',\n    defaultMessage: 'Roles',\n  },\n  groups: {\n    id: 'groups',\n    description: 'Groups plural',\n    defaultMessage: 'Groups',\n  },\n  group: {\n    id: 'group',\n    description: 'Group singular',\n    defaultMessage: 'Group',\n  },\n  serviceAccount: {\n    id: 'serviceAccount',\n    description: 'Service accounts singular',\n    defaultMessage: 'Service account',\n  },\n  serviceAccounts: {\n    id: 'serviceAccounts',\n    description: 'Service accounts plural',\n    defaultMessage: 'Service accounts',\n  },\n  visitServiceAccountsPage: {\n    id: 'visitServiceAccountsPage',\n    description: 'Visit service accounts page text',\n    defaultMessage: 'To add, reset credentials, or delete service accounts visit the {link}.',\n  },\n  addServiceAccountsToGroupDescription: {\n    id: 'addServiceAccountsToGroupDescription',\n    description: 'Add service accounts to group description',\n    defaultMessage:\n      'This list contains all service accounts associated with your Red Hat organization account. Select any service accounts you wish to associate with the User Access group.',\n  },\n  groupName: {\n    id: 'groupName',\n    description: 'Group name label',\n    defaultMessage: 'Group name',\n  },\n  groupDescription: {\n    id: 'groupDescription',\n    description: 'Group description label',\n    defaultMessage: 'Group description',\n  },\n  groupDefinition: {\n    id: 'groupDefinition',\n    description: 'Group definition label',\n    defaultMessage: 'Group definition',\n  },\n  required: {\n    id: 'required',\n    description: 'Required input label',\n    defaultMessage: 'Required',\n  },\n  maxCharactersWarning: {\n    id: 'maxCharactersWarning',\n    description: 'Maximum number of characters message',\n    defaultMessage: 'Can have maximum of {number} characters.',\n  },\n  selectRolesForGroupText: {\n    id: 'selectRolesForGroupText',\n    description: 'Select roles to be added to a group text',\n    defaultMessage: 'Select one or more roles to add to this group.',\n  },\n  toManageUsersText: {\n    id: 'toManageUsersText',\n    description: 'To manage users text',\n    defaultMessage: 'To manage users, go to your',\n  },\n  createGroup: {\n    id: 'createGroup',\n    description: 'Create group wizard title',\n    defaultMessage: 'Create group',\n  },\n  addUserToGroup: {\n    id: 'addUserToGroup',\n    description: 'Add user to a group wizard title',\n    defaultMessage: 'Add user to a group',\n  },\n  addSpecificUserToGroup: {\n    id: 'addSpecificUserToGroup',\n    description: 'Add user to a group wizard title',\n    defaultMessage: 'Add {username} to a group',\n  },\n  nameAndDescription: {\n    id: 'nameAndDescription',\n    description: 'Name and description wizard step title',\n    defaultMessage: 'Name and description',\n  },\n  addRole: {\n    id: 'addRole',\n    description: 'Add role title',\n    defaultMessage: 'Add role',\n  },\n  addRoles: {\n    id: 'addRoles',\n    description: 'Add roles wizard step title',\n    defaultMessage: 'Add roles',\n  },\n  addMembers: {\n    id: 'addMembers',\n    description: 'Add members wizard step title',\n    defaultMessage: 'Add members',\n  },\n  members: {\n    id: 'members',\n    description: 'Group members label',\n    defaultMessage: 'Members',\n  },\n  user: {\n    id: 'user',\n    description: 'User label',\n    defaultMessage: 'user',\n  },\n  users: {\n    id: 'users',\n    description: 'Users plural label',\n    defaultMessage: 'Users',\n  },\n  username: {\n    id: 'username',\n    description: 'Username label',\n    defaultMessage: 'Username',\n  },\n  email: {\n    id: 'email',\n    description: 'Email label',\n    defaultMessage: 'Email',\n  },\n  status: {\n    id: 'status',\n    description: 'Status label',\n    defaultMessage: 'Status',\n  },\n  firstName: {\n    id: 'firstName',\n    description: 'First name label',\n    defaultMessage: 'First name',\n  },\n  lastName: {\n    id: 'lastName',\n    description: 'Last name label',\n    defaultMessage: 'Last name',\n  },\n  addToGroup: {\n    id: 'addToGroup',\n    description: 'Add to group label',\n    defaultMessage: 'Add to group',\n  },\n  removeMemberText: {\n    id: 'removeMemberText',\n    description: 'Remove member text',\n    defaultMessage: '<b>{name}</b> will lose all the roles associated with the <b>{group}</b> group.',\n  },\n  removeMembersText: {\n    id: 'removeMembersText',\n    description: 'Remove members plural text',\n    defaultMessage: 'These <b>{name}</b> members will lose all the roles associated with the <b>{group}</b> group.',\n  },\n  serviceAccountsPage: {\n    id: 'serviceAccountsPage',\n    description: 'Service accounts page message',\n    defaultMessage: 'Service Accounts admin page',\n  },\n  addServiceAccount: {\n    id: 'addServiceAccount',\n    description: 'Add service account label',\n    defaultMessage: 'Add service account',\n  },\n  removeGroupServiceAccountsQuestion: {\n    id: 'removeGroupServiceAccountsQuestion',\n    description: 'Remove service accounts from group question label',\n    defaultMessage: 'Remove service {count, plural, one {account} other {accounts}} from group?',\n  },\n  removeServiceAccountsText: {\n    id: 'removeServiceAccountsText',\n    description: 'Remove service accounts description',\n    defaultMessage:\n      '{count, plural, one {<b>{name}</b> service account} other {<b>#</b> service accounts}} will be removed from <b>{group}</b> group.',\n  },\n  remove: {\n    id: 'remove',\n    description: 'Remove button label',\n    defaultMessage: 'Remove',\n  },\n  member: {\n    id: 'member',\n    description: 'Member text',\n    defaultMessage: 'member',\n  },\n  removeMemberQuestion: {\n    id: 'removeMemberQuestion',\n    description: 'Remove member question',\n    defaultMessage: 'Remove member?',\n  },\n  removeMembersQuestion: {\n    id: 'removeMembersQuestion',\n    description: 'Remove members question',\n    defaultMessage: 'Remove members?',\n  },\n  removeMember: {\n    id: 'removeMember',\n    description: 'Remove member',\n    defaultMessage: 'Remove member',\n  },\n  addMember: {\n    id: 'addMember',\n    description: 'Add member',\n    defaultMessage: 'Add member',\n  },\n  allOrgAdminsAreMembers: {\n    id: 'allOrgAdminsAreMembers',\n    description: 'All org. admins are members of this group message',\n    defaultMessage: 'All organization administrators in this organization are members of this group.',\n  },\n  allUsersAreMembers: {\n    id: 'allUsersAreMembers',\n    description: 'All users are members of this group message',\n    defaultMessage: 'All users in this organization are members of this group.',\n  },\n  noGroupMembers: {\n    id: 'noGroupMembers',\n    description: 'No members in a given group title',\n    defaultMessage: 'There are no members in this group',\n  },\n  addUserToConfigure: {\n    id: 'addUserToConfigure',\n    description: 'Add a user to configure user access message',\n    defaultMessage: 'Add a user to configure user access.',\n  },\n  addingGroupRolesTitle: {\n    id: 'addingGroupRolesTitle',\n    description: 'Adding group roles notification title',\n    defaultMessage: 'Adding roles to group',\n  },\n  addingGroupRolesCancelled: {\n    id: 'addingGroupRolesCancelled',\n    description: 'Adding group roles cancelled notification description',\n    defaultMessage: 'Adding roles to group was canceled by the user.',\n  },\n  addRoleToGroup: {\n    id: 'addRoleToGroup',\n    description: 'Add role to group label',\n    defaultMessage: 'Add role to group',\n  },\n  addRoleToThisGroup: {\n    id: 'addRoleToThisGroup',\n    description: 'Add role to this group label',\n    defaultMessage: 'Add role to this group',\n  },\n  addRolesToGroup: {\n    id: 'addRolesToGroup',\n    description: 'Add roles to group label',\n    defaultMessage: 'Add roles to the {name} group',\n  },\n  onlyNonUserGroupsVisible: {\n    id: 'onlyNonUserGroupsVisible',\n    description: 'Message warning that only groups that the user is not a member of has been filtered',\n    defaultMessage: 'This group list has been filtered to only show groups that the user is not currently a member of.',\n  },\n  onlyGroupRolesVisible: {\n    id: 'onlyGroupRolesVisible',\n    description: 'Message warning that only roles in given role has been filtered',\n    defaultMessage: 'This role list has been filtered to only show roles that are not currently in your group.',\n  },\n  defaultAccessGroupEditWarning: {\n    id: 'defaultAccessGroupEditWarning',\n    description: 'Message warning that editing a Default access group will rename it',\n    defaultMessage:\n      'Once you edit the <b>Default access</b> group, the system will no longer update it with new default access roles. The group name will change to <b>Custom default access</b>.',\n  },\n  warning: {\n    id: 'warning',\n    description: 'Waring label',\n    defaultMessage: 'Warning',\n  },\n  continue: {\n    id: 'continue',\n    description: 'Continue label',\n    defaultMessage: 'Continue',\n  },\n  allRolesAdded: {\n    id: 'allRolesAdded',\n    description: 'All roles already to the group message',\n    defaultMessage: 'All available roles have already been added to the group',\n  },\n  removeRoleModalText: {\n    id: 'removeRoleModalText',\n    description: 'Remove role message warning about losing permissions',\n    defaultMessage: 'Members in the <b>{name}</b> group will lose the permissions in the <b>{role}</b> role',\n  },\n  removeRolesModalText: {\n    id: 'removeRolesModalText',\n    description: 'Remove role message warning about losing permissions',\n    defaultMessage: 'Members in the <b>{name}</b> group will lose the permissions in these <b>{roles}</b> roles',\n  },\n  removeRole: {\n    id: 'removeRole',\n    description: 'Remove role label',\n    defaultMessage: 'Remove role',\n  },\n  removeRoles: {\n    id: 'removeRoles',\n    description: 'Remove roles label',\n    defaultMessage: 'Remove roles',\n  },\n  removeRoleQuestion: {\n    id: 'removeRoleQuestion',\n    description: 'Remove role question label',\n    defaultMessage: 'Remove role?',\n  },\n  removeRolesQuestion: {\n    id: 'removeRolesQuestion',\n    description: 'Remove roles question label',\n    defaultMessage: 'Remove roles?',\n  },\n  defaultGroupNotManually: {\n    id: 'defaultGroupNotManually',\n    description: 'Message warning that default admin access group cannot be modified manually',\n    defaultMessage: 'Default admin access group roles cannot be modified manually',\n  },\n  noGroupAccounts: {\n    id: 'noGroupAccounts',\n    description: 'No service accounts in a group message',\n    defaultMessage: 'There are no service accounts in this group',\n  },\n  addAccountsToThisGroup: {\n    id: 'addAccountsToThisGroup',\n    description: 'Add service accounts message',\n    defaultMessage: 'Add service accounts you wish to associate with this User Access group',\n  },\n  noServiceAccountsFound: {\n    id: 'noServiceAccountsFound',\n    description: 'No service accounts message',\n    defaultMessage: 'No service accounts found',\n  },\n  contactServiceTeamForAccounts: {\n    id: 'contactServiceTeamForAccounts',\n    description: 'Contact service team to add accounts message',\n    defaultMessage: 'Contact your platform service team to add service accounts.',\n  },\n  noGroupRoles: {\n    id: 'noGroupRoles',\n    description: 'No roles in a group message',\n    defaultMessage: 'There are no roles in this group',\n  },\n  contactServiceTeamForRoles: {\n    id: 'contactServiceTeamForRoles',\n    description: 'Contact service team to add roles message',\n    defaultMessage: 'Contact your platform service team to add roles.',\n  },\n  addRoleToConfigureAccess: {\n    id: 'addRoleToConfigureAccess',\n    description: 'Add role to configure user access message',\n    defaultMessage: 'Add a role to configure user access.',\n  },\n  editGroupInfo: {\n    id: 'editGroupInfo',\n    description: \"Edit group's information message\",\n    defaultMessage: \"Edit group's information\",\n  },\n  orgAdminInheritedRoles: {\n    id: 'orgAdminInheritedRoles',\n    description: 'Org. Admin inherited roles message',\n    defaultMessage: 'This group contains the roles that all org admin users inherit by default.',\n  },\n  usersInheritedRoles: {\n    id: 'usersInheritedRoles',\n    description: 'Users inherited roles message',\n    defaultMessage: 'This group contains the roles that all users in your organization inherit by default.',\n  },\n  invalidGroup: {\n    id: 'invalidGroup',\n    description: 'Invalid group message',\n    defaultMessage: 'Invalid group',\n  },\n  invalidRole: {\n    id: 'invalidRole',\n    description: 'Invalid role message',\n    defaultMessage: 'Invalid role',\n  },\n  invalidUser: {\n    id: 'invalidUser',\n    description: 'Invalid user message',\n    defaultMessage: 'Invalid user',\n  },\n  defaultAccessGroupNameChanged: {\n    id: 'defaultAccessGroupNameChanged',\n    description: 'Default access group renamed message',\n    defaultMessage:\n      'Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group name has changed to <b>Custom default access</b>.',\n  },\n  defaultAccessGroupChanged: {\n    id: 'defaultAccessGroupChanged',\n    description: 'Default access group changed message',\n    defaultMessage: 'Default access group has changed',\n  },\n  groupNotFound: {\n    id: 'groupNotFound',\n    description: 'Group not found message',\n    defaultMessage: 'Group not found',\n  },\n  groupDoesNotExist: {\n    id: 'groupDoesNotExist',\n    description: 'Group with given ID does not exist message',\n    defaultMessage: 'Group with ID {id} does not exist.',\n  },\n  backToPreviousPage: {\n    id: 'backToPreviousPage',\n    description: 'Back to previous page label',\n    defaultMessage: 'Back to previous page',\n  },\n  deleteGroupsQuestion: {\n    id: 'deleteGroupsQuestion',\n    description: 'Delete groups question label',\n    defaultMessage: 'Delete groups?',\n  },\n  deleteGroupQuestion: {\n    id: 'deleteGroupQuestion',\n    description: 'Delete group question label',\n    defaultMessage: 'Delete group?',\n  },\n  deleteGroups: {\n    id: 'deleteGroups',\n    description: 'Delete groups label',\n    defaultMessage: 'Delete groups',\n  },\n  deleteGroup: {\n    id: 'deleteGroup',\n    description: 'Delete group label',\n    defaultMessage: 'Delete group',\n  },\n  deletingGroupRemovesRoles: {\n    id: 'deletingGroupRemovesRoles',\n    description: 'Delete group label',\n    defaultMessage: 'Deleting the <b>{name}</b> group removes all roles from the members inside the group.',\n  },\n  deletingGroupsRemovesRoles: {\n    id: 'deletingGroupsRemovesRoles',\n    description: 'Delete groups label',\n    defaultMessage: 'Deleting these <b>{count}</b> groups removes all roles from the members inside the groups.',\n  },\n  understandActionIrreversible: {\n    id: 'understandActionIrreversible',\n    description: 'Understand action cannot be undone message',\n    defaultMessage: 'I understand that this action cannot be undone.',\n  },\n  nameAlreadyTaken: {\n    id: 'nameAlreadyTaken',\n    description: 'Name has been already taken validation message',\n    defaultMessage: 'Name has already been taken.',\n  },\n  appServicesNotManaged: {\n    id: 'appServicesNotManaged',\n    description: 'Application Services permissions are not managed with User Access message',\n    defaultMessage: 'Application Services permissions are not managed with User Access',\n  },\n  allUsersViewEverything: {\n    id: 'allUsersViewEverything',\n    description: 'All users in the organization may view everything message',\n    defaultMessage: 'All users in the organization may view everything.',\n  },\n  actionsOnClustersPermissions: {\n    id: 'actionsOnClustersPermissions',\n    description: 'Actions on clusters permissions message',\n    defaultMessage: 'Only Org. Administrators and cluster owners can perform actions on clusters.',\n  },\n  application: {\n    id: 'application',\n    description: 'Application label',\n    defaultMessage: 'Application',\n  },\n  permission: {\n    id: 'permission',\n    description: 'Permission label',\n    defaultMessage: 'Permission',\n  },\n  permissions: {\n    id: 'permissions',\n    description: 'Permissions label',\n    defaultMessage: 'Permissions',\n  },\n  resourceType: {\n    id: 'resourceType',\n    description: 'Resource type label',\n    defaultMessage: 'Resource type',\n  },\n  operation: {\n    id: 'operation',\n    description: 'Operation label',\n    defaultMessage: 'Operation',\n  },\n  resourceDefinitions: {\n    id: 'resourceDefinitions',\n    description: 'Resource definitions label',\n    defaultMessage: 'Resource definitions',\n  },\n  resourceDefinition: {\n    id: 'resourceDefinition',\n    description: 'Resource definition label',\n    defaultMessage: 'Resource definition',\n  },\n  noPermissionsForInsights: {\n    id: 'noPermissionsForInsights',\n    description: 'No individual permissions for Insights message',\n    defaultMessage: 'You do not have individual permissions for Insights.',\n  },\n  contactOrgAdministrator: {\n    id: 'contactOrgAdministrator',\n    description: 'Contact org. administrator for more info message',\n    defaultMessage: 'Contact your Org. Administrator for more information.',\n  },\n  notSubscribed: {\n    id: 'notSubscribed',\n    description: 'Not subscribed label',\n    defaultMessage: 'Not subscribed',\n  },\n  yourRoles: {\n    id: 'yourRoles',\n    description: 'Your bundle roles label',\n    defaultMessage: 'Your {name} roles',\n  },\n  yourPermissions: {\n    id: 'yourPermissions',\n    description: 'Your bundle permissions label',\n    defaultMessage: 'Your {name} permissions',\n  },\n  myUserAccess: {\n    id: 'myUserAccess',\n    description: 'My User Access label',\n    defaultMessage: 'My User Access',\n  },\n  selectAppsToViewPermissions: {\n    id: 'selectAppsToViewPermissions',\n    description: 'Select applications to view your personal permissions message',\n    defaultMessage: 'Select applications to view your personal permissions.',\n  },\n  chooseSubscriptionEllipsis: {\n    id: 'chooseSubscriptionEllipsis',\n    description: 'Choose subscription message',\n    defaultMessage: 'Choose a subscription...',\n  },\n  viewResourceDefinitions: {\n    id: 'viewResourceDefinitions',\n    description: 'View resource definitions message',\n    defaultMessage: 'View resource definitions for the <strong>{permission}</strong> permission',\n  },\n  noResourceDefinitions: {\n    id: 'noResourceDefinitions',\n    description: 'There are no resource definitions for permission message',\n    defaultMessage: 'There are no resource definitions for {permission} permission',\n  },\n  creatingRoleCanceled: {\n    id: 'creatingRoleCanceled',\n    description: 'Creating role canceled notification message',\n    defaultMessage: 'Creating role was canceled by the user',\n  },\n  permissionStringDescription: {\n    id: 'permissionStringDescription',\n    description: 'Permission string description text',\n    defaultMessage:\n      'The permission string is made up of the following inputs where it denotes which application and the resource type the permission will be allowed for.',\n  },\n  key: {\n    id: 'key',\n    description: 'Key label',\n    defaultMessage: 'Key',\n  },\n  value: {\n    id: 'value',\n    description: 'Value label',\n    defaultMessage: 'Value',\n  },\n  permissionResourcesDetails: {\n    id: 'permissionResourcesDetails',\n    description: 'Permission resources details message',\n    defaultMessage: 'If there needs to be more details on the resources the permission is to be used for, it would be detailed here.',\n  },\n  addToDefinitions: {\n    id: 'addToDefinitions',\n    description: 'Add to definitions message',\n    defaultMessage: 'Add to definitions',\n  },\n  confirmDetails: {\n    id: 'confirmDetails',\n    description: 'Confirm details message',\n    defaultMessage: 'Confirm details',\n  },\n  confirmDetailsDescription: {\n    id: 'confirmDetailsDescription',\n    description: 'Confirm details description message',\n    defaultMessage: 'Confirm the details for your source, or click Back to revise',\n  },\n  selectedPermissions: {\n    id: 'selectedPermissions',\n    description: 'Selected permissions label',\n    defaultMessage: 'Selected permissions',\n  },\n  addPermissions: {\n    id: 'addPermissions',\n    description: 'Add permissions label',\n    defaultMessage: 'Add permissions',\n  },\n  addPermission: {\n    id: 'addPermission',\n    description: 'Add permission label',\n    defaultMessage: 'Add permission',\n  },\n  selectPermissionsForRole: {\n    id: 'selectPermissionsForRole',\n    description: 'Select permissions for role label',\n    defaultMessage: 'Select permissions to add to your role',\n  },\n  onlyGranularPermissions: {\n    id: 'onlyGranularPermissions',\n    description: 'Only granular permissions message',\n    defaultMessage: 'Custom roles only support granular permissions',\n  },\n  noWildcardPermissions: {\n    id: 'noWildcardPermissions',\n    description: 'No wildcard permissions message',\n    defaultMessage: 'Wildcard permissions (for example, approval:*:*) aren’t included in this table and can’t be added to your custom role.',\n  },\n  whyNotSeeingAllPermissions: {\n    id: 'whyNotSeeingAllPermissions',\n    description: 'Why am I not seeing all of my permissions message',\n    defaultMessage: 'Why am I not seeing all of my permissions?',\n  },\n  followingPermissionsCannotBeAdded: {\n    id: 'followingPermissionsCannotBeAdded',\n    description: 'Following permissions cannot be added message',\n    defaultMessage: 'The following permissions can not be added to a custom role and were removed from the copied role:',\n  },\n  configureResourcesForPermission: {\n    id: 'configureResourcesForPermission',\n    description: 'Configure resources for permission message',\n    defaultMessage: 'To add this permission to your role and define specific resources for it, at least one data source must be connected.',\n  },\n  noRbacPermissions: {\n    id: 'noRbacPermissions',\n    description: 'No Rbac permissions message',\n    defaultMessage: 'You are missing RBAC permissions to add inventory permissions to your role.',\n  },\n  noCostManagementPermissions: {\n    id: 'noCostManagementPermissions',\n    description: 'No Cost management permissions message',\n    defaultMessage: 'You are not entitled to add cost-management permissions to your role.',\n  },\n  configureCostSources: {\n    id: 'configureCostSources',\n    description: 'Configure resources for Cost management message',\n    defaultMessage: 'Configure sources for Cost Management',\n  },\n  noResultsFound: {\n    id: 'noResultsFound',\n    description: 'No results found message',\n    defaultMessage: 'No results found',\n  },\n  permissionNotDisplayedDescription: {\n    id: 'permissionNotDisplayedDescription',\n    description: 'Permission not displayed description message',\n    defaultMessage:\n      \"The permission either does not exist or has already been added to this role. Adjust your filters and try again. Note: Applications that only have wildcard permissions (for example, compliance:*:*) aren't included in this table and can't be added to your custom role.\",\n  },\n  seeLess: {\n    id: 'seeLess',\n    description: 'See less label',\n    defaultMessage: 'See less',\n  },\n  seeMore: {\n    id: 'seeMore',\n    description: 'See more label',\n    defaultMessage: 'See more',\n  },\n  roleCreatedSuccessfully: {\n    id: 'roleCreatedSuccessfully',\n    description: 'Role created successfully message',\n    defaultMessage: 'You have successfully created a new role',\n  },\n  createAnotherRole: {\n    id: 'createAnotherRole',\n    description: 'Create another role message',\n    defaultMessage: 'Create another role',\n  },\n  groupCreatedSuccessfully: {\n    id: 'groupCreatedSuccessfully',\n    description: 'Group created successfully message',\n    defaultMessage: 'You have successfully created a new group',\n  },\n  createAnotherGroup: {\n    id: 'createAnotherGroup',\n    description: 'Create another group message',\n    defaultMessage: 'Create another group',\n  },\n  granularPermissionsWillBeCopied: {\n    id: 'granularPermissionsWillBeCopied',\n    description: 'Granular permissions will be copied message',\n    defaultMessage:\n      'Only granular permissions will be copied into a custom role (for example, approval:requests:read). Wildcard permissions will not be copied into a custom role (for example, approval:*:read).',\n  },\n  selectState: {\n    id: 'selectState',\n    description: 'Select state label',\n    defaultMessage: 'Select a state',\n  },\n  selectResources: {\n    id: 'selectResources',\n    description: 'Select resources label',\n    defaultMessage: 'Select resources',\n  },\n  reviewRoleDetails: {\n    id: 'reviewRoleDetails',\n    description: 'Review role details text',\n    defaultMessage: 'Review and confirm the details for your role, or click Back to revise.',\n  },\n  selectGroups: {\n    id: 'selectGroups',\n    description: 'Select groups label',\n    defaultMessage: 'Select groups',\n  },\n  inventoryGroupsTypeAheadLabel: {\n    id: 'invGroupsLabel',\n    description: 'Type ahead label for inventory groups role permissions',\n    defaultMessage: 'Select a group to add permissions for',\n  },\n  inventoryGroupsTooltip: {\n    id: 'inventoryGroupsTooltip',\n    description: 'Tooltip for inventory group role permissions',\n    defaultMessage: 'Add permission to these groups.',\n  },\n  inventoryGroupsAccessTitle: {\n    id: 'inventoryGroupsAccessTitle',\n    description: 'Step for adding correct group permissions to role.',\n    defaultMessage: 'Define Inventory group access',\n  },\n  inventoryGroupsAccessDescription: {\n    id: 'inventoryGroupsAccessDescription',\n    descriptioin: 'Description for adding correct group permissions to role.',\n    defaultMessage: \"Specify which inventory group(s) you'd like to apply your selected permissions to, using the dropdowns below.\",\n  },\n  createRole: {\n    id: 'createRole',\n    description: 'Create role label',\n    defaultMessage: 'Create role',\n  },\n  defineCostResources: {\n    id: 'defineCostResources',\n    description: 'Define Cost Management resources label',\n    defaultMessage: 'Define Cost Management resources',\n  },\n  applyCostPermissionText: {\n    id: 'applyCostPermissionText',\n    description: 'Apply Cost permission text',\n    defaultMessage: 'Specify where you would like to apply each cost permission selected in the previous step, using the dropdown below.',\n  },\n  applyInventoryGroupsRolePermission: {\n    id: 'applyInventoryGroupsRolePermission',\n    description: 'Permissions for Groups',\n    defaultMessage: 'Specify which inventory groups youd like to give access for these permissions',\n  },\n  createRoleFromScratch: {\n    id: 'createRoleFromScratch',\n    description: 'Create role from scratch option',\n    defaultMessage: 'Create a role from scratch',\n  },\n  copyAnExistingRole: {\n    id: 'copyAnExistingRole',\n    description: 'Copy an existing role option',\n    defaultMessage: 'Copy an existing role',\n  },\n  permissionsAddedSuccessfully: {\n    id: 'permissionsAddedSuccessfully',\n    description: 'Permissions added successfully message',\n    defaultMessage: 'You have successfully added permissions to the role',\n  },\n  addedPermissions: {\n    id: 'addedPermissions',\n    description: 'Added permissions label',\n    defaultMessage: 'Added permissions',\n  },\n  assignAtLeastOneResource: {\n    id: 'assignAtLeastOneResource',\n    description: 'Assign at least one resource message',\n    defaultMessage: 'You need to assign at least one resource to each permission.',\n  },\n  assignAtLeastOneInventoryGroup: {\n    id: 'assignAtLeastOneGroup',\n    description: 'Assign at least one inventory group message',\n    defaultMessage: 'You need to assign at least one inventory group to each permission.',\n  },\n  resourcesAvailable: {\n    id: 'resourcesAvailable',\n    description: 'Resources available for permission message',\n    defaultMessage: 'Resources available for the permission',\n  },\n  resourcesDefined: {\n    id: 'resourcesDefined',\n    description: 'Resources defined for permission message',\n    defaultMessage: 'Resources defined for the permission',\n  },\n  filterByResource: {\n    id: 'filterByResource',\n    description: 'Filter by resource label',\n    defaultMessage: 'Filter by resource...',\n  },\n  exitEditResourceDefinitions: {\n    id: 'exitEditResourceDefinitions',\n    description: 'Exit edit resource definitions question text',\n    defaultMessage: 'Exit edit resource definitions?',\n  },\n  changesWillBeLost: {\n    id: 'changesWillBeLost',\n    description: 'All changes will be lost message',\n    defaultMessage: 'All changes will be lost',\n  },\n  editResourceDefinitions: {\n    id: 'editResourceDefinitions',\n    description: 'Edit resource definitions label',\n    defaultMessage: 'Edit resource definitions',\n  },\n  editPermissionsUsingArrows: {\n    id: 'editPermissionsUsingArrows',\n    description: 'Edit permissions using arrows label',\n    defaultMessage: 'Give or remove permissions to specific resources using the arrows below.',\n  },\n  roleWithNameExists: {\n    id: 'roleWithNameExists',\n    description: 'Role with name exists message',\n    defaultMessage: 'Role with this name already exists.',\n  },\n  deleteRoleQuestion: {\n    id: 'deleteRoleQuestion',\n    description: 'Delete role question message',\n    defaultMessage: 'Delete role?',\n  },\n  roleWilBeRemovedWithPermissions: {\n    id: 'roleWilBeRemovedWithPermissions',\n    description: 'Role will be removed with permissions message',\n    defaultMessage:\n      \"{count, plural, one {The} other {These}} <strong>{name}</strong> {count, plural, one {role} other {roles}} will be removed from any group it's in, and members in the groups will no longer be granted the permissions in the role.\",\n  },\n  defineAtLeastOneResource: {\n    id: 'defineAtLeastOneResource',\n    description: 'Define at least one resource message',\n    defaultMessage: 'At least one resource must be defined for this permission',\n  },\n  permissionWillNotBeGrantedThroughRole: {\n    id: 'permissionWillNotBeGrantedThroughRole',\n    description: 'Permission will not be granted through role message',\n    defaultMessage: 'The <b>{permission}</b> permission will no longer be granted through the <b>{role}</b> role.',\n  },\n  permissionsWillNotBeGrantedThroughRole: {\n    id: 'permissionsWillNotBeGrantedThroughRole',\n    description: 'Permissions will not be granted through role message',\n    defaultMessage: 'The <b>{permissions}</b> permissions will no longer be granted through the <b>{role}</b> role.',\n  },\n  lastCommit: {\n    id: 'lastCommit',\n    description: 'Last commit label',\n    defaultMessage: 'Last commit',\n  },\n  resourceDefinitionsApplyToCostAndInventory: {\n    id: 'resourceDefinitionsApplyToCostAndInventory',\n    description: 'Resource definitions only apply to Cost Management and Inventory permissions message',\n    defaultMessage: 'Resource definitions only apply to Cost Management and Inventory permissions',\n  },\n  removePermissionQuestion: {\n    id: 'removePermissionQuestion',\n    description: 'Remove permission question text',\n    defaultMessage: 'Remove permission?',\n  },\n  removePermission: {\n    id: 'removePermission',\n    description: 'Remove permission label',\n    defaultMessage: 'Remove permission',\n  },\n  removePermissionsQuestion: {\n    id: 'removePermissionsQuestion',\n    description: 'Remove permissions question text',\n    defaultMessage: 'Remove permissions?',\n  },\n  removePermissions: {\n    id: 'removePermissions',\n    description: 'Remove permissions label',\n    defaultMessage: 'Remove permissions',\n  },\n  noRolePermissions: {\n    id: 'noRolePermissions',\n    description: 'No role permissions text',\n    defaultMessage: 'There are no permissions in this role',\n  },\n  definedResources: {\n    id: 'definedResources',\n    description: 'Defined resources label',\n    defaultMessage: 'Defined resources',\n  },\n  resource: {\n    id: 'resource',\n    description: 'Resource label',\n    defaultMessage: 'Resource',\n  },\n  resources: {\n    id: 'resources',\n    description: 'Resources label',\n    defaultMessage: 'Resources',\n  },\n  userDescription: {\n    id: 'userDescription',\n    description: 'User description text',\n    defaultMessage: \"{username}'s roles, groups and permissions.\",\n  },\n  userNotFound: {\n    id: 'userNotFound',\n    description: 'User not found text',\n    defaultMessage: 'User not found',\n  },\n  userNotFoundDescription: {\n    id: 'userNotFoundDescription',\n    description: 'User not found description text',\n    defaultMessage: 'User with username {username} does not exist.',\n  },\n  addNewUsersText: {\n    id: 'addNewUsersText',\n    description: 'Add new users text',\n    defaultMessage: 'To add new users or manage existing users, go to your',\n  },\n  triggerMyQuickstart: {\n    id: 'triggerMyQuickstart',\n    description: 'Trigger my quickstart text',\n    defaultMessage: 'Trigger my quickstart',\n  },\n  triggerMyCatalog: {\n    id: 'triggerMyCatalog',\n    description: 'Trigger my catalog text',\n    defaultMessage: 'Trigger my catalog',\n  },\n  restoreDefaultAccessQuestion: {\n    id: 'restoreDefaultAccessQuestion',\n    description: 'Restore Default access group question',\n    defaultMessage: 'Restore Default access group?',\n  },\n  restoreToDefault: {\n    id: 'restoreToDefault',\n    description: 'Restore to default label',\n    defaultMessage: 'Restore to default',\n  },\n  restoreDefaultAccessInfo: {\n    id: 'restoreDefaultAccessInfo',\n    description: 'Restore Custom Default Access group info',\n    defaultMessage:\n      'This restores <b>Default access</b> group and removes <b>Custom default access</b> group. All configurations in <b>Custom default access</b> are deleted and cannot be recovered.',\n  },\n  restoreDefaultAccessDescription: {\n    id: 'restoreDefaultAccessDescription',\n    description: 'Restore Custom Default Access group description',\n    defaultMessage:\n      'Restoring <b>Default access</b> group will remove <b>Custom default access</b> group. <b>Custom default access</b> configurations cannot be recovered. Are you sure?',\n  },\n  noGroups: {\n    id: 'noGroups',\n    description: 'No groups label',\n    defaultMessage: 'No groups',\n  },\n  loading: {\n    id: 'loading',\n    description: 'Loading temporary label',\n    defaultMessage: 'Loading...',\n  },\n  noPermissions: {\n    id: 'noPermissions',\n    description: 'No permissions label',\n    defaultMessage: 'No permissions',\n  },\n  copyToAll: {\n    id: 'copyToAllPermissions',\n    description: 'Copy to all label',\n    defaultMessage: 'Copy to all',\n  },\n});\n","import { defaultCompactSettings } from '../shared/pagination';\nimport { getServiceAccountsApi } from '../shared/user-login';\n\nconst serviceAccountsApi = getServiceAccountsApi?.();\n\nexport const NO_DATA = 'no-data';\nexport const LAST_PAGE = 'last-page';\nexport const RESULTS = 'results';\n\nexport interface ServiceAccountPayloadItem {\n  id: string;\n  clientId: string;\n  name: string;\n  createdBy: string;\n  createdAt: number;\n}\n\nexport interface ServiceAccount {\n  uuid: string;\n  clientId: string;\n  name: string;\n  createdBy: string;\n  createdAt: number;\n}\n\nexport interface ServiceAccountsPayload {\n  data: ServiceAccount[];\n  status: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function getServiceAccounts({ limit = defaultCompactSettings.limit, offset = 0, token, sso }: any) {\n  const page = Math.trunc(offset / limit) + 1;\n  const perPage = limit;\n\n  const response = await serviceAccountsApi.getServiceAccounts(page, perPage, token, sso);\n\n  let status;\n  if (page === 1 && response.data.length === 0) {\n    status = NO_DATA;\n  } else {\n    status = response.data.length < perPage + 1 ? LAST_PAGE : RESULTS;\n  }\n\n  return {\n    data: response.data\n      .slice(0, perPage)\n      .map(({ id, createdAt, ...item }: ServiceAccountPayloadItem) => ({ uuid: id, createdAt: createdAt * 1000, ...item })),\n    status,\n  };\n}\n","import { NavigateFunction, Location } from 'react-router-dom';\n\nexport interface PaginationDefaultI {\n  limit?: number;\n  offset?: number;\n  count?: number; // from API\n  itemCount?: number; // for PF pagination\n}\n\nexport const defaultSettings: Required<PaginationDefaultI> = {\n  limit: 20,\n  offset: 0,\n  itemCount: 0,\n  count: 0,\n};\n\nexport const defaultAdminSettings = {\n  ...defaultSettings,\n  limit: 50,\n};\n\nexport const defaultCompactSettings = {\n  ...defaultSettings,\n  limit: 10,\n};\n\nexport const calculatePage = (limit = defaultSettings.limit, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const calculateOffset = (page = 1, limit = defaultSettings.limit) => (page - 1) * limit;\n\nexport const syncDefaultPaginationWithUrl = (location: Location, navigate: NavigateFunction, defaultPagination: Required<PaginationDefaultI>) => {\n  if (!defaultPagination) {\n    defaultPagination = defaultSettings;\n  }\n  const searchParams = new URLSearchParams(location.search);\n\n  let limit = parseInt(searchParams.get('per_page') as string);\n  let page = parseInt(searchParams.get('page') as string);\n\n  if (isNaN(limit) || limit <= 0) {\n    limit = defaultPagination.limit;\n    searchParams.set('per_page', String(limit));\n  }\n  if (isNaN(page) || page <= 0) {\n    page = 1;\n    searchParams.set('page', String(page));\n  }\n\n  const offset = calculateOffset(page, limit);\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    { replace: true }\n  );\n  return { ...defaultPagination, limit, offset };\n};\n\nexport const isPaginationPresentInUrl = (location: Location) => {\n  const searchParams = new URLSearchParams(location.search);\n  return searchParams.get('per_page') && searchParams.get('per_page');\n};\n\nexport const isOffsetValid = (offset = 0, count = 0) => offset === 0 || count > offset;\n\nexport const getLastPageOffset = (count: number, limit: number) => Math.floor((count % limit === 0 ? count - 1 : count) / limit) * limit;\nexport const applyPaginationToUrl = (location: Location, navigate: NavigateFunction, limit: number, offset = 0) => {\n  if (!offset) {\n    offset = 0;\n  }\n  const searchParams = new URLSearchParams(location.search);\n  searchParams.set('per_page', String(limit));\n  searchParams.set('page', String(calculatePage(limit, offset)));\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport axios from 'axios';\nimport {\n  authInterceptor,\n  responseDataInterceptor,\n  interceptor401,\n  interceptor500,\n  errorInterceptor,\n} from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi, AccessApi, PermissionApi } from '@redhat-cloud-services/rbac-client';\nimport { HostsApi } from '@redhat-cloud-services/host-inventory-client';\nimport { BaseAPI } from '@redhat-cloud-services/rbac-client/dist/base';\n\nimport { RBAC_API_BASE, COST_API_BASE, INVENTORY_API_BASE } from '../../utilities/constants';\nimport registry from '../../utilities/store';\nimport { API_ERROR } from '../../redux/action-types';\n\nconst interceptor403 = (error) => {\n  const store = registry.getStore();\n\n  if (error.response && error.response.status === 403) {\n    store.dispatch({ type: API_ERROR, payload: 403 });\n  }\n\n  throw error;\n};\n\nconst axiosInstance = axios.create();\naxiosInstance.interceptors.request.use(authInterceptor);\naxiosInstance.interceptors.response.use(responseDataInterceptor);\n\naxiosInstance.interceptors.response.use(null, interceptor401);\naxiosInstance.interceptors.response.use(null, interceptor403);\naxiosInstance.interceptors.response.use(null, interceptor500);\naxiosInstance.interceptors.response.use(null, errorInterceptor);\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\nconst accessApi = new AccessApi(undefined, RBAC_API_BASE, axiosInstance);\nconst permissionApi = new PermissionApi(undefined, RBAC_API_BASE, axiosInstance);\nconst costApi = new BaseAPI(undefined, COST_API_BASE, axiosInstance);\nconst inventoryApi = new HostsApi(undefined, INVENTORY_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAccessApi() {\n  return accessApi;\n}\n\nexport function getPermissionApi() {\n  return permissionApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n\nexport function getCostApi() {\n  return {\n    getResourceTypes: () => costApi.axios.get(`${COST_API_BASE}/resource-types/`),\n    getResource: (path) => costApi.axios.get(`${path}?limit=20000`),\n  };\n}\n\nexport const getInventoryGroupsApi = () => ({\n  getInventoryGroups: (config) =>\n    inventoryApi.axios.get(\n      `${INVENTORY_API_BASE}/resource-types/inventory-groups?per_page=${config?.limit ?? 50}&page=${config?.page ?? 1}${\n        config?.name ? `&name=${config?.name}` : ''\n      }`\n    ),\n});\n\nexport const getServiceAccountsApi = () => ({\n  getServiceAccounts: (page, perPage, token, sso) => {\n    const first = (page - 1) * perPage;\n    return axios.get(`${sso}/realms/redhat-external/apis/service_accounts/v1?first=${first}&max=${Math.min(perPage + 1, 100)}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  },\n});\n","import useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useEffect, useState } from 'react';\n\nconst useUserData = () => {\n  const chrome = useChrome();\n  const [userData, setUserData] = useState({\n    ready: false,\n    orgAdmin: false,\n    userAccessAdministrator: false,\n  });\n\n  useEffect(() => {\n    if (chrome && !userData.ready)\n      Promise.all([chrome.auth.getUser(), chrome.getUserPermissions('rbac')]).then(([user, permissions]) => {\n        setUserData({\n          ready: true,\n          orgAdmin: user?.identity?.user?.is_org_admin,\n          userAccessAdministrator: !!permissions.find(({ permission }) => permission === 'rbac:*:*'),\n        });\n      });\n  }, [chrome, userData.ready]);\n\n  return userData;\n};\n\nexport default useUserData;\n","import React, { LegacyRef } from 'react';\nimport { Link, LinkProps, To } from 'react-router-dom';\n\ninterface AppLinkProps extends LinkProps {\n  linkBasename?: string;\n}\n\nexport const mergeToBasename = (to: To, basename = '/iam/user-access') => {\n  if (typeof to === 'string') {\n    // replace possible \"//\" after basename\n    return `${basename}/${to}`.replaceAll('//', '/');\n  }\n\n  return {\n    ...to,\n    pathname: `${basename}/${to?.pathname}`.replaceAll('//', '/'),\n  };\n};\n\nconst AppLink: React.FC<AppLinkProps> = React.forwardRef((props: AppLinkProps, ref: LegacyRef<HTMLSpanElement>) => (\n  <span ref={ref}>\n    <Link {...props} to={mergeToBasename(props.to, props.linkBasename)} />\n  </span>\n));\n\nAppLink.displayName = 'AppLink';\n\nexport default AppLink;\n","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized/NotAuthorized';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal/';\n\nimport { API_ERROR } from '../../redux/action-types';\nimport messages from '../../Messages';\n\nconst errorStates = {\n  403: NotAuthorized,\n};\n\nconst ErroReducerCatcher = ({ children }) => {\n  const errorCode = useSelector(({ errorReducer: { errorCode } }) => errorCode);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const sectionTitles = {\n    '/users': intl.formatMessage(messages.rbacUsers),\n    '/groups': intl.formatMessage(messages.rbacGroups),\n  };\n\n  useEffect(() => {\n    if (errorCode) {\n      dispatch({ type: API_ERROR, payload: undefined });\n    }\n  }, [location?.pathname]);\n\n  if (errorCode) {\n    const State = errorStates[errorCode];\n    const name = sectionTitles[Object.keys(sectionTitles).find((key) => location?.pathname.includes(key))] || 'RBAC';\n\n    return <State serviceName={name} />;\n  }\n\n  return (\n    <Fragment>\n      <NotificationPortal />\n      {children}\n    </Fragment>\n  );\n};\n\nErroReducerCatcher.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ErroReducerCatcher;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Skeleton as PFSkeleton,\n} from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nexport const ListLoader = ({ items, isCompact, ...props }) => (\n  <Fragment>\n    <DataList aria-label=\"datalist-placeholder\" isCompact={isCompact}>\n      {[...Array(items)].map((_item, index) => (\n        <DataListItem key={index} aria-labelledby=\"datalist-item-placeholder\">\n          <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"1\">\n                  <Skeleton size={SkeletonSize.lg} {...props} />\n                </DataListCell>,\n              ]}\n            />\n          </DataListItemRow>\n        </DataListItem>\n      ))}\n    </DataList>\n  </Fragment>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number,\n  isCompact: PropTypes.bool,\n};\n\nListLoader.defaultProps = {\n  items: 5,\n};\n\nexport const AppPlaceholder = () => (\n  <div>\n    <div style={{ height: 16, width: 300 }}>\n      <Skeleton />\n    </div>\n    <ListLoader />\n  </div>\n);\n\nexport const ToolbarTitlePlaceholder = () => {\n  return (\n    <div style={{ width: '200px', height: '21px' }}>\n      <Skeleton />\n    </div>\n  );\n};\n\n// eslint-disable-next-line no-unused-vars\nexport const BreadcrumbPlaceholder = ({ showDivider, ...props }) => {\n  return (\n    <div style={{ width: '200px', height: '18px' }}>\n      <PFSkeleton fontSize=\"sm\" />\n    </div>\n  );\n};\n\nBreadcrumbPlaceholder.propTypes = {\n  showDivider: PropTypes.any,\n};\n\nexport const FormItemLoader = () => (\n  <div style={{ height: 32, width: 160 }}>\n    <Skeleton />\n  </div>\n);\n\nexport const PolicyRolesLoader = () => (\n  <Form>\n    <FormGroup fieldId=\"1\">\n      <FormItemLoader />\n    </FormGroup>\n    <FormGroup fieldId=\"2\">\n      <FormItemLoader />\n    </FormGroup>\n  </Form>\n);\n","export const FETCH_GROUP = 'FETCH_GROUP';\nexport const FETCH_ADMIN_GROUP = 'FETCH_ADMIN_GROUP';\nexport const FETCH_SYSTEM_GROUP = 'FETCH_SYSTEM_GROUP';\nexport const INVALIDATE_SYSTEM_GROUP = 'INVALIDATE_SYSTEM_GROUP';\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const REMOVE_GROUPS = 'REMOVE_GROUPS';\nexport const UPDATE_GROUPS_FILTERS = 'UPDATE_GROUPS_FILTERS';\n\nexport const FETCH_USERS = 'FETCH_USERS';\nexport const UPDATE_USERS_FILTERS = 'UPDATE_USERS_FILTERS';\n\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const FETCH_ROLE = 'FETCH_ROLE';\nexport const FETCH_ROLES = 'FETCH_ROLES';\nexport const REMOVE_ROLE = 'REMOVE_ROLE';\nexport const RESET_SELECTED_ROLE = 'RESET_SELECTED_ROLE';\nexport const FETCH_ROLES_FOR_WIZARD = 'FETCH_ROLES_FOR_WIZARD';\nexport const UPDATE_ROLES_FILTERS = 'UPDATE_ROLES_FILTERS';\n\nexport const FETCH_INVENTORY_GROUP = 'FETCH_INVENTORY_GROUP';\nexport const FETCH_INVENTORY_GROUP_RESOURCES = 'FETCH_INVENTORY_GROUP_RESOURCES';\n\nexport const FETCH_SERVICE_ACCOUNTS = 'FETCH_SERVICE_ACCOUNTS';\nexport const ADD_SERVICE_ACCOUNTS_TO_GROUP = 'ADD_SERVICE_ACCOUNTS_TO_GROUP';\nexport const REMOVE_SERVICE_ACCOUNTS_FROM_GROUP = 'REMOVE_SERVICE_ACCOUNTS_FROM_GROUP';\n\nexport const FETCH_GROUP_POLICIES = 'FETCH_GROUP_POLICIES';\nexport const FETCH_POLICY = 'FETCH_POLICY';\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const REMOVE_POLICY = 'REMOVE_POLICY';\nexport const RESET_SELECTED_GROUP = 'RESET_SELECTED_GROUP';\n\nexport const REMOVE_MEMBERS_FROM_GROUP = 'REMOVE_MEMBERS_FROM_GROUP';\nexport const ADD_MEMBERS_TO_GROUP = 'ADD_MEMBERS_TO_GROUP';\n\nexport const REMOVE_ROLES_FROM_GROUP = 'REMOVE_ROLES_FROM_GROUP';\nexport const ADD_ROLES_TO_GROUP = 'ADD_ROLES_TO_GROUP';\nexport const FETCH_ROLES_FOR_GROUP = 'FETCH_ROLES_FOR_GROUP';\nexport const FETCH_MEMBERS_FOR_GROUP = 'FETCH_MEMBERS_FOR_GROUP';\nexport const FETCH_SERVICE_ACCOUNTS_FOR_GROUP = 'FETCH_SERVICE_ACCOUNTS_FOR_GROUP';\nexport const FETCH_ADD_ROLES_FOR_GROUP = 'FETCH_ADD_ROLES_FOR_GROUP';\nexport const FETCH_ROLE_FOR_USER = 'FETCH_ROLE_FOR_USER';\nexport const FETCH_ROLE_FOR_PRINCIPAL = 'FETCH_ROLE_FOR_PRINCIPAL';\nexport const UPDATE_ROLE = 'UPDATE_ROLE';\nexport const PATCH_ROLE = 'PATCH_ROLE';\n\nexport const GET_PRINCIPAL_ACCESS = 'GET_PRINCIPAL_ACCESS';\n\nexport const LIST_PERMISSIONS = 'LIST_PERMISSIONS';\nexport const LIST_APPLICATION_OPTIONS = 'LIST_APPLICATION_OPTIONS';\nexport const LIST_RESOURCE_OPTIONS = 'LIST_RESOURCE_OPTIONS';\nexport const LIST_OPERATION_OPTIONS = 'LIST_OPERATION_OPTIONS';\n\nexport const GET_RESOURCE_DEFINITIONS = 'GET_RESOURCE_DEFINITIONS';\nexport const GET_RESOURCE = 'GET_RESOURCE';\nexport const EXPAND_SPLATS = 'EXPAND_SPLATS';\nexport const RESET_EXPAND_SPLATS = 'RESET_EXPAND_SPLATS';\n\nexport const API_ERROR = 'API_ERROR';\n","import {\n  FETCH_GROUP,\n  FETCH_ADMIN_GROUP,\n  FETCH_SYSTEM_GROUP,\n  FETCH_GROUPS,\n  RESET_SELECTED_GROUP,\n  FETCH_ROLES_FOR_GROUP,\n  FETCH_ADD_ROLES_FOR_GROUP,\n  FETCH_MEMBERS_FOR_GROUP,\n  FETCH_SERVICE_ACCOUNTS_FOR_GROUP,\n  UPDATE_GROUPS_FILTERS,\n  INVALIDATE_SYSTEM_GROUP,\n} from '../../redux/action-types';\nimport omit from 'lodash/omit';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\n// Initial State\nexport const groupsInitialState = {\n  groups: {\n    data: [],\n    meta: {},\n    filters: {},\n    pagination: { count: 0 },\n  },\n  selectedGroup: { addRoles: {}, members: { meta: defaultSettings }, serviceAccounts: { meta: defaultSettings }, pagination: defaultSettings },\n  isLoading: false,\n  isRecordLoading: false,\n};\n\nconst setLoadingState = (state) => ({ ...state, error: undefined, isLoading: true });\nconst setRecordLoadingState = (state) => ({\n  ...state,\n  isRecordLoading: true,\n  selectedGroup: { ...state.selectedGroup, error: undefined, loaded: false },\n});\nconst setRecordRolesLoadingState = (state) => ({\n  ...state,\n  isRecordRolesLoading: true,\n  selectedGroup: { ...state.selectedGroup, error: undefined, loaded: false },\n});\nconst setSystemGroupLoadingState = (state) => ({\n  ...state,\n  isSystemGroupLoading: true,\n  error: undefined,\n});\nconst setGroups = (state, { payload }) => ({\n  ...state,\n  groups: { pagination: state.groups?.pagination, filters: state.groups?.filters, ...payload },\n  isLoading: false,\n});\nconst setAdminGroup = (state, { payload }) => ({ ...state, adminGroup: payload?.data?.filter((group) => group?.admin_default)?.[0] });\nconst setSystemGroup = (state, { payload }) => ({ ...state, isSystemGroupLoading: false, systemGroup: payload?.data?.[0] });\nconst invalidateSystemGroup = (state) => ({ ...state, systemGroup: undefined });\nconst setGroup = (state, { payload }) => ({\n  ...state,\n  isRecordLoading: false,\n  ...(!payload.error\n    ? {\n        groups: {\n          ...state.groups,\n          data: state.groups.data.map((group) => ({\n            ...group,\n            ...(payload.uuid === group.uuid && { ...payload, loaded: true }),\n          })),\n        },\n        selectedGroup: {\n          ...state.selectedGroup,\n          members: { ...state.selectedGroup.members, data: payload.principals },\n          ...omit(payload, ['principals', 'roles']),\n          loaded: true,\n          pagination: { ...state.selectedGroup.pagination, count: payload.roleCount, offset: 0 },\n        },\n      }\n    : payload),\n});\nconst resetSelectedGroup = (state) => ({ ...state, selectedGroup: undefined });\nconst setRolesForGroup = (state, { payload }) => ({\n  ...state,\n  isRecordRolesLoading: false,\n  selectedGroup: {\n    ...state.selectedGroup,\n    ...(!payload.error ? { roles: payload.data, pagination: payload.meta } : payload),\n    loaded: true,\n  },\n});\nconst setAccountsForGroupLoading = (state = {}) => ({\n  ...state,\n  selectedGroup: {\n    ...(state.selectedGroup || {}),\n    serviceAccounts: { isLoading: true },\n  },\n});\nconst setAccountsForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: {\n    ...(state.selectedGroup || {}),\n    serviceAccounts: {\n      isLoading: false,\n      ...(!payload.error\n        ? { ...payload, data: payload.data.map((item) => ({ ...item, uuid: item.name, time_created: item.time_created * 1000 })) }\n        : {}),\n    },\n  },\n});\nconst setMembersForGroupLoading = (state = {}) => ({\n  ...state,\n  selectedGroup: {\n    ...(state.selectedGroup || {}),\n    members: { isLoading: true },\n  },\n});\nconst setMembersForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: {\n    ...(state.selectedGroup || {}),\n    members: {\n      isLoading: false,\n      ...(!payload.error ? payload : {}),\n    },\n    ...(payload.error ? payload : {}),\n  },\n});\n\nconst setAddRolesLoading = (state) => ({\n  ...state,\n  selectedGroup: { ...state.selectedGroup, addRoles: { loaded: false } },\n});\nconst setAddRolesForGroup = (state, { payload }) => ({\n  ...state,\n  selectedGroup: {\n    ...state.selectedGroup,\n    addRoles: { ...(!payload.error ? { roles: payload.data, pagination: payload.meta } : state.addRoles), loaded: true },\n  },\n  ...(payload.error ? payload : {}),\n});\n\nconst setFilters = (state, { payload }) => ({ ...state, groups: { ...state.groups, filters: payload } });\n\nexport default {\n  [`${FETCH_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUPS}_FULFILLED`]: setGroups,\n  [`${FETCH_ADMIN_GROUP}_PENDING`]: setLoadingState,\n  [`${FETCH_ADMIN_GROUP}_FULFILLED`]: setAdminGroup,\n  [`${FETCH_SYSTEM_GROUP}_PENDING`]: setSystemGroupLoadingState,\n  [`${FETCH_SYSTEM_GROUP}_FULFILLED`]: setSystemGroup,\n  [INVALIDATE_SYSTEM_GROUP]: invalidateSystemGroup,\n  [`${FETCH_GROUP}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_GROUP}_FULFILLED`]: setGroup,\n  [`${FETCH_ROLES_FOR_GROUP}_PENDING`]: setRecordRolesLoadingState,\n  [`${FETCH_ROLES_FOR_GROUP}_FULFILLED`]: setRolesForGroup,\n  [`${FETCH_SERVICE_ACCOUNTS_FOR_GROUP}_PENDING`]: setAccountsForGroupLoading,\n  [`${FETCH_SERVICE_ACCOUNTS_FOR_GROUP}_FULFILLED`]: setAccountsForGroup,\n  [`${FETCH_MEMBERS_FOR_GROUP}_PENDING`]: setMembersForGroupLoading,\n  [`${FETCH_MEMBERS_FOR_GROUP}_FULFILLED`]: setMembersForGroup,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_PENDING`]: setAddRolesLoading,\n  [`${FETCH_ADD_ROLES_FOR_GROUP}_FULFILLED`]: setAddRolesForGroup,\n  [RESET_SELECTED_GROUP]: resetSelectedGroup,\n  [UPDATE_GROUPS_FILTERS]: setFilters,\n};\n","import {\n  FETCH_ROLE,\n  FETCH_ROLES,\n  FETCH_ROLE_FOR_USER,\n  FETCH_ROLE_FOR_PRINCIPAL,\n  FETCH_ROLES_FOR_WIZARD,\n  UPDATE_ROLES_FILTERS,\n} from '../../redux/action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\n// Initial State\nexport const rolesInitialState = {\n  isLoading: false,\n  isRecordLoading: false,\n  roles: {\n    data: [],\n    meta: defaultSettings,\n    filters: {},\n    pagination: { count: 0 },\n  },\n  rolesForWizard: {\n    data: [],\n    meta: defaultSettings,\n  },\n  selectedRole: {},\n};\n\nconst setLoadingState = (state) => ({ ...state, isLoading: true, error: undefined });\nconst setRecordLoadingState = (state) => ({ ...state, isRecordLoading: true, error: undefined });\nconst setRole = (state, { payload }) => ({\n  ...state,\n  ...(!payload.error ? { selectedRole: payload } : payload),\n  isRecordLoading: false,\n});\nconst setRoles = (state, { payload }) => ({\n  ...state,\n  ...(!payload.error ? { roles: { pagination: state.roles?.pagination, filters: state.roles?.filters, ...payload } } : payload),\n  isLoading: false,\n});\nconst setRolesWithAccess = (state, { payload }) => ({\n  ...state,\n  rolesWithAccess: { ...state.rolesWithAccess, [payload.uuid]: payload },\n  isRecordLoading: false,\n});\n\nconst setRolesForWizard = (state, { payload }) => ({ ...state, rolesForWizard: payload, isWizardLoading: false });\nconst setWizardLoadingState = (state) => ({ ...state, isWizardLoading: true });\n\nconst setFilters = (state, { payload }) => ({ ...state, roles: { ...state.roles, filters: payload } });\n\nexport default {\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLE}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLE}_FULFILLED`]: setRole,\n  [`${FETCH_ROLES}_FULFILLED`]: setRoles,\n  [`${FETCH_ROLES}_PENDING`]: setLoadingState,\n  [`${FETCH_ROLE_FOR_USER}_FULFILLED`]: setRolesWithAccess,\n  [`${FETCH_ROLE_FOR_USER}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLE_FOR_PRINCIPAL}_FULFILLED`]: setRolesWithAccess,\n  [`${FETCH_ROLE_FOR_PRINCIPAL}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_ROLES_FOR_WIZARD}_FULFILLED`]: setRolesForWizard,\n  [`${FETCH_ROLES_FOR_WIZARD}_PENDING`]: setWizardLoadingState,\n  [UPDATE_ROLES_FILTERS]: setFilters,\n};\n","import { FETCH_USERS, UPDATE_USERS_FILTERS } from '../action-types';\nimport { defaultSettings, PaginationDefaultI } from '../../helpers/shared/pagination';\n\nexport interface UserFilters {\n  username?: string;\n  email?: string;\n  status?: string[];\n}\nexport interface UserStore {\n  selectedUser: Record<string, unknown>;\n  isUserDataLoading: boolean;\n  users: {\n    meta: PaginationDefaultI;\n    filters: UserFilters;\n    pagination: PaginationDefaultI & { redirected?: boolean };\n    data?: any;\n  };\n}\n\n// Initial State\nexport const usersInitialState: UserStore = {\n  selectedUser: {},\n  isUserDataLoading: false,\n  users: {\n    meta: defaultSettings,\n    filters: {},\n    pagination: { ...defaultSettings, redirected: false },\n  },\n};\n\nconst setLoadingState = (state: any) => ({\n  ...state,\n  isUserDataLoading: true,\n  users: {\n    ...state.users,\n    pagination: {\n      ...state.users.pagination,\n      redirected: false,\n    },\n  },\n});\n\nconst setUsers = (state: UserStore, { payload }: any) => ({\n  ...state,\n  users: { pagination: state.users?.pagination, filters: state.users?.filters, ...payload },\n  isUserDataLoading: false,\n});\n\nconst setFilters = (state: any, { payload }: any) => ({ ...state, users: { ...state.users, filters: payload } });\n\nexport default {\n  [`${FETCH_USERS}_PENDING`]: setLoadingState,\n  [`${FETCH_USERS}_FULFILLED`]: setUsers,\n  [UPDATE_USERS_FILTERS]: setFilters,\n};\n","export const RBAC_API_BASE = `/api/rbac/v1`;\nexport const COST_API_BASE = `/api/cost-management/v1`;\nexport const INVENTORY_API_BASE = `/api/inventory/v1`;\n\nexport const DEFAULT_MUA_BUNDLE = 'rhel';\n\nexport const DEFAULT_ACCESS_GROUP_ID = 'default-access';\n","const pathnames = {\n  rbac: {\n    path: '/',\n    title: 'User Access',\n  },\n  groups: {\n    link: '/groups',\n    path: '/groups/*',\n    title: 'Groups',\n  },\n  'add-group': {\n    link: '/groups/add-group',\n    path: 'add-group',\n    title: 'Create group',\n  },\n  'remove-group': {\n    link: '/groups/remove-group/:groupId',\n    path: 'remove-group/:groupId',\n    title: 'Delete group',\n  },\n  'edit-group': {\n    link: '/groups/edit/:groupId',\n    path: 'edit/:groupId',\n    title: 'Edit group',\n  },\n  'group-detail': {\n    link: '/groups/detail/:groupId',\n    path: '/groups/detail/:groupId/*',\n    title: 'Group',\n  },\n  'group-detail-roles': {\n    link: '/groups/detail/:groupId/roles',\n    path: 'roles/*',\n    title: 'Group roles',\n  },\n  'group-roles-edit-group': {\n    link: '/groups/detail/:groupId/roles/edit-group',\n    path: 'edit-group',\n    title: 'Group roles - edit group',\n  },\n  'group-roles-remove-group': {\n    link: '/groups/detail/:groupId/roles/remove-group',\n    path: 'remove-group',\n    title: 'Group roles - remove group',\n  },\n  'group-add-roles': {\n    link: '/groups/detail/:groupId/roles/add-roles',\n    path: 'add-roles',\n    title: 'Add group roles',\n  },\n  'group-detail-role-detail': {\n    link: '/groups/detail/:groupId/roles/detail/:roleId',\n    path: '/groups/detail/:groupId/roles/detail/:roleId',\n    title: 'Group role',\n  },\n  'group-detail-members': {\n    link: '/groups/detail/:groupId/members',\n    path: 'members/*',\n    title: 'Group members',\n  },\n  'group-add-members': {\n    link: '/groups/detail/:groupId/members/add-members',\n    path: 'add-members',\n    title: 'Add group members',\n  },\n  'group-members-edit-group': {\n    link: '/groups/detail/:groupId/members/edit-group',\n    path: 'edit-group',\n    title: 'Group members - edit group',\n  },\n  'group-members-remove-group': {\n    link: '/groups/detail/:groupId/members/remove-group',\n    path: 'remove-group',\n    title: 'Group members - remove group',\n  },\n  'group-detail-service-accounts': {\n    link: '/groups/detail/:groupId/service-accounts',\n    path: 'service-accounts/*',\n    title: 'Group service accounts',\n  },\n  'group-add-service-account': {\n    link: '/groups/detail/:groupId/service-accounts/add-service-account',\n    path: 'add-service-account',\n    title: 'Add group service account',\n  },\n  'group-service-accounts-edit-group': {\n    link: '/groups/detail/:groupId/service-accounts/edit-group',\n    path: 'edit-group',\n    title: 'Group service-accounts - edit group',\n  },\n  'group-service-accounts-remove-group': {\n    link: '/groups/detail/:groupId/service-accounts/remove',\n    path: 'remove',\n    title: 'Group service-accounts - remove group',\n  },\n  roles: {\n    link: '/roles',\n    path: '/roles/*',\n    title: 'Roles',\n  },\n  'add-role': {\n    link: '/roles/add-role',\n    path: 'add-role',\n    title: 'Add role',\n  },\n  'remove-role': {\n    link: '/roles/remove/:roleId',\n    path: 'remove/:roleId',\n    title: 'Remove role',\n  },\n  'edit-role': {\n    link: '/roles/edit/:roleId',\n    path: 'edit/:roleId',\n    title: 'Edit role',\n  },\n  'role-detail': {\n    link: '/roles/detail/:roleId',\n    path: '/roles/detail/:roleId/*',\n    title: 'Role',\n  },\n  'role-add-permission': {\n    link: '/roles/detail/:roleId/role-add-permission',\n    path: 'role-add-permission',\n    title: 'Add permissions',\n  },\n  'role-detail-remove': {\n    link: '/roles/detail/:roleId/remove',\n    path: 'remove',\n    title: 'Remove role',\n  },\n  'role-detail-edit': {\n    link: '/roles/detail/:roleId/edit',\n    path: 'edit',\n    title: 'Edit role',\n  },\n  'role-detail-permission': {\n    link: '/roles/detail/:roleId/permission/:permissionId',\n    path: '/roles/detail/:roleId/permission/:permissionId/*',\n    title: 'Role permission',\n  },\n  'role-detail-permission-edit': {\n    link: '/roles/detail/:roleId/permission/:permissionId/edit',\n    path: 'edit',\n    title: 'Edit permissions',\n  },\n  users: {\n    link: '/users',\n    path: '/users',\n    title: 'Users',\n  },\n  'user-detail': {\n    link: '/users/detail/:username',\n    path: '/users/detail/:username/*',\n    title: 'User',\n  },\n  'add-user-to-group': {\n    link: '/users/detail/:username/add-to-group',\n    path: 'add-to-group',\n    title: 'Add user to a group',\n  },\n  'user-add-group-roles': {\n    link: '/users/detail/:username/add-group-roles/:groupId',\n    path: 'add-group-roles/:groupId',\n    title: 'Add group roles',\n  },\n  'my-user-access': {\n    link: '/my-user-access',\n    path: '/*',\n    title: 'My User Access',\n  },\n  'quickstarts-test': {\n    link: '/quickstarts-test',\n    path: 'quickstarts-test',\n    title: 'Quickstarts',\n  },\n};\n\nexport default pathnames;\n","import { createContext } from 'react';\n\nconst PermissionsContext = createContext({\n  userAccessAdministrator: false,\n  orgAdmin: false,\n});\n\nexport default PermissionsContext;\n","import { FETCH_POLICY, FETCH_GROUP_POLICIES } from '../../redux/action-types';\n\n// Initial State\nexport const policiesInitialState = {\n  policies: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 10,\n      offset: 0,\n    },\n  },\n  policy: {},\n  isLoading: false,\n  isRecordLoading: false,\n};\n\nconst setLoadingState = (state) => ({ ...state, isLoading: true });\nconst setPolicies = (state, { payload }) => ({ ...state, policies: payload, isLoading: false });\nconst setRecordLoadingState = (state) => ({ ...state, isRecordLoading: true });\nconst selectPolicy = (state, { payload }) => ({ ...state, selectedPolicy: payload, isRecordLoading: false });\n\nexport default {\n  [`${FETCH_GROUP_POLICIES}_PENDING`]: setLoadingState,\n  [`${FETCH_GROUP_POLICIES}_FULFILLED`]: setPolicies,\n  [`${FETCH_POLICY}_PENDING`]: setRecordLoadingState,\n  [`${FETCH_POLICY}_FULFILLED`]: selectPolicy,\n};\n","import { GET_PRINCIPAL_ACCESS } from '../../redux/action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\n// Initial State\nexport const accessInitialState = {\n  isLoading: false,\n  access: {\n    data: [],\n    meta: defaultSettings,\n  },\n};\n\nconst setLoadingState = (state) => ({ ...state, isLoading: true });\n\nconst setAccess = (state, { payload }) => ({ ...state, access: payload, isLoading: false });\n\nexport default {\n  [`${GET_PRINCIPAL_ACCESS}_PENDING`]: setLoadingState,\n  [`${GET_PRINCIPAL_ACCESS}_FULFILLED`]: setAccess,\n};\n","import {\n  LIST_PERMISSIONS,\n  LIST_APPLICATION_OPTIONS,\n  LIST_RESOURCE_OPTIONS,\n  LIST_OPERATION_OPTIONS,\n  EXPAND_SPLATS,\n  RESET_EXPAND_SPLATS,\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const permissionInitialState = {\n  isLoading: false,\n  options: {\n    isLoadingApplication: false,\n    isLoadingResource: false,\n    isLoadingOperation: false,\n    application: { data: [] },\n    resource: { data: [] },\n    operation: { data: [] },\n  },\n  permission: {\n    data: [],\n    meta: defaultSettings,\n  },\n  expandSplats: {\n    data: [],\n    meta: defaultSettings,\n  },\n};\n\nconst setLoadingState = (state) => ({ ...state, isLoading: true });\n\nconst setPermissions = (state, { payload }) => ({ ...state, permission: payload, isLoading: false });\n\nconst setLoadingApplicationState = (state) => ({ ...state, options: { ...state.options, isLoadingApplication: true } });\nconst setLoadingResourcesState = (state) => ({ ...state, options: { ...state.options, isLoadingResource: true } });\nconst setLoadingOperationState = (state) => ({ ...state, options: { ...state.options, isLoadingOperation: true } });\nconst setApplicationOptions = (state, { payload }) => ({\n  ...state,\n  options: { ...state.options, application: payload, isLoadingApplication: false },\n});\nconst setResourceOptions = (state, { payload }) => ({ ...state, options: { ...state.options, resource: payload, isLoadingResource: false } });\nconst setOperationOptions = (state, { payload }) => ({ ...state, options: { ...state.options, operation: payload, isLoadingOperation: false } });\n\nconst setLoadingExpandSplats = (state) => ({ ...state, isLoadingExpandSplats: true });\nconst setExpandSplats = (state, { payload }) => ({ ...state, expandSplats: payload, isLoadingExpandSplats: false });\nconst resetExpandSplats = () => permissionInitialState;\n\nexport default {\n  [`${LIST_PERMISSIONS}_PENDING`]: setLoadingState,\n  [`${LIST_PERMISSIONS}_FULFILLED`]: setPermissions,\n  [`${LIST_APPLICATION_OPTIONS}_PENDING`]: setLoadingApplicationState,\n  [`${LIST_APPLICATION_OPTIONS}_FULFILLED`]: setApplicationOptions,\n  [`${LIST_RESOURCE_OPTIONS}_PENDING`]: setLoadingResourcesState,\n  [`${LIST_RESOURCE_OPTIONS}_FULFILLED`]: setResourceOptions,\n  [`${LIST_OPERATION_OPTIONS}_PENDING`]: setLoadingOperationState,\n  [`${LIST_OPERATION_OPTIONS}_FULFILLED`]: setOperationOptions,\n  [`${EXPAND_SPLATS}_PENDING`]: setLoadingExpandSplats,\n  [`${EXPAND_SPLATS}_FULFILLED`]: setExpandSplats,\n  [`${RESET_EXPAND_SPLATS}`]: resetExpandSplats,\n};\n","import { GET_RESOURCE_DEFINITIONS, GET_RESOURCE } from '../../redux/action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\n// Initial State\nexport const costInitialState = {\n  isLoading: false,\n  resourceTypes: {\n    data: [],\n    meta: defaultSettings,\n  },\n  resources: {},\n  loadingResources: 0,\n};\n\nconst setLoadingState = (state) => ({ ...state, isLoading: true });\n\nconst setResourceDefinitions = (state, { payload }) => ({ ...state, resourceTypes: payload, isLoading: false });\nconst setResource = (state, { payload }) => ({\n  ...state,\n  resources: { ...state.resources, [payload.links.first.split('/')[5]]: payload.data.filter(({ value }) => value !== null) },\n  loadingResources: state.loadingResources - 1,\n});\n\nconst setResourceLoading = (state) => ({ ...state, loadingResources: state.loadingResources + 1 });\n\nexport default {\n  [`${GET_RESOURCE_DEFINITIONS}_PENDING`]: setLoadingState,\n  [`${GET_RESOURCE_DEFINITIONS}_FULFILLED`]: setResourceDefinitions,\n  [`${GET_RESOURCE}_PENDING`]: setResourceLoading,\n  [`${GET_RESOURCE}_FULFILLED`]: setResource,\n};\n","import { RESULTS, ServiceAccount, ServiceAccountsPayload } from '../../helpers/service-account/service-account-helper';\nimport { defaultCompactSettings } from '../../helpers/shared/pagination';\nimport { PaginationProps } from '../../smart-components/group/service-account/add-group-service-accounts';\nimport { FETCH_SERVICE_ACCOUNTS } from '../action-types';\n\nexport interface ServiceAccountsState {\n  isLoading: boolean;\n  status: string;\n  serviceAccounts: ServiceAccount[];\n  limit: number;\n  offset: number;\n}\n\n// Initial State\nexport const serviceAccountsInitialState: ServiceAccountsState = {\n  offset: 0,\n  limit: defaultCompactSettings.limit,\n  isLoading: false,\n  serviceAccounts: [],\n  status: RESULTS,\n};\n\nconst setLoadingState = (state: ServiceAccountsState) => ({\n  ...state,\n  isLoading: true,\n});\n\nconst setServiceAccounts = (state: ServiceAccountsState, { payload, meta }: { payload: ServiceAccountsPayload; meta: PaginationProps }) => ({\n  ...state,\n  limit: meta.limit,\n  offset: meta.offset,\n  serviceAccounts: payload.data,\n  status: payload.status,\n  isLoading: false,\n});\n\nexport default {\n  [`${FETCH_SERVICE_ACCOUNTS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_ACCOUNTS}_FULFILLED`]: setServiceAccounts,\n};\n","import { API_ERROR } from '../action-types';\n\nconst setErrorState = (_, { payload }) => ({\n  errorCode: payload,\n});\n\nexport default {\n  [API_ERROR]: setErrorState,\n};\n","import { FETCH_INVENTORY_GROUP } from '../action-types';\n\nexport const inventoryGroupsInitialState = {\n  isLoading: false,\n  resourceTypes: {},\n  total: 0,\n};\n\nconst setLoadingState = (state) => ({ ...state, isLoading: true });\n\nconst setResourceTypes = (state, { payload, meta }) => {\n  const data = payload.data.reduce((acc, curr) => ({ ...acc, [curr.name]: { ...curr } }), {});\n  return {\n    ...state,\n    resourceTypes: meta.permissions?.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: meta?.config?.page > 1 ? { ...(acc?.[curr] || {}), ...data } : data,\n      }),\n      state.resourceTypes\n    ),\n    total: payload.meta.count,\n    isLoading: false,\n  };\n};\n\nexport default {\n  [`${FETCH_INVENTORY_GROUP}_PENDING`]: setLoadingState,\n  [`${FETCH_INVENTORY_GROUP}_FULFILLED`]: setResourceTypes,\n};\n","import { createContext } from 'react';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport userReducer, { usersInitialState } from '../redux/reducers/user-reducer';\nimport groupReducer, { groupsInitialState } from '../redux/reducers/group-reducer';\nimport policyReducer, { policiesInitialState } from '../redux/reducers/policy-reducer';\nimport roleReducer, { rolesInitialState } from '../redux/reducers/role-reducer';\nimport accessReducer, { accessInitialState } from '../redux/reducers/access-reducer';\nimport permissionReducer, { permissionInitialState } from '../redux/reducers/permission-reducer';\nimport costReducer, { costInitialState } from '../redux/reducers/cost-reducer';\nimport serviceAccountReducer, { serviceAccountsInitialState } from '../redux/reducers/service-account-reducer';\nimport errorReducer from '../redux/reducers/errorReducer';\nimport inventoryReducer, { inventoryGroupsInitialState } from '../redux/reducers/inventory-reducer';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nconst middlewares = [\n  thunk,\n  promiseMiddleware,\n  notificationsMiddleware({\n    errorTitleKey: ['statusText', 'message', 'errors[0].status'],\n    errorDescriptionKey: ['errors[0].detail', 'errors', 'stack'],\n  }),\n  reduxLogger,\n].filter((middleware) => typeof middleware === 'function');\n\nconst registry = new ReducerRegistry({}, middlewares);\n\nregistry.register({\n  userReducer: applyReducerHash(userReducer, usersInitialState),\n  groupReducer: applyReducerHash(groupReducer, groupsInitialState),\n  policyReducer: applyReducerHash(policyReducer, policiesInitialState),\n  roleReducer: applyReducerHash(roleReducer, rolesInitialState),\n  accessReducer: applyReducerHash(accessReducer, accessInitialState),\n  permissionReducer: applyReducerHash(permissionReducer, permissionInitialState),\n  inventoryReducer: applyReducerHash(inventoryReducer, inventoryGroupsInitialState),\n  costReducer: applyReducerHash(costReducer, costInitialState),\n  serviceAccountReducer: applyReducerHash(serviceAccountReducer, serviceAccountsInitialState),\n  errorReducer: applyReducerHash(errorReducer),\n  notifications: notificationsReducer,\n});\n\nexport default registry;\n"],"names":["notApplicable","id","description","defaultMessage","orgAdministrator","orgAdmin","userAccessAdmin","orgAdminHint","userAccessAdminHint","pageNotExists","usersDescription","rbacUsers","rbacGroups","pleaseChoose","yes","no","active","inactive","none","cancel","close","exit","stay","save","edit","delete","review","confirm","confirmCheckMessage","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","checkFilterBeginning","clearAllFilters","filterMatchesNoFilters","configureItems","toConfigureUserAccess","createAtLeastOneItem","selectNone","selectPage","selectAll","ungroupedSystems","filterByKey","editGroupSuccessTitle","editGroupSuccessDescription","editGroupErrorTitle","editGroupErrorDescription","removeGroupSuccess","removeGroupsSuccess","removeGroupError","removeGroupsError","addGroupMembersSuccessTitle","addGroupMemberSuccessTitle","addGroupMembersSuccessDescription","addGroupMemberSuccessDescription","addGroupMembersErrorTitle","addGroupMemberErrorTitle","addGroupMembersErrorDescription","addGroupMemberErrorDescription","removeGroupMembersSuccessTitle","removeGroupMembersSuccessDescription","removeGroupMembersErrorTitle","removeGroupMembersErrorDescription","addGroupRolesSuccessTitle","addGroupRolesSuccessDescription","addGroupRolesErrorTitle","addGroupRolesErrorDescription","addGroupServiceAccountsSuccessTitle","addGroupServiceAccountsSuccessDescription","addGroupServiceAccountsErrorTitle","addGroupServiceAccountsErrorDescription","removeGroupServiceAccountsSuccessTitle","removeGroupServiceAccountsSuccessDescription","removeGroupServiceAccountsErrorTitle","removeGroupServiceAccountsErrorDescription","removeGroupRolesSuccessTitle","removeGroupRolesSuccessDescription","removeGroupRolesErrorTitle","removeGroupRolesErrorDescription","addPolicySuccessTitle","addPolicySuccessDescription","addPolicyErrorTitle","addPolicyErrorDescription","removePolicySuccessTitle","removePolicySuccessDescription","editPolicySuccessTitle","editPolicySuccessDescription","editPolicyErrorTitle","editPolicyErrorDescription","createRoleErrorTitle","createRoleErrorDescription","removeRoleSuccessTitle","removeRoleSuccessDescription","removeRoleErrorTitle","removeRoleErrorDescription","editRoleSuccessTitle","editRoleSuccessDescription","editRoleErrorTitle","editRoleErrorDescription","exitItemCreation","discardedInputsWarning","returnToStepNumber","addingGroupTitle","editingGroupTitle","editingRoleTitle","editingRoleCanceledDescription","addingGroupCanceledDescription","editGroupCanceledDescription","addGroupSuccessTitle","addGroupSuccessDescription","addingGroupMemberTitle","addingGroupMembersTitle","addingGroupMemberDescription","addingGroupMembersDescription","addingGroupMemberCancelled","addingGroupMembersCancelled","groupNameTakenTitle","groupNameTakenText","roleNameTakenTitle","roleNameTakenText","reviewDetails","name","clientId","owner","timeCreated","lastModified","roleName","roleDescription","baseRole","role","roles","groups","group","serviceAccount","serviceAccounts","visitServiceAccountsPage","addServiceAccountsToGroupDescription","groupName","groupDescription","groupDefinition","required","maxCharactersWarning","selectRolesForGroupText","toManageUsersText","createGroup","addUserToGroup","addSpecificUserToGroup","nameAndDescription","addRole","addRoles","addMembers","members","user","users","username","email","status","firstName","lastName","addToGroup","removeMemberText","removeMembersText","serviceAccountsPage","addServiceAccount","removeGroupServiceAccountsQuestion","removeServiceAccountsText","remove","member","removeMemberQuestion","removeMembersQuestion","removeMember","addMember","allOrgAdminsAreMembers","allUsersAreMembers","noGroupMembers","addUserToConfigure","addingGroupRolesTitle","addingGroupRolesCancelled","addRoleToGroup","addRoleToThisGroup","addRolesToGroup","onlyNonUserGroupsVisible","onlyGroupRolesVisible","defaultAccessGroupEditWarning","warning","continue","allRolesAdded","removeRoleModalText","removeRolesModalText","removeRole","removeRoles","removeRoleQuestion","removeRolesQuestion","defaultGroupNotManually","noGroupAccounts","addAccountsToThisGroup","noServiceAccountsFound","contactServiceTeamForAccounts","noGroupRoles","contactServiceTeamForRoles","addRoleToConfigureAccess","editGroupInfo","orgAdminInheritedRoles","usersInheritedRoles","invalidGroup","invalidRole","invalidUser","defaultAccessGroupNameChanged","defaultAccessGroupChanged","groupNotFound","groupDoesNotExist","backToPreviousPage","deleteGroupsQuestion","deleteGroupQuestion","deleteGroups","deleteGroup","deletingGroupRemovesRoles","deletingGroupsRemovesRoles","understandActionIrreversible","nameAlreadyTaken","appServicesNotManaged","allUsersViewEverything","actionsOnClustersPermissions","application","permission","permissions","resourceType","operation","resourceDefinitions","resourceDefinition","noPermissionsForInsights","contactOrgAdministrator","notSubscribed","yourRoles","yourPermissions","myUserAccess","selectAppsToViewPermissions","chooseSubscriptionEllipsis","viewResourceDefinitions","noResourceDefinitions","creatingRoleCanceled","permissionStringDescription","key","value","permissionResourcesDetails","addToDefinitions","confirmDetails","confirmDetailsDescription","selectedPermissions","addPermissions","addPermission","selectPermissionsForRole","onlyGranularPermissions","noWildcardPermissions","whyNotSeeingAllPermissions","followingPermissionsCannotBeAdded","configureResourcesForPermission","noRbacPermissions","noCostManagementPermissions","configureCostSources","noResultsFound","permissionNotDisplayedDescription","seeLess","seeMore","roleCreatedSuccessfully","createAnotherRole","groupCreatedSuccessfully","createAnotherGroup","granularPermissionsWillBeCopied","selectState","selectResources","reviewRoleDetails","selectGroups","inventoryGroupsTypeAheadLabel","inventoryGroupsTooltip","inventoryGroupsAccessTitle","inventoryGroupsAccessDescription","descriptioin","createRole","defineCostResources","applyCostPermissionText","applyInventoryGroupsRolePermission","createRoleFromScratch","copyAnExistingRole","permissionsAddedSuccessfully","addedPermissions","assignAtLeastOneResource","assignAtLeastOneInventoryGroup","resourcesAvailable","resourcesDefined","filterByResource","exitEditResourceDefinitions","changesWillBeLost","editResourceDefinitions","editPermissionsUsingArrows","roleWithNameExists","deleteRoleQuestion","roleWilBeRemovedWithPermissions","defineAtLeastOneResource","permissionWillNotBeGrantedThroughRole","permissionsWillNotBeGrantedThroughRole","lastCommit","resourceDefinitionsApplyToCostAndInventory","removePermissionQuestion","removePermission","removePermissionsQuestion","removePermissions","noRolePermissions","definedResources","resource","resources","userDescription","userNotFound","userNotFoundDescription","addNewUsersText","triggerMyQuickstart","triggerMyCatalog","restoreDefaultAccessQuestion","restoreToDefault","restoreDefaultAccessInfo","restoreDefaultAccessDescription","noGroups","loading","noPermissions","copyToAll","serviceAccountsApi","NO_DATA","LAST_PAGE","RESULTS","async","getServiceAccounts","limit","offset","token","sso","page","Math","trunc","perPage","response","data","length","slice","map","createdAt","item","uuid","defaultSettings","itemCount","count","defaultAdminSettings","defaultCompactSettings","calculatePage","floor","calculateOffset","syncDefaultPaginationWithUrl","location","navigate","defaultPagination","searchParams","URLSearchParams","search","parseInt","get","isNaN","set","String","pathname","toString","replace","isPaginationPresentInUrl","isOffsetValid","getLastPageOffset","applyPaginationToUrl","axiosInstance","create","interceptors","request","use","error","store","getStore","dispatch","type","payload","principalApi","PrincipalApi","undefined","groupApi","GroupApi","roleApi","RoleApi","accessApi","PolicyApi","AccessApi","permissionApi","PermissionApi","costApi","BaseAPI","inventoryApi","HostsApi","getPrincipalApi","getGroupApi","getRoleApi","getAccessApi","getPermissionApi","getCostApi","getResourceTypes","axios","getResource","path","getInventoryGroupsApi","getInventoryGroups","config","getServiceAccountsApi","first","min","headers","Authorization","chrome","userData","setUserData","useState","ready","userAccessAdministrator","useEffect","Promise","all","auth","getUser","getUserPermissions","then","identity","is_org_admin","find","mergeToBasename","to","basename","replaceAll","AppLink","props","ref","Link","linkBasename","displayName","errorStates","ErroReducerCatcher","children","errorCode","useSelector","errorReducer","useLocation","useDispatch","intl","sectionTitles","formatMessage","State","Object","keys","includes","serviceName","Fragment","propTypes","isRequired","ListLoader","items","isCompact","DataList","Array","_item","index","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","size","lg","defaultProps","AppPlaceholder","style","height","width","ToolbarTitlePlaceholder","BreadcrumbPlaceholder","showDivider","fontSize","FormItemLoader","FETCH_GROUP","FETCH_ADMIN_GROUP","FETCH_SYSTEM_GROUP","INVALIDATE_SYSTEM_GROUP","FETCH_GROUPS","ADD_GROUP","UPDATE_GROUP","REMOVE_GROUPS","UPDATE_GROUPS_FILTERS","FETCH_USERS","UPDATE_USERS_FILTERS","ADD_ROLE","FETCH_ROLE","FETCH_ROLES","REMOVE_ROLE","FETCH_ROLES_FOR_WIZARD","UPDATE_ROLES_FILTERS","FETCH_INVENTORY_GROUP","FETCH_SERVICE_ACCOUNTS","ADD_SERVICE_ACCOUNTS_TO_GROUP","REMOVE_SERVICE_ACCOUNTS_FROM_GROUP","FETCH_GROUP_POLICIES","FETCH_POLICY","RESET_SELECTED_GROUP","REMOVE_MEMBERS_FROM_GROUP","ADD_MEMBERS_TO_GROUP","REMOVE_ROLES_FROM_GROUP","ADD_ROLES_TO_GROUP","FETCH_ROLES_FOR_GROUP","FETCH_MEMBERS_FOR_GROUP","FETCH_SERVICE_ACCOUNTS_FOR_GROUP","FETCH_ADD_ROLES_FOR_GROUP","FETCH_ROLE_FOR_USER","FETCH_ROLE_FOR_PRINCIPAL","UPDATE_ROLE","PATCH_ROLE","GET_PRINCIPAL_ACCESS","LIST_PERMISSIONS","LIST_APPLICATION_OPTIONS","LIST_RESOURCE_OPTIONS","LIST_OPERATION_OPTIONS","GET_RESOURCE_DEFINITIONS","GET_RESOURCE","EXPAND_SPLATS","RESET_EXPAND_SPLATS","API_ERROR","groupsInitialState","meta","filters","pagination","selectedGroup","isLoading","isRecordLoading","setLoadingState","state","adminGroup","filter","admin_default","isSystemGroupLoading","systemGroup","loaded","principals","roleCount","isRecordRolesLoading","time_created","rolesInitialState","rolesForWizard","selectedRole","setRecordLoadingState","setRole","setRolesWithAccess","rolesWithAccess","isWizardLoading","usersInitialState","selectedUser","isUserDataLoading","redirected","RBAC_API_BASE","COST_API_BASE","INVENTORY_API_BASE","DEFAULT_MUA_BUNDLE","DEFAULT_ACCESS_GROUP_ID","rbac","title","link","createContext","policies","selectedPolicy","accessInitialState","access","permissionInitialState","options","isLoadingApplication","isLoadingResource","isLoadingOperation","expandSplats","isLoadingExpandSplats","costInitialState","resourceTypes","loadingResources","links","split","serviceAccountsInitialState","_","reduce","acc","curr","total","RegistryContext","getRegistry","middlewares","notificationsMiddleware","errorTitleKey","errorDescriptionKey","middleware","registry","ReducerRegistry","register","userReducer","groupReducer","policyReducer","policy","roleReducer","accessReducer","permissionReducer","inventoryReducer","costReducer","serviceAccountReducer","notifications"],"sourceRoot":""}
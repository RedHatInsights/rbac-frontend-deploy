{"version":3,"file":"js/1706.6ca1ca2ec45398c94bf8.js","mappings":"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","sources":["webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/smart-components/myUserAccess/ResourceDefinitionsModal.js","webpack:///./src/helpers/access/access-helper.js","webpack:///./src/presentational-components/myUserAccess/ResourceDefinitionsLink.js","webpack:///./src/smart-components/myUserAccess/mua-table-helpers.js","webpack:///./src/smart-components/myUserAccess/MUAAccessTable.js","webpack:///./src/redux/actions/access-actions.js","webpack:///./src/smart-components/myUserAccess/MUARolesTable.js","webpack:///./src/smart-components/myUserAccess/CommonBundleView.js","webpack:///./src/smart-components/myUserAccess/bundles/rhel.js"],"sourcesContent":["import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <ListLoader isCompact={isCompact} items={pagination?.limit} />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import { Button, Modal } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ResourceDefinitionsModal = ({ isOpen, handleClose, permission, resourceDefinitions }) => {\n  const intl = useIntl();\n  const columns = [''];\n  const [{ rows, pagination, filterValue }, setRows] = useState(() => ({\n    filterValue: '',\n    rows: resourceDefinitions.map(({ attributeFilter: { value } }) => value).slice(0, defaultSettings.limit),\n    pagination: {\n      ...defaultSettings,\n      count: resourceDefinitions.length,\n    },\n  }));\n\n  const handleFilterValue = ({ name = '', limit, offset }, isFilter = false) =>\n    setRows(({ pagination, filterValue }) => {\n      const rows = resourceDefinitions\n        .map(({ attributeFilter: { value } }) => value)\n        .filter((value) => value.includes(name))\n        .slice(offset, limit);\n      return {\n        rows,\n        filterValue: isFilter ? name : filterValue,\n        pagination: {\n          ...pagination,\n          offset: isFilter ? 0 : offset,\n          limit,\n          count: rows.length,\n        },\n      };\n    });\n\n  return (\n    <Modal\n      actions={[\n        <Button key=\"close-action\" variant=\"primary\" onClick={handleClose}>\n          {intl.formatMessage(messages.close)}\n        </Button>,\n      ]}\n      variant=\"large\"\n      isOpen={isOpen}\n      onClose={handleClose}\n      title={intl.formatMessage(messages.resourceDefinitions)}\n      description={\n        <FormattedMessage\n          {...messages.viewResourceDefinitions}\n          values={{\n            strong: (text) => <strong>{text}</strong>,\n            permission,\n          }}\n        />\n      }\n    >\n      <TableToolbarView\n        columns={columns}\n        data={rows}\n        filterValue={filterValue}\n        setFilterValue={(config) => handleFilterValue(config, true)}\n        pagination={pagination}\n        ouiaId=\"resource-definition-table\"\n        noData={resourceDefinitions.length === 0}\n        rows={rows.map((value) => ({ cells: [value] }))}\n        titlePlural={intl.formatMessage(messages.resourceDefinitions)}\n        titleSingular={intl.formatMessage(messages.resourceDefinition)}\n        noDataDescription={[intl.formatMessage(messages.resourceDefinition, { permission: permission })]}\n        fetchData={handleFilterValue}\n        tableId=\"resource-definitions-modal\"\n      />\n    </Modal>\n  );\n};\n\nResourceDefinitionsModal.propTypes = {\n  isOpen: PropTypes.bool,\n  handleClose: PropTypes.func.isRequired,\n  permission: PropTypes.string.isRequired,\n  resourceDefinitions: PropTypes.arrayOf(\n    PropTypes.shape({\n      attributeFilter: PropTypes.shape({\n        value: PropTypes.string.isRequired,\n      }).isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ResourceDefinitionsModal;\n","import { getAccessApi } from '../shared/user-login';\n\nconst accessApi = getAccessApi();\n\nexport async function getPrincipalAccess({ limit, offset, username, application = '', orderBy }) {\n  return await accessApi.getPrincipalAccess(application, username, orderBy, limit, offset);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ResourceDefinitionsLink = ({ onClick, access }) => {\n  const intl = useIntl();\n\n  return access.resourceDefinitions.length === 0 ? (\n    <span>{intl.formatMessage(messages.notApplicable)}</span>\n  ) : (\n    <a\n      onClick={() => {\n        onClick();\n        return false;\n      }}\n    >\n      {access.resourceDefinitions.length}\n    </a>\n  );\n};\n\nResourceDefinitionsLink.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  access: PropTypes.shape({ resourceDefinitions: PropTypes.array.isRequired }).isRequired,\n};\n\nexport default ResourceDefinitionsLink;\n","import React, { Fragment } from 'react';\nimport ResourceDefinitionsLink from '../../presentational-components/myUserAccess/ResourceDefinitionsLink';\n\nexport const createRows = (data, showResourceDefinitions, onRdClick) =>\n  data.reduce((acc, { permission, ...access }, index) => {\n    const [appName, type, operation] = permission.split(':');\n    return [\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation,\n          ...(showResourceDefinitions\n            ? [\n                <Fragment key=\"rd\">\n                  <ResourceDefinitionsLink onClick={() => onRdClick(index)} access={access} />\n                </Fragment>,\n              ]\n            : []),\n        ],\n      },\n    ];\n  }, []);\n","import React, { Fragment, Suspense, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { getPrincipalAccess } from '../../redux/actions/access-actions';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './mua-table-helpers';\nimport ResourceDefinitionsModal from './ResourceDefinitionsModal';\nimport { sortable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst MUAAccessTable = ({ filters, setFilters, apps, hasActiveFilters, showResourceDefinitions }) => {\n  const intl = useIntl();\n  const [{ rdOpen, rdPermission, resourceDefinitions }, setRdConfig] = useState({ rdOpen: false });\n  const { current: columns } = useRef([\n    { title: intl.formatMessage(messages.application), key: 'application', transforms: [sortable] },\n    { title: intl.formatMessage(messages.resourceType), key: 'resource_type', transforms: [sortable] },\n    { title: intl.formatMessage(messages.operation), key: 'verb', transforms: [sortable] },\n    ...(showResourceDefinitions ? [{ title: intl.formatMessage(messages.resourceDefinitions) }] : []),\n  ]);\n\n  const dispatch = useDispatch();\n  const { permissions, isLoading } = useSelector(\n    (state) => ({\n      permissions: state.accessReducer.access,\n      isLoading: state.accessReducer.isLoading,\n    }),\n    shallowEqual\n  );\n\n  const fetchData = ({ application, ...apiProps }) => {\n    const applicationParam = application?.length > 0 ? application : apps;\n    dispatch(getPrincipalAccess({ application: applicationParam.join(','), ...apiProps }));\n  };\n\n  const handleRdClick = (index) =>\n    setRdConfig({\n      rdOpen: true,\n      rdPermission: permissions.data[index].permission,\n      resourceDefinitions: permissions.data[index].resourceDefinitions,\n    });\n\n  useEffect(() => {\n    fetchData({ ...defaultSettings, orderBy });\n  }, []);\n\n  const [sortByState, setSortByState] = useState({ index: 0, direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n  const filteredRows = permissions?.data || [];\n\n  return (\n    <Fragment>\n      <TableToolbarView\n        columns={columns}\n        rows={createRows(filteredRows, showResourceDefinitions, handleRdClick)}\n        data={filteredRows}\n        fetchData={fetchData}\n        sortBy={sortByState}\n        onSort={(e, index, direction) => {\n          const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n          setSortByState({ index, direction });\n          fetchData({\n            ...permissions?.meta,\n            offset: 0,\n            orderBy,\n            ...(filters?.length > 0\n              ? {\n                  ...filters.reduce(\n                    (acc, curr) => ({\n                      ...acc,\n                      [curr.key]: curr.value,\n                    }),\n                    {}\n                  ),\n                }\n              : { name: '', application: [] }),\n          });\n        }}\n        filters={filters}\n        setFilterValue={setFilters}\n        isLoading={isLoading}\n        pagination={permissions?.meta}\n        ouiaId=\"permissions-table\"\n        titlePlural={intl.formatMessage(messages.permissions).toLowerCase()}\n        titleSingular={intl.formatMessage(messages.permission).toLowerCase()}\n        noData={!isLoading && !hasActiveFilters && filteredRows.length === 0}\n        noDataDescription={[intl.formatMessage(messages.noPermissionsForInsights), intl.formatMessage(messages.contactOrgAdministrator)]}\n        tableId=\"mua-access\"\n      />\n      <Suspense fallback={<Fragment />}>\n        {rdOpen && (\n          <ResourceDefinitionsModal\n            resourceDefinitions={resourceDefinitions}\n            isOpen={rdOpen}\n            handleClose={() => setRdConfig({ rdOpen: false })}\n            permission={rdPermission}\n          />\n        )}\n      </Suspense>\n    </Fragment>\n  );\n};\n\nMUAAccessTable.propTypes = {\n  filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setFilters: PropTypes.func.isRequired,\n  apps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  hasActiveFilters: PropTypes.bool,\n  showResourceDefinitions: PropTypes.bool,\n};\n\nexport default MUAAccessTable;\n","import * as ActionTypes from '../action-types';\nimport * as AccessHelper from '../../helpers/access/access-helper';\n\nexport const getPrincipalAccess = (apiProps) => ({\n  type: ActionTypes.GET_PRINCIPAL_ACCESS,\n  payload: AccessHelper.getPrincipalAccess(apiProps),\n});\n","import React, { Fragment, useCallback, useEffect, useState, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { fetchRoles, fetchRoleForPrincipal } from '../../redux/actions/role-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport messages from '../../Messages';\n\nconst ResourceDefinitionsModal = lazy(() => import('./ResourceDefinitionsModal'));\n\nimport { TableVariant, compoundExpand, cellWidth, sortable } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport ResourceDefinitionsLink from '../../presentational-components/myUserAccess/ResourceDefinitionsLink';\n\nconst MUARolesTable = ({ filters, setFilters, apps, showResourceDefinitions }) => {\n  const intl = useIntl();\n  const [expanded, setExpanded] = useState({});\n  const [{ rdOpen, rdPermission, resourceDefinitions }, setRdConfig] = useState({ rdOpen: false });\n\n  const columns = [\n    {\n      title: intl.formatMessage(messages.roles),\n      key: 'display_name',\n      transforms: [sortable],\n    },\n    intl.formatMessage(messages.description),\n    {\n      title: intl.formatMessage(messages.permissions),\n      cellTransforms: [compoundExpand, cellWidth(20)],\n    },\n  ];\n\n  const { roles, isLoading, rolesWithAccess } = useSelector(\n    ({ roleReducer: { roles, isLoading, rolesWithAccess } }) => ({\n      roles,\n      isLoading,\n      rolesWithAccess,\n    }),\n    shallowEqual\n  );\n\n  const [sortByState, setSortByState] = useState({ index: 0, direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRoles({ limit: 20, offset: 0, orderBy, scope: 'principal', application: apps.join(',') }));\n  }, []);\n\n  const createRows = (data) => {\n    return data?.reduce(\n      (acc, { uuid, display_name, name, description, accessCount }, i) => [\n        ...acc,\n        {\n          uuid,\n          cells: [\n            { title: display_name || name, props: { component: 'th', isOpen: false } },\n            { title: description, props: { isOpen: false } },\n            { title: accessCount, props: { isOpen: expanded[uuid] === 2 } },\n          ],\n        },\n        {\n          uuid: `${uuid}-groups`,\n          parent: 2 * i,\n          compoundParent: 2,\n          cells: [\n            {\n              props: { colSpan: 4, className: 'pf-m-no-padding' },\n              title: rolesWithAccess?.[uuid] ? (\n                <Table\n                  ouiaId=\"permissions-in-role-nested-table\"\n                  aria-label=\"Simple Table\"\n                  borders={false}\n                  variant={TableVariant.compact}\n                  cells={[\n                    intl.formatMessage(messages.application),\n                    intl.formatMessage(messages.resourceType),\n                    intl.formatMessage(messages.operation),\n                    ...(showResourceDefinitions ? [intl.formatMessage(messages.resourceDefinitions)] : []),\n                  ]}\n                  rows={rolesWithAccess[uuid].access.map((access) => ({\n                    cells: [\n                      ...access.permission.split(':'),\n                      ...(showResourceDefinitions\n                        ? [\n                            <Fragment key=\"rd\">\n                              <ResourceDefinitionsLink\n                                onClick={() =>\n                                  setRdConfig({\n                                    rdOpen: true,\n                                    rdPermission: access.permission,\n                                    resourceDefinitions: access.resourceDefinitions,\n                                  })\n                                }\n                                access={access}\n                              />\n                            </Fragment>,\n                          ]\n                        : []),\n                    ],\n                  }))}\n                >\n                  <TableHeader />\n                  <TableBody />\n                </Table>\n              ) : (\n                <ListLoader />\n              ),\n            },\n          ],\n        },\n      ],\n      []\n    );\n  };\n\n  let debouncedFetch = useCallback(\n    debounce((limit, offset, name, application, permission, orderBy) => {\n      const applicationParam = application?.length > 0 ? application : apps;\n      return dispatch(fetchRoles({ limit, offset, scope: 'principal', orderBy, name, application: applicationParam.join(','), permission }));\n    }, 800),\n    []\n  );\n\n  const onExpand = (_event, _rowIndex, colIndex, isOpen, rowData) => {\n    if (!isOpen) {\n      setExpanded((expanded) => ({ ...expanded, [rowData.uuid]: colIndex }));\n      // Permissions\n      if (colIndex === 2) {\n        dispatch(fetchRoleForPrincipal(rowData.uuid));\n      }\n    } else {\n      setExpanded((expanded) => ({ ...expanded, [rowData.uuid]: -1 }));\n    }\n  };\n\n  return (\n    <Fragment>\n      <TableToolbarView\n        filters={filters}\n        columns={columns}\n        rows={createRows(roles.data)}\n        data={roles.data}\n        isCompact={false}\n        isExpandable={true}\n        onExpand={onExpand}\n        ouiaId=\"roles-table\"\n        fetchData={({ limit, offset, name, application, permission, orderBy }) => {\n          debouncedFetch(limit, offset, name, application, permission, orderBy);\n        }}\n        sortBy={sortByState}\n        onSort={(e, index, direction) => {\n          const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n          setSortByState({ index, direction });\n          dispatch(\n            fetchRoles({\n              offset: 0,\n              orderBy,\n              ...(filters?.length > 0\n                ? {\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                  }\n                : { name: '', application: [] }),\n            })\n          );\n        }}\n        emptyFilters={{ name: '', application: [] }}\n        setFilterValue={setFilters}\n        isLoading={isLoading}\n        pagination={roles.meta}\n        filterPlaceholder=\"role name\"\n        titlePlural=\"roles\"\n        titleSingular=\"role\"\n        tableId=\"mua-roles\"\n      />\n      <Suspense fallback={<Fragment />}>\n        {rdOpen && (\n          <ResourceDefinitionsModal\n            resourceDefinitions={resourceDefinitions}\n            isOpen={rdOpen}\n            handleClose={() => setRdConfig({ rdOpen: false })}\n            permission={rdPermission}\n          />\n        )}\n      </Suspense>\n    </Fragment>\n  );\n};\n\nMUARolesTable.propTypes = {\n  fetchRoles: PropTypes.func,\n  fetchRoleForPrincipal: PropTypes.func,\n  fetchUsers: PropTypes.func,\n  roles: PropTypes.object,\n  isLoading: PropTypes.bool,\n  rolesWithAccess: PropTypes.object,\n  filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setFilters: PropTypes.func.isRequired,\n  apps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  showResourceDefinitions: PropTypes.bool,\n};\n\nexport default MUARolesTable;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport OrgAdminContext from '../../utilities/org-admin-context';\nimport MUAAccessTable from './MUAAccessTable';\nimport MUARolesTable from './MUARolesTable';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\n// TODO: Add permissions back when we support partial matching\n\nexport const createFilter = ({ apps, isOrgAdmin, name = '', application = [] /* permission = '' */ }) => {\n  const intl = useIntl();\n  return [\n    {\n      key: 'application',\n      value: application,\n      placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n      type: 'checkbox',\n      items: apps.map((app) => ({ label: app, value: app })),\n    },\n    ...(isOrgAdmin\n      ? [\n          {\n            key: 'name',\n            type: 'text',\n            value: name,\n            label: intl.formatMessage(messages.roleName),\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.roleName).toLowerCase() }),\n          },\n          // {\n          //   key: 'permission',\n          //   value: permission,\n          //   placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.permission).toLowerCase() }),\n          //   type: 'text',\n          // },\n        ]\n      : []),\n  ];\n};\n\nconst CommonBundleView = ({ apps }) => {\n  const isOrgAdmin = useContext(OrgAdminContext);\n  const [name, setName] = useState('');\n  const [permission, setPermission] = useState('');\n  const [application, setApplication] = useState([]);\n  const handleSetFilters = ({ name, application, permission }) => {\n    if (typeof name === 'string') {\n      setName(name);\n    }\n\n    if (typeof permission === 'string') {\n      setPermission(permission);\n    }\n\n    if (application) {\n      setApplication(typeof application === 'string' ? [] : application);\n    }\n  };\n\n  const filters = createFilter({ apps, isOrgAdmin, name, application, permission });\n  return isOrgAdmin ? (\n    <MUARolesTable setFilters={handleSetFilters} filters={filters} apps={apps} />\n  ) : (\n    <MUAAccessTable setFilters={handleSetFilters} filters={filters} apps={apps} hasActiveFilters={name.length > 0 || application.length > 0} />\n  );\n};\n\nCommonBundleView.propTypes = {\n  apps: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default CommonBundleView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommonBundleView from '../CommonBundleView';\n\nconst RhelBundle = ({ apps }) => <CommonBundleView apps={apps} />;\n\nRhelBundle.propTypes = {\n  apps: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default RhelBundle;\n"],"names":["title","icon","description","actions","props","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","className","map","text","key","EmptyStateFooter","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","value","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","intl","Fragment","length","every","formatMessage","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","item","orderBy","direction","index","limit","canSelectAll","toLowerCase","compact","onSelect","_e","isSelected","_idx","uuid","cells","name","requires","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","undefined","EmptyStateActions","Button","onClick","offset","clearAllFilters","colSpan","e","noBottom","Pagination","dropDirection","propTypes","directions","isRequired","count","toggleTemplate","defaultProps","paginationBuilder","itemCount","perPage","page","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","checked","id","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","innerRef","filterValues","filterByKey","filterBy","newFilter","Array","isArray","Object","keys","pickBy","reduce","acc","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","options","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","ResourceDefinitionsModal","isOpen","handleClose","permission","resourceDefinitions","setRows","useState","attributeFilter","slice","handleFilterValue","isFilter","includes","Modal","close","onClose","viewResourceDefinitions","values","strong","config","resourceDefinition","accessApi","async","getPrincipalAccess","username","application","ResourceDefinitionsLink","access","notApplicable","createRows","showResourceDefinitions","onRdClick","appName","operation","split","MUAAccessTable","setFilters","apps","hasActiveFilters","rdOpen","rdPermission","setRdConfig","useRef","transforms","sortable","resourceType","dispatch","useDispatch","permissions","useSelector","state","accessReducer","shallowEqual","apiProps","payload","join","useEffect","sortByState","setSortByState","filteredRows","meta","noPermissionsForInsights","contactOrgAdministrator","Suspense","fallback","lazy","MUARolesTable","expanded","setExpanded","roles","cellTransforms","compoundExpand","cellWidth","rolesWithAccess","roleReducer","scope","debouncedFetch","useCallback","applicationParam","display_name","accessCount","i","component","parent","compoundParent","Table","_rowIndex","colIndex","rowData","fetchRoles","fetchRoleForPrincipal","fetchUsers","CommonBundleView","isOrgAdmin","useContext","setName","setPermission","setApplication","handleSetFilters","app","roleName","createFilter","RhelBundle"],"sourceRoot":""}
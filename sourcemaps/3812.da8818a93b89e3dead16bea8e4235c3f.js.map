{"version":3,"file":"js/3812.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/WarningModal/WarningModal.js","webpack:///./src/helpers/role/inventory-helper.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/redux/actions/inventory-actions.js","webpack:///./src/smart-components/common/ModalFormTemplate.js","webpack:///./src/smart-components/common/FormButtons.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/role/ResourceDefinitionsFormTemplate.js","webpack:///./src/smart-components/role/edit-resource-definitions-modal.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalVariant, ButtonVariant, Checkbox } from '@patternfly/react-core';\nconst WarningModal = (_a) => {\n    var { isOpen, onConfirm, onClose, children, confirmButtonLabel = 'Confirm', cancelButtonLabel = 'Cancel', variant = ModalVariant.small, titleIconVariant = 'warning', withCheckbox = false, checkboxLabel = 'I understand that this action cannot be undone', confirmButtonVariant = ButtonVariant.primary, ouiaId = 'WarningModal' } = _a, props = __rest(_a, [\"isOpen\", \"onConfirm\", \"onClose\", \"children\", \"confirmButtonLabel\", \"cancelButtonLabel\", \"variant\", \"titleIconVariant\", \"withCheckbox\", \"checkboxLabel\", \"confirmButtonVariant\", \"ouiaId\"]);\n    const [checked, setChecked] = useState(false);\n    return (React.createElement(Modal, Object.assign({ variant: variant, isOpen: isOpen, onClose: onClose, onEscapePress: onClose, titleIconVariant: titleIconVariant, actions: [\n            React.createElement(Button, { ouiaId: `${ouiaId}-confirm-button`, key: \"confirm\", variant: confirmButtonVariant, onClick: () => {\n                    onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm();\n                    setChecked(false);\n                }, isDisabled: withCheckbox && !checked }, confirmButtonLabel),\n            React.createElement(Button, { ouiaId: `${ouiaId}-cancel-button`, key: \"cancel\", variant: ButtonVariant.link, onClick: onClose }, cancelButtonLabel),\n        ], ouiaId: ouiaId }, props),\n        children,\n        withCheckbox ? (React.createElement(Checkbox, { isChecked: checked, onChange: (_event, value) => setChecked(value), label: checkboxLabel, id: \"warning-modal-check\", className: \"pf-v5-u-mt-lg\", ouiaId: `${ouiaId}-confirm-checkbox` })) : null));\n};\nexport default WarningModal;\n","import flatten from 'lodash/flatten';\nimport { getInventoryGroupsApi, getInventoryResourceTypesApi } from '../shared/user-login';\n\nconst inventoryResourceTypesApi = getInventoryResourceTypesApi();\nconst inventoryGroupsApi = getInventoryGroupsApi();\n\nexport const getInventoryGroups = async ({ name, perPage, page, options } = {}) => {\n  return await inventoryResourceTypesApi.apiResourceTypeGetResourceTypeGroupsList(name, perPage, page, options);\n};\n\nexport const getInventoryGroupsDetails = async (groupsIds) => {\n  return await inventoryGroupsApi.apiGroupGetGroupsById(groupsIds);\n};\n\nexport const processResourceDefinitions = (resourceDefinitions) =>\n  resourceDefinitions ? flatten(resourceDefinitions.map((definition) => definition.attributeFilter.value)) : [];\n","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const fetchResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const fetchResource = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import * as ActionTypes from '../action-types';\nimport * as InventoryHelper from '../../helpers/role/inventory-helper';\n\nexport const fetchInventoryGroups = (permissions, config) => ({\n  type: ActionTypes.FETCH_INVENTORY_GROUPS,\n  meta: { permissions, config },\n  payload: InventoryHelper.getInventoryGroups(config),\n});\n\nexport const fetchInventoryGroupsDetails = (groupsIds) => {\n  return {\n    type: ActionTypes.FETCH_INVENTORY_GROUPS_DETAILS,\n    meta: { groupsIds },\n    payload: InventoryHelper.getInventoryGroupsDetails(groupsIds.filter((item) => item?.length > 0)),\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\n/**\n * This id is requried to submit form by a button outside of the form element\n */\nconst MODAL_FORM_IDENTIFIER = 'modal-form';\nconst CustomFormWrapper = (props) => <Form {...props} id={MODAL_FORM_IDENTIFIER} />;\n\nconst CustomButtons = ({ saveLabel, cancelLabel }) => {\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy>\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-v5-c-form\">\n          <ActionGroup className=\"pf-v5-u-mt-0\">\n            <Button\n              ouiaId=\"primary-save-button\"\n              variant=\"primary\"\n              form={MODAL_FORM_IDENTIFIER}\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {saveLabel}\n            </Button>\n            <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {cancelLabel}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  saveLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n};\n\nCustomButtons.defaultProps = {\n  saveLabel: 'Save',\n  cancelLabel: 'Cancel',\n};\n\nconst ModalFormTemplate = ({ ModalProps, saveLabel, cancelLabel, alert, ...props }) => (\n  <Modal role=\"dialog\" {...ModalProps} footer={<CustomButtons saveLabel={saveLabel} cancelLabel={cancelLabel} />}>\n    {alert?.()}\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n  ...CustomButtons.propTypes,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst FormButtons = ({ dirtyFieldsSinceLastSubmit, submitSucceeded, pristine }) => {\n  const { onCancel } = useFormApi();\n  const noChanges = isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  const intl = useIntl();\n  return (\n    <ActionGroup className=\"pf-v5-u-mt-0\">\n      <Button ouiaId=\"primary-submit-button\" type=\"submit\" isDisabled={noChanges} variant=\"primary\">\n        {intl.formatMessage(messages.save)}\n      </Button>\n      <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={() => onCancel()}>\n        {intl.formatMessage(messages.cancel)}\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormButtons from './FormButtons';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nconst FormRenderer = ({ formTemplateProps, ...props }) => (\n  <ReactFormRender\n    componentMapper={{\n      [componentTypes.TEXT_FIELD]: TextField,\n      [componentTypes.TEXTAREA]: Textarea,\n    }}\n    FormTemplate={(props) => <FormTemplate {...formTemplateProps} {...props} FormButtons={FormButtons} />}\n    {...props}\n  />\n);\n\nFormRenderer.propTypes = {\n  formTemplateProps: PropTypes.object,\n};\n\nexport default FormRenderer;\n","import React from 'react';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { Alert } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitionsFormTemplate = ({ ModalProps, ...props }) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  return (\n    <ModalFormTemplate\n      {...props}\n      ModalProps={{\n        ...ModalProps,\n        onClose: () => ModalProps.onClose(values),\n      }}\n      alert={\n        values['dual-list-select']\n          ? undefined\n          : () => (\n              <div className=\"rbac-m-resource-definitions\">\n                <Alert className=\"pf-v5-c-modal__alert\" variant=\"danger\" isInline title={intl.formatMessage(messages.defineAtLeastOneResource)} />\n              </div>\n            )\n      }\n    />\n  );\n};\n\nResourceDefinitionsFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ResourceDefinitionsFormTemplate;\n","import React, { useEffect, useMemo, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport FormRenderer from '../common/form-renderer';\nimport flatten from 'lodash/flattenDeep';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { updateRole, fetchRole } from '../../redux/actions/role-actions';\nimport { fetchResource, fetchResourceDefinitions } from '../../redux/actions/cost-management-actions';\nimport { fetchInventoryGroups, fetchInventoryGroupsDetails } from '../../redux/actions/inventory-actions';\nimport { processResourceDefinitions } from '../../helpers/role/inventory-helper';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport { Spinner, Modal, ModalVariant, Bullseye } from '@patternfly/react-core';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport ResourceDefinitionsFormTemplate from './ResourceDefinitionsFormTemplate';\nimport { isInventoryHostsPermission, isInventoryPermission } from './role-resource-definitions-table-helpers';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst createOptions = (resources, permissionId) =>\n  isInventoryPermission(permissionId)\n    ? // options for inventory\n      [\n        ...(isInventoryHostsPermission(permissionId) ? [<FormattedMessage key=\"ungrouped\" data-value=\"null\" {...messages.ungroupedSystems} />] : []),\n        ...Object.values(resources || {}).map((inventoryGroup) => (\n          <span key={inventoryGroup.id} data-value={inventoryGroup.id}>\n            {inventoryGroup.name}\n          </span>\n        )),\n      ]\n    : // options for cost-management\n      Object.entries(resources).reduce(\n        (acc, [key, value]) => [\n          ...acc,\n          ...value.map((r) => ({\n            value: r.value,\n            path: key,\n            label: r.value,\n          })),\n        ],\n        []\n      );\n\nconst initialState = {\n  changedResources: undefined,\n  cancelWarningVisible: false,\n  resourcesPath: undefined,\n  loadingStateVisible: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst createEditResourceDefinitionsSchema = (resources, resourcesPath, options, isInventory) => {\n  const intl = useIntl();\n  return {\n    fields: [\n      {\n        component: componentTypes.DUAL_LIST_SELECT,\n        name: 'dual-list-select',\n        leftTitle: intl.formatMessage(messages.resourcesAvailable),\n        rightTitle: intl.formatMessage(messages.resourcesDefined),\n        filterOptionsTitle: intl.formatMessage(messages.filterByResource),\n        filterValueTitle: intl.formatMessage(messages.filterByResource),\n        options: [...((resourcesPath || isInventory) && resources ? options : [])],\n        validate: [{ type: 'validate-resources' }],\n        isSearchable: true,\n        ...(isInventory\n          ? {\n              getValueFromNode: (option) => option.props['data-value'],\n            }\n          : {}),\n      },\n    ],\n  };\n};\n\nconst selector = (\n  {\n    costReducer: { resourceTypes, isLoading, loadingResources, resources },\n    inventoryReducer: { resourceTypes: inventoryGroups, isLoading: isLoadingInventory },\n  },\n  resourcesPath\n) => ({\n  resourceTypes: resourceTypes.data,\n  resources: resources[resourcesPath] ? { resourcesPath: resources[resourcesPath] } : resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n  isLoadingInventory,\n  inventoryGroups,\n});\n\nconst validatorMapper = {\n  'validate-resources': () => (value) => value && value.length > 0 ? undefined : 'At least one resource must be defined for this permission',\n};\n\nconst EditResourceDefinitionsModal = ({ cancelRoute }) => {\n  const intl = useIntl();\n  const { roleId, permissionId } = useParams();\n  const navigate = useAppNavigate();\n\n  const dispatch = useDispatch();\n  const getResourceDefinitions = () => dispatch(fetchResourceDefinitions());\n  const getInventoryGroups = () => dispatch(fetchInventoryGroups([permissionId]));\n  const [state, dispatchLocally] = useReducer(reducer, initialState);\n  const isInventory = useMemo(() => isInventoryPermission(permissionId), [permissionId]);\n\n  const { resourceTypes, isLoading, isLoadingResources, resources, isLoadingInventory, inventoryGroups } = useSelector(\n    (props) => selector(props, state.resourcesPath),\n    shallowEqual\n  );\n\n  const { definedResources, role } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      definedResources: state.roleReducer.selectedRole?.access\n        ? flatten(\n            state.roleReducer.selectedRole.access\n              .filter((a) => a.permission === permissionId)\n              .map((access) =>\n                access.resourceDefinitions.map((resource) => {\n                  const value = resource.attributeFilter.value;\n                  if (isInventory) {\n                    return Array.isArray(value) ? value.map((value) => String(value)) : String(value);\n                  }\n                  return resource.attributeFilter.value;\n                })\n              )\n          )\n        : [],\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    (isInventory && getInventoryGroups()) || getResourceDefinitions();\n  }, [permissionId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let path = resourceTypes.find((r) => r.value === permissionId.split(':')?.[1])?.path;\n      if (path) {\n        dispatchLocally({ type: 'update', payload: { resourcesPath: path.split('/')[5] } });\n        dispatch(fetchResource(path));\n      }\n    }\n  }, [resourceTypes]);\n\n  const onCancel = () => navigate(cancelRoute, { replace: true });\n\n  const handleCancel = (data) => {\n    if (data['dual-list-select'] === definedResources) {\n      onCancel();\n    } else {\n      dispatchLocally({\n        type: 'update',\n        payload: {\n          changedResources: data['dual-list-select'],\n          cancelWarningVisible: true,\n        },\n      });\n    }\n  };\n\n  const handleSubmit = (data) => {\n    dispatchLocally({ type: 'update', payload: { changedResources: data['dual-list-select'] } });\n    const dualListData = data['dual-list-select'].map((item) => (item === 'null' ? null : item));\n    const newAccess = {\n      permission: permissionId,\n      resourceDefinitions: [\n        {\n          attributeFilter: {\n            key: isInventory ? 'group.id' : `cost-management.${permissionId.split(':')?.[1]}`,\n            operation: dualListData.length === 1 ? 'equal' : 'in',\n            value: dualListData.length === 1 ? dualListData[0] : dualListData,\n          },\n        },\n      ],\n    };\n    dispatch(updateRole(roleId, { ...role, access: [...role.access.filter((item) => item.permission !== permissionId), newAccess] }), true).then(\n      () => {\n        dispatch(fetchRole(roleId)).then(({ value }) => {\n          isInventory &&\n            dispatch(\n              fetchInventoryGroupsDetails(\n                processResourceDefinitions(value?.access?.find((item) => item.permission === permissionId)?.resourceDefinitions)\n              )\n            );\n        });\n        navigate(cancelRoute);\n      }\n    );\n  };\n\n  const options = createOptions(isInventory ? inventoryGroups[permissionId] : resources, permissionId);\n\n  return (\n    <React.Fragment>\n      <WarningModal\n        title={intl.formatMessage(messages.exitEditResourceDefinitions)}\n        isOpen={state.cancelWarningVisible}\n        onClose={() => dispatchLocally({ type: 'update', payload: { cancelWarningVisible: false } })}\n        onConfirm={onCancel}\n        data-testid=\"warning-modal\"\n        confirmButtonLabel={intl.formatMessage(messages.discard)}\n      >\n        {intl.formatMessage(messages.changesWillBeLost)}\n      </WarningModal>\n      {(isLoading || isLoadingResources || isLoadingInventory) && state.loadingStateVisible ? (\n        <Modal\n          variant={ModalVariant.large}\n          className=\"rbac-m-resource-definitions\"\n          isOpen={true}\n          title={intl.formatMessage(messages.editResourceDefinitions)}\n          onClose={() => {\n            dispatchLocally({ type: 'update', payload: { loadingStateVisible: false } });\n            onCancel();\n          }}\n        >\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        </Modal>\n      ) : (\n        <FormRenderer\n          schema={createEditResourceDefinitionsSchema(resources, state.resourcesPath, options, isInventory)}\n          componentMapper={componentMapper}\n          initialValues={{ 'dual-list-select': state.changedResources || definedResources || [] }}\n          onSubmit={handleSubmit}\n          onCancel={(data) => handleCancel(data)}\n          validatorMapper={validatorMapper}\n          FormTemplate={(props) => (\n            <ResourceDefinitionsFormTemplate\n              {...props}\n              ModalProps={{\n                onClose: handleCancel,\n                isOpen: !state.cancelWarningVisible,\n                variant: 'large',\n                title: intl.formatMessage(messages.editResourceDefinitions),\n                description: intl.formatMessage(messages.editPermissionsUsingArrows),\n              }}\n            />\n          )}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nEditResourceDefinitionsModal.propTypes = {\n  cancelRoute: PropTypes.string.isRequired,\n};\n\nexport default EditResourceDefinitionsModal;\n","import messages from '../../Messages';\n\nconst INVENTORY_PREFIX = 'inventory';\nconst COST_MANAGEMENT_PREFIX = 'cost-management';\nconst HOSTS_TYPE = 'hosts';\n\nexport const isInventoryPermission = (permissionId) => permissionId.split(':')[0].includes(INVENTORY_PREFIX);\nexport const isInventoryHostsPermission = (permissionId) => isInventoryPermission(permissionId) && permissionId.split(':')[1].includes(HOSTS_TYPE);\n\nexport const isCostPermission = (permissionId) => permissionId.split(':')[0].includes(COST_MANAGEMENT_PREFIX);\n\nexport const createRows = (data, permissionId, intl) => {\n  let finalData = data.filter(Boolean);\n  if (isInventoryHostsPermission(permissionId) && data.includes(null)) {\n    finalData.unshift(intl.formatMessage(messages.ungroupedSystems));\n  }\n  return finalData.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n};\n"],"names":["_a","isOpen","onConfirm","onClose","children","confirmButtonLabel","cancelButtonLabel","variant","Modal","small","titleIconVariant","withCheckbox","checkboxLabel","confirmButtonVariant","Button","primary","ouiaId","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","checked","setChecked","useState","assign","onEscapePress","actions","key","onClick","isDisabled","link","Checkbox","isChecked","onChange","_event","value","label","id","className","inventoryResourceTypesApi","inventoryGroupsApi","getInventoryGroups","async","name","perPage","page","options","apiResourceTypeGetResourceTypeGroupsList","getInventoryGroupsDetails","groupsIds","apiGroupGetGroupsById","processResourceDefinitions","resourceDefinitions","map","definition","attributeFilter","linkBasename","navigate","useNavigate","to","costApi","getResourceDefinitions","apiProps","getResourceTypes","getResource","fetchResourceDefinitions","type","payload","fetchResource","fetchInventoryGroups","permissions","config","meta","fetchInventoryGroupsDetails","filter","item","MODAL_FORM_IDENTIFIER","CustomFormWrapper","CustomButtons","saveLabel","cancelLabel","onCancel","pristine","invalid","validating","submitting","form","propTypes","defaultProps","ModalFormTemplate","ModalProps","alert","role","footer","showFormControls","FormWrapper","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","noChanges","isEmpty","intl","useIntl","ActionGroup","formatMessage","save","cancel","formProps","subscription","FormRenderer","formTemplateProps","componentMapper","TEXT_FIELD","TEXTAREA","FormTemplate","ResourceDefinitionsFormTemplate","values","getState","undefined","Alert","isInline","title","defineAtLeastOneResource","initialState","changedResources","cancelWarningVisible","resourcesPath","loadingStateVisible","reducer","state","action","Error","createEditResourceDefinitionsSchema","resources","isInventory","fields","component","DUAL_LIST_SELECT","leftTitle","resourcesAvailable","rightTitle","resourcesDefined","filterOptionsTitle","filterByResource","filterValueTitle","validate","isSearchable","getValueFromNode","option","validatorMapper","EditResourceDefinitionsModal","cancelRoute","roleId","permissionId","useParams","useAppNavigate","dispatch","useDispatch","dispatchLocally","useReducer","useMemo","resourceTypes","isLoading","isLoadingResources","isLoadingInventory","inventoryGroups","useSelector","costReducer","loadingResources","inventoryReducer","data","selector","shallowEqual","definedResources","roleReducer","selectedRole","access","a","permission","resource","Array","isArray","String","isRecordLoading","useEffect","path","find","r","split","replace","handleCancel","ungroupedSystems","inventoryGroup","entries","reduce","acc","createOptions","WarningModal","exitEditResourceDefinitions","discard","changesWillBeLost","ModalVariant","large","editResourceDefinitions","Bullseye","Spinner","schema","initialValues","onSubmit","dualListData","newAccess","operation","then","description","editPermissionsUsingArrows","isRequired","isInventoryPermission","includes","isInventoryHostsPermission","isCostPermission","createRows","finalData","Boolean","unshift","cells"],"sourceRoot":""}
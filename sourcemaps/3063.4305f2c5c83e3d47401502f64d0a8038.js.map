{"version":3,"file":"js/3063.f8cd32358e557e257c64.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/createIcon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/role-selectors.js","webpack:///./node_modules/react-intl/lib/src/components/message.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport var IconSize;\n(function (IconSize) {\n    IconSize[\"sm\"] = \"sm\";\n    IconSize[\"md\"] = \"md\";\n    IconSize[\"lg\"] = \"lg\";\n    IconSize[\"xl\"] = \"xl\";\n})(IconSize || (IconSize = {}));\nexport const getSize = (size) => {\n    switch (size) {\n        case IconSize.sm:\n            return '1em';\n        case IconSize.md:\n            return '1.5em';\n        case IconSize.lg:\n            return '2em';\n        case IconSize.xl:\n            return '3em';\n        default:\n            return '1em';\n    }\n};\nlet currentId = 0;\n/**\n * Factory to create Icon class components for consumers\n */\nexport function createIcon({ name, xOffset = 0, yOffset = 0, width, height, svgPath }) {\n    var _a;\n    return _a = class SVGIcon extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.id = `icon-title-${currentId++}`;\n            }\n            render() {\n                const _a = this.props, { size, color, title, noVerticalAlign } = _a, props = __rest(_a, [\"size\", \"color\", \"title\", \"noVerticalAlign\"]);\n                const hasTitle = Boolean(title);\n                const heightWidth = getSize(size);\n                const baseAlign = -0.125 * Number.parseFloat(heightWidth);\n                const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n                const viewBox = [xOffset, yOffset, width, height].join(' ');\n                return (React.createElement(\"svg\", Object.assign({ style: style, fill: color, height: heightWidth, width: heightWidth, viewBox: viewBox, \"aria-labelledby\": hasTitle ? this.id : null, \"aria-hidden\": hasTitle ? null : true, role: \"img\" }, props),\n                    hasTitle && React.createElement(\"title\", { id: this.id }, title),\n                    React.createElement(\"path\", { d: svgPath })));\n            }\n        },\n        _a.displayName = name,\n        _a.defaultProps = {\n            color: 'currentColor',\n            size: IconSize.sm,\n            noVerticalAlign: false\n        },\n        _a;\n}\n//# sourceMappingURL=createIcon.js.map","import { createIcon } from '../createIcon';\n\nexport const ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationTriangleIcon = createIcon(ExclamationTriangleIconConfig);\n\nexport default ExclamationTriangleIcon;","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { removeRole } from '../../redux/actions/role-actions';\nimport { fetchRole } from '../../helpers/role/role-helper';\nimport { roleNameSelector } from './role-selectors';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport messages from '../../Messages';\n\nconst RemoveRoleModal = ({ cancelRoute, submitRoute = cancelRoute, afterSubmit, setFilterValue, isLoading }) => {\n  const intl = useIntl();\n  const { roleId } = useParams();\n  const roles = roleId.split(',');\n  const roleName = useSelector((state) => {\n    if (roles.length === 1) {\n      return roleNameSelector(state, roles[0]);\n    }\n\n    return roles.length;\n  });\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [internalRoleName, setInternalRoleName] = useState(roleName);\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n\n  useEffect(() => {\n    if (roles && roleName) {\n      setInternalRoleName(roleName);\n    } else if (roles && roles.length === 1) {\n      fetchRole(roles[0])\n        .then((role) => setInternalRoleName(role.display_name))\n        .catch((error) => dispatch(addNotification({ variant: 'danger', title: 'Could not get role', description: error?.errors?.[0]?.detail })));\n    }\n  }, [roleName, roles]);\n\n  const onSubmit = () => {\n    setFilterValue && setFilterValue('');\n    Promise.all(roles.map((id) => dispatch(removeRole(id)))).then(() => afterSubmit());\n    navigate(submitRoute);\n  };\n\n  const onCancel = () => navigate(cancelRoute, { replace: true });\n  if (!internalRoleName) {\n    return null;\n  }\n\n  return !isLoading ? (\n    <Modal\n      className=\"rbac\"\n      aria-label=\"remove-role\"\n      header={\n        <TextContent>\n          <Split hasGutter>\n            <SplitItem>\n              <ExclamationTriangleIcon size=\"lg\" style={{ fill: '#f0ab00' }} />\n            </SplitItem>\n            <SplitItem>\n              <Text component=\"h1\">{intl.formatMessage(messages.deleteRoleQuestion)}</Text>\n            </SplitItem>\n          </Split>\n        </TextContent>\n      }\n      isOpen\n      variant=\"small\"\n      onClose={onCancel}\n      actions={[\n        <Button isDisabled={isDisabled} key=\"submit\" variant=\"danger\" type=\"button\" id=\"confirm-delete-portfolio\" onClick={onSubmit}>\n          {intl.formatMessage(messages.confirm)}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <FormattedMessage\n            {...messages.roleWilBeRemovedWithPermissions}\n            values={{\n              strong: (text) => <strong>{text}</strong>,\n              name: internalRoleName,\n              count: roles.length,\n            }}\n          />\n        </Text>\n        <Checkbox\n          id=\"remove-role-checkbox\"\n          label={intl.formatMessage(messages.understandActionIrreversible)}\n          isChecked={!isDisabled}\n          onChange={() => setIsDisabled((prev) => !prev)}\n        />\n      </TextContent>\n    </Modal>\n  ) : null;\n};\n\nRemoveRoleModal.propTypes = {\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]).isRequired,\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  afterSubmit: PropTypes.func.isRequired,\n  setFilterValue: PropTypes.func,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default RemoveRoleModal;\n","export const roleSelector = (state, roleId) => {\n  const {\n    roleReducer: { roles = { data: [] }, selectedRole },\n  } = state;\n  if (selectedRole?.uuid === roleId) {\n    return selectedRole;\n  }\n\n  return roles.data.find(({ uuid }) => uuid === roleId);\n};\n\nexport const roleNameSelector = (state, roleId) => roleSelector(state, roleId)?.display_name;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n"],"names":["IconSize","currentId","createIcon","name","xOffset","yOffset","width","height","svgPath","_a","constructor","super","arguments","this","id","render","props","size","color","title","noVerticalAlign","__rest","hasTitle","Boolean","heightWidth","sm","md","lg","xl","getSize","baseAlign","Number","parseFloat","style","verticalAlign","viewBox","join","Object","assign","fill","role","d","displayName","defaultProps","ExclamationTriangleIconConfig","ExclamationTriangleIcon","linkBasename","navigate","useNavigate","to","options","mergeToBasename","RemoveRoleModal","cancelRoute","submitRoute","afterSubmit","setFilterValue","isLoading","intl","useIntl","roles","useParams","roleId","split","roleName","useSelector","state","length","roleNameSelector","useState","isDisabled","setIsDisabled","internalRoleName","setInternalRoleName","dispatch","useDispatch","useAppNavigate","useEffect","fetchRole","then","display_name","error","addNotification","variant","description","errors","detail","onCancel","replace","Modal","className","header","TextContent","Split","hasGutter","SplitItem","Text","component","formatMessage","messages","isOpen","onClose","actions","Button","key","type","onClick","Promise","all","map","removeRole","TextVariants","values","strong","text","count","Checkbox","label","isChecked","onChange","prev","propTypes","PropTypes","pathname","search","hash","isRequired","roleSelector","roleReducer","data","selectedRole","uuid","find","FormattedMessage","textComponent","defaultMessage","children","_b","tagName","Component","nodes","ignoreTag","Array","isArray","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps"],"sourceRoot":""}
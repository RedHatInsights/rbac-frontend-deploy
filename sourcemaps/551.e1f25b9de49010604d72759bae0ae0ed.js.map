{"version":3,"file":"js/551.1649158472437.280b821447d7f82be5e4.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./src/presentational-components/shared/ActiveUsers.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/common/review-step-buttons.js","webpack:///./src/smart-components/common/wizard-error.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/validators.js","webpack:///./src/smart-components/group/add-group/review-template.js","webpack:///./src/smart-components/group/add-group/schema.js","webpack:///./src/smart-components/group/add-group/set-name.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/default-group-change-modal.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/remove-role-modal.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/group-row-wrapper.js","webpack:///./src/smart-components/group/groups.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport PermissionsContext from '../../utilities/permissions-context';\n\nconst ActiveUser = ({ linkDescription, linkTitle }) => {\n  const env = insights.chrome.getEnvironment();\n  const prefix = insights.chrome.isProd ? '' : `${env === 'ci' ? 'qa' : env}.`;\n  const description = 'These are all of the users in your Red Hat organization. ';\n  const { orgAdmin } = useContext(PermissionsContext);\n\n  return orgAdmin ? (\n    <Text className=\"pf-u-mt-0\" component={TextVariants.h7}>\n      {description}\n      {linkDescription}\n      <Text\n        component={TextVariants.a}\n        href={`https://www.${prefix}redhat.com/wapps/ugc/protected/usermgt/userList.html`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {linkTitle}\n        <ExternalLinkAltIcon />\n      </Text>\n      .\n    </Text>\n  ) : (\n    <Text className=\"pf-u-mt-0\" component={TextVariants.h7}>\n      {description}\n    </Text>\n  );\n};\n\nActiveUser.propTypes = {\n  linkDescription: PropTypes.node,\n  linkTitle: PropTypes.node,\n};\n\nActiveUser.defaultProps = {\n  linkDescription: '',\n  linkTitle: ' user management list ',\n};\n\nexport default ActiveUser;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        'data-is-active': PropTypes.bool,\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import { getLastPageOffset, isOffsetValid } from '../shared/pagination';\nimport { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nconst principalStatusApiMap = {\n  Active: 'enabled',\n  Inactive: 'disabled',\n};\nexport async function fetchUsers({ limit, offset = 0, orderBy, filters = {}, inModal, matchCriteria = 'partial' }) {\n  const { username, email, status = [] } = filters;\n  const sortOrder = orderBy === '-username' ? 'desc' : 'asc';\n  const mappedStatus = status.length === 2 ? 'all' : principalStatusApiMap[status[0]] || 'all';\n  const response = await principalApi.listPrincipals(limit, offset, matchCriteria, username, sortOrder, email, mappedStatus);\n  const isPaginationValid = isOffsetValid(offset, response?.meta?.count);\n  offset = isPaginationValid ? offset : getLastPageOffset(response.meta.count, limit);\n  const { data, meta } = isPaginationValid\n    ? response\n    : await principalApi.listPrincipals(limit, offset, matchCriteria, username, sortOrder, email, mappedStatus);\n  return {\n    data,\n    meta: {\n      ...meta,\n      offset,\n      limit,\n    },\n    ...(inModal\n      ? {}\n      : {\n          filters,\n          pagination: {\n            ...meta,\n            offset,\n            limit,\n            redirected: !isPaginationValid,\n          },\n        }),\n  };\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps),\n});\n\nexport const updateUsersFilters = (filters) => ({\n  type: ActionTypes.UPDATE_USERS_FILTERS,\n  payload: filters,\n});\n","import { Button } from '@patternfly/react-core';\nimport React, { useContext, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst selectNext = (nextStep, getState) =>\n  ({\n    string: nextStep,\n    function: nextStep({ values: getState().values }),\n  }?.[typeof nextStep] || nextStep.stepMapper?.[get(getState().values, nextStep.when)]);\n\nconst NextButton = ({ nextStep, valid, handleNext, nextLabel, getState, handleSubmit, submitLabel }) => (\n  <Button\n    variant=\"primary\"\n    type=\"button\"\n    isDisabled={!valid || getState().validating}\n    onClick={() => (nextStep ? handleNext(selectNext(nextStep, getState)) : handleSubmit())}\n  >\n    {nextStep ? nextLabel : submitLabel}\n  </Button>\n);\n\nNextButton.propTypes = {\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n  handleSubmit: PropTypes.func.isRequired,\n  submitLabel: PropTypes.node.isRequired,\n  valid: PropTypes.bool,\n  handleNext: PropTypes.func.isRequired,\n  nextLabel: PropTypes.node.isRequired,\n  getState: PropTypes.func.isRequired,\n};\n\nconst ReviewStepButtons = ({ renderNextButton, disableBack, handlePrev, buttonLabels: { cancel, back }, context }) => {\n  const formOptions = useFormApi();\n  const { success, error, submitting } = useContext(context);\n  if (success || typeof error === 'undefined' || error || submitting) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {renderNextButton()}\n      <Button type=\"button\" variant=\"secondary\" isDisabled={disableBack} onClick={handlePrev}>\n        {back}\n      </Button>\n      <Button type=\"button\" variant=\"link\" onClick={formOptions.onCancel}>\n        {cancel}\n      </Button>\n    </Fragment>\n  );\n};\n\nReviewStepButtons.propTypes = {\n  disableBack: PropTypes.bool,\n  handlePrev: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  nextStep: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      when: PropTypes.string.isRequired,\n      stepMapper: PropTypes.object.isRequired,\n    }),\n    PropTypes.func,\n  ]),\n  buttonLabels: PropTypes.shape({\n    submit: PropTypes.node.isRequired,\n    cancel: PropTypes.node.isRequired,\n    back: PropTypes.node.isRequired,\n    next: PropTypes.node.isRequired,\n  }).isRequired,\n  context: PropTypes.object.isRequired,\n  renderNextButton: PropTypes.func,\n};\n\nexport default ReviewStepButtons;\n","import React, { useContext } from 'react';\nimport { Title, Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody } from '@patternfly/react-core';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nconst WizardError = ({ context, title, text }) => {\n  const { jumpToStep } = useContext(WizardContext);\n  const { setWizardError } = useContext(context);\n  return (\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon color=\"red\" icon={ExclamationCircleIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{text}</EmptyStateBody>\n      <Button\n        onClick={() => {\n          setWizardError(undefined);\n          jumpToStep(0);\n        }}\n        variant=\"primary\"\n      >\n        Return to Step 1\n      </Button>\n    </EmptyState>\n  );\n};\n\nWizardError.propTypes = {\n  context: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default WizardError;\n","import React, { useEffect, Fragment, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers, updateUsersFilters } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Label } from '@patternfly/react-core';\nimport { sortable, nowrap } from '@patternfly/react-table';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport {\n  defaultCompactSettings,\n  defaultSettings,\n  syncDefaultPaginationWithUrl,\n  applyPaginationToUrl,\n  isPaginationPresentInUrl,\n} from '../../../helpers/shared/pagination';\nimport { syncDefaultFiltersWithUrl, applyFiltersToUrl, areFiltersPresentInUrl } from '../../../helpers/shared/filters';\nimport { CheckIcon, CloseIcon } from '@patternfly/react-icons';\n\nconst columns = [\n  { title: 'Org. Administrator', key: 'org-admin', transforms: [nowrap] },\n  { title: 'Username', key: 'username', transforms: [sortable] },\n  { title: 'Email' },\n  { title: 'First name', transforms: [nowrap] },\n  { title: 'Last name', transforms: [nowrap] },\n  { title: 'Status', transforms: [nowrap] },\n];\n\nconst createRows =\n  (userLinks) =>\n  (data, _expanded, checkedRows = []) => {\n    return data\n      ? data.reduce(\n          (acc, { username, is_active: isActive, email, first_name: firstName, last_name: lastName, is_org_admin: isOrgAdmin }) => [\n            ...acc,\n            {\n              uuid: username,\n              cells: [\n                isOrgAdmin ? (\n                  <Fragment>\n                    <span>\n                      <CheckIcon key=\"yes-icon\" className=\"pf-u-mr-sm\" />\n                      <span key=\"yes\">Yes</span>\n                    </span>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    <CloseIcon key=\"no-icon\" className=\"pf-u-mr-sm\" />\n                    <span key=\"no\">No</span>\n                  </Fragment>\n                ),\n                { title: userLinks ? <Link to={`/users/detail/${username}`}>{username.toString()}</Link> : username.toString() },\n                email.toString(),\n                firstName.toString(),\n                lastName.toString(),\n                {\n                  title: (\n                    <Label key=\"status\" color={isActive && 'green'}>\n                      {isActive ? 'Active' : 'Inactive'}\n                    </Label>\n                  ),\n                  props: {\n                    'data-is-active': isActive,\n                  },\n                },\n              ],\n              selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === username)),\n            },\n          ],\n          []\n        )\n      : [];\n  };\n\nconst UsersList = ({ users, fetchUsers, updateUsersFilters, isLoading, pagination, selectedUsers, setSelectedUsers, userLinks, inModal, props }) => {\n  const defaultPagination = useSelector(({ userReducer: { users } }) => ({\n    limit: inModal ? users.meta.limit : users.pagination.limit || defaultSettings.limit,\n    offset: inModal ? users.meta.offset : users.pagination.offset || defaultSettings.offset,\n    count: inModal ? users.meta.count : users.pagination.count,\n    redirected: !inModal && users.pagination.redirected,\n  }));\n\n  const history = useHistory();\n\n  let stateFilters = useSelector(\n    ({\n      userReducer: {\n        users: { filters },\n      },\n    }) => filters\n  );\n\n  const [filters, setFilters] = useState(\n    inModal\n      ? {\n          username: '',\n          email: '',\n          status: ['Active'],\n        }\n      : stateFilters\n  );\n\n  useEffect(() => {\n    inModal || (defaultPagination.redirected && applyPaginationToUrl(history, defaultPagination.limit, defaultPagination.offset));\n  }, [defaultPagination.redirected]);\n\n  useEffect(() => {\n    const pagination = inModal ? defaultSettings : syncDefaultPaginationWithUrl(history, defaultPagination);\n    const newFilters = inModal ? { status: filters.status } : syncDefaultFiltersWithUrl(history, ['username', 'email', 'status'], filters);\n    setFilters(newFilters);\n    fetchUsers({ ...mappedProps({ ...pagination, filters: newFilters }), inModal });\n  }, []);\n\n  useEffect(() => {\n    if (!inModal) {\n      isPaginationPresentInUrl(history) || applyPaginationToUrl(history, pagination.limit, pagination.offset);\n      Object.values(filters).some((filter) => filter?.length > 0) &&\n        !areFiltersPresentInUrl(history, Object.keys(filters)) &&\n        syncDefaultFiltersWithUrl(history, Object.keys(filters), filters);\n    }\n  });\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, username }) => ({ uuid, label: username || uuid }));\n    });\n  };\n\n  const updateFilters = (payload) => {\n    inModal || updateUsersFilters(payload);\n    setFilters({ username: '', ...payload });\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact={true}\n      borders={false}\n      createRows={createRows(userLinks)}\n      data={users}\n      ouiaId=\"users-table\"\n      fetchData={(config) => {\n        const status = Object.prototype.hasOwnProperty.call(config, 'status') ? config.status : filters.status;\n        const { username, email, count, limit, offset, orderBy } = config;\n        fetchUsers({ ...mappedProps({ count, limit, offset, orderBy, filters: { username, email, status } }), inModal });\n        inModal || applyPaginationToUrl(history, limit, offset);\n        inModal || applyFiltersToUrl(history, { username, email, status });\n      }}\n      setFilterValue={({ username, email, status }) => {\n        updateFilters({\n          username: typeof username === 'undefined' ? filters.username : username,\n          email: typeof email === 'undefined' ? filters.email : email,\n          status: typeof status === 'undefined' || status === filters.status ? filters.status : status,\n        });\n      }}\n      isLoading={isLoading}\n      pagination={pagination}\n      checkedRows={selectedUsers}\n      setCheckedItems={setCheckedItems}\n      sortBy={{\n        index: 1,\n        direction: 'asc',\n      }}\n      rowWrapper={UsersRow}\n      titlePlural=\"users\"\n      titleSingular=\"user\"\n      noDataDescription={[\n        'This filter criteria matches no users.',\n        'Make sure the beginning of your search input corresponds to the beginning of the value you are looking for, or try changing your filter settings.',\n      ]}\n      noData={users.length === 0 && !filters.username && !filters.email}\n      filters={[\n        { key: 'username', value: filters.username, placeholder: 'Filter by username' },\n        { key: 'email', value: filters.email, placeholder: 'Filter by email' },\n        {\n          key: 'status',\n          value: filters.status,\n          label: 'Status',\n          type: 'checkbox',\n          items: [\n            { label: 'Active', value: 'Active' },\n            { label: 'Inactive', value: 'Inactive' },\n          ],\n        },\n      ]}\n      tableId=\"users-list\"\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading } }) => {\n  return {\n    users: users.data && users.data.map((data) => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: (apiProps = defaultSettings) => {\n      dispatch(fetchUsers(apiProps));\n    },\n    updateUsersFilters: (filters) => {\n      dispatch(updateUsersFilters(filters));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchUsers: (apiProps) => {\n      return propsFromDispatch.fetchUsers(apiProps ? apiProps : defaultCompactSettings);\n    },\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  updateUsersFilters: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  userLinks: PropTypes.bool,\n  props: PropTypes.object,\n  inModal: PropTypes.bool,\n};\n\nUsersList.defaultProps = {\n  users: [],\n  selectedUsers: [],\n  setSelectedUsers: () => undefined,\n  userLinks: false,\n  inModal: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\nexport const CompactUsersList = connect(mapStateToProps, mapDispatchToProps, mergeProps)(UsersList);\n","import { fetchGroups } from '../../helpers/group/group-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\n\nexport const asyncValidator = async (groupName, idKey, id) => {\n  if (!groupName) {\n    return undefined;\n  }\n\n  if (groupName.length > 150) {\n    throw 'Can have maximum of 150 characters.';\n  }\n\n  const response = await fetchGroups({ limit: 10, offset: 0, filters: { name: groupName }, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (id ? response?.data?.some((item) => item[idKey] !== id) : response?.data?.length > 0) {\n    throw 'Name has already been taken.';\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce((value, idKey, id) => asyncValidator(value, idKey, id));\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner, Title } from '@patternfly/react-core';\nimport { AddGroupWizardContext } from './add-group-wizard';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { asyncValidator } from '../validators';\nimport WizardError from '../../common/wizard-error';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting, error, setWizardError } = useContext(AddGroupWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['group-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  if (error === true) {\n    return (\n      <WizardError\n        context={AddGroupWizardContext}\n        title=\"Group name already taken\"\n        text=\"Please return to Step 1: Group information and choose a unique group name for your group.\"\n      />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-lg\">\n        Review details\n      </Title>\n      {[[{ ...formFields?.[0]?.[0] }]]}\n    </React.Fragment>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport ReviewTemplate from './review-template';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddGroupWizardContext } from './add-group-wizard';\n\nexport default {\n  fields: [\n    {\n      component: 'wizard',\n      name: 'wizard',\n      isDynamic: true,\n      inModal: true,\n      showTitles: true,\n      title: 'Create group',\n      fields: [\n        {\n          name: 'name-and-description',\n          nextStep: 'add-roles',\n          title: 'Name and Description',\n          fields: [\n            {\n              component: 'set-name',\n              name: 'group-name',\n              validate: [\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n              ],\n            },\n            {\n              component: componentTypes.TEXTAREA,\n              name: 'group-description',\n              hideField: true,\n              validate: [\n                {\n                  type: validatorTypes.MAX_LENGTH,\n                  threshold: 150,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'add-roles',\n          nextStep: 'add-users',\n          title: 'Add roles',\n          fields: [\n            {\n              component: 'set-roles',\n              name: 'roles-list',\n            },\n          ],\n        },\n        {\n          name: 'add-users',\n          nextStep: 'review',\n          title: 'Add members',\n          fields: [\n            {\n              component: 'set-users',\n              name: 'users-list',\n            },\n          ],\n        },\n        {\n          name: 'review',\n          title: 'Review details',\n          // eslint-disable-next-line react/display-name\n          buttons: (props) => <ReviewStepButtons {...props} context={AddGroupWizardContext} />,\n          StepTemplate: ReviewTemplate,\n          fields: [\n            {\n              component: 'summary-content',\n              name: 'summary-content',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput/TextInput';\nimport { TextArea } from '@patternfly/react-core/dist/esm/components/TextArea/TextArea';\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { debouncedAsyncValidator } from '../validators';\n\nconst groupNameValidated = (groupName, groupNameError) => (groupName === undefined || groupNameError ? 'error' : 'default');\nconst groupDescriptionValidated = (groupDescription) => (groupDescription?.length > 150 ? 'error' : 'default');\n\nconst SetName = (props) => {\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const { 'group-name': name, 'group-description': description } = formOptions.getState().values;\n  const [groupName, setGroupName] = useState(name || '');\n  const [groupNameError, setGroupNameError] = useState();\n  const [groupDescription, setGroupDescription] = useState(description);\n\n  const processGroupName = (value) => {\n    input.onChange(undefined);\n    debouncedAsyncValidator(value)\n      .then(() => {\n        input.onChange(value);\n        setGroupNameError(undefined);\n      })\n      .catch((error) => {\n        setGroupNameError(error);\n      });\n    setGroupName(value);\n  };\n\n  useEffect(() => {\n    groupName?.length > 0 && processGroupName(groupName);\n  }, []);\n\n  return (\n    <Stack hasGutter>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <FormGroup\n          label=\"Group name\"\n          helperTextInvalid={groupName ? groupNameError : 'Required'}\n          isRequired\n          validated={groupNameValidated(groupName, groupNameError)}\n        >\n          <TextInput\n            value={groupName}\n            type=\"text\"\n            validated={groupNameValidated(groupName, groupNameError)}\n            onBlur={() => groupName === '' && setGroupName(undefined)}\n            onChange={(value) => processGroupName(value)}\n            aria-label=\"Group name\"\n          />\n        </FormGroup>\n      </StackItem>\n      <StackItem>\n        <FormGroup\n          label=\"Group description\"\n          helperTextInvalid=\"Can have maximum of 150 characters.\"\n          validated={groupDescriptionValidated(groupDescription)}\n        >\n          <TextArea\n            value={groupDescription}\n            validated={groupDescriptionValidated(groupDescription)}\n            onChange={(value) => {\n              setGroupDescription(value);\n              formOptions.change('group-description', value);\n            }}\n            aria-label=\"Group description\"\n            resizeOrientation=\"vertical\"\n          />\n        </FormGroup>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSetName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SetName;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { sortable } from '@patternfly/react-table';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description }) => [\n          ...acc,\n          {\n            uuid,\n            cells: [display_name || name, description],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, canSort, setSelectedRoles }) => {\n  const [filterValue, setFilterValue] = useState('');\n  const { current: columns } = useRef([\n    { title: 'Name', key: 'display_name', ...(canSort ? { transforms: [sortable] } : { orderBy: 'name' }) },\n    { title: 'Description' },\n  ]);\n\n  useEffect(() => {\n    fetchRoles({ orderBy: 'display_name' });\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact\n      borders={false}\n      createRows={createRows}\n      data={roles}\n      filterValue={filterValue}\n      filterPlaceholder=\"role name\"\n      fetchData={(config) => fetchRoles(mappedProps({ ...config, filters: { display_name: config.name } }))}\n      setFilterValue={({ name }) => setFilterValue(name)}\n      isLoading={isLoading}\n      ouiaId=\"roles-table\"\n      pagination={pagination}\n      checkedRows={selectedRoles}\n      setCheckedItems={setCheckedItems}\n      titlePlural=\"roles\"\n      titleSingular=\"role\"\n      tableId=\"roles-list\"\n    />\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading } }) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  canSort: PropTypes.bool,\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  canSort: true,\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup } }) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid,\n  };\n};\n\nconst mapDispatchToPropsGroup = (dispatch) => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    canSort: false,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormGroup, Stack, StackItem, Text, TextContent } from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = (props) => {\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedRoles(formOptions.getState().values['roles-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedRoles);\n    formOptions.change('roles-list', selectedRoles);\n  }, [selectedRoles]);\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text>Select one or more roles to add to this group.</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <FormGroup fieldId=\"select-role\">\n            <RolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </FormGroup>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetRoles;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Form, FormGroup, Stack, StackItem, TextContent } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { CompactUsersList } from './users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport '../../../App.scss';\n\nconst SetUsers = (props) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedUsers(formOptions.getState().values['users-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedUsers);\n    formOptions.change('users-list', selectedUsers);\n  }, [selectedUsers]);\n\n  return (\n    <Fragment>\n      <Form>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <ActiveUser linkDescription={'To manage users, go to your'} />\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup fieldId=\"select-user\">\n              <Card>\n                <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} inModal />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst SummaryContent = () => {\n  const formOptions = useFormApi();\n  const {\n    'group-name': name,\n    'group-description': description,\n    'users-list': selectedUsers,\n    'roles-list': selectedRoles,\n  } = formOptions.getState().values;\n\n  return (\n    <div className=\"rbac\">\n      <Stack hasGutter>\n        <StackItem>\n          <Stack hasGutter>\n            <StackItem className=\"rbac-l-stack__item-summary\">\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    Group name\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{name}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    Group description\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{description}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    Roles\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedRoles.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    Members\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedUsers.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SummaryContent;\n","import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useHistory } from 'react-router-dom';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { WarningModal } from '../../common/warningModal';\nimport schema from './schema';\nimport { addGroup } from '../../../redux/actions/group-actions';\nimport SetName from './set-name';\nimport SetRoles from './set-roles';\nimport SetUsers from './set-users';\nimport SummaryContent from './summary-content';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport paths from '../../../utilities/pathnames';\n\nexport const AddGroupWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  description: Description,\n  'set-name': SetName,\n  'set-roles': SetRoles,\n  'set-users': SetUsers,\n  'summary-content': SummaryContent,\n};\n\nexport const onCancel = (emptyCallback, nonEmptyCallback, setGroupData) => (formData) => {\n  setGroupData(formData);\n  if (Object.keys(formData).length > 0) {\n    nonEmptyCallback(true);\n  } else {\n    emptyCallback();\n  }\n};\n\nconst AddGroupWizard = ({ postMethod, pagination, filters }) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [groupData, setGroupData] = useState({});\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n\n  const redirectToGroups = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        title: 'Adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'Adding group was canceled by the user.',\n      })\n    );\n    push({\n      pathname: paths.groups,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    const groupData = {\n      name: formData['group-name'],\n      description: formData['group-description'],\n      user_list: formData['users-list'].map((user) => ({ username: user.label })),\n      roles_list: formData['roles-list'].map((role) => role.uuid),\n    };\n    push({\n      pathname: paths.groups,\n      search: createQueryParams({ page: 1, per_page: pagination.limit }),\n    });\n    dispatch(addGroup(groupData))\n      .then(() => postMethod({ limit: pagination.limit, offset: 0, filters: {} }))\n      .then(() => {\n        dispatch(\n          addNotification({\n            variant: 'success',\n            title: 'Success adding group',\n            dismissDelay: 8000,\n            dismissable: false,\n            description: 'The group was added successfully.',\n          })\n        );\n      });\n  };\n\n  return cancelWarningVisible ? (\n    <WarningModal\n      type=\"group\"\n      isOpen={cancelWarningVisible}\n      onModalCancel={() => setCancelWarningVisible(false)}\n      onConfirmCancel={redirectToGroups}\n    />\n  ) : (\n    <AddGroupWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <FormRenderer\n        schema={schema}\n        subscription={{ values: true }}\n        FormTemplate={FormTemplate}\n        componentMapper={{ ...componentMapper, ...mapperExtension }}\n        onSubmit={onSubmit}\n        initialValues={groupData}\n        onCancel={onCancel(redirectToGroups, setCancelWarningVisible, setGroupData)}\n      />\n    </AddGroupWizardContext.Provider>\n  );\n};\n\nAddGroupWizard.propTypes = {\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default AddGroupWizard;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nimport { Skeleton } from '@patternfly/react-core';\nimport { debouncedAsyncValidator } from './validators';\nimport pathnames from '../../utilities/pathnames';\n\nconst EditGroupModal = ({\n  addNotification,\n  updateGroup,\n  postMethod,\n  pagination,\n  filters,\n  cancelRoute,\n  submitRoute = cancelRoute,\n  group,\n  onClose,\n}) => {\n  const [selectedGroup, setSelectedGroup] = useState(undefined);\n\n  const { push } = useHistory();\n  const match = useRouteMatch('/groups/edit/:id');\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    match &&\n      fetchGroup(match.params.id)\n        .payload.then((data) => setGroupData(data))\n        .catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [group]);\n\n  const onSubmit = (data) => {\n    const user_data = {\n      uuid: data.uuid,\n      description: data.description || null,\n      name: data.name,\n    };\n    postMethod\n      ? updateGroup(user_data)\n          .then(() => postMethod({ limit: pagination?.limit, filters }))\n          .then(push(submitRoute))\n      : updateGroup(user_data).then(() => push(submitRoute));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      dismissable: false,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was canceled by the user.' : 'Adding group was canceled by the user.',\n    });\n    onClose();\n    push(cancelRoute);\n  };\n\n  const schema = {\n    fields: [\n      {\n        name: 'name',\n        label: 'Name',\n        component: selectedGroup ? componentTypes.TEXT_FIELD : 'skeleton',\n        ...(selectedGroup ? { validateOnMount: true } : {}),\n        validate: [\n          { type: 'validate-group-name', id: match ? match.params.id : group.uuid, idKey: 'uuid' },\n          {\n            type: validatorTypes.REQUIRED,\n          },\n        ],\n      },\n      {\n        name: 'description',\n        label: 'Description',\n        component: selectedGroup ? componentTypes.TEXTAREA : 'skeleton',\n        validate: [\n          {\n            type: validatorTypes.MAX_LENGTH,\n            threshold: 150,\n          },\n        ],\n      },\n    ],\n  };\n\n  const validatorMapper = {\n    'validate-group-name':\n      ({ idKey, id }) =>\n      (value) =>\n        debouncedAsyncValidator(value, idKey, id),\n  };\n\n  return (\n    <FormRenderer\n      schema={schema}\n      componentMapper={{\n        ...componentMapper,\n        skeleton: Skeleton,\n      }}\n      onCancel={onCancel}\n      onSubmit={onSubmit}\n      validatorMapper={validatorMapper}\n      initialValues={{ ...selectedGroup }}\n      FormTemplate={(props) => (\n        <ModalFormTemplate {...props} ModalProps={{ onClose: onCancel, isOpen: true, variant: 'medium', title: `Edit group's information` }} />\n      )}\n    />\n  );\n};\n\nEditGroupModal.defaultProps = {\n  cancelRoute: pathnames.groups,\n  onClose: () => null,\n  onSubmit: () => null,\n};\n\nEditGroupModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  group: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      updateGroup,\n      fetchGroup,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button, Checkbox, Modal, ModalVariant, Text, TextContent } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\nimport pathnames from '../../utilities/pathnames';\nimport './remove-group-modal.scss';\n\nconst RemoveGroupModal = ({\n  removeGroups,\n  group,\n  isLoading,\n  fetchGroup,\n  groupsUuid,\n  isModalOpen,\n  postMethod,\n  pagination,\n  filters,\n  cancelRoute,\n  submitRoute = cancelRoute,\n}) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const { push } = useHistory();\n\n  const [checked, setChecked] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids)\n      .then(() => postMethod(uuids, { limit: pagination?.limit, filters }))\n      .then(push(submitRoute));\n  };\n\n  const onCancel = () => push(cancelRoute);\n\n  return (\n    <Modal\n      className=\"rbac\"\n      isOpen={isModalOpen}\n      variant={ModalVariant.small}\n      title={\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n          &nbsp; {multipleGroups ? 'Delete groups?' : 'Delete group?'}\n        </Text>\n      }\n      onClose={onCancel}\n      actions={[\n        <Button key=\"submit\" isDisabled={!checked} variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {multipleGroups ? 'Delete groups' : 'Delete group'}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        {multipleGroups ? (\n          <Text>\n            Deleting these <b>{groupsUuid.length}</b> groups removes all roles from the members inside the group.\n          </Text>\n        ) : isLoading ? (\n          <FormItemLoader />\n        ) : (\n          <Text>\n            Deleting the <b>{group.name}</b> group removes all roles from the members inside the group.\n          </Text>\n        )}\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={checked}\n        onChange={() => setChecked(!checked)}\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  cancelUrl: pathnames.groups,\n};\n\nRemoveGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup } }) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n      removeGroups,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal);\n","import React, { Fragment, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Popover } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { getDateFormat } from '../../helpers/shared/helpers';\n\nconst DefaultPlatformPopover = ({ uuid }) => {\n  const [isPopoverVisible, setPopoverVisible] = useState(false);\n  const popoverRootRef = useRef(null);\n\n  return (\n    <span ref={popoverRootRef} key={`${uuid}-popover`} id=\"default-group-popover\">\n      <Popover\n        zIndex=\"110\"\n        position=\"right\"\n        isVisible={isPopoverVisible}\n        shouldClose={() => setPopoverVisible(false)}\n        hideOnOutsideClick\n        bodyContent=\"This group contains the roles that all users in your organization inherit by default.\"\n        appendTo={popoverRootRef.current}\n      >\n        <OutlinedQuestionCircleIcon\n          onClick={() => setPopoverVisible(!isPopoverVisible)}\n          className={classNames('pf-c-question-circle-icon', { 'icon-active': isPopoverVisible })}\n        />\n      </Popover>\n    </span>\n  );\n};\n\nDefaultPlatformPopover.propTypes = {\n  uuid: PropTypes.string.isRequired,\n};\n\nexport const createRows = (isAdmin, data, _opened, selectedRows = []) => {\n  return data.reduce(\n    (acc, { uuid, name, roleCount, principalCount, modified, platform_default: isPlatformDefault }) => [\n      ...acc,\n      {\n        uuid,\n        isPlatformDefault,\n        cells: [\n          <Fragment key={uuid}>\n            <div className=\"pf-m-inline-flex\">\n              {isAdmin ? (\n                <Link key={`${uuid}-link`} to={`/groups/detail/${uuid}`}>\n                  {name}\n                </Link>\n              ) : (\n                name\n              )}\n              {isPlatformDefault && <DefaultPlatformPopover uuid={uuid} />}\n            </div>\n          </Fragment>,\n          roleCount,\n          principalCount,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type={getDateFormat(modified)} />\n          </Fragment>,\n        ],\n        selected: Boolean(selectedRows && selectedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems, isHeader }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className={isHeader ? `rbac-page-header__tabs` : ''} activeKey={activeTab ? activeTab.eventKey : 0} onSelect={handleTabClick}>\n      {tabItems.map((item) => (\n        <Tab title={item.title} key={item.eventKey} eventKey={item.eventKey} name={item.name} />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool,\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\n\nexport const createRows = (data, _opened, checkedRows = []) => {\n  return data.reduce(\n    (acc, { is_active: isActive, username, email, first_name: firstName, last_name: lastName }) => [\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [\n          {\n            title: <Label color={isActive && 'green'}>{isActive ? 'Active' : 'Inactive'}</Label>,\n            props: {\n              data: { isActive },\n            },\n          },\n          username,\n          email,\n          lastName,\n          firstName,\n        ],\n        selected: checkedRows.find((row) => row.uuid === username),\n      },\n    ],\n    []\n  );\n};\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant, StackItem, Stack, TextContent } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, addMembersToGroup, fetchMembersForGroup, fetchGroups } from '../../../redux/actions/group-actions';\nimport { CompactUsersList } from '../add-group/users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchMembersForGroup,\n  fetchGroups,\n}) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const onSubmit = () => {\n    const userList = selectedUsers.map((user) => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        dismissDelay: 8000,\n        dismissable: false,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`,\n      });\n      addMembersToGroup(uuid, userList).then(() => {\n        fetchMembersForGroup(uuid);\n        fetchGroups({ inModal: false });\n      });\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      dismissable: false,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was canceled by the user.`,\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members\"\n      variant={ModalVariant.medium}\n      isOpen\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={selectedUsers.length === 0} variant=\"primary\" onClick={onSubmit}>\n          Add to group\n        </Button>,\n        <Button id=\"add-groups-cancel\" ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <ActiveUser linkDescription=\"To manage users, go to your\" />\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} inModal />\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: [],\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func,\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchMembersForGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired,\n  fetchGroups: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      addGroup,\n      addMembersToGroup,\n      fetchMembersForGroup,\n      fetchGroups,\n    },\n    dispatch\n  );\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","/* eslint-disable camelcase */\nimport { nowrap } from '@patternfly/react-table';\nimport React, { Fragment, useState, useEffect, useContext, useRef } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, Route, useHistory, useParams } from 'react-router-dom';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchMembersForGroup, removeMembersFromGroup, fetchGroups } from '../../../redux/actions/group-actions';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport paths from '../../../utilities/pathnames';\nimport PermissionsContext from '../../../utilities/permissions-context';\n\nconst columns = [\n  { title: 'Status', transforms: [nowrap] },\n  { title: 'Username' },\n  { title: 'Email' },\n  { title: 'Last name' },\n  { title: 'First name' },\n];\n\nconst selector = ({ groupReducer: { selectedGroup } }) => ({\n  principals: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  groupName: selectedGroup.name,\n  platform_default: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading,\n});\n\nconst removeModalText = (name, group, plural) =>\n  plural ? (\n    <p>\n      These <b> {`${name}`}</b> members will lose all the roles associated with the <b>{`${group}`}</b> group.\n    </p>\n  ) : (\n    <p>\n      <b>{`${name}`}</b> will lose all the roles associated with the <b> {`${group}`}</b> group.\n    </p>\n  );\n\nconst GroupPrincipals = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedPrincipals, setSelectedPrincipals] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  const { uuid } = useParams();\n  const { principals, pagination, groupName, isLoading, platform_default } = useSelector(selector, shallowEqual);\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options = pagination) => {\n    dispatch(fetchMembersForGroup(uuid, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(uuid, userNames)).then(() => {\n      setSelectedPrincipals([]);\n      fetchData(undefined, { ...pagination, offset: 0 });\n      dispatch(fetchGroups({ inModal: false }));\n    });\n  };\n\n  const actionResolver = () =>\n    !hasPermissions.current\n      ? null\n      : [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, principal) => {\n              setConfirmDelete(() => () => removeMembers([principal.username.title]));\n              setDeleteInfo({\n                title: 'Remove member?',\n                text: removeModalText(principal.username.title, groupName, false),\n                confirmButtonLabel: 'Remove member',\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-members']}\n        render={(args) => <AddGroupMembers fetchData={fetchData} closeUrl={`/groups/detail/${uuid}/members`} {...args} />}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(hasPermissions.current\n      ? [\n          <Link to={`/groups/detail/${uuid}/members/add_members`} key=\"remove-from-group\" className=\"rbac-m-hide-on-sm\">\n            <Button variant=\"primary\" aria-label=\"Add member\">\n              Add member\n            </Button>\n          </Link>,\n          {\n            label: 'Add member',\n            props: {\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/members/add_members`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleMembersSelected = selectedPrincipals.length > 1;\n              const removeText = multipleMembersSelected ? 'Remove members?' : 'Remove member?';\n              setConfirmDelete(() => () => removeMembers(selectedPrincipals.map((user) => user.uuid)));\n              setDeleteInfo({\n                title: removeText,\n                confirmButtonLabel: removeText,\n                text: removeModalText(\n                  multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].uuid,\n                  groupName,\n                  multipleMembersSelected\n                ),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        isOpen={showRemoveModal}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        }}\n      />\n      <Section type=\"content\" id={'tab-principals'}>\n        {platform_default ? (\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={TextVariants.h1}>All users in this organization are members of this group.</Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card>\n        ) : (\n          <TableToolbarView\n            data={(principals || []).map((user) => ({ ...user, uuid: user.username }))}\n            isSelectable={hasPermissions.current}\n            createRows={createRows}\n            columns={columns}\n            routes={routes}\n            actionResolver={actionResolver}\n            filterPlaceholder=\"username\"\n            titlePlural=\"members\"\n            titleSingular=\"member\"\n            ouiaId=\"members-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={({ limit, offset, name }) => fetchData(name, { limit, offset })}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            checkedRows={selectedPrincipals}\n            isLoading={isLoading}\n            rowWrapper={UsersRow}\n            setCheckedItems={setCheckedPrincipals}\n            toolbarButtons={toolbarButtons}\n            emptyProps={{ title: 'There are no members in this group', description: ['Add a user to configure user access.', ''] }}\n            tableId=\"group-members\"\n          />\n        )}\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default GroupPrincipals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  return (\n    <RemoveModal\n      text={\n        <TextContent>\n          <Text>\n            Once you edit the <b>Default access</b> group, the system will no longer update it with new default access roles. The group name will\n            change to <b>Custom default access</b>.\n          </Text>\n        </TextContent>\n      }\n      title={'Warning'}\n      withCheckbox\n      isOpen={isOpen}\n      confirmButtonLabel={'Continue'}\n      onClose={onClose}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DefaultGroupChange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Modal, ModalVariant, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport DefaultGroupChange from './default-group-change-modal';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  name,\n  isDefault,\n  isChanged,\n  addNotification,\n  onDefaultGroupChanged,\n  fetchRolesForGroup,\n  fetchGroup,\n}) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const onCancel = () => {\n    setSelectedRoles && setSelectedRoles([]);\n    addNotification({\n      variant: 'warning',\n      title: 'Adding roles to group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding roles to group was canceled by the user.',\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map((role) => role.uuid);\n    addRolesToGroup(uuid, rolesList, () => {\n      fetchRolesForGroup();\n      fetchGroup();\n    });\n    if (isDefault && !isChanged) {\n      onDefaultGroupChanged(true);\n    }\n\n    return push(closeUrl);\n  };\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange isOpen={showConfirmModal} onClose={onCancel} onSubmit={onSubmit} />\n  ) : (\n    <Modal\n      title=\"Add roles to group\"\n      variant={ModalVariant.medium}\n      isOpen\n      onClose={() => {\n        onCancel();\n        setShowConfirmModal(true);\n      }}\n      actions={[\n        <Button\n          aria-label=\"Save\"\n          ouiaId=\"primary-save-button\"\n          variant=\"primary\"\n          key=\"confirm\"\n          isDisabled={selectedRoles.length === 0}\n          onClick={() => {\n            setShowConfirmModal(true);\n            (!isDefault || isChanged) && onSubmit();\n          }}\n        >\n          Add to group\n        </Button>,\n        <Button aria-label=\"Cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" key=\"cancel\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        {title && (\n          <StackItem>\n            <Title headingLevel=\"h4\" size=\"xl\">\n              {title}\n            </Title>\n          </StackItem>\n        )}\n        <StackItem>\n          <TextContent>\n            <Text component={TextVariants.p}>\n              This role list has been filtered to only show roles that are not currently in <b> {name}</b>.\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </Card>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.any,\n    goBack: PropTypes.func.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  addNotification: PropTypes.func,\n  onDefaultGroupChanged: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n  fetchGroup: PropTypes.func,\n};\n\nexport default AddGroupRoles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange\n      isOpen={showConfirmModal && isOpen}\n      onClose={() => {\n        onClose();\n        setShowConfirmModal(false);\n      }}\n      onSubmit={() => {\n        onSubmit();\n      }}\n    />\n  ) : (\n    <RemoveModal\n      text={text}\n      title={title}\n      isOpen={isOpen}\n      confirmButtonLabel={confirmButtonLabel}\n      onClose={() => {\n        onClose();\n      }}\n      onSubmit={() => {\n        setShowConfirmModal(true);\n        (!isDefault || isChanged) && onSubmit();\n      }}\n    />\n  );\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.node,\n  title: PropTypes.node,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false,\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment, useContext, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup, fetchAddRolesForGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport RemoveRole from './remove-role-modal';\nimport paths from '../../../utilities/pathnames';\nimport { getDateFormat } from '../../../helpers/shared/helpers';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport './group-roles.scss';\n\nconst columns = [{ title: 'Name', orderBy: 'name' }, { title: 'Description' }, { title: 'Last modified' }];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description, modified }) => [\n          ...acc,\n          {\n            uuid,\n            title: display_name || name,\n            cells: [\n              <Fragment key={`${uuid}-name`}>\n                <Link to={`/groups/detail/${groupUuid}/roles/detail/${uuid}`}>{display_name || name}</Link>\n              </Fragment>,\n              description,\n              <Fragment key={`${uuid}-modified`}>\n                <DateFormat date={modified} type={getDateFormat(modified)} />\n              </Fragment>,\n            ],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst generateOuiaID = (name) => {\n  // given a group name, generate an OUIA ID for the 'Add role' button\n  return name.toLowerCase().includes('default access') ? 'dag-add-role-button' : 'add-role-button';\n};\n\nconst addRoleButton = (isDisabled, ouiaId) => {\n  const addRoleButtonContent = (\n    <Button ouiaId={ouiaId} variant=\"primary\" className=\"rbac-m-hide-on-sm\" aria-label=\"Add role\" isAriaDisabled={isDisabled}>\n      Add role\n    </Button>\n  );\n\n  return isDisabled ? (\n    <Tooltip content=\"All available roles have already been added to the group\">{addRoleButtonContent}</Tooltip>\n  ) : (\n    addRoleButtonContent\n  );\n};\n\nconst GroupRoles = ({\n  roles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: {\n    params: { uuid },\n  },\n  name,\n  isDefault,\n  isChanged,\n  onDefaultGroupChanged,\n  fetchAddRolesForGroup,\n  disableAddRoles,\n  addNotification,\n  reloadGroup,\n}) => {\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [selectedAddRoles, setSelectedAddRoles] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n\n  useEffect(() => {\n    fetchAddRolesForGroup(uuid);\n  }, [roles]);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{name}</b> group will lose the permissions in {plural ? 'these' : 'the'}\n      <b> {role}</b> role{plural ? `s` : ''}.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...(hasPermissions.current\n      ? [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, role) => {\n              setConfirmDelete(() => () => removeRoles(uuid, [role.uuid], () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)));\n              setDeleteInfo({\n                title: 'Remove role?',\n                confirmButtonLabel: 'Remove role',\n                text: removeModalText(name, role.title, false),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-roles']}\n        render={(args) => (\n          <AddGroupRoles\n            fetchGroup={() => reloadGroup(uuid)}\n            fetchRolesForGroup={() => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)}\n            selectedRoles={selectedAddRoles}\n            setSelectedRoles={setSelectedAddRoles}\n            closeUrl={`/groups/detail/${uuid}/roles`}\n            addRolesToGroup={addRoles}\n            name={name}\n            isDefault={isDefault}\n            isChanged={isChanged}\n            addNotification={addNotification}\n            onDefaultGroupChanged={onDefaultGroupChanged}\n            {...args}\n          />\n        )}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(hasPermissions.current\n      ? [\n          <Link\n            className={`rbac-m-hide-on-sm rbac-c-button__add-role${disableAddRoles && '-disabled'}`}\n            to={`/groups/detail/${uuid}/roles/add_roles`}\n            key=\"add-to-group\"\n          >\n            {addRoleButton(disableAddRoles, generateOuiaID(name || ''))}\n          </Link>,\n          {\n            label: 'Add role',\n            props: {\n              isDisabled: disableAddRoles,\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/roles/add_roles`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedRoles || !selectedRoles.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleRolesSelected = selectedRoles.length > 1;\n              setConfirmDelete(\n                () => () =>\n                  removeRoles(\n                    uuid,\n                    selectedRoles.map((role) => role.uuid),\n                    () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)\n                  )\n              );\n              setDeleteInfo({\n                title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n                confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n                text: removeModalText(\n                  name,\n                  multipleRolesSelected ? selectedRoles.length : roles.find((role) => role.uuid === selectedRoles[0].uuid).name,\n                  multipleRolesSelected\n                ),\n              });\n\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        isOpen={showRemoveModal}\n        isChanged={isChanged}\n        isDefault={isDefault}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isDefault && !isChanged);\n        }}\n      />\n\n      <Section type=\"content\" id={'tab-roles'}>\n        <TableToolbarView\n          columns={columns}\n          isSelectable={hasPermissions.current}\n          createRows={(...props) => createRows(uuid, ...props)}\n          data={roles}\n          filterValue={filterValue}\n          fetchData={(config) => {\n            fetchRolesForGroup(config)(uuid);\n          }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedRoles}\n          setCheckedItems={setCheckedItems}\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          routes={routes}\n          ouiaId=\"roles-table\"\n          emptyProps={{ title: 'There are no roles in this group', description: ['Add a role to configure user access.', ''] }}\n          filters={[\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue },\n          ]}\n          tableId=\"group-roles\"\n        />\n      </Section>\n    </React.Fragment>\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup } }) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    name: selectedGroup.name,\n    isDefault: selectedGroup.platform_default,\n    isChanged: !selectedGroup.system,\n    disableAddRoles: !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options)),\n    fetchAddRolesForGroup: (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {})),\n    addNotification: (...props) => dispatch(addNotification(...props)),\n    reloadGroup: (apiProps) => dispatch(fetchGroup(apiProps)),\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  fetchAddRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  onDefaultGroupChanged: PropTypes.func,\n  disableAddRoles: PropTypes.bool.isRequired,\n  addNotification: PropTypes.func,\n  reloadGroup: PropTypes.func,\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, Link, useLocation, useHistory } from 'react-router-dom';\nimport { connect, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup, fetchGroups } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Alert, AlertActionCloseButton, Popover, Split, SplitItem, DropdownItem, Dropdown, KebabToggle, Button } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport pathnames from '../../utilities/pathnames';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport EmptyWithAction from '../../presentational-components/shared/empty-state';\nimport RbacBreadcrumbs from '../../presentational-components/shared/breadcrubms';\nimport { BAD_UUID, getBackRoute } from '../../helpers/shared/helpers';\nimport './group.scss';\n\nconst Group = ({\n  match: {\n    params: { uuid },\n  },\n  group,\n  fetchGroup,\n  isFetching,\n  onDelete,\n}) => {\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` },\n  ];\n\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo] = useState(false);\n\n  const history = useHistory();\n\n  const { pagination, filters, groupExists } = useSelector(\n    ({ groupReducer: { groups, error } }) => ({\n      pagination: groups.pagination || groups.meta,\n      filters: groups.filters,\n      groupExists: error !== BAD_UUID,\n    }),\n    shallowEqual\n  );\n\n  const breadcrumbsList = () => [\n    {\n      title: 'Groups',\n      to: getBackRoute(pathnames.groups, pagination, filters),\n    },\n    groupExists ? { title: isFetching ? undefined : group.name, isActive: true } : { title: 'Invalid group', isActive: true },\n  ];\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchData(uuid);\n    insights.chrome.appObjectId(uuid);\n    return () => insights.chrome.appObjectId(undefined);\n  }, []);\n\n  const defaultGroupChangedIcon = (name) => (\n    <div style={{ display: 'inline-flex' }}>\n      {name}\n      <div className=\"pf-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={\n            <div>\n              Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n              name has changed to <b>Custom default access</b>.\n            </div>\n          }\n        >\n          <InfoCircleIcon className=\"rbac-default-group-info-icon\" />\n        </Popover>\n      </div>\n    </div>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <Link\n          onClick={() => setDropdownOpen(false)}\n          to={(location.pathname.includes('members') ? pathnames['group-detail-members-edit'] : pathnames['group-detail-roles-edit']).replace(\n            ':uuid',\n            uuid\n          )}\n        >\n          Edit\n        </Link>\n      }\n      key=\"edit-group\"\n    />,\n    <DropdownItem\n      component={\n        <Link\n          onClick={() => onDelete(uuid)}\n          to={() =>\n            (location.pathname.includes('members') ? pathnames['group-detail-members-remove'] : pathnames['group-detail-roles-remove']).replace(\n              ':uuid',\n              uuid\n            )\n          }\n        >\n          Delete\n        </Link>\n      }\n      className=\"rbac-c-group__action\"\n      key=\"delete-group\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      {groupExists ? (\n        <Fragment>\n          <TopToolbar breadcrumbs={breadcrumbsList()}>\n            <Split hasGutter>\n              <SplitItem isFilled>\n                <TopToolbarTitle\n                  title={\n                    !isFetching && group ? (\n                      <Fragment>{group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name}</Fragment>\n                    ) : undefined\n                  }\n                  description={!isFetching && group ? group.description : undefined}\n                />\n              </SplitItem>\n              <SplitItem>\n                {group.platform_default ? null : (\n                  <Dropdown\n                    ouiaId=\"group-title-actions-dropdown\"\n                    toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"group-actions-dropdown\" />}\n                    isOpen={isDropdownOpen}\n                    isPlain\n                    position=\"right\"\n                    dropdownItems={dropdownItems}\n                  />\n                )}\n              </SplitItem>\n            </Split>\n            {showDefaultGroupChangedInfo ? (\n              <Alert\n                variant=\"info\"\n                isInline\n                title=\"Default access group has changed\"\n                action={<AlertActionCloseButton onClose={() => setShowDefaultGroupChangedInfo(false)} />}\n                className=\"pf-u-mb-lg pf-u-mt-sm\"\n              >\n                Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n                name has changed to <b>Custom default access</b>.\n              </Alert>\n            ) : null}\n          </TopToolbar>\n          <AppTabs isHeader tabItems={tabItems} />\n          <Route\n            path={[pathnames['group-detail-roles-remove'], pathnames['group-detail-members-remove']]}\n            render={(props) => (\n              <RemoveGroup\n                {...props}\n                postMethod={() => {\n                  dispatch(fetchGroups({ ...pagination, offset: 0, filters, inModal: false }));\n                }}\n                cancelRoute={`group/detail/${uuid}`}\n                submitRoute={getBackRoute(pathnames.groups, { ...pagination, offset: 0 }, filters)}\n                isModalOpen\n                groupsUuid={[group]}\n              />\n            )}\n          />\n          <Route\n            path={[pathnames['group-detail-roles-edit'], pathnames['group-detail-members-edit']]}\n            render={(props) => (\n              <EditGroup\n                {...props}\n                group={group}\n                cancelRoute={`group/detail/${uuid}`}\n                postMethod={() => {\n                  fetchData(uuid);\n                }}\n              />\n            )}\n          />\n          <Route\n            path={pathnames['group-detail-roles']}\n            render={(props) => <GroupRoles {...props} onDefaultGroupChanged={setShowDefaultGroupChangedInfo} />}\n          />\n          <Route path={pathnames['group-detail-members']} component={GroupPrincipals} />\n          <Route render={() => <Redirect to={`/groups/detail/${uuid}/roles`} />} />\n          {!group && <ListLoader />}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <section className=\"pf-c-page__main-breadcrumb pf-u-pb-md\">\n            <RbacBreadcrumbs {...breadcrumbsList()} />\n          </section>\n          <EmptyWithAction\n            title=\"Group not found\"\n            description={[`Group with ID ${uuid} does not exist.`]}\n            actions={[\n              <Button\n                key=\"back-button\"\n                className=\"pf-u-mt-xl\"\n                ouiaId=\"back-button\"\n                variant=\"primary\"\n                aria-label=\"Back to previous page\"\n                onClick={() => history.goBack()}\n              >\n                Back to previous page\n              </Button>,\n            ]}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isRecordLoading, isRecordRolesLoading } }) => ({\n  group: selectedGroup,\n  isFetching: isRecordLoading || isRecordRolesLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n    },\n    dispatch\n  );\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    platform_default: PropTypes.bool,\n    system: PropTypes.bool,\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nGroup.defaultProps = {\n  isFetching: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst GroupRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={classnames(className, {\n        'rbac-c-group-default': row.isPlatformDefault,\n      })}\n      row={row}\n      {...props}\n    />\n  );\n};\n\nGroupRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    isPlatformDefault: PropTypes.bool,\n  }),\n  className: PropTypes.string,\n};\n\nexport default GroupRowWrapper;\n","import React, { Fragment, useContext, useEffect, useState } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups, fetchSystemGroup } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport Role from '../role/role';\nimport GroupRowWrapper from './group-row-wrapper';\nimport pathnames from '../../utilities/pathnames';\nimport './groups.scss';\nimport PageActionRoute from '../common/page-action-route';\nimport { applyPaginationToUrl, isPaginationPresentInUrl, syncDefaultPaginationWithUrl } from '../../helpers/shared/pagination';\nimport { applyFiltersToUrl, areFiltersPresentInUrl, syncDefaultFiltersWithUrl } from '../../helpers/shared/filters';\nimport { getBackRoute } from '../../helpers/shared/helpers';\nimport PermissionsContext from '../../utilities/permissions-context';\n\nconst columns = [\n  { title: 'Name', key: 'name', transforms: [sortable] },\n  { title: 'Roles' },\n  { title: 'Members' },\n  { title: 'Last modified', key: 'modified', transforms: [sortable] },\n];\n\nconst Groups = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const fetchData = (options) => dispatch(fetchGroups({ ...options, inModal: false }));\n  const { orgAdmin, userAccessAdministrator } = useContext(PermissionsContext);\n  const isAdmin = orgAdmin || userAccessAdministrator;\n\n  const { groups, meta, filters, isLoading } = useSelector(\n    ({ groupReducer: { groups, isLoading, systemGroup } }) => ({\n      groups: [\n        ...(systemGroup?.name?.match(new RegExp(groups.filters.name, 'i')) ? [systemGroup] : []),\n        ...(groups?.data?.filter(({ platform_default } = {}) => !platform_default) || []),\n      ],\n      meta: groups?.pagination || groups?.meta,\n      filters: groups?.filters,\n      isLoading,\n      systemGroup,\n    }),\n    shallowEqual\n  );\n\n  const [pagination, setPagination] = useState(meta);\n  const [filterValue, setFilterValue] = useState(filters.name || '');\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [removeGroupsList, setRemoveGroupsList] = useState([]);\n\n  useEffect(() => {\n    const syncedPagination = syncDefaultPaginationWithUrl(history, pagination);\n    setPagination(syncedPagination);\n    const { name } = syncDefaultFiltersWithUrl(history, ['name'], { name: filterValue });\n    setFilterValue(name);\n    insights.chrome.appNavClick({ id: 'groups', secondaryNav: true });\n    fetchData({ ...syncedPagination, filters: { name } });\n    dispatch(fetchSystemGroup(name));\n  }, []);\n\n  useEffect(() => {\n    isPaginationPresentInUrl(history) || applyPaginationToUrl(history, pagination.limit, pagination.offset);\n    filterValue?.length > 0 && !areFiltersPresentInUrl(history, ['name']) && syncDefaultFiltersWithUrl(history, ['name'], { name: filterValue });\n  });\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) =>\n      newSelection(rows)\n        .filter(({ platform_default: isPlatformDefault }) => !isPlatformDefault)\n        .map(({ uuid, name }) => ({ uuid, label: name }))\n    );\n  };\n\n  useEffect(() => {\n    pagination.redirected && applyPaginationToUrl(history, pagination.limit, pagination.offset);\n  }, [pagination.redirected]);\n\n  useEffect(() => {\n    setFilterValue(filters.name);\n    setPagination(meta);\n  }, [filters, meta]);\n\n  const routes = () => (\n    <Fragment>\n      <Route exact path={pathnames['add-group']}>\n        <AddGroupWizard\n          pagination={pagination}\n          filters={filters}\n          postMethod={(config) => {\n            fetchData(config);\n            setFilterValue('');\n          }}\n        />\n      </Route>\n      <Route exact path={pathnames['group-edit'].path}>\n        <EditGroup\n          pagination={pagination}\n          filters={filters}\n          postMethod={(config) => {\n            fetchData(config);\n          }}\n          cancelRoute={getBackRoute(pathnames.groups, pagination, filters)}\n          submitRoute={getBackRoute(pathnames.groups, { ...pagination, offset: 0 }, filters)}\n        />\n      </Route>\n      <Route exact path={pathnames['remove-group']}>\n        <RemoveGroup\n          pagination={pagination}\n          filters={filters}\n          postMethod={(ids, config) => {\n            fetchData(config);\n            setSelectedRows(selectedRows.filter((row) => !ids.includes(row.uuid)));\n          }}\n          cancelRoute={getBackRoute(pathnames.groups, pagination, filters)}\n          submitRoute={getBackRoute(pathnames.groups, { ...pagination, offset: 0 }, filters)}\n          isModalOpen\n          groupsUuid={removeGroupsList}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const actionResolver = ({ isPlatformDefault }) =>\n    isPlatformDefault || !isAdmin\n      ? null\n      : [\n          {\n            title: 'Edit',\n            onClick: (_event, _rowId, group) => {\n              history.push(`/groups/edit/${group.uuid}`);\n            },\n          },\n          {\n            title: 'Delete',\n            onClick: (_event, _rowId, group) => {\n              setRemoveGroupsList([group]);\n              history.push(pathnames['remove-group']);\n            },\n          },\n        ];\n\n  // TODO check this later\n  const toolbarButtons = () => [\n    ...(isAdmin\n      ? [\n          <Link to={pathnames['add-group']} key=\"add-group\" className=\"rbac-m-hide-on-sm\">\n            <Button ouiaId=\"create-group-button\" variant=\"primary\" aria-label=\"Create group\">\n              Create group\n            </Button>\n          </Link>,\n          {\n            label: 'Create group',\n            props: {\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => {\n              history.push(pathnames['add-group']);\n            },\n          },\n          {\n            label: 'Edit',\n            props: {\n              isDisabled: !(selectedRows.length === 1),\n            },\n            onClick: () => history.push(`/groups/edit/${selectedRows[0].uuid}`),\n          },\n          {\n            label: 'Delete',\n            props: {\n              isDisabled: !selectedRows.length > 0,\n            },\n            onClick: () => {\n              setRemoveGroupsList(selectedRows);\n              history.push(pathnames['remove-group']);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const renderGroupsList = () => (\n    <Stack className=\"rbac-c-groups\">\n      <StackItem>\n        <TopToolbar paddingBottom>\n          <TopToolbarTitle title=\"Groups\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={'tab-groups'}>\n          <TableToolbarView\n            data={groups.map((group) => (group.platform_default ? { ...group, principalCount: 'All' } : group))}\n            createRows={(...args) => createRows(isAdmin, ...args)}\n            columns={columns}\n            isSelectable={isAdmin}\n            checkedRows={selectedRows}\n            setCheckedItems={setCheckedItems}\n            routes={routes}\n            actionResolver={actionResolver}\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            ouiaId=\"groups-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={(config) => {\n              const { name, count, limit, offset, orderBy } = config;\n              applyPaginationToUrl(history, limit, offset);\n              applyFiltersToUrl(history, { name });\n              return fetchData({ count, limit, offset, orderBy, filters: { name } });\n            }}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            toolbarButtons={toolbarButtons}\n            isLoading={!isLoading && groups?.length === 0 && filterValue?.length === 0 ? true : isLoading}\n            filterPlaceholder=\"name\"\n            rowWrapper={GroupRowWrapper}\n            tableId=\"groups\"\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n  return (\n    <Switch>\n      <PageActionRoute pageAction=\"role-detail\" path={pathnames['group-detail-role-detail']} render={(props) => <Role {...props} />} />\n      <PageActionRoute\n        pageAction=\"group-detail\"\n        path={pathnames['group-detail']}\n        render={(props) => (\n          <Group\n            {...props}\n            onDelete={(uuid) => {\n              setFilterValue('');\n              setSelectedRows(selectedRows.filter((row) => row.uuid != uuid));\n            }}\n          />\n        )}\n      />\n      <PageActionRoute pageAction=\"group-list\" path={pathnames.groups} render={() => renderGroupsList()} />\n    </Switch>\n  );\n};\n\nexport default Groups;\n"],"names":["OutlinedQuestionCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","OutlinedQuestionCircleIcon","ActiveUser","linkDescription","linkTitle","env","insights","chrome","getEnvironment","prefix","isProd","description","useContext","PermissionsContext","orgAdmin","Text","className","component","TextVariants","href","target","rel","propTypes","PropTypes","defaultProps","UsersRow","row","props","status","isActive","RowWrapper","classNames","data","principalApi","getPrincipalApi","principalStatusApiMap","Active","Inactive","fetchUsers","limit","offset","orderBy","filters","inModal","matchCriteria","username","email","sortOrder","mappedStatus","length","listPrincipals","response","isPaginationValid","isOffsetValid","meta","count","getLastPageOffset","pagination","redirected","apiProps","type","ActionTypes","payload","UserHelper","updateUsersFilters","ReviewStepButtons","renderNextButton","disableBack","handlePrev","buttonLabels","cancel","back","context","formOptions","useFormApi","success","error","submitting","Fragment","Button","variant","isDisabled","onClick","onCancel","handleNext","nextStep","when","stepMapper","submit","next","isRequired","WizardError","title","text","jumpToStep","WizardContext","setWizardError","EmptyState","EmptyStateVariant","EmptyStateIcon","color","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","undefined","columns","key","transforms","nowrap","sortable","createRows","userLinks","_expanded","checkedRows","reduce","acc","is_active","firstName","first_name","lastName","last_name","isOrgAdmin","is_org_admin","uuid","cells","Link","to","toString","Label","selected","Boolean","find","UsersList","users","isLoading","selectedUsers","setSelectedUsers","defaultPagination","useSelector","userReducer","defaultSettings","history","useHistory","stateFilters","useState","setFilters","useEffect","applyPaginationToUrl","syncDefaultPaginationWithUrl","newFilters","syncDefaultFiltersWithUrl","mappedProps","isPaginationPresentInUrl","Object","values","some","filter","areFiltersPresentInUrl","keys","isSelectable","isCompact","borders","ouiaId","fetchData","config","prototype","hasOwnProperty","call","applyFiltersToUrl","setFilterValue","setCheckedItems","newSelection","map","label","sortBy","index","direction","rowWrapper","titlePlural","titleSingular","noDataDescription","noData","value","placeholder","items","tableId","mapStateToProps","isUserDataLoading","mapDispatchToProps","dispatch","addNotification","goBack","push","searchFilter","connect","CompactUsersList","propsFromState","propsFromDispatch","ownProps","defaultCompactSettings","asyncValidator","groupName","idKey","id","fetchGroups","nameMatch","console","item","debouncedAsyncValidator","asyncDebounce","ReviewTemplate","formFields","AddGroupWizardContext","getState","then","Bullseye","Spinner","fields","isDynamic","showTitles","validate","validatorTypes","componentTypes","hideField","threshold","buttons","StepTemplate","groupNameValidated","groupNameError","groupDescriptionValidated","groupDescription","SetName","input","useFieldApi","setGroupName","setGroupNameError","setGroupDescription","processGroupName","onChange","Stack","hasGutter","StackItem","FormGroup","helperTextInvalid","validated","TextInput","onBlur","TextArea","change","resizeOrientation","groups","expanded","display_name","RolesList","roles","fetchRoles","selectedRoles","canSort","setSelectedRoles","filterValue","useRef","current","filterPlaceholder","roleReducer","fetchRolesWithPolicies","ExcludedRolesList","selectedGroup","groupReducer","addRoles","loaded","groupId","fetchAddRolesForGroup","SetRoles","TextContent","fieldId","SetUsers","Form","Card","SummaryContent","Grid","GridItem","md","role","createContext","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","emptyCallback","nonEmptyCallback","setGroupData","formData","AddGroupWizard","postMethod","useDispatch","cancelWarningVisible","setCancelWarningVisible","groupData","hideForm","wizardContextValue","setWizardContextValue","redirectToGroups","dismissDelay","dismissable","pathname","paths","search","createQueryParams","page","per_page","isOpen","onModalCancel","onConfirmCancel","Provider","prev","setWizardSuccess","setHideForm","schema","subscription","componentMapper","onSubmit","user_list","user","roles_list","addGroup","initialValues","EditGroupModal","updateGroup","cancelRoute","submitRoute","group","onClose","setSelectedGroup","match","useRouteMatch","fetchGroup","params","validateOnMount","validatorMapper","skeleton","Skeleton","user_data","ModalFormTemplate","ModalProps","pathnames","inputValue","hash","bindActionCreators","RemoveGroupModal","removeGroups","groupsUuid","isModalOpen","checked","setChecked","multipleGroups","Modal","ModalVariant","actions","uuids","Checkbox","isChecked","cancelUrl","DefaultPlatformPopover","isPopoverVisible","setPopoverVisible","popoverRootRef","ref","Popover","zIndex","position","isVisible","shouldClose","hideOnOutsideClick","bodyContent","appendTo","isAdmin","_opened","selectedRows","roleCount","principalCount","modified","isPlatformDefault","platform_default","DateFormat","date","getDateFormat","AppTabs","location","tabItems","isHeader","activeTab","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","Tab","withRouter","AddGroupMembers","closeUrl","addMembersToGroup","fetchMembersForGroup","userList","selector","principals","members","removeModalText","plural","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","useParams","shallowEqual","userAccessAdministrator","hasPermissions","usernames","options","removeMembers","userNames","removeMembersFromGroup","RemoveModal","confirmButtonLabel","Section","CardBody","routes","Route","path","render","args","actionResolver","_rowId","principal","toolbarButtons","multipleMembersSelected","removeText","emptyProps","DefaultGroupChange","withCheckbox","AddGroupRoles","addRolesToGroup","isDefault","isChanged","onDefaultGroupChanged","fetchRolesForGroup","showConfirmModal","setShowConfirmModal","rolesList","RemoveRoles","groupUuid","generateOuiaID","toLowerCase","GroupRoles","removeRoles","disableAddRoles","reloadGroup","descriptionValue","setDescriptionValue","selectedAddRoles","setSelectedAddRoles","addRoleButtonContent","isAriaDisabled","Tooltip","content","multipleRolesSelected","reloadWrapper","event","callback","system","removeRolesFromGroup","Group","isFetching","onDelete","isDropdownOpen","setDropdownOpen","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","groupExists","BAD_UUID","breadcrumbsList","getBackRoute","useLocation","appObjectId","dropdownItems","DropdownItem","replace","breadcrumbs","Split","SplitItem","isFilled","style","display","Dropdown","toggle","KebabToggle","onToggle","isPlain","Alert","isInline","action","AlertActionCloseButton","GroupPrincipals","Redirect","isRecordLoading","isRecordRolesLoading","GroupRowWrapper","classnames","systemGroup","RegExp","setPagination","setSelectedRows","removeGroupsList","setRemoveGroupsList","syncedPagination","appNavClick","secondaryNav","fetchSystemGroup","rows","exact","ids","Switch","pageAction","paddingBottom"],"sourceRoot":""}
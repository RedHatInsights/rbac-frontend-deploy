{"version":3,"file":"js/7760.f81c922122c6e98751aa.js","mappings":"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","sources":["webpack:///./src/helpers/role/inventory-helper.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/redux/actions/inventory-actions.js","webpack:///./src/smart-components/role/add-role/add-permissions-template.js","webpack:///./src/helpers/permission/permission-helper.js","webpack:///./src/redux/actions/permission-action.js","webpack:///./src/smart-components/role/add-role/DisabledRowWrapper.js","webpack:///./src/smart-components/role/add-role/add-permissions.js","webpack:///./src/smart-components/role/add-role/cost-resources.js","webpack:///./src/smart-components/role/add-role/inventory-groups-role-template.js","webpack:///./src/smart-components/role/add-role/inventory-groups-role.js","webpack:///./src/smart-components/role/permission-wizard-helper.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js"],"sourcesContent":["import flatten from 'lodash/flatten';\nimport { getInventoryGroupsApi, getInventoryResourceTypesApi } from '../shared/user-login';\n\nconst inventoryResourceTypesApi = getInventoryResourceTypesApi();\nconst inventoryGroupsApi = getInventoryGroupsApi();\n\nexport const getInventoryGroups = async ({ name, perPage, page, options } = {}) => {\n  return await inventoryResourceTypesApi.apiResourceTypeGetResourceTypeGroupsList(name, perPage, page, options);\n};\n\nexport const getInventoryGroupsDetails = async (groupsIds) => {\n  return await inventoryGroupsApi.apiGroupGetGroupsById(groupsIds);\n};\n\nexport const processResourceDefinitions = (resourceDefinitions) =>\n  resourceDefinitions ? flatten(resourceDefinitions.map((definition) => definition.attributeFilter.value)) : [];\n","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  className,\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <SkeletonTable\n            variant={isCompact ? TableVariant.compact : undefined}\n            rows={pagination?.limit}\n            columns={columns.map((item) => item.title)}\n          />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <div className={className}>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </div>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  className: propTypes.string,\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const fetchResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const fetchResource = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import * as ActionTypes from '../action-types';\nimport * as InventoryHelper from '../../helpers/role/inventory-helper';\n\nexport const fetchInventoryGroups = (permissions, config) => ({\n  type: ActionTypes.FETCH_INVENTORY_GROUPS,\n  meta: { permissions, config },\n  payload: InventoryHelper.getInventoryGroups(config),\n});\n\nexport const fetchInventoryGroupsDetails = (groupsIds) => {\n  return {\n    type: ActionTypes.FETCH_INVENTORY_GROUPS_DETAILS,\n    meta: { groupsIds },\n    payload: InventoryHelper.getInventoryGroupsDetails(groupsIds.filter((item) => item?.length > 0)),\n  };\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Text, TextContent, Title, Button, Popover, Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './add-role-wizard.scss';\n\nconst AddPermissionTemplate = ({ formFields }) => {\n  const formOptions = useFormApi();\n  const [selectedPermissions, setSelectedPermissions] = useState(formOptions.getState().values['add-permissions-table'] || []);\n  const [alertClosed, setAlertClosed] = useState(false);\n  const notAllowedBasePermissions = formOptions.getState().values['not-allowed-permissions'];\n  const intl = useIntl();\n\n  const unresolvedSplats =\n    formOptions.getState().values?.['copy-base-role']?.applications?.filter((app) => !selectedPermissions?.find(({ uuid }) => uuid.includes(app))) ||\n    [];\n  const addPermissions = formFields[0][0];\n  return (\n    <div className=\"rbac\">\n      {selectedPermissions.length > 0 ? (\n        <div className=\"rbac-c-selected-chips\">\n          <ChipGroup categoryName={intl.formatMessage(messages.selectedPermissions)}>\n            {/* immutable reverse */}\n            {selectedPermissions\n              .reduce((acc, i) => [i, ...acc], [])\n              .map(({ uuid }) => (\n                <Chip key={uuid} color=\"blue\" isTruncated onClick={() => setSelectedPermissions(selectedPermissions.filter((p) => p.uuid !== uuid))}>\n                  {uuid}\n                </Chip>\n              ))}\n          </ChipGroup>\n        </div>\n      ) : null}\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"rbac-c-add-permission-title\">\n        {intl.formatMessage(messages.addPermissions)}\n      </Title>\n      <TextContent>\n        <Text>\n          {intl.formatMessage(messages.selectPermissionsForRole)}\n          {unresolvedSplats.length !== 0 && (\n            <Popover\n              headerContent={intl.formatMessage(messages.onlyGranularPermissions)}\n              bodyContent={intl.formatMessage(messages.noWildcardPermissions)}\n            >\n              <Button variant=\"link\">\n                {intl.formatMessage(messages.whyNotSeeingAllPermissions)} <QuestionCircleIcon />\n              </Button>\n            </Popover>\n          )}\n        </Text>\n      </TextContent>\n      {notAllowedBasePermissions?.length > 0 && !alertClosed ? (\n        <Alert\n          variant=\"custom\"\n          isInline\n          title={`${intl.formatMessage(messages.followingPermissionsCannotBeAdded)} ${notAllowedBasePermissions.join(', ')}`}\n          actionClose={<AlertActionCloseButton onClose={() => setAlertClosed(true)} />}\n        />\n      ) : null}\n      {[\n        [\n          {\n            ...addPermissions,\n            props: {\n              ...addPermissions.props,\n              selectedPermissions,\n              setSelectedPermissions,\n            },\n          },\n        ],\n      ]}\n    </div>\n  );\n};\n\nAddPermissionTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default AddPermissionTemplate;\n","import { getPermissionApi } from '../shared/user-login';\n\nconst accessApi = getPermissionApi();\n\nconst disallowedPermissions = ['inventory:staleness'];\n\nexport async function listPermissions(\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  excludeGlobals,\n  excludeRoles,\n  allowedOnly,\n  options\n) {\n  const response = await accessApi.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    excludeGlobals,\n    excludeRoles,\n    allowedOnly,\n    options\n  );\n\n  return {\n    ...response,\n    data: response.data.filter(({ permission }) => !disallowedPermissions.some((item) => permission.includes(item))),\n  };\n}\n\nexport async function listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options) {\n  return await accessApi.listPermissionOptions(field, limit, offset, application, resourceType, verb, undefined, allowedOnly, options);\n}\n","import * as ActionTypes from '../action-types';\nimport * as PermissionsHelper from '../../helpers/permission/permission-helper';\n\nexport const listPermissions = ({\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  exclude_roles,\n  allowed_only,\n  options,\n}) => ({\n  type: ActionTypes.LIST_PERMISSIONS,\n  payload: PermissionsHelper.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    exclude_globals,\n    exclude_roles,\n    allowed_only,\n    options\n  ),\n});\n\nconst fieldToAction = {\n  application: ActionTypes.LIST_APPLICATION_OPTIONS,\n  resource_type: ActionTypes.LIST_RESOURCE_OPTIONS,\n  verb: ActionTypes.LIST_OPERATION_OPTIONS,\n};\n\nexport const listPermissionOptions = ({ field, limit, offset, application, resourceType, verb, allowedOnly, options }) => ({\n  type: fieldToAction[field],\n  payload: PermissionsHelper.listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options),\n});\n\nexport const expandSplats = ({\n  limit = 1000,\n  offset = 0,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  options,\n}) => ({\n  type: ActionTypes.EXPAND_SPLATS,\n  payload: PermissionsHelper.listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, exclude_globals, options),\n});\n\nexport const resetExpandSplats = () => ({\n  type: ActionTypes.RESET_EXPAND_SPLATS,\n  payload: {\n    data: [],\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '@patternfly/react-core';\nimport { RowWrapper } from '@patternfly/react-table';\n\nexport const DisabledRowWrapper = ({ row, ...props }) =>\n  row.disableSelection ? (\n    <Tooltip content={row.disabledContent} exitDelay={1500} entryDelay={1500}>\n      <RowWrapper className=\"rbac-c-disabled-row\" row={row} {...props} />\n    </Tooltip>\n  ) : (\n    <RowWrapper row={row} {...props} />\n  );\n\nDisabledRowWrapper.propTypes = {\n  props: PropTypes.object,\n  row: PropTypes.object,\n};\n","import React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport debouncePromise from '@redhat-cloud-services/frontend-components-utilities/debounce';\nimport usePermissions from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { listPermissions, listPermissionOptions, expandSplats, resetExpandSplats } from '../../../redux/actions/permission-action';\nimport { fetchResourceDefinitions } from '../../../redux/actions/cost-management-actions';\nimport { fetchRole } from '../../../redux/actions/role-actions';\nimport { DisabledRowWrapper } from './DisabledRowWrapper';\nimport { isEqual } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport '../role-permissions.scss';\n\nconst selector = ({\n  permissionReducer: {\n    permission,\n    isLoading,\n    options: { application, operation, resource },\n    expandSplats,\n    isLoadingExpandSplats,\n  },\n  roleReducer: { isRecordLoading, selectedRole },\n  costReducer: { resourceTypes },\n}) => ({\n  permissions: permission.data.map(({ application, resource_type: resource, verb, permission, requires } = {}) => ({\n    application,\n    resource,\n    operation: verb,\n    uuid: permission,\n    requires,\n  })),\n  pagination: permission.meta,\n  isLoading: isLoading || isRecordLoading,\n  baseRole: selectedRole,\n  applicationOptions: application.data.filter((app) => app !== '*'),\n  resourceOptions: resource.data.filter((app) => app !== '*'),\n  operationOptions: operation.data.filter((app) => app !== '*'),\n  expandedPermissions: expandSplats.data.map(({ permission }) => permission),\n  isLoadingExpandSplats,\n  resourceTypes: resourceTypes.data,\n});\n\nconst AddPermissionsTable = ({ selectedPermissions, setSelectedPermissions, ...props }) => {\n  const [isOrgAdmin, setIsOrgAdmin] = useState(null);\n  const { auth } = useChrome();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { hasAccess: hasCostAccess } = usePermissions('cost-management', ['cost-management:*:*']);\n  const { hasAccess: hasRbacAccess } = usePermissions('rbac', ['rbac:*:*']);\n  const columns = [\n    { title: intl.formatMessage(messages.application) },\n    { title: intl.formatMessage(messages.resourceType) },\n    { title: intl.formatMessage(messages.operation) },\n  ];\n\n  useEffect(() => {\n    const setOrgAdmin = async () => {\n      const {\n        identity: { user },\n      } = await auth.getUser();\n      setIsOrgAdmin(user.is_org_admin);\n    };\n    if (auth) {\n      setOrgAdmin();\n    }\n  }, [auth]);\n\n  const fetchData = (apiProps) =>\n    dispatch(\n      listPermissions({\n        ...apiProps,\n        ...(existingRoleId ? { exclude_roles: existingRoleId } : {}),\n        allowed_only: true,\n      })\n    );\n  const fetchOptions = (apiProps) => dispatch(listPermissionOptions({ ...apiProps, allowedOnly: true }));\n  const {\n    permissions,\n    isLoading,\n    pagination,\n    baseRole,\n    applicationOptions,\n    resourceOptions,\n    operationOptions,\n    expandedPermissions,\n    isLoadingExpandSplats,\n    resourceTypes,\n  } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  // TODO: use reducer when cleaning this code\n  const [filters, setFilters] = useState({ applications: [], resources: [], operations: [] });\n  const roleType = formOptions.getState().values['role-type']; // create/copy\n  const existingRoleId = formOptions.getState().values['role-uuid'];\n  const [isToggled, setIsToggled] = useState(false);\n  const [filterBy, setFilterBy] = useState('');\n  const [value, setValue] = useState();\n  const maxFilterItems = 10;\n\n  const inventoryAccess = useMemo(() => isOrgAdmin || (hasRbacAccess ?? false), [hasRbacAccess, isOrgAdmin]);\n\n  const getResourceType = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1]);\n  const createRows = (permissions) =>\n    permissions.map(({ application, resource, operation, uuid, requires }) => ({\n      uuid: `${application}:${resource}:${operation}`,\n      requires,\n      cells: [\n        {\n          title: application,\n        },\n        resource,\n        operation,\n      ],\n      selected: Boolean(selectedPermissions && selectedPermissions.find((row) => row.uuid === uuid)),\n      disableSelection:\n        (application === 'cost-management' && ((getResourceType(uuid) || { count: 0 }).count === 0 || !hasCostAccess)) ||\n        (application === 'inventory' && !inventoryAccess),\n      disabledContent:\n        application === 'cost-management' ? (\n          <div>\n            {intl.formatMessage(hasCostAccess ? messages.configureResourcesForPermission : messages.noCostManagementPermissions)}{' '}\n            {hasCostAccess ? <a href=\"./settings/sources\">{intl.formatMessage(messages.configureCostSources)}</a> : null}\n          </div>\n        ) : (\n          <div>{intl.formatMessage(messages.noRbacPermissions)}</div>\n        ),\n    }));\n\n  const debouncedGetApplicationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'application',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetResourceOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'resource_type',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetOperationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({ field: 'verb', limit: 50, application: applications.join(), resourceType: resources.join(), verb: operations.join() }),\n      2000\n    ),\n    []\n  );\n\n  useEffect(() => {\n    const baseRoleUuid = formOptions.getState().values['copy-base-role']?.uuid;\n    if (roleType === 'copy' && baseRoleUuid) {\n      dispatch(fetchRole(baseRoleUuid));\n    }\n\n    formOptions.change('has-cost-resources', false);\n    fetchData(pagination);\n    fetchOptions({ field: 'application', limit: 50 });\n    fetchOptions({ field: 'resource_type', limit: 50 });\n    fetchOptions({ field: 'verb', limit: 50 });\n\n    return () => dispatch(resetExpandSplats());\n  }, []);\n\n  useEffect(() => {\n    hasCostAccess && dispatch(fetchResourceDefinitions());\n  }, [hasCostAccess]);\n\n  useEffect(() => {\n    debouncedGetResourceOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.applications]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.resources]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetResourceOptions(filters);\n  }, [filters.operations]);\n\n  useEffect(() => {\n    input.onChange(selectedPermissions);\n  }, [selectedPermissions]);\n\n  useEffect(() => {\n    if (\n      !baseRole ||\n      roleType !== 'copy' ||\n      formOptions.getState().values['base-permissions-loaded'] ||\n      selectedPermissions.length > 0 ||\n      formOptions.getState().values['copy-base-role']?.uuid !== baseRole?.uuid ||\n      isLoadingExpandSplats ||\n      isLoading\n    ) {\n      return;\n    }\n\n    let notAllowed = [];\n\n    const basePermissions =\n      baseRole?.access.filter((item) => {\n        if (applicationOptions.includes(item?.permission?.split(':')[0])) {\n          return true;\n        }\n        notAllowed.push(item);\n\n        return false;\n      }) || [];\n    formOptions.change(\n      'not-allowed-permissions',\n      notAllowed.map(({ permission }) => permission)\n    );\n    if (expandedPermissions.length === 0 && typeof isLoadingExpandSplats === 'undefined') {\n      const applications = [...new Set(basePermissions.map(({ permission }) => permission.split(':')[0]))];\n      dispatch(expandSplats({ application: applications.join() }));\n    } else {\n      const patterns = basePermissions.map(({ permission }) => permission.replace('*', '.*'));\n      setSelectedPermissions(() =>\n        expandedPermissions\n          .filter((p) => p.split(':')[0] !== 'cost-management' || (getResourceType(p) || { count: 0 }).count !== 0) // filter disabled rows\n          .filter((p) => patterns.some((f) => p.match(f))) // filter permissions with unresolved splats\n          .map((permission) => ({ uuid: permission }))\n      );\n      formOptions.change('base-permissions-loaded', true);\n    }\n  }, [permissions, baseRole]);\n\n  const setCheckedItems = (newSelection) => {\n    const newSelected = newSelection(selectedPermissions)\n      .filter(({ uuid, application }) => application !== 'cost-management' || getResourceType(uuid)?.count > 0)\n      .map(({ uuid, requires }) => ({ uuid, requires }));\n\n    setSelectedPermissions(isEqual(newSelected, selectedPermissions) ? [] : newSelected);\n  };\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const preparedFilterItems = {\n    applications: [...applicationOptions].filter((item) => item.includes(filterBy)).map((app) => ({ label: app, value: app })),\n    resources: [...resourceOptions].filter((item) => item.includes(filterBy)).map((res) => ({ label: res, value: res })),\n    operations: [...operationOptions].filter((item) => item.includes(filterBy)).map((op) => ({ label: op, value: op })),\n  };\n\n  const emptyItem = {\n    label: <div>{intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const filterItemOverflow = preparedFilterItems[Object.keys(preparedFilterItems)[value ? value : 0]].length > maxFilterItems;\n  return (\n    <div className=\"rbac-c-permissions-table\">\n      <TableToolbarView\n        columns={columns}\n        isSelectable={true}\n        isCompact={true}\n        borders={false}\n        rows={createRows(permissions)}\n        data={permissions}\n        filterValue=\"\"\n        noData={permissions?.length === 0}\n        noDataDescription={[intl.formatMessage(messages.permissionNotDisplayedDescription)]}\n        fetchData={({ limit, offset, applications, resources, operations }) => {\n          fetchData({\n            limit,\n            offset,\n            application: (applications || filters.applications).join(),\n            resourceType: (resources || filters.resources).join(),\n            verb: (operations || filters.operations).join(),\n          });\n        }}\n        setFilterValue={({ applications, resources, operations }) => {\n          setFilters({\n            ...filters,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        isLoading={isLoading || isLoadingExpandSplats}\n        pagination={{ ...pagination, count: pagination.count }}\n        checkedRows={selectedPermissions}\n        setCheckedItems={setCheckedItems}\n        titlePlural={intl.formatMessage(messages.permissions).toLowerCase()}\n        titleSingular={intl.formatMessage(messages.permission).toLowerCase()}\n        showMoreTitle={intl.formatMessage(isToggled ? messages.seeLess : messages.seeMore)}\n        onFilter={(filterBy) => setFilterBy(filterBy)}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                setIsToggled(() => !isToggled);\n              }\n            : undefined\n        }\n        onChange={(e, value) => {\n          setFilterBy('');\n          setValue(value);\n        }}\n        value={value}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: preparedFilterItems.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.applications.length > 0\n                    ? [...preparedFilterItems.applications].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: preparedFilterItems.resources.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.resources.length > 0\n                    ? [...preparedFilterItems.resources].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: preparedFilterItems.operations.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.operations.length > 0\n                    ? [...preparedFilterItems.operations].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        isFilterable={true}\n        rowWrapper={DisabledRowWrapper}\n        tableId=\"add-role-permissions\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nAddPermissionsTable.propTypes = {\n  selectedPermissions: PropTypes.array,\n  setSelectedPermissions: PropTypes.func,\n};\n\nexport default AddPermissionsTable;\n","import React, { useEffect, useReducer } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem, Text, TextVariants, FormGroup, Tooltip } from '@patternfly/react-core';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core/deprecated';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { fetchResourceDefinitions, fetchResource } from '../../../redux/actions/cost-management-actions';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }) => ({\n  resourceTypes: resourceTypes.data,\n  resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: !prevState.isOpen,\n        },\n      };\n    case 'select':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.selected.includes(action.selection)\n            ? prevState.selected.filter((item) => item !== action.selection)\n            : [...prevState.selected, action.selection],\n        },\n      };\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.options.map((option) => option.value),\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    case 'setOptions':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          options: action.options,\n          filteredOptions: action.options,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filteredOptions: prevState.options.filter(({ value }) => value.includes(action.filtervalue)),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst CostResources = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (apiProps) => dispatch(fetchResourceDefinitions(apiProps));\n  const getResource = (apiProps) => dispatch(fetchResource(apiProps));\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const permissions = formOptions.getState().values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('cost-management'));\n\n  const [state, dispatchLocaly] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission.uuid]: {\n          selected: [],\n          options: [],\n          filteredOptions: [],\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n  const onToggle = (key, isOpen) => dispatchLocaly({ type: 'toggle', key, isOpen });\n  const clearSelection = (key) => dispatchLocaly({ type: 'clear', key });\n  const onSelect = (event, selection, selectAll, key) =>\n    selectAll ? dispatchLocaly({ type: 'selectAll', selection, key }) : dispatchLocaly({ type: 'select', selection, key });\n\n  const permissionToResource = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1])?.path.split('/')?.[5];\n\n  useEffect(() => {\n    (formOptions.getState().values['resource-definitions'] || []).map(({ permission, resources }) =>\n      resources.map(\n        (resource) =>\n          permissions.find((item) => item?.uuid === permission) && dispatchLocaly({ type: 'select', selection: resource, key: permission })\n      )\n    );\n    fetchData();\n    formOptions.change('has-cost-resources', true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      const resourcePaths = [\n        ...new Set(permissions.map((permission) => resourceTypes.find((r) => r.value === permission.uuid.split(':')?.[1])?.path)),\n      ].filter((path) => path); // remove undefined\n      resourcePaths.map((path) => getResource(path));\n    }\n  }, [resourceTypes]);\n\n  useEffect(() => {\n    if (!isLoadingResources) {\n      permissions.map((p) => dispatchLocaly({ type: 'setOptions', key: p.uuid, options: resources[permissionToResource(p.uuid)] || [] }));\n    }\n  }, [isLoadingResources]);\n\n  useEffect(() => {\n    const resourceDefinitions = Object.entries(state).map(([permission, resources]) => ({ permission, resources: resources.selected }));\n    input.onChange(resourceDefinitions);\n    formOptions.change('resource-definitions', resourceDefinitions);\n  }, [state]);\n\n  // eslint-disable-next-line react/prop-types\n  const makeRow = ({ uuid: permission }) => {\n    const options = state[permission].filteredOptions;\n    return (\n      <React.Fragment>\n        <GridItem md={4} sm={12}>\n          <Tooltip content={<div>{permission}</div>}>\n            <FormGroup label={permission.replace(/^cost-management:/, '')} isRequired></FormGroup>\n          </Tooltip>\n        </GridItem>\n        <GridItem md={8} sm={12}>\n          <Select\n            className=\"rbac-m-resource-type-select\"\n            variant={SelectVariant.checkbox}\n            typeAheadAriaLabel={intl.formatMessage(messages.selectState)}\n            onToggle={(_event, isOpen) => {\n              dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: '' });\n              onToggle(permission, isOpen);\n            }}\n            onSelect={(event, selection) => {\n              onSelect(event, selection, selection === intl.formatMessage(messages.selectAll, { length: options.length }), permission);\n            }}\n            onClear={() => clearSelection(permission)}\n            selections={state[permission].selected}\n            isOpen={state[permission].isOpen}\n            onFilter={(e) => e && dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: e.target.value })}\n            aria-labelledby={permission}\n            placeholderText={intl.formatMessage(messages.selectResources)}\n            hasInlineFilter\n          >\n            {[\n              <SelectOption key={0} value={intl.formatMessage(messages.selectAll, { length: options.length })} />,\n              ...options.map((option, index) => <SelectOption key={index + 1} value={option.value} />),\n            ]}\n          </Select>\n        </GridItem>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={4} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem md={8} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.resourceDefinitions)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default CostResources;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nconst InventoryGroupsRoleTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-lg\">\n        {intl.formatMessage(enableWorkspacesNameChange ? messages.workspacesAccessTitle : messages.inventoryGroupsAccessTitle)}\n      </Title>\n      {formFields}\n    </div>\n  );\n};\n\nInventoryGroupsRoleTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default InventoryGroupsRoleTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport {\n  Button,\n  Grid,\n  GridItem,\n  Text,\n  TextVariants,\n  FormGroup,\n  Tooltip,\n  Divider,\n  MenuToggle,\n  TextInputGroup,\n  TextInputGroupMain,\n  TextInputGroupUtilities,\n  SelectList,\n  SelectOption,\n  Select,\n  Spinner,\n  Badge,\n  Chip,\n  ChipGroup,\n} from '@patternfly/react-core';\nimport { TimesIcon } from '@patternfly/react-icons';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { fetchInventoryGroups } from '../../../redux/actions/inventory-actions';\nimport { debouncedFetch } from '../../../helpers/shared/helpers';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nconst selector = ({ inventoryReducer: { resourceTypes, total, isLoading } }) => ({\n  resourceTypes,\n  totalCount: total,\n  isLoading,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: action.isOpen,\n          filterValue: action.filterValue ?? prevState.filterValue,\n          page: action.page ?? prevState.page,\n        },\n      };\n    case 'select':\n      if (prevState.selected.some((item) => item?.id === action.processedSelection?.id)) {\n        return {\n          ...state,\n          [action.key]: {\n            ...prevState,\n            selected: prevState.selected.filter((item) => item.id !== action.processedSelection?.id),\n          },\n        };\n      } else if (action.processedSelection?.id !== undefined && action.processedSelection?.name !== undefined) {\n        return {\n          ...state,\n          [action.key]: {\n            ...prevState,\n            selected: [...prevState.selected, action.processedSelection],\n          },\n        };\n      } else {\n        return state;\n      }\n    case 'copyToAll': {\n      const firstPermissionSelection = state[action.permissions[0]].selected;\n      return {\n        ...state,\n        ...action.permissions.reduce((acc, permission) => {\n          acc[permission] = {\n            ...state[permission],\n            selected: !permission.includes('inventory:hosts') ? firstPermissionSelection.filter(({ id }) => id !== null) : firstPermissionSelection,\n          };\n          return acc;\n        }, {}),\n      };\n    }\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: action.selectionArray,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filterValue: action.filterValue,\n          page: 1,\n        },\n      };\n    case 'setPage':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          page: action.page,\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst InventoryGroupsRole = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const isHosts = (permissionID) => permissionID.includes('hosts:');\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n\n  const { resourceTypes, totalCount, isLoading } = useSelector(selector, shallowEqual);\n  const permissions =\n    formOptions\n      .getState()\n      .values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('inventory'))\n      .map(({ uuid }) => uuid) || [];\n\n  const fetchData = (permissions, apiProps) => dispatch(fetchInventoryGroups(permissions, apiProps));\n\n  const onSelect = (_event, selection, selectAll, key) => {\n    const ungroupedSystems = { id: null, name: 'null' };\n    return (\n      (selectAll &&\n        dispatchLocally({\n          type: 'selectAll',\n          selectionArray: isHosts(key) ? [ungroupedSystems, ...Object.values(resourceTypes[key])] : Object.values(resourceTypes[key]),\n          key,\n        })) ||\n      dispatchLocally({ type: 'select', processedSelection: selection === 'null' ? ungroupedSystems : resourceTypes[key][selection], key })\n    );\n  };\n  const clearSelection = (key) => dispatchLocally({ type: 'clear', key });\n\n  const [state, dispatchLocally] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission]: {\n          page: 1,\n          selected: [],\n          filterValue: '',\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n\n  useEffect(() => {\n    fetchData(permissions, {});\n    formOptions.change('inventory-group-permissions', []);\n  }, []);\n\n  useEffect(() => {\n    const groupsPermissionsDefinition = Object.entries(state).map(([permission, { selected }]) => ({ permission, groups: selected }));\n    input.onChange(groupsPermissionsDefinition);\n    formOptions.change('inventory-group-permissions', groupsPermissionsDefinition);\n  }, [state]);\n\n  const onToggleClick = (permissionID) => dispatchLocally({ type: 'toggle', key: permissionID, isOpen: !state[permissionID].isOpen });\n\n  const onTextInputChange = (_event, value, permissionID) => {\n    dispatchLocally({ type: 'setFilter', key: permissionID, filterValue: value });\n    debouncedFetch(() => fetchData([permissionID], { name: value }), 2000);\n  };\n\n  const toggle = (toggleRef, permissionID) => (\n    <Tooltip content={<div>{intl.formatMessage(enableWorkspacesNameChange ? messages.workspacesTooltip : messages.inventoryGroupsTooltip)}</div>}>\n      <MenuToggle\n        variant=\"typeahead\"\n        aria-label={intl.formatMessage(enableWorkspacesNameChange ? messages.workspacesTypeAheadLabel : messages.inventoryGroupsTypeAheadLabel)}\n        onClick={() => onToggleClick(permissionID)}\n        innerRef={toggleRef}\n        isExpanded={state[permissionID].isOpen}\n        isFullWidth\n      >\n        <TextInputGroup isPlain>\n          <TextInputGroupMain\n            value={state[permissionID].filterValue}\n            onClick={() => state[permissionID].isOpen || onToggleClick(permissionID)}\n            onChange={(e, value) => onTextInputChange(e, value, permissionID)}\n            autoComplete=\"off\"\n            placeholder={intl.formatMessage(enableWorkspacesNameChange ? messages.selectWorkspaces : messages.selectGroups)}\n            role=\"combobox\"\n            isExpanded={state[permissionID].isOpen}\n          >\n            {state[permissionID].selected.length > 0 ? (\n              <ChipGroup aria-label=\"Current selections\">\n                <Chip\n                  closeBtnAriaLabel=\"Clear all\"\n                  badge={<Badge isRead>{state[permissionID].selected.length}</Badge>}\n                  onClick={(ev) => {\n                    ev.stopPropagation();\n                    clearSelection(permissionID);\n                  }}\n                >\n                  selected\n                </Chip>\n              </ChipGroup>\n            ) : null}\n          </TextInputGroupMain>\n\n          <TextInputGroupUtilities>\n            {state[permissionID].filterValue.length > 0 && (\n              <Button\n                variant=\"plain\"\n                aria-label=\"Clear input value\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  e.preventDefault();\n                  onTextInputChange(e, '', permissionID);\n                }}\n              >\n                <TimesIcon aria-hidden />\n              </Button>\n            )}\n          </TextInputGroupUtilities>\n        </TextInputGroup>\n      </MenuToggle>\n    </Tooltip>\n  );\n\n  const makeRow = (permissionID, index) => {\n    const options = Object.values(resourceTypes?.[permissionID] ?? {});\n\n    return (\n      <React.Fragment key={permissionID}>\n        <Grid>\n          <GridItem md={3}>\n            <FormGroup label={permissionID?.replace('inventory:', '')} isRequired />\n          </GridItem>\n          <GridItem md={7}>\n            <Select\n              role=\"menu\"\n              aria-labelledby={permissionID}\n              className=\"rbac-c-resource-type-select\"\n              isOpen={state[permissionID].isOpen}\n              selected={state[permissionID].selected}\n              onSelect={(event, selection) => onSelect(event, selection, selection === 'select-all', permissionID)}\n              onOpenChange={(isOpen) => dispatchLocally({ type: 'toggle', key: permissionID, isOpen })}\n              toggle={(toggleRef) => toggle(toggleRef, permissionID)}\n            >\n              <SelectList>\n                {options?.length > 0 ? (\n                  <SelectOption className=\"pf-v5-u-link-color\" key={`${permissionID}-all`} value=\"select-all\">\n                    <FormattedMessage\n                      {...messages.selectAll}\n                      values={{\n                        length: options?.length + Number(isHosts(permissionID)),\n                      }}\n                    />\n                  </SelectOption>\n                ) : null}\n                {isHosts(permissionID) ? (\n                  <>\n                    <SelectOption\n                      key={`${permissionID}-ungrouped`}\n                      value=\"null\"\n                      hasCheckbox\n                      isSelected={state[permissionID].selected.some((item) => item.name === 'null')}\n                    >\n                      <FormattedMessage {...messages.ungroupedSystems} />\n                    </SelectOption>\n                    {options.length > 0 ? <Divider component=\"li\" key={`${permissionID}-divider`} /> : null}\n                  </>\n                ) : null}\n                {options.map((option) => (\n                  <SelectOption\n                    hasCheckbox\n                    key={option.id}\n                    isSelected={state[permissionID].selected.some((item) => item.name === option.name)}\n                    className={option.className}\n                    value={option.name}\n                  >\n                    {option.name}\n                  </SelectOption>\n                ))}\n                {isLoading || (resourceTypes[permissionID] && Object.values(resourceTypes[permissionID]).length < totalCount) ? (\n                  <SelectOption\n                    {...(!isLoading && { isLoadButton: true })}\n                    {...(isLoading && { isLoading: true })}\n                    onClick={() => {\n                      fetchData([permissionID], { page: state[permissionID].page + 1, name: state[permissionID].filterValue });\n                      dispatchLocally({ type: 'setPage', key: permissionID, page: state[permissionID].page++ });\n                    }}\n                    value=\"loader\"\n                  >\n                    {isLoading ? <Spinner size=\"lg\" /> : intl.formatMessage(messages.seeMore)}\n                  </SelectOption>\n                ) : null}\n              </SelectList>\n            </Select>\n          </GridItem>\n          <GridItem md={2}>\n            {index <= 0 && permissions.length > 1 && (\n              <Button key={`${permissionID}-copy`} variant=\"link\" isInLink onClick={() => dispatchLocally({ type: 'copyToAll', permissions })}>\n                {intl.formatMessage(messages.copyToAll)}\n              </Button>\n            )}\n          </GridItem>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={3} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text pf-v5-u-mt-sm\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem lg={9} md={6} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text pf-v5-u-mt-sm\">\n          {intl.formatMessage(enableWorkspacesNameChange ? messages.workspacesDefinition : messages.groupDefinition)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default InventoryGroupsRole;\n","import { isCostPermission, isInventoryPermission } from './role-resource-definitions-table-helpers';\n\nexport const validateNextAddRolePermissionStep = (currentStep, values) => {\n  const permissions = (values && values['add-permissions-table']) || [];\n  const hasCostPermissions = permissions.some(({ uuid }) => isCostPermission(uuid));\n  const hasInventoryPermissions = permissions.some(({ uuid }) => isInventoryPermission(uuid));\n\n  if (currentStep === 'inventory-groups-role' && hasCostPermissions) return 'cost-resources-definition';\n\n  if (currentStep === 'add-permissions' && hasInventoryPermissions) {\n    return 'inventory-groups-role';\n  }\n\n  if (currentStep === 'add-permissions' && hasCostPermissions) {\n    return 'cost-resources-definition';\n  }\n\n  return 'review';\n};\n\n// TODO: add step dictionary to replace literal strings across both add-role and add-role-permission\n","import messages from '../../Messages';\n\nconst INVENTORY_PREFIX = 'inventory';\nconst COST_MANAGEMENT_PREFIX = 'cost-management';\nconst HOSTS_TYPE = 'hosts';\n\nexport const isInventoryPermission = (permissionId) => permissionId.split(':')[0].includes(INVENTORY_PREFIX);\nexport const isInventoryHostsPermission = (permissionId) => isInventoryPermission(permissionId) && permissionId.split(':')[1].includes(HOSTS_TYPE);\n\nexport const isCostPermission = (permissionId) => permissionId.split(':')[0].includes(COST_MANAGEMENT_PREFIX);\n\nexport const createRows = (data, permissionId, intl) => {\n  let finalData = data.filter(Boolean);\n  if (isInventoryHostsPermission(permissionId) && data.includes(null)) {\n    finalData.unshift(intl.formatMessage(messages.ungroupedSystems));\n  }\n  return finalData.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n};\n"],"names":["inventoryResourceTypesApi","inventoryGroupsApi","getInventoryGroups","async","name","perPage","page","options","apiResourceTypeGetResourceTypeGroupsList","getInventoryGroupsDetails","groupsIds","apiGroupGetGroupsById","processResourceDefinitions","resourceDefinitions","map","definition","attributeFilter","value","linkBasename","navigate","useNavigate","to","title","icon","description","actions","props","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","className","text","key","EmptyStateFooter","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","intl","length","every","formatMessage","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","item","orderBy","direction","index","Fragment","compact","undefined","limit","canSelectAll","toLowerCase","onSelect","_e","isSelected","_idx","uuid","cells","requires","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","EmptyStateActions","Button","onClick","offset","clearAllFilters","colSpan","e","noBottom","Pagination","dropDirection","propTypes","directions","isRequired","count","toggleTemplate","defaultProps","paginationBuilder","itemCount","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","checked","id","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","innerRef","filterValues","filterByKey","filterBy","newFilter","Array","isArray","Object","keys","pickBy","reduce","acc","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","costApi","getResourceDefinitions","apiProps","getResourceTypes","getResource","fetchResourceDefinitions","payload","fetchResource","fetchInventoryGroups","permissions","config","meta","fetchInventoryGroupsDetails","AddPermissionTemplate","formFields","formOptions","selectedPermissions","setSelectedPermissions","useState","getState","values","alertClosed","setAlertClosed","notAllowedBasePermissions","unresolvedSplats","applications","app","find","includes","addPermissions","ChipGroup","categoryName","i","Chip","color","isTruncated","p","Title","size","TextContent","Text","selectPermissionsForRole","Popover","headerContent","onlyGranularPermissions","bodyContent","noWildcardPermissions","whyNotSeeingAllPermissions","Alert","isInline","followingPermissionsCannotBeAdded","join","actionClose","AlertActionCloseButton","onClose","accessApi","disallowedPermissions","listPermissions","application","resourceType","verb","permission","excludeGlobals","excludeRoles","allowedOnly","response","some","listPermissionOptions","field","fieldToAction","resource_type","DisabledRowWrapper","row","disableSelection","Tooltip","content","disabledContent","exitDelay","entryDelay","RowWrapper","selector","permissionReducer","operation","resource","expandSplats","isLoadingExpandSplats","roleReducer","isRecordLoading","selectedRole","costReducer","resourceTypes","baseRole","applicationOptions","resourceOptions","operationOptions","expandedPermissions","AddPermissionsTable","isOrgAdmin","setIsOrgAdmin","auth","useChrome","dispatch","useDispatch","hasAccess","hasCostAccess","hasRbacAccess","useEffect","identity","user","getUser","is_org_admin","setOrgAdmin","exclude_globals","exclude_roles","allowed_only","existingRoleId","fetchOptions","useSelector","shallowEqual","input","setFilters","resources","operations","roleType","isToggled","setIsToggled","setFilterBy","setValue","inventoryAccess","useMemo","getResourceType","r","split","debouncedGetApplicationOptions","useCallback","debounce","debouncedGetResourceOptions","debouncedGetOperationOptions","baseRoleUuid","change","notAllowed","basePermissions","access","push","Set","patterns","replace","f","match","calculateSelected","preparedFilterItems","res","op","emptyItem","noResultsFound","filterItemOverflow","configureResourcesForPermission","noCostManagementPermissions","href","configureCostSources","noRbacPermissions","createRows","permissionNotDisplayedDescription","newSelection","newSelected","isEqual","seeLess","seeMore","slice","loadingResources","isLoadingResources","reducer","state","action","prevState","isOpen","selection","option","filteredOptions","filtervalue","dispatchLocaly","useReducer","path","entries","Grid","hasGutter","GridItem","md","component","TextVariants","h4","FormGroup","checkbox","typeAheadAriaLabel","selectState","onToggle","event","selectAll","onClear","selections","target","placeholderText","selectResources","hasInlineFilter","InventoryGroupsRoleTemplate","enableWorkspacesNameChange","useFlag","workspacesAccessTitle","inventoryGroupsAccessTitle","inventoryReducer","total","totalCount","processedSelection","firstPermissionSelection","selectionArray","isHosts","permissionID","dispatchLocally","groupsPermissionsDefinition","onToggleClick","onTextInputChange","lg","workspacesDefinition","groupDefinition","Select","role","ungroupedSystems","onOpenChange","toggle","toggleRef","workspacesTooltip","inventoryGroupsTooltip","MenuToggle","workspacesTypeAheadLabel","inventoryGroupsTypeAheadLabel","isExpanded","isFullWidth","TextInputGroup","isPlain","TextInputGroupMain","autoComplete","selectWorkspaces","selectGroups","closeBtnAriaLabel","badge","Badge","isRead","ev","stopPropagation","TextInputGroupUtilities","preventDefault","SelectList","SelectOption","Number","hasCheckbox","Divider","isLoadButton","Spinner","isInLink","copyToAll","validateNextAddRolePermissionStep","currentStep","hasCostPermissions","hasInventoryPermissions","isInventoryPermission","permissionId","isInventoryHostsPermission","isCostPermission","finalData","unshift"],"sourceRoot":""}
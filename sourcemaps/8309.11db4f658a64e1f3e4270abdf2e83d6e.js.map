{"version":3,"file":"js/8309.91c2683a77540b711b66.js","mappings":";43BA2CA,QA3BY,WACV,IAAMA,GAAWC,EAAAA,EAAAA,eACXC,GAAWC,EAAAA,EAAAA,KAUjB,OARAC,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLJ,GAASK,EAAAA,EAAAA,GAAmBC,EAAAA,EAAAA,MAAAA,UAC5BN,GAASO,EAAAA,EAAAA,IAAoBC,EAAAA,EAAAA,OAAAA,UAC7BR,GAASS,EAAAA,EAAAA,IAAmBC,EAAAA,EAAAA,MAAAA,aAE7B,IAEER,EAASS,MAKZ,kBAAC,aAAD,CAA6BC,MAAK,KAAOV,IACvC,kBAAC,IAAD,KACE,6BAASW,MAAO,CAAEC,WAAY,EAAGC,QAAS,IACxC,kBAAC,IAAD,SAPC,kBAAC,KAAD,yFCtBEC,EAAS,4KCNtB,oiGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,20BAEA,IAAMC,GAAUC,WAAAA,MAET,SAAeC,EAAtB,0EAAO,WAA0BC,GAA1B,iFACQH,EAAQE,WAAWC,GAD3B,0GAIA,SAASC,EAAT,GAaJ,IAZDC,EAYC,EAZDA,MACAC,EAWC,EAXDA,OACAC,EAUC,EAVDA,KACAC,EASC,EATDA,YACAC,EAQC,EARDA,UACAC,EAOC,EAPDA,MAOC,IANDC,QAAAA,OAMC,MANS,eAMT,EALDC,EAKC,EALDA,UACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,QAEA,OAAOhB,EAAQiB,UACbZ,EACAC,EACAC,OACAW,EACAV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAIG,SAAeG,EAAtB,0EAAO,4IACLd,EADK,EACLA,MACAC,EAFK,EAELA,OAFK,IAGLc,QAAAA,OAHK,MAGK,GAHL,EAILX,EAJK,EAILA,UAJK,IAKLC,MAAAA,OALK,MAKG,UALH,MAMLC,QAAAA,OANK,MAMK,eANL,MAOLC,UAAAA,OAPK,MAOO,CAAC,kBAAmB,YAAa,UAPxC,EAQLC,EARK,EAQLA,SACAG,EATK,EASLA,QACAD,EAVK,EAULA,WACAD,EAXK,EAWLA,YAXK,IAYLO,cAAAA,OAZK,SAaLC,EAbK,EAaLA,OAbK,SAeetB,EAAQiB,UAC1BZ,EACAC,EACAc,EAAQb,UACRW,EACAE,EAAQG,aACRd,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GA5BG,UAeCQ,EAfD,OA+BCC,GAAoBC,EAAAA,EAAAA,IAAcpB,EAAQkB,MAAAA,GAAT,UAASA,EAAOG,YAAhB,aAAS,EAAaC,OAC7DtB,EAASmB,EAAoBnB,GAASuB,EAAAA,EAAAA,IAAkBL,EAAMG,KAAKC,MAAOvB,IACrDoB,EAjChB,sBAkCDD,EAlCC,yCAmCKxB,EAAQiB,UACZZ,EACAC,EACAc,EAAQb,UACRW,OACAA,EACAT,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAhDD,0CAiCCb,EAjCD,EAiCCA,KAAMwB,EAjCP,EAiCOA,KAjCP,eAoDHxB,KAAAA,EACAwB,KAAAA,GACIN,EACA,CACED,QAAAA,EACAU,WAAY,EAAF,KACLH,GADK,IAERrB,OAAAA,EACAD,MAAAA,EACA0B,YAAaN,KAGjB,IAhED,UAiEOH,MAAAA,GAjEP,UAiEOA,EAAQU,YAjEf,aAiEO,EAAcC,UAjErB,qIAqEA,SAAeC,EAAtB,0EAAO,WAAyBC,GAAzB,iFACQnC,EAAQoC,QAAQD,GADxB,0GAIA,SAAeE,EAAtB,0EAAO,WAAqCF,GAArC,iFACQnC,EAAQoC,QAAQD,EAAM,aAD9B,0GAIA,SAAeG,EAAtB,0EAAO,WAA0BC,GAA1B,iFACQvC,EAAQwC,WAAWD,GAD3B,0GAIA,IAAME,EAAU,mCAAG,WAAOF,EAAQpC,EAAMuC,GAArB,yFACO1C,EAAQ2C,cAAcJ,GAD7B,uBACVK,EADU,EAChBzC,KADgB,kBAEjBH,EAAQyC,WAAWF,EAAQG,EAAkB,EAAH,KAAQvC,GAAR,IAAcyC,OAAAA,IAAWzC,IAFlD,2CAAH,0DAKV0C,EAAqB,mCAAG,WAAOC,EAAMC,GAAb,2FACJ/C,EAAQ2C,cAAcG,EAAKX,MADvB,uBACrBS,EADqB,EAC3BzC,KACF6C,EAF6B,OAEdF,GAFc,IAERF,OAAQA,EAAOK,QAAO,SAACC,GAAD,OAAWH,EAAoBI,SAASD,EAAKnC,iBAF3D,kBAG5Bf,EAAQyC,WAAWK,EAAKX,KAAxB,KAAmCa,KAHP,2CAAH,wDAMrBI,EAAS,mCAAG,WAAOb,EAAQpC,GAAf,0FAChBH,EAAQoD,UAAUb,EAAQpC,IADV,2CAAH,yRC5HTD,EAAa,SAACmD,GACzB,IAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAAOC,EAAAA,EAAAA,GAAW,CAAE3D,OAAAA,EAAAA,EAAQ4D,SAAUC,GAAoBL,GAChE,MAAO,CACLM,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAsBV,GAC/B1B,KAAM,CACJqC,cAAe,CACbC,SAAU,SAACH,GAAD,cAAc,CACtBI,QAAS,SACTC,MAAOX,EAAKY,cAAcV,EAAAA,EAAAA,sBAC1BW,aAAc,IACdC,aAAaR,MAAAA,GAAA,UAAAA,EAASS,cAAT,mBAAkB,UAAlB,eAAsBC,SAAUhB,EAAKY,cAAcV,EAAAA,EAAAA,kCAO7DxB,EAAY,SAACuC,GAAD,MAAe,CACtCb,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAqBU,GAArB,OAAqC,SAACC,GAAQ,MAC/CC,GAAQD,MAAAA,GAAA,UAAAA,EAAKH,cAAL,eAAc,KAAM,GAClC,GAAqB,QAAjBI,EAAMC,QAAqC,yBAAjBD,EAAME,OAClC,MAAO,CAAEF,MAAOG,EAAAA,IAGlB,MAAMJ,OAIGtE,EAAa,eAACY,EAAD,uDAAW,GAAX,MAAmB,CAC3C4C,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAsB/C,GAAtB,OAAqC,SAAC0D,GAAQ,MAC/CC,GAAQD,MAAAA,GAAA,UAAAA,EAAKH,cAAL,eAAc,KAAM,GAClC,GAAqB,QAAjBI,EAAMC,QAAqC,WAAjBD,EAAME,OAClC,MAAO,CAAEF,MAAOG,EAAAA,IAGlB,MAAMJ,OAIGvD,EAAyB,eAACH,EAAD,uDAAW,GAAX,MAAmB,CACvD4C,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAkC/C,KAGhCsB,EAAa,SAACQ,GACzB,IAAMQ,GAAQC,EAAAA,EAAAA,MACRC,GAAOC,EAAAA,EAAAA,GAAW,CAAE3D,OAAAA,EAAAA,EAAQ4D,SAAUC,GAAoBL,GAChE,MAAO,CACLM,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAsBjB,GAC/BnB,KAAM,CACJqC,cAAe,CACbe,UAAW,CACTb,QAAS,UACTC,MAAOX,EAAKY,cAAcV,EAAAA,EAAAA,wBAC1BW,aAAc,IACdC,YAAad,EAAKY,cAAcV,EAAAA,EAAAA,+BAElCO,SAAU,CACRC,QAAS,SACTC,MAAOX,EAAKY,cAAcV,EAAAA,EAAAA,sBAC1BW,aAAc,IACdC,YAAad,EAAKY,cAAcV,EAAAA,EAAAA,iCAO7BsB,EAAmB,SAACP,GAAD,MAAe,CAC7Cb,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAqBU,KAGnBpC,EAAwB,SAACoC,GAAD,MAAe,CAClDb,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAiCU,KAG/BQ,EAAsB,eAACjE,EAAD,uDAAW,GAAX,MAAmB,CACpD4C,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAsB/C,KAGpByB,EAAa,SAACF,EAAQpC,EAAMuC,GACvC,IAAMY,GAAQC,EAAAA,EAAAA,MACRC,GAAOC,EAAAA,EAAAA,GAAW,CAAE3D,OAAAA,EAAAA,EAAQ4D,SAAUC,GAAoBL,GAChE,MAAO,CACLM,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAsBxB,EAAQpC,EAAMuC,GAC7Cf,KAAM,CACJqC,cAAe,CACbC,SAAU,SAACH,GAAD,cAAc,CACtBI,QAAS,SACTC,MAAOX,EAAKY,cAAcV,EAAAA,EAAAA,oBAC1BW,aAAc,IACdC,aAAaR,MAAAA,GAAA,UAAAA,EAASS,cAAT,mBAAkB,UAAlB,eAAsBC,SAAUhB,EAAKY,cAAcV,EAAAA,EAAAA,gCAO7DN,EAAY,SAACb,EAAQpC,GAChC,IAAMmD,GAAQC,EAAAA,EAAAA,MACRC,GAAOC,EAAAA,EAAAA,GAAW,CAAE3D,OAAAA,EAAAA,EAAQ4D,SAAUC,GAAoBL,GAChE,MAAO,CACLM,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAqBxB,EAAQpC,GACtCwB,KAAM,CACJqC,cAAe,CACbe,UAAW,CACTb,QAAS,UACTC,MAAOX,EAAKY,cAAcV,EAAAA,EAAAA,sBAC1BW,aAAc,IACdC,YAAad,EAAKY,cAAcV,EAAAA,EAAAA,iCAO7Bb,EAAwB,SAACC,EAAMC,GAAP,MAAgC,CACnEa,KAAMC,EAAAA,GACNC,QAASC,EAAAA,GAAiCjB,EAAMC,KAGrCxD,EAAqB,SAAC6B,GAAD,MAAc,CAC9CwC,KAAMC,EAAAA,GACNC,QAAS1C","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ErroReducerCatcher from './presentational-components/shared/ErrorReducerCatcher';\nimport PermissionsContext from './utilities/permissions-context';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport { updateGroupsFilters } from './redux/actions/group-actions';\nimport { updateRolesFilters } from './redux/actions/role-actions';\nimport { updateUsersFilters } from './redux/actions/user-actions';\nimport { groupsInitialState } from './redux/reducers/group-reducer';\nimport { rolesInitialState } from './redux/reducers/role-reducer';\nimport { usersInitialState } from './redux/reducers/user-reducer';\nimport useUserData from './hooks/useUserData';\nimport Routing from './Routing';\n\nimport './App.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const userData = useUserData();\n\n  useEffect(() => {\n    return () => {\n      dispatch(updateUsersFilters(usersInitialState.users.filters));\n      dispatch(updateGroupsFilters(groupsInitialState.groups.filters));\n      dispatch(updateRolesFilters(rolesInitialState.roles.filters));\n    };\n  }, []);\n\n  if (!userData.ready) {\n    return <AppPlaceholder />;\n  }\n\n  return (\n    <PermissionsContext.Provider value={{ ...userData }}>\n      <ErroReducerCatcher>\n        <section style={{ marginLeft: 0, padding: 0 }}>\n          <Routing />\n        </section>\n      </ErroReducerCatcher>\n    </PermissionsContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport registry, { RegistryContext } from './utilities/store';\nimport App from './App';\nimport { IntlProvider } from 'react-intl';\nimport messages from './locales/data.json';\n\nexport const locale = 'en';\n\nconst InsightsRbac = () => (\n  <IntlProvider locale={locale} messages={messages[locale]}>\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <App />\n      </Provider>\n    </RegistryContext.Provider>\n  </IntlProvider>\n);\n\nexport default InsightsRbac;\n","import { getLastPageOffset, isOffsetValid } from '../shared/pagination';\nimport { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRole(data);\n}\n\nexport function fetchRoles({\n  limit,\n  offset,\n  name,\n  displayName,\n  nameMatch,\n  scope,\n  orderBy = 'display_name',\n  addFields,\n  username,\n  application,\n  permission,\n  options,\n}) {\n  return roleApi.listRoles(\n    limit,\n    offset,\n    name,\n    undefined,\n    displayName,\n    nameMatch,\n    scope,\n    orderBy,\n    addFields,\n    username,\n    application,\n    permission,\n    options\n  );\n}\n\nexport async function fetchRolesWithPolicies({\n  limit,\n  offset,\n  filters = {},\n  nameMatch,\n  scope = 'account',\n  orderBy = 'display_name',\n  addFields = ['groups_in_count', 'groups_in', 'access'],\n  username,\n  options,\n  permission,\n  application,\n  usesMetaInURL = false,\n  chrome,\n}) {\n  const roles = await roleApi.listRoles(\n    limit,\n    offset,\n    filters.name,\n    undefined,\n    filters.display_name,\n    nameMatch,\n    scope,\n    orderBy,\n    addFields,\n    username,\n    application,\n    permission,\n    options\n  );\n\n  const isPaginationValid = isOffsetValid(offset, roles?.meta?.count);\n  offset = isPaginationValid ? offset : getLastPageOffset(roles.meta.count, limit);\n  let { data, meta } = isPaginationValid\n    ? roles\n    : await roleApi.listRoles(\n        limit,\n        offset,\n        filters.name,\n        undefined,\n        undefined,\n        nameMatch,\n        scope,\n        orderBy,\n        addFields,\n        username,\n        application,\n        permission,\n        options\n      );\n\n  return {\n    data,\n    meta,\n    ...(usesMetaInURL\n      ? {\n          filters,\n          pagination: {\n            ...meta,\n            offset,\n            limit,\n            redirected: !isPaginationValid,\n          },\n        }\n      : {}),\n    ...(await chrome?.auth?.getUser()),\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function fetchRoleForPrincipal(uuid) {\n  return await roleApi.getRole(uuid, 'principal');\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n\nexport const updateRole = async (roleId, data, useCustomAccess) => {\n  const { data: access } = await roleApi.getRoleAccess(roleId);\n  return roleApi.updateRole(roleId, useCustomAccess ? { ...data, access } : data);\n};\n\nexport const removeRolePermissions = async (role, permissionsToRemove) => {\n  const { data: access } = await roleApi.getRoleAccess(role.uuid);\n  const newRole = { ...role, access: access.filter((item) => !permissionsToRemove.includes(item.permission)) };\n  return roleApi.updateRole(role.uuid, { ...newRole });\n};\n\nexport const patchRole = async (roleId, data) => {\n  return roleApi.patchRole(roleId, data);\n};\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\nimport { BAD_UUID } from '../../helpers/shared/helpers';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../Messages';\nimport providerMessages from '../../locales/data.json';\nimport { locale } from '../../AppEntry';\n\nexport const createRole = (roleData) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.ADD_ROLE,\n    payload: RoleHelper.createRole(roleData),\n    meta: {\n      notifications: {\n        rejected: (payload) => ({\n          variant: 'danger',\n          title: intl.formatMessage(messages.createRoleErrorTitle),\n          dismissDelay: 8000,\n          description: payload?.errors?.[0]?.detail || intl.formatMessage(messages.createRoleErrorDescription),\n        }),\n      },\n    },\n  };\n};\n\nexport const fetchRole = (apiProps) => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps).catch((err) => {\n    const error = err?.errors?.[0] || {};\n    if (error.status === '400' && error.source === 'role uuid validation') {\n      return { error: BAD_UUID };\n    }\n\n    throw err;\n  }),\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options).catch((err) => {\n    const error = err?.errors?.[0] || {};\n    if (error.status === '400' && error.source === 'detail') {\n      return { error: BAD_UUID };\n    }\n\n    throw err;\n  }),\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options),\n});\n\nexport const removeRole = (role) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.REMOVE_ROLE,\n    payload: RoleHelper.removeRole(role),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(messages.removeRoleSuccessTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.removeRoleSuccessDescription),\n        },\n        rejected: {\n          variant: 'danger',\n          title: intl.formatMessage(messages.removeRoleErrorTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.removeRoleErrorDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const fetchRoleForUser = (apiProps) => ({\n  type: ActionTypes.FETCH_ROLE_FOR_USER,\n  payload: RoleHelper.fetchRole(apiProps),\n});\n\nexport const fetchRoleForPrincipal = (apiProps) => ({\n  type: ActionTypes.FETCH_ROLE_FOR_PRINCIPAL,\n  payload: RoleHelper.fetchRoleForPrincipal(apiProps),\n});\n\nexport const fetchRolesForWizard = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_WIZARD,\n  payload: RoleHelper.fetchRoles(options),\n});\n\nexport const updateRole = (roleId, data, useCustomAccess) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.UPDATE_ROLE,\n    payload: RoleHelper.updateRole(roleId, data, useCustomAccess),\n    meta: {\n      notifications: {\n        rejected: (payload) => ({\n          variant: 'danger',\n          title: intl.formatMessage(messages.editRoleErrorTitle),\n          dismissDelay: 8000,\n          description: payload?.errors?.[0]?.detail || intl.formatMessage(messages.editRoleErrorDescription),\n        }),\n      },\n    },\n  };\n};\n\nexport const patchRole = (roleId, data) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    type: ActionTypes.PATCH_ROLE,\n    payload: RoleHelper.patchRole(roleId, data),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: intl.formatMessage(messages.editRoleSuccessTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(messages.editRoleSuccessDescription),\n        },\n      },\n    },\n  };\n};\n\nexport const removeRolePermissions = (role, permissionsToRemove) => ({\n  type: ActionTypes.UPDATE_ROLE,\n  payload: RoleHelper.removeRolePermissions(role, permissionsToRemove),\n});\n\nexport const updateRolesFilters = (filters) => ({\n  type: ActionTypes.UPDATE_ROLES_FILTERS,\n  payload: filters,\n});\n"],"names":["dispatch","useDispatch","userData","useUserData","useEffect","updateUsersFilters","usersInitialState","updateGroupsFilters","groupsInitialState","updateRolesFilters","rolesInitialState","ready","value","style","marginLeft","padding","locale","i","roleApi","getRoleApi","createRole","data","fetchRoles","limit","offset","name","displayName","nameMatch","scope","orderBy","addFields","username","application","permission","options","listRoles","undefined","fetchRolesWithPolicies","filters","usesMetaInURL","chrome","display_name","roles","isPaginationValid","isOffsetValid","meta","count","getLastPageOffset","pagination","redirected","auth","getUser","fetchRole","uuid","getRole","fetchRoleForPrincipal","removeRole","roleId","deleteRole","updateRole","useCustomAccess","getRoleAccess","access","removeRolePermissions","role","permissionsToRemove","newRole","filter","item","includes","patchRole","roleData","cache","createIntlCache","intl","createIntl","messages","providerMessages","type","ActionTypes","payload","RoleHelper","notifications","rejected","variant","title","formatMessage","dismissDelay","description","errors","detail","apiProps","err","error","status","source","BAD_UUID","fulfilled","fetchRoleForUser","fetchRolesForWizard"],"sourceRoot":""}
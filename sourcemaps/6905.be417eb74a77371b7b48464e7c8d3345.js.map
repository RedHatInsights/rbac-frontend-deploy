{"version":3,"file":"js/6905.058e450d58b32822c66f.js","mappings":"oMAEO,MAAMA,EAAsB,CACjCC,KAAM,gBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,0HACTC,QAAS,EACTC,QAAS,GAGEC,GAAgB,OAAWP,GAExC,G,sECZA,SACE,UAAa,CACX,IAAO,WACP,QAAW,gBACX,SAAY,iBACZ,OAAU,cACV,WAAc,mBACd,YAAe,oBACf,KAAQ,YACR,QAAW,gBACX,WAAc,mBACd,MAAS,aACT,SAAY,iBACZ,YAAe,oBACf,cAAiB,wBAEnB,UAAa,mBACb,QAAW,kBACX,aAAgB,yBAChB,eAAkB,2B,mECpBb,MAAMQ,EAA4B,CAACC,EAAUC,EAAUC,EAAMC,EAAW,CAAC,KAC9E,MAAMC,EAAe,IAAIC,gBAAgBL,EAASM,QAElD,IAAIC,EAAUL,EAAKM,QAAO,CAACC,EAAKC,KAC9B,MAAMC,EAASP,EAAaQ,OAAOF,GACnC,MAAO,IACFD,EACH,CAACC,GAAMC,EAAOE,OAAS,EAAIF,EAASA,EAAO,GAC5C,GACA,CAAC,GA2BJ,OAzBAG,OAAOZ,KAAKC,GAAUY,SAASL,IAC7B,MAAMM,EAAQb,EAASO,GACvBH,EAAU,IACLA,EACH,CAACG,GAAMO,MAAMC,QAAQX,EAAQG,IACzB,IAAI,IAAIS,IAAI,IAAIZ,EAAQG,MAAUO,MAAMC,QAAQF,GAASA,EAAQ,CAACA,MACjEA,GAAOH,OAAS,GAAKG,GAAUT,EAAQG,IAG1CO,MAAMC,QAAQF,GAChBA,EAAMD,SAASK,GAAShB,EAAaQ,OAAOF,GAAKW,SAASD,IAAShB,EAAakB,OAAOZ,EAAKU,KAE5FhB,EAAamB,IAAIb,IAASM,GAASZ,EAAaoB,IAAId,EAAKM,E,IAI7Df,EACE,CACEwB,SAAUzB,EAASyB,SACnBnB,OAAQF,EAAasB,YAEvB,CACEC,SAAS,IAGNpB,CAAO,EAGHqB,EAAyB,CAAC5B,EAAUE,KAC/C,MAAME,EAAe,IAAIC,gBAAgBL,EAASM,QAClD,OAAOJ,EAAK2B,MAAMnB,GAAQN,EAAamB,IAAIb,IAAK,EAGrCoB,EAAoB,CAAC9B,EAAUC,EAAU8B,KACpD,MAAM3B,EAAe,IAAIC,gBAAgBL,EAASM,QAClDQ,OAAOZ,KAAK6B,GAAWhB,SAASL,GAAQN,EAAa4B,OAAOtB,KAE5DI,OAAOZ,KAAK6B,GAAWhB,SAASL,IAC9B,MAAMM,EAAQe,EAAUrB,GAEpBO,MAAMC,QAAQF,GAChBA,EAAMD,SAASK,GAASA,GAAQhB,EAAakB,OAAOZ,EAAKU,KAEzDJ,GAASZ,EAAaoB,IAAId,EAAKM,E,IAInCf,EACE,CACEwB,SAAUzB,EAASyB,SACnBnB,OAAQF,EAAasB,YAEvB,CACEC,SAAS,GAEZ,C,0EC/DH,MAQA,EARwBM,IACtB,MAAMhC,GAAW,IAAAiC,eAEjB,MAAO,CAACC,EAAIC,IACHnC,GAAS,OAAgBkC,EAAIF,GAAeG,EACpD,C,mKCCH,MAAMC,EAAa,EAAGC,kBAAiBC,gBACrC,MAAMC,GAAO,UACPC,GAAS,SACTC,EAAMD,EAAOE,iBACbC,EAASH,EAAOI,SAAW,GAAK,GAAGH,MACnC,SAAEI,IAAa,IAAAC,YAAW,KAChC,OAAOD,EACL,kBAAC,EAAAE,KAAI,CAACC,UAAU,eAAeC,UAAW,EAAAC,aAAaC,IACpD,GAAGZ,EAAKa,cAAc,IAASC,qBAC/BhB,EACD,kBAAC,EAAAU,KAAI,CACHE,UAAW,EAAAC,aAAaI,EACxBC,KAAM,eAAeZ,wDACrBa,OAAO,SACPC,IAAI,uBAEHnB,EACD,kBAAC,IAAmB,O,KAKxB,kBAAC,EAAAS,KAAI,CAACC,UAAU,eAAeC,UAAW,EAAAC,aAAaC,IACpD,GAAGZ,EAAKa,cAAc,IAASC,qBAEnC,EAGHjB,EAAWsB,UAAY,CACrBrB,gBAAiB,SACjBC,UAAW,UAGbF,EAAWuB,aAAe,CACxBtB,gBAAiB,GACjBC,UAAW,0BAGb,S,2HC1CA,MAAMsB,EAAW,EAAGC,SAAQC,MAC1B,MAAM,OAAEC,GAAWF,EACbG,EAAWD,GAAQD,QAAQ,kBACjC,OAAO,kBAAC,IAAU,CAACd,UAAW,IAAW,iBAAkB,CAAE,kBAAmBgB,IAAaH,IAAKA,KAASC,GAAS,EAGtHF,EAASF,UAAY,CACnBG,IAAK,UAAgB,CACnBE,OAAQ,UAAgB,CACtBD,MAAO,UAAgB,CACrB,iBAAkB,SAClBG,KAAM,UAAgB,CACpBD,SAAU,kBAOpB,S,uGCbA,MAcA,EAdwB,EAAGE,QAAOC,OAAMC,cAAaC,aAAYP,KAC/D,kBAAC,EAAAQ,WAAU,CAACC,QAAS,EAAAC,kBAAkBC,MAAQX,GAC7C,kBAAC,EAAAY,iBAAgB,CAACC,UAAW,oCAAGT,GAAWC,KAAM,kBAAC,EAAAS,eAAc,CAACT,KAAMA,GAAQ,MAAgBU,aAAa,OAC5G,kBAAC,EAAAC,eAAc,CAAC9B,UAAU,iBACvBoB,EAAYW,KAAI,CAACC,EAAuBvE,IACvC,kBAAC,aAAc,CAACA,IAAKA,GAClBuE,E,IAAM,iCAIb,kBAAC,EAAAC,iBAAgB,KAAEZ,G,yQCNhB,MAAMa,EAAmB,EAC9BC,YACAC,UACAC,UACAC,OACAC,iBACAtB,OACAuB,iBACAC,qBACAC,SACAC,cACAC,gBACAC,aACAC,kBACAC,cACAC,YACAC,eACAC,iBACAC,cACAC,eACAC,kBACAC,YACAC,kBACAC,aACAC,oBACAC,aACApG,UACAqG,eACAC,aACAC,gBACAC,WACAC,WACAhG,QACAiG,SACAC,SACAC,eACAC,WACAC,kBACAC,cACAC,UACAC,qBACAC,UACAC,WACAC,gBACAC,qBAEA,MAAMpF,IAAO,UA8Gb,OACE,kBAAC,EAAAqF,SAAQ,KACNlC,KACCM,GAA8B,IAAjBV,GAAM1E,QAAwC,IAAxBmF,GAAanF,QAAgBN,EAAQuH,OAAM,EAAG9G,YAAaA,IAC9F,kBAAC,IAAe,CACdmD,MAAO3B,GAAKa,cAAc,IAAS0E,eAAgB,CAAEC,MAAOpC,IAC5DxB,KAAM,IACNC,YAAa,CACX7B,GAAKa,cAAc,IAAS4E,uBAC5BzF,GAAKa,cAAc,IAAS6E,qBAAsB,CAAE9G,KAAMyE,KAE5DvB,QAASkB,IAAiB,MACtBiB,IAnFQ,MAClB,MAAM0B,EAAU,GAAyB,SAAtBlB,GAAQmB,UAAuB,IAAM,KAAK9C,EAAQ2B,GAAQoB,QAAQ3H,MACrF,OACE,kBAAC,EAAAmH,SAAQ,KACP,kBAAC,KAAO,CACNxB,aAAcA,EACdC,gBAAiBA,EACjBF,YAAaA,EACbI,gBAAiBA,EACjBP,UAAWA,GAAasB,GACxBrD,KAAMA,EACN2B,cAAeA,EACfG,YAAaA,EACbG,eAAgBA,EAChBc,OAAQkB,EACRrC,WAAYA,EACZC,gBAAiBA,EACjBQ,UAAWA,EACXf,eAAgBA,EAChBkB,kBAAmBA,EACnBnG,QAASA,EACTqG,aAAcA,EACdC,WAAYA,EACZC,cAAeA,EACfC,SAAUA,EACVC,SAAUA,EACVhG,MAAOA,EACPqG,gBAAiBA,EACjBK,QAASA,GACTC,aAAcA,GACdC,cAAeA,KAEhB3B,EACC,kBAAC,KAAU,CAACb,UAAWA,EAAW4C,MAAOlC,GAAYwC,QAErD,kBAAC,IAAK,CACJC,cAAc,EAAK,aACP,GAAG3C,EAAY4C,sBAC3BhE,QAASY,EAAY,IAAaqD,QAAU,KAC5CpD,QAASA,KACJgB,GACHd,GAAM1E,OAAS,GAAK,CAClB6H,SAAU,CAACC,EAAIC,EAAYC,GAAQC,OAAMC,OAAQvJ,GAAOwJ,cACtDxC,GAAgB,QAAa,CAAC,CAAEsC,OAAMtJ,OAAMwJ,aAAaJ,QAE1DzB,GAAgB,CAAEC,YACvB7B,KAAMA,GAAM1E,OAAS,EAAI0E,EAAO,CAAC,CAAE0D,WAAW,EAAMF,MAAO,CApF3C,CACxB5E,MACE,kBAAC,IAAe,CACdA,MAAO3B,GAAKa,cAAc,IAAS6F,qBAAsB,CAAElB,MAAOpC,IAClEvB,YACEkD,IAAUC,GACNA,GACA,CAAChF,GAAKa,cAAc,IAAS8F,qBAAsB,CAAEnB,MAAOpC,IAAgBpD,GAAKa,cAAc,IAAS+F,qBAE9G9E,QACEiD,IAAUC,QACN6B,EACA,CACE,kBAAC,EAAAC,kBAAiB,CAAC5I,IAAI,iBACrB,kBAAC,EAAA6I,OAAM,CACL/E,QAAQ,OACRiD,OAAO,uBACP+B,QAAS,KACPrD,EAAeD,GACfK,EAAU,IACLT,EACH2D,OAAQ,KACJvD,GAA8B,CAAE1G,KAAM,KAC1C,GAGHgD,GAAKa,cAAc,IAASqG,sBAO7C3F,MAAO,CACL4F,QAASrE,EAAQzE,YAmDXkI,MAAOzD,KACFC,GAAM1E,OAAS,GAAK,CAAE4E,kBAC3BxC,UAA2B,GAAhBsC,GAAM1E,OAAc,0BAA4B,GAC3D6E,mBAAoBA,EACpBiB,WAAYA,EACZM,OAAQA,EACRQ,OAAQA,GACRP,OAAQ,CAAC0C,EAAGvB,EAAOD,EAAW/B,IAAiBa,EAAO0C,EAAGvB,EAAOD,EAAW/B,KAEzEiB,IAAc,kBAAC,IAAW,MAC5B,kBAAC,IAAS,QAGZxB,EAAW+D,UACX,kBAAC,IAAY,MACT5D,GACA,kBAAC,EAAA6D,WAAU,KAAK,QAAkBhE,EAAYS,EAAWP,EAAaiB,EAAQlB,GAAkBvB,QAAQ,SAASuF,cAAc,QAKxI,EAiBK,GAIP,EAGH5E,EAAiBxB,UAAY,IACxB,KAAQA,UACXsD,OAAQ,UAAgB,CACtB+C,WAAY,WACZ3B,MAAO,aAET1B,WAAY,QACZvB,UAAW,SACXkB,gBAAiB,SACjBjB,QAAS,SACTa,aAAc,WACdE,YAAa,UACbd,QAAS,UAAgB2E,WACzB1E,KAAM,UAAgB0E,WACtBrE,YAAa,WACbD,OAAQ,SACRF,eAAgB,SAChBC,mBAAoB,SACpBI,WAAY,UAAgB,CAC1B+D,SAAU,SACVvB,MAAO,WACPmB,OAAQ,WACRS,MAAO,aAETnE,gBAAiB,UAAgB,CAC/BoE,eAAgB,SAChB/E,UAAW,WAEb+B,aAAc,SACdC,SAAU,SACVF,OAAQ,SACRS,aAAc,SACdJ,OAAQ,SACRF,gBAAiB,SACjBC,WAAY,SACZE,kBAAmB,YAAkB,UACrCjH,QAAS,UACTmH,QAAS,WAAiBuC,YAG5B9E,EAAiBvB,aAAe,IAC3B,KAAQA,aACXsC,aAAc,CAAC,EACfd,WAAW,EACXC,SAAS,EACTM,OAAQ,IAAM,KACd0B,iBAAiB,EACjBjB,YAAa,GACbkB,YAAY,E,uKCvOP,MAAM8C,EAAoB,CAACtE,EAAa,CAAC,EAAGS,EAAWP,EAAc,GAAIiB,EAAS,GAAIlB,KAAoB,IAC5GA,EACHsE,UAAWvE,EAAWoE,MACtBI,QAASxE,EAAWwC,MACpBiC,MAAM,QAAczE,EAAWwC,MAAOxC,EAAW2D,QACjDe,UAAW,CAACC,EAAQF,KAClBhE,EAAU,IACLT,EACH2D,QAAQ,QAAgBc,EAAMzE,EAAWwC,OACzC9I,KAAMwG,EACNmC,QAASlB,GACT,EAEJyD,eAAgB,CACd,CAAEvG,MAAO,IAAKnD,MAAO,GACrB,CAAEmD,MAAO,KAAMnD,MAAO,IACtB,CAAEmD,MAAO,KAAMnD,MAAO,IACtB,CAAEmD,MAAO,KAAMnD,MAAO,IACtB,CAAEmD,MAAO,MAAOnD,MAAO,MAEzB2J,gBAAiB,CAACF,EAAQH,KACxB/D,EAAU,CACRkD,OAAQ,EACRnB,MAAOgC,EACP9K,KAAMwG,EACNmC,QAASlB,GACT,IAIO2D,EAAoB,CAC/B3E,EACAG,EAAc,GACdI,EAAkB,MAAe,GACjCtC,EAAO,GACPwD,EACApB,EAAkB,MAAM,MAExB,MAAM9D,GAAO,UACb,MAAO,CACL0H,MAAO9D,EAAYvF,OACnBmH,MAAO,CACL,CACE7D,MAAO3B,EAAKa,cAAc,IAASwH,YACnCrB,QAAS,KACPhD,GAAgB,IAAM,IAAG,GAG7B,KACOP,GAAa/B,GAAQA,EAAKrD,OAAS,EACpC,CACEsD,MAAO3B,EAAKa,cAAc,IAASyH,WAAY,CAC7CjK,OAAQqD,EAAK6G,OAAOzE,GAAiBzF,SAEvC2I,QAAS,KACPhD,GAAgB,QAAatC,GAAM,GAAM,GAG7C,CAAC,IAGT8G,SAAS,QAAiB9G,EAAMkC,EAAaE,GAC7CoC,SAAW1H,KACRiF,GAAaO,GAAgB,QAAatC,EAAMlD,GAAO,EAE1DiK,GAAIvD,EACL,EAGUwD,EAAsB,CACjCjF,EACAE,EAAiB,MAAe,GAChCI,EAAY,MAAe,GAC3BP,EAAc,GACdF,EAAa,CAAC,EACdD,EAAgB,GAChBa,EACAyE,EACA5K,EACAqG,EACAC,EACAC,EACAC,EACAC,EACAhG,EACAiG,EACAW,KAEA,MAAMpF,GAAO,UACb,MAAO,CACLwE,WACAhG,QACAgH,MAAO,IACDzH,GAAWA,EAAQM,OAAS,EAC5BN,EAAQyE,KAAI,EAAGtE,MAAK0K,QAAOpK,QAAOqK,WAAUC,cAAaC,OAAO,OAAQC,SAAQxD,QAAOyD,eAAe,CACpGL,MAAOA,IAAS,QAAe1K,GAC/B6K,KAAMA,GAAQ,OACdG,aAAc,CACZD,WACAR,GAAI,aAAavK,IACjBA,IAAK,aAAaA,IAClB4K,YAAaA,GAA4B9I,EAAKa,cAAc,IAASsI,YAAa,CAAEjL,QACpFM,QACAqK,cACa,SAATE,EAAkB,CAAE3E,eAAcC,aAAYC,gBAAeC,YAAa,CAAC,EAC/EyE,SACAxD,QACAhB,SAAU,CAAC2B,EAAIiD,KACb,MAAMC,EACgB,iBAAbD,GAA0B3K,MAAMC,QAAQ0K,GAAkEA,EAAtD9K,OAAOZ,MAAK,IAAA4L,QAAOF,EAAS,KAAM5K,GAAUA,KAEzGmF,EAAe,IACVH,KACAF,EACH2D,OAAQ,EACR,CAAC/I,GAAMmL,KAET,SAAe,IACbtF,EAAU,IACLT,EACH2D,OAAQ,EACRtB,QAASlB,KACN1G,EAAQC,QACT,CAACC,EAAKsL,KAAS,IACVtL,EACH,CAACsL,EAAKrL,KAAMqL,EAAK/K,SAEnB,CAAC,GAEH,CAACN,GAAMmL,MAETG,MAAM9H,IACNuH,GAAUQ,SAASC,QACZhI,IACP,EAEJiI,WAAYlG,OAGhB,CACE,CACEmF,OAAO,QAAe1E,GAAqBb,GAC3C0F,KAAM,OACNG,aAAc,CACZD,SAAU7D,EACVqD,GAAI,mBACJvK,IAAK,mBACL4K,YAAa9I,EAAKa,cAAc,IAASsI,YAAa,CAAEjL,IAAKgG,GAAqBb,IAClF7E,MAAOgF,EACPgB,SAAU,CAAC2B,EAAI3H,KACbmF,EAAe,IACVL,EACH2D,OAAQ,EACRjK,KAAMwB,KAER,SAAe,IACbuF,EAAU,IACLT,EACH2D,OAAQ,EACRjK,KAAMwB,EACNmH,QAASlB,MAEX+E,MAAM9H,IACN0D,GAAeqE,SAASC,QACjBhI,IACP,EAEJiI,WAAYlG,QAIlBkF,GAAe,IAEtB,EAGUiB,EAA6B,CACxCpG,EAAc,GACdzF,EACAuF,EAAa,CAAC,EACdK,EAAiB,MAAe,GAChCI,EAAY,MAAe,GAC3BU,KACG,CACH1G,QACEA,GAAWA,EAAQM,OAAS,EACxBN,EACGyE,KACC,EAAGtE,IAAK6K,EAAMvK,MAAOoB,KACnBA,GACmB,IAAnBA,EAAQvB,QAAgB,CACtBwL,UAAU,QAAed,GACzBA,OACAe,MAAOrL,MAAMC,QAAQkB,GAAWA,EAAQ4C,KAAK+F,IAAW,CAAGvL,KAAMuL,MAAa,CAAC,CAAEvL,KAAM4C,OAG5F2I,OAAOwB,SACV,CACE,CACE/M,KAAMwG,IAGhBwG,SAAU,CAAC7D,GAAK8D,GAAUC,KACxB,MAAMC,EAAc,CAAC3L,EAAOuK,EAAM7K,IAC5BgM,EACc,UAATnB,GAA6B,aAATA,EAAsB,GAAK,GAGpD7K,IAAQ+L,EAAQlB,KACXvK,EAGI,aAATuK,GAAgC,UAATA,EAClBvK,EAAM+J,QAAQ/J,GAAUA,IAAUyL,EAAQH,MAAM,IAAI9M,OAGtDyB,MAAMC,QAAQF,GAAS,GAAK,GAG/B4L,EAAerM,EAAQC,QAAO,CAACC,GAAOC,MAAKM,QAAOuK,WAAW,IAAM9K,EAAK,CAACC,GAAMiM,EAAY3L,EAAOuK,EAAM7K,MAAS,CAAC,GACxHyF,EAAe,IACVL,EACH2D,OAAQ,EACRjK,KAAM,MACHoN,IAELrG,EAAU,IACLT,EACH2D,OAAQ,EACRtB,QAASlB,EACTzH,KAAM,MACHoN,GACH,IAIAC,EAAU,EACdxG,eACAC,kBACAF,cACAI,kBACAP,YACA/B,OACA2B,gBACAG,cACAG,iBACAL,aACAC,kBACAQ,YACAU,SACAzB,iBACAkB,oBACAyE,cACA5K,UACAqG,eACAC,aACAC,gBACAC,WACAC,WACAhG,QACAqG,kBACAK,UACAE,mBAEA,kBAAC,IAAc,IACRvB,GAAgB,CACnByG,WAAYlC,EAAkB3E,EAAWG,EAAaI,EAAiBtC,EAAMwD,EAASpB,IAExFyG,aAAc7B,EACZjF,EACAE,EACAI,EACAP,EACAF,EACAD,EACAa,EACAyE,EACA5K,EACAqG,EACAC,EACAC,EACAC,EACAC,EACAhG,EACAiG,EACAW,GAEFoF,cAAe,CACb1I,QAASkB,SAELS,GAAa,CACjBH,WAAYsE,EAAkBtE,EAAYS,EAAWP,EAAaiB,EAAQlB,QAEtEC,EAAYnF,OAAS,GAAMN,GAAWA,EAAQM,OAAS,KAC1DwG,GAAmB,CAClB4F,oBAAqBb,EAA2BpG,EAAazF,EAASuF,EAAYK,EAAgBI,EAAWU,MAKrH4F,EAAQlJ,UAAY,CAClB0C,aAAc,SACdC,gBAAiB,SACjBF,YAAa,UACbI,gBAAiB,SACjBP,UAAW,SACX/B,KAAM,UACN2B,cAAe,WACfG,YAAa,cAAoB,CAAC,UAAiB,aACnDG,eAAgB,SAChB5F,QAAS,YACP,UAAgB,CACdS,MAAO,cAAoB,CAAC,WAAkB,WAAkB,YAChEN,IAAK,WACL4K,YAAa,cAGjB1E,aAAc,SACdC,WAAY,SACZC,cAAe,WACfC,SAAU,SACVC,SAAU,SACVhG,MAAO,QACP8E,WAAY,UAAgB,CAC1BwC,MAAO,WACPmB,OAAQ,WACRS,MAAO,aAETnE,gBAAiB,UAAgB,CAC/BoE,eAAgB,SAChB/E,UAAW,WAEb6B,OAAQ,WACRkE,YAAa,YAAkB,YAC/BzE,kBAAmB,WACnBwG,cAAe,SACf3G,UAAW,SAAe0D,WAC1BzE,eAAgB,SAChB6B,gBAAiB,SACjBK,QAAS,WACTE,cAAe,YAGjBiF,EAAQjJ,aAAe,CACrBsJ,eAAe,EACf7G,cAAc,EACdJ,WAAW,EACX/B,KAAM,GACN2B,cAAe,GACfG,YAAa,GACbF,WAAY,KACZU,gBAAiB,KAAe,EAChCL,eAAgB,KAAe,EAC/Bc,YAAQoC,EACR7D,eAAgB,IAAM,GACtB2F,YAAa,GACb5K,QAAS,GACTqG,cAAc,EACdS,iBAAiB,GAGnB,S,mPC5VA,MAAM8F,EAAY,EAAGC,gBAAeC,mBAAkBC,YAAWC,gBAAeC,gBAAezJ,YAC7F,MAAMvB,GAAO,UACPvC,GAAW,IAAAiC,eACXlC,GAAW,IAAAyN,eACXC,GAAW,IAAAC,gBACX,SAAE7K,IAAa,IAAAC,YAAW,KAE1B0I,GAAW,IAAAmC,QAAO,MAGxB,IAAI9H,GAAa,IAAA+H,cAAY,EAAGC,aAAeC,aAAc,CAC3DzF,OAAQiF,EAAgBQ,EAAMjI,WAAWwC,MAAQyF,EAAMC,KAAK1F,SAAWxF,EAAW,KAAuB,MAAiBwF,MAC1HmB,QAAS8D,EAAgBQ,EAAMjI,WAAW2D,OAASsE,EAAMC,KAAKvE,UAAY3G,EAAW,KAAuB,MAAiB2G,OAC7HS,MAAOqD,EAAgBQ,EAAMjI,WAAWoE,MAAQ6D,EAAMC,KAAK9D,MAC3D+D,WAAYV,GAAiBQ,EAAMjI,WAAWmI,eAGhD,MAAM,MAAEF,EAAK,UAAE9H,EAAS,aAAEiI,IAAiB,IAAAL,cACzC,EACEC,aACEC,OAAS7J,OAAM3D,UAAU,CAAC,GAC1B4N,yBAEE,CACJJ,MAAO7J,GAAMc,OAAOd,IAAS,IAAMA,EAAM4E,KAAM5E,EAAKkK,aACpDnI,UAAWkI,EACXD,aAAclO,EAASM,OAAOO,OAAS,GAAKC,OAAOZ,KAAKK,GAASM,OAAS,EAAIN,EAAU,CAAEyD,OAAQ,CAAC,eAIjGuC,GAAY,IAAA8H,cAAaC,GAAaZ,GAAS,OAAWY,KAAY,CAACZ,IACvEa,GAAqB,IAAAF,cAAa9N,GAAYmN,GAAS,OAAmBnN,KAAW,CAACmN,IACtFpI,EAAU,CACd,CAAEnB,MAAO3B,EAAKa,cAAcmK,EAAgB,IAAS1K,SAAW,IAAS0L,kBAAmB9N,IAAK,YAAa+N,WAAY,CAAC,OAC3H,CAAEtK,MAAO3B,EAAKa,cAAc,IAAS+K,UAAW1N,IAAK,WAAY+N,WAAY,CAAC,MAC9E,CAAEtK,MAAO3B,EAAKa,cAAc,IAASqL,QACrC,CAAEvK,MAAO3B,EAAKa,cAAc,IAASsL,WAAYF,WAAY,CAAC,OAC9D,CAAEtK,MAAO3B,EAAKa,cAAc,IAASuL,UAAWH,WAAY,CAAC,OAC7D,CAAEtK,MAAO3B,EAAKa,cAAc,IAASW,QAASyK,WAAY,CAAC,SAEtDI,EAAaC,IAAkB,IAAAC,UAAS,CAAE1G,MAAO,EAAGD,UAAW,SAE/D7H,EAASyO,IAAc,IAAAD,UAC5BxB,EACIW,EACA,CACEE,SAAU,GACVM,MAAO,GACP1K,OAAQ,CAACxB,EAAKa,cAAc,IAAS4L,WAoC7C,OAhCA,IAAAC,YAAU,KACR3B,IAAiB,QAAqBvN,EAAUC,EAAU6F,EAAWwC,MAAOxC,EAAW2D,OAAO,GAC7F,CAAC3D,EAAW2D,OAAQ3D,EAAWwC,MAAOxC,EAAWoE,MAAOpE,EAAWmI,cAEtE,IAAAiB,YAAU,KACR,MAAM,MAAE5G,EAAK,OAAEmB,IAAW,QAA6BzJ,EAAUC,EAAU6F,GACrEqJ,EAAa5B,GACf,QAA0BvN,EAAUC,EAAU,CAAC,WAAY,QAAS,UAAWM,GAC/E,CAAEyD,OAAQzD,EAAQyD,QACtBgL,EAAWG,GACX5I,EAAU,KAAK,QAAY,CAAE+B,QAAOmB,SAAQlJ,QAAS4O,IAAe5B,iBAAgB,GACnF,KAEH,IAAA2B,YAAU,KACJ3B,KACF,QAAyBvN,KAAa,QAAqBA,EAAUC,EAAU6F,EAAWwC,MAAOxC,EAAW2D,QAC5G3I,OAAOH,OAAOJ,GAASsB,MAAMkJ,GAAWA,GAAQlK,OAAS,OACtD,QAAuBb,EAAUc,OAAOZ,KAAKK,MAC9C,QAA0BP,EAAUC,EAAUa,OAAOZ,KAAKK,GAAUA,G,IAexE,kBAAC,IAAgB,CACf6E,WAAS,EACTiB,cAAY,EACZhB,SAAS,EACTC,QAASA,EACTC,MAAM,OAAW+H,EAAWS,EAAOvL,EAAM4K,GAAe,GACxDnG,OAAQ4H,EACR3H,OAAQ,CAAC0C,EAAGvB,EAAOD,KACjB,MAAMD,EAAU,GAAiB,SAAdC,EAAuB,IAAM,KAAK9C,EAAQ+C,GAAO3H,MACpEoO,EAAe,CAAEzG,QAAOD,cACxB7B,EAAU,IAAKT,EAAYvF,UAASgN,gBAAepF,WAAU,EAE/DjE,KAAM6J,EACNtG,OAAO,cACPlB,UAAY6I,IACV,MAAMpL,EAASlD,OAAOuO,UAAUC,eAAeC,KAAKH,EAAQ,UAAYA,EAAOpL,OAASzD,EAAQyD,QAC1F,SAAEoK,EAAQ,MAAEM,EAAK,MAAExE,EAAK,MAAE5B,EAAK,OAAEmB,EAAM,QAAEtB,GAAYiH,EAE3D7I,EAAU,KAAK,QAAY,CAAE2D,QAAO5B,QAAOmB,SAAQtB,UAAS5H,QAAS,CAAE6N,WAAUM,QAAO1K,YAAauJ,kBAAiBvB,MAAK,KACzHP,GAAUQ,SAASC,OAAO,IAE5BqB,IAAiB,QAAkBvN,EAAUC,EAAU,CAAEmO,WAAUM,QAAO1K,UAAS,EAErFkC,aAAc,CAAEkI,SAAU,GAAIM,MAAO,GAAI1K,OAAQ,IACjDmC,eAAgB,EAAGiI,WAAUM,QAAO1K,aA7BlB,IAACwL,IA8BH,CACZpB,cAA8B,IAAbA,EAA2B7N,EAAQ6N,SAAWA,EAC/DM,WAAwB,IAAVA,EAAwBnO,EAAQmO,MAAQA,EACtD1K,YAA0B,IAAXA,GAA0BA,IAAWzD,EAAQyD,OAASzD,EAAQyD,OAASA,GAhC5FuJ,GAAiBgB,EAAmBiB,GACpCR,EAAW,CAAEZ,SAAU,MAAOoB,GAgCxB,EAEJvJ,UAAWA,EACXH,WAAYA,EACZM,YAAagH,EACb5G,gBA7CqBiJ,IACvBpC,GAAkBU,GACT0B,EAAa1B,GAAO/I,KAAI,EAAG8D,OAAMsF,eAAe,CAAGtF,OAAMsC,MAAOgD,GAAYtF,OACnF,EA2CAnC,WAAY,IACZf,YAAapD,EAAKa,cAAc,IAAS0K,OAAOvF,cAChD3C,cAAerD,EAAKa,cAAc,IAASqM,MAC3CnP,QAAS,CACP,CACEG,IAAK,WACLM,MAAOT,EAAQ6N,SACf9C,YAAa9I,EAAKa,cAAc,IAASsI,YAAa,CAAEjL,IAAK8B,EAAKa,cAAc,IAAS+K,UAAU5F,gBACnGiD,YAEF,CACE/K,IAAK,QACLM,MAAOT,EAAQmO,MACfpD,YAAa9I,EAAKa,cAAc,IAASsI,YAAa,CAAEjL,IAAK8B,EAAKa,cAAc,IAASqL,OAAOlG,gBAChGiD,YAEF,CACE/K,IAAK,SACLM,MAAOT,EAAQyD,OACfoH,MAAO5I,EAAKa,cAAc,IAASW,QACnCuH,KAAM,WACNvD,MAAO,CACL,CAAEoD,MAAO5I,EAAKa,cAAc,IAAS4L,QAASjO,MAAO,UACrD,CAAEoK,MAAO5I,EAAKa,cAAc,IAASsM,UAAW3O,MAAO,eAI7D0G,QAAQ,gBACJ3D,GAEP,EAGHoJ,EAAUxJ,UAAY,CACpB6J,cAAe,SACfO,MAAO,UACP6B,aAAc,WACdvC,iBAAkB,SAAepD,WACjCmD,cAAe,UACfE,UAAW,SACXvJ,MAAO,WACPwJ,cAAe,UAGjBJ,EAAUvJ,aAAe,CACvB4J,eAAe,EACfO,MAAO,GACPX,cAAe,GACfC,iBAAkB,KAAe,EACjCC,WAAW,EACXC,eAAe,GAGjB,S,0QCpLA,MAAMsC,EAAkB,EAAGC,kBACzB,MAAMrN,GAAS,SACTD,GAAO,UACPvC,GAAW,UACX,QAAE8P,IAAY,IAAAC,aACdtC,GAAW,IAAAC,gBAEVP,EAAeC,IAAoB,IAAA0B,UAAS,IAqB7CkB,EAAW,KACfvC,GACE,IAAAwC,iBAAgB,CACd1L,QAAS,UACTL,MAAO3B,EAAKa,cAAc+J,EAAcvM,OAAS,EAAI,IAASsP,wBAA0B,IAASC,wBACjGC,aAAc,IACdhM,YAAa7B,EAAKa,cAAc+J,EAAcvM,OAAS,EAAI,IAASyP,4BAA8B,IAASC,+BAG/GtQ,EAAS6P,EAAY,EAGvB,OACE,kBAAC,EAAAU,MAAK,CACJrM,MAAO3B,EAAKa,cAAc,IAASoN,YACnCjM,QAAS,EAAAkM,aAAaC,OACtBC,QAAM,EACNtM,QAAS,CACP,kBAAC,EAAAiF,OAAM,CAAC7I,IAAI,UAAU+G,OAAO,yBAAyB0E,WAAqC,IAAzBiB,EAAcvM,OAAc2D,QAAQ,UAAUgF,QArCrG,KACf,MAAMqH,EAAWzD,EAAcpI,KAAK0K,IAAS,CAAGtB,SAAUsB,EAAKtE,UAC3DyF,EAAShQ,OAAS,IACpB6M,GACE,IAAAwC,iBAAgB,CACd1L,QAAS,OACTL,MAAO3B,EAAKa,cAAcwN,EAAShQ,OAAS,EAAI,IAASsP,wBAA0B,IAASC,wBAC5FC,aAAc,IACdhM,YAAa7B,EAAKa,cAAcwN,EAAShQ,OAAS,EAAI,IAASiQ,8BAAgC,IAASC,iCAG5GrD,GAAS,QAAkBqC,EAASc,IAAW7E,MAAK,KAClD0B,GAAS,QAAqBqC,IAC9BrC,GAAS,QAAY,CAAEH,eAAe,EAAM9K,WAAU,KAG1DxC,EAAS6P,EAAY,GAsBdtN,EAAKa,cAAc,IAAS2N,aAE/B,kBAAC,EAAAzH,OAAM,CAAC0B,GAAG,oBAAoBxD,OAAO,0BAA0B/G,IAAI,SAAS8D,QAAQ,OAAOgF,QAASyG,GAClGzN,EAAKa,cAAc,IAAS4N,UAGjCC,QAASjB,GAET,kBAAC,EAAAkB,MAAK,CAACC,WAAS,GACd,kBAAC,EAAAC,UAAS,KACR,kBAAC,EAAAC,YAAW,KACV,kBAAC,IAAU,CAAChP,gBAAiBE,EAAKa,cAAc,IAASkO,uBAG7D,kBAAC,EAAAF,UAAS,KACR,kBAAC,IAAS,CAACjE,cAAeA,EAAeC,iBAAkBA,EAAkBG,eAAa,MAIjG,EAGHqC,EAAgBjM,aAAe,CAC7BkM,YAAa,IAAUtE,OAAOgG,MAGhC3B,EAAgBlM,UAAY,CAC1BmM,YAAa,YAGf,S,2JC3DO,MAAM2B,EAAa,CAACnE,EAAoBpJ,EAAoB,GAAI1B,EAAiB4D,EAAc,GAAIC,GAAe,IACvHnC,GAAM1D,QAAmB,CAACC,GAAO2N,WAAUsD,UAAWzN,EAAUyK,QAAOiD,WAAYhD,EAAWiD,UAAWhD,EAAUiD,aAAcC,KAuCxH,IAAIrR,EAtCgB,CACzBqI,KAAMsF,EACNrF,MAAO,CACL+I,EACE,kBAAC,EAAAjK,SAAQ,KACP,kBAAC,IAAS,CAACnH,IAAI,WAAWuC,UAAU,kBACpC,0BAAMvC,IAAI,OAAO8B,EAAKa,cAAc,IAAS0O,OAG/C,kBAAC,EAAAlK,SAAQ,KACP,kBAAC,IAAS,CAACnH,IAAI,UAAUuC,UAAU,kBACnC,0BAAMvC,IAAI,MAAM8B,EAAKa,cAAc,IAAS2O,MAGhD,CACE7N,MAAOmJ,EACL,kBAAC,IAAO,CAACnL,GAAI,IAAU,eAAeqP,KAAK7P,QAAQ,YAAayM,IAAYA,EAAS1M,YAErF0M,EAAS1M,YAGbgN,EACAC,EACAC,EACA,CACEzK,MACE,kBAAC,EAAA8N,MAAK,CAACvR,IAAI,SAASwR,MAAOjO,EAAW,QAAU,QAC7CzB,EAAKa,cAAcY,EAAW,IAASgL,OAAS,IAASU,WAG9D5L,MAAO,CACL,iBAAkBE,KAIxBoH,WAAUhF,GAAekG,QAAQnG,GAAa+L,QAAO,EAAGrJ,UAAWA,IAASsF,QAI7E,G","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/caret-down-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Tooltip/tooltip.mjs","webpack:///./src/helpers/shared/filters.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/ActiveUsers.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/smart-components/group/member/add-group-members.js","webpack:///./src/smart-components/user/user-table-helpers.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CaretDownIconConfig = {\n  name: 'CaretDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CaretDownIcon = createIcon(CaretDownIconConfig);\n\nexport default CaretDownIcon;","import './tooltip.css';\nexport default {\n  \"modifiers\": {\n    \"top\": \"pf-m-top\",\n    \"topLeft\": \"pf-m-top-left\",\n    \"topRight\": \"pf-m-top-right\",\n    \"bottom\": \"pf-m-bottom\",\n    \"bottomLeft\": \"pf-m-bottom-left\",\n    \"bottomRight\": \"pf-m-bottom-right\",\n    \"left\": \"pf-m-left\",\n    \"leftTop\": \"pf-m-left-top\",\n    \"leftBottom\": \"pf-m-left-bottom\",\n    \"right\": \"pf-m-right\",\n    \"rightTop\": \"pf-m-right-top\",\n    \"rightBottom\": \"pf-m-right-bottom\",\n    \"textAlignLeft\": \"pf-m-text-align-left\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\",\n  \"tooltip\": \"pf-v5-c-tooltip\",\n  \"tooltipArrow\": \"pf-v5-c-tooltip__arrow\",\n  \"tooltipContent\": \"pf-v5-c-tooltip__content\"\n};","export const syncDefaultFiltersWithUrl = (location, navigate, keys, defaults = {}) => {\n  const searchParams = new URLSearchParams(location.search);\n\n  let filters = keys.reduce((acc, key) => {\n    const values = searchParams.getAll(key);\n    return {\n      ...acc,\n      [key]: values.length > 1 ? values : values[0],\n    };\n  }, {});\n\n  Object.keys(defaults).forEach((key) => {\n    const value = defaults[key];\n    filters = {\n      ...filters,\n      [key]: Array.isArray(filters[key])\n        ? [...new Set([...filters[key], ...(Array.isArray(value) ? value : [value])])]\n        : (value?.length > 0 && value) || filters[key],\n    };\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => searchParams.getAll(key).includes(item) || searchParams.append(key, item));\n    } else {\n      searchParams.get(key) || (value && searchParams.set(key, value));\n    }\n  });\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n  return filters;\n};\n\nexport const areFiltersPresentInUrl = (location, keys) => {\n  const searchParams = new URLSearchParams(location.search);\n  return keys.some((key) => searchParams.get(key));\n};\n\nexport const applyFiltersToUrl = (location, navigate, newValues) => {\n  const searchParams = new URLSearchParams(location.search);\n  Object.keys(newValues).forEach((key) => searchParams.delete(key));\n\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => item && searchParams.append(key, item));\n    } else {\n      value && searchParams.set(key, value);\n    }\n  });\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useContext } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport PermissionsContext from '../../utilities/permissions-context';\nimport messages from '../../Messages';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst ActiveUser = ({ linkDescription, linkTitle }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const env = chrome.getEnvironment();\n  const prefix = chrome.isProd() ? '' : `${env}.`;\n  const { orgAdmin } = useContext(PermissionsContext);\n  return orgAdmin ? (\n    <Text className=\"pf-v5-u-mt-0\" component={TextVariants.h7}>\n      {`${intl.formatMessage(messages.usersDescription)} `}\n      {linkDescription}\n      <Text\n        component={TextVariants.a}\n        href={`https://www.${prefix}redhat.com/wapps/ugc/protected/usermgt/userList.html`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {linkTitle}\n        <ExternalLinkAltIcon />\n      </Text>\n      .\n    </Text>\n  ) : (\n    <Text className=\"pf-v5-u-mt-0\" component={TextVariants.h7}>\n      {`${intl.formatMessage(messages.usersDescription)} `}\n    </Text>\n  );\n};\n\nActiveUser.propTypes = {\n  linkDescription: PropTypes.node,\n  linkTitle: PropTypes.node,\n};\n\nActiveUser.defaultProps = {\n  linkDescription: '',\n  linkTitle: ' user management list ',\n};\n\nexport default ActiveUser;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        'data-is-active': PropTypes.bool,\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <ListLoader isCompact={isCompact} items={pagination?.limit} />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n","import React, { useEffect, useState, useContext, useRef, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { sortable, nowrap } from '@patternfly/react-table';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { fetchUsers, updateUsersFilters } from '../../../redux/actions/user-actions';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport {\n  defaultSettings,\n  defaultAdminSettings,\n  syncDefaultPaginationWithUrl,\n  applyPaginationToUrl,\n  isPaginationPresentInUrl,\n} from '../../../helpers/shared/pagination';\nimport { syncDefaultFiltersWithUrl, applyFiltersToUrl, areFiltersPresentInUrl } from '../../../helpers/shared/filters';\nimport messages from '../../../Messages';\nimport { createRows } from '../../user/user-table-helpers';\n\nconst UsersList = ({ selectedUsers, setSelectedUsers, userLinks, usesMetaInURL, displayNarrow, props }) => {\n  const intl = useIntl();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { orgAdmin } = useContext(PermissionsContext);\n  // use for text filter to focus\n  const innerRef = useRef(null);\n\n  // for usesMetaInURL (Users page) store pagination settings in Redux, otherwise use results from meta\n  let pagination = useSelector(({ userReducer: { users } }) => ({\n    limit: (usesMetaInURL ? users.pagination.limit : users.meta.limit) ?? (orgAdmin ? defaultAdminSettings : defaultSettings).limit,\n    offset: (usesMetaInURL ? users.pagination.offset : users.meta.offset) ?? (orgAdmin ? defaultAdminSettings : defaultSettings).offset,\n    count: usesMetaInURL ? users.pagination.count : users.meta.count,\n    redirected: usesMetaInURL && users.pagination.redirected,\n  }));\n\n  const { users, isLoading, stateFilters } = useSelector(\n    ({\n      userReducer: {\n        users: { data, filters = {} },\n        isUserDataLoading,\n      },\n    }) => ({\n      users: data?.map?.((data) => ({ ...data, uuid: data.username })),\n      isLoading: isUserDataLoading,\n      stateFilters: location.search.length > 0 || Object.keys(filters).length > 0 ? filters : { status: ['Active'] },\n    })\n  );\n\n  const fetchData = useCallback((apiProps) => dispatch(fetchUsers(apiProps)), [dispatch]);\n  const updateStateFilters = useCallback((filters) => dispatch(updateUsersFilters(filters)), [dispatch]);\n  const columns = [\n    { title: intl.formatMessage(displayNarrow ? messages.orgAdmin : messages.orgAdministrator), key: 'org-admin', transforms: [nowrap] },\n    { title: intl.formatMessage(messages.username), key: 'username', transforms: [sortable] },\n    { title: intl.formatMessage(messages.email) },\n    { title: intl.formatMessage(messages.firstName), transforms: [nowrap] },\n    { title: intl.formatMessage(messages.lastName), transforms: [nowrap] },\n    { title: intl.formatMessage(messages.status), transforms: [nowrap] },\n  ];\n  const [sortByState, setSortByState] = useState({ index: 1, direction: 'asc' });\n\n  const [filters, setFilters] = useState(\n    usesMetaInURL\n      ? stateFilters\n      : {\n          username: '',\n          email: '',\n          status: [intl.formatMessage(messages.active)],\n        }\n  );\n\n  useEffect(() => {\n    usesMetaInURL && applyPaginationToUrl(location, navigate, pagination.limit, pagination.offset);\n  }, [pagination.offset, pagination.limit, pagination.count, pagination.redirected]);\n\n  useEffect(() => {\n    const { limit, offset } = syncDefaultPaginationWithUrl(location, navigate, pagination);\n    const newFilters = usesMetaInURL\n      ? syncDefaultFiltersWithUrl(location, navigate, ['username', 'email', 'status'], filters)\n      : { status: filters.status };\n    setFilters(newFilters);\n    fetchData({ ...mappedProps({ limit, offset, filters: newFilters }), usesMetaInURL });\n  }, []);\n\n  useEffect(() => {\n    if (usesMetaInURL) {\n      isPaginationPresentInUrl(location) || applyPaginationToUrl(location, navigate, pagination.limit, pagination.offset);\n      Object.values(filters).some((filter) => filter?.length > 0) &&\n        !areFiltersPresentInUrl(location, Object.keys(filters)) &&\n        syncDefaultFiltersWithUrl(location, navigate, Object.keys(filters), filters);\n    }\n  });\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, username }) => ({ uuid, label: username || uuid }));\n    });\n  };\n\n  const updateFilters = (payload) => {\n    usesMetaInURL && updateStateFilters(payload);\n    setFilters({ username: '', ...payload });\n  };\n  return (\n    <TableToolbarView\n      isCompact\n      isSelectable\n      borders={false}\n      columns={columns}\n      rows={createRows(userLinks, users, intl, selectedUsers, true)}\n      sortBy={sortByState}\n      onSort={(e, index, direction) => {\n        const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n        setSortByState({ index, direction });\n        fetchData({ ...pagination, filters, usesMetaInURL, orderBy });\n      }}\n      data={users}\n      ouiaId=\"users-table\"\n      fetchData={(config) => {\n        const status = Object.prototype.hasOwnProperty.call(config, 'status') ? config.status : filters.status;\n        const { username, email, count, limit, offset, orderBy } = config;\n\n        fetchData({ ...mappedProps({ count, limit, offset, orderBy, filters: { username, email, status } }), usesMetaInURL }).then(() => {\n          innerRef?.current?.focus();\n        });\n        usesMetaInURL && applyFiltersToUrl(location, navigate, { username, email, status });\n      }}\n      emptyFilters={{ username: '', email: '', status: '' }}\n      setFilterValue={({ username, email, status }) => {\n        updateFilters({\n          username: typeof username === 'undefined' ? filters.username : username,\n          email: typeof email === 'undefined' ? filters.email : email,\n          status: typeof status === 'undefined' || status === filters.status ? filters.status : status,\n        });\n      }}\n      isLoading={isLoading}\n      pagination={pagination}\n      checkedRows={selectedUsers}\n      setCheckedItems={setCheckedItems}\n      rowWrapper={UsersRow}\n      titlePlural={intl.formatMessage(messages.users).toLowerCase()}\n      titleSingular={intl.formatMessage(messages.user)}\n      filters={[\n        {\n          key: 'username',\n          value: filters.username,\n          placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.username).toLowerCase() }),\n          innerRef,\n        },\n        {\n          key: 'email',\n          value: filters.email,\n          placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.email).toLowerCase() }),\n          innerRef,\n        },\n        {\n          key: 'status',\n          value: filters.status,\n          label: intl.formatMessage(messages.status),\n          type: 'checkbox',\n          items: [\n            { label: intl.formatMessage(messages.active), value: 'Active' },\n            { label: intl.formatMessage(messages.inactive), value: 'Inactive' },\n          ],\n        },\n      ]}\n      tableId=\"users-list\"\n      {...props}\n    />\n  );\n};\n\nUsersList.propTypes = {\n  displayNarrow: PropTypes.bool,\n  users: PropTypes.array,\n  searchFilter: PropTypes.string,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  userLinks: PropTypes.bool,\n  props: PropTypes.object,\n  usesMetaInURL: PropTypes.bool,\n};\n\nUsersList.defaultProps = {\n  displayNarrow: false,\n  users: [],\n  selectedUsers: [],\n  setSelectedUsers: () => undefined,\n  userLinks: false,\n  usesMetaInURL: false,\n};\n\nexport default UsersList;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant, StackItem, Stack, TextContent } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { addMembersToGroup, fetchMembersForGroup, fetchGroups } from '../../../redux/actions/group-actions';\nimport UsersList from '../add-group/users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\n\nconst AddGroupMembers = ({ cancelRoute }) => {\n  const chrome = useChrome();\n  const intl = useIntl();\n  const navigate = useAppNavigate();\n  const { groupId } = useParams();\n  const dispatch = useDispatch();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map((user) => ({ username: user.label }));\n    if (userList.length > 0) {\n      dispatch(\n        addNotification({\n          variant: 'info',\n          title: intl.formatMessage(userList.length > 1 ? messages.addingGroupMembersTitle : messages.addingGroupMemberTitle),\n          dismissDelay: 8000,\n          description: intl.formatMessage(userList.length > 1 ? messages.addingGroupMembersDescription : messages.addingGroupMemberDescription),\n        })\n      );\n      dispatch(addMembersToGroup(groupId, userList)).then(() => {\n        dispatch(fetchMembersForGroup(groupId));\n        dispatch(fetchGroups({ usesMetaInURL: true, chrome }));\n      });\n    }\n    navigate(cancelRoute);\n  };\n\n  const onCancel = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        title: intl.formatMessage(selectedUsers.length > 1 ? messages.addingGroupMembersTitle : messages.addingGroupMemberTitle),\n        dismissDelay: 8000,\n        description: intl.formatMessage(selectedUsers.length > 1 ? messages.addingGroupMembersCancelled : messages.addingGroupMemberCancelled),\n      })\n    );\n    navigate(cancelRoute);\n  };\n\n  return (\n    <Modal\n      title={intl.formatMessage(messages.addMembers)}\n      variant={ModalVariant.medium}\n      isOpen\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={selectedUsers.length === 0} variant=\"primary\" onClick={onSubmit}>\n          {intl.formatMessage(messages.addToGroup)}\n        </Button>,\n        <Button id=\"add-groups-cancel\" ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <ActiveUser linkDescription={intl.formatMessage(messages.toManageUsersText)} />\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <UsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} displayNarrow />\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  cancelRoute: pathnames.groups.link,\n};\n\nAddGroupMembers.propTypes = {\n  cancelRoute: PropTypes.string,\n};\n\nexport default AddGroupMembers;\n","import React, { Fragment } from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { IntlShape } from 'react-intl';\nimport { CheckIcon, CloseIcon } from '@patternfly/react-icons';\nimport messages from '../../Messages';\nimport pathnames from '../../utilities/pathnames';\nimport AppLink from '../../presentational-components/shared/AppLink';\n\ninterface UserProps {\n  email: string;\n  first_name: string;\n  is_active: boolean;\n  is_org_admin: boolean;\n  last_name: string;\n  username: string;\n  uuid: string;\n}\n\nexport type CellObject = { title: string | React.RefAttributes<HTMLAnchorElement>; props?: { 'data-is-active': boolean } };\n\nexport interface RowProps {\n  uuid: string; // username\n  cells: [\n    React.ReactNode, // yes or no for isOrgAdmin\n    CellObject, // link to user or just username\n    string, // email\n    string, // firstName\n    string, // lastName\n    CellObject // status\n  ];\n  selected: boolean;\n}\n\nexport const createRows = (userLinks: boolean, data: UserProps[] = [], intl: IntlShape, checkedRows = [], isSelectable = false): RowProps[] =>\n  data?.reduce<RowProps[]>((acc, { username, is_active: isActive, email, first_name: firstName, last_name: lastName, is_org_admin: isOrgAdmin }) => {\n    const newEntry: RowProps = {\n      uuid: username,\n      cells: [\n        isOrgAdmin ? (\n          <Fragment>\n            <CheckIcon key=\"yes-icon\" className=\"pf-v5-u-mr-sm\" />\n            <span key=\"yes\">{intl.formatMessage(messages.yes)}</span>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <CloseIcon key=\"no-icon\" className=\"pf-v5-u-mr-sm\" />\n            <span key=\"no\">{intl.formatMessage(messages.no)}</span>\n          </Fragment>\n        ),\n        {\n          title: userLinks ? (\n            <AppLink to={pathnames['user-detail'].link.replace(':username', username)}>{username.toString()}</AppLink>\n          ) : (\n            username.toString()\n          ),\n        },\n        email,\n        firstName,\n        lastName,\n        {\n          title: (\n            <Label key=\"status\" color={isActive ? 'green' : 'grey'}>\n              {intl.formatMessage(isActive ? messages.active : messages.inactive)}\n            </Label>\n          ),\n          props: {\n            'data-is-active': isActive,\n          },\n        },\n      ],\n      selected: isSelectable ? Boolean(checkedRows?.find?.(({ uuid }) => uuid === username)) : false,\n    };\n\n    return [...acc, newEntry];\n  }, []);\n"],"names":["CaretDownIconConfig","name","height","width","svgPath","yOffset","xOffset","CaretDownIcon","syncDefaultFiltersWithUrl","location","navigate","keys","defaults","searchParams","URLSearchParams","search","filters","reduce","acc","key","values","getAll","length","Object","forEach","value","Array","isArray","Set","item","includes","append","get","set","pathname","toString","replace","areFiltersPresentInUrl","some","applyFiltersToUrl","newValues","delete","linkBasename","useNavigate","to","options","ActiveUser","linkDescription","linkTitle","intl","chrome","env","getEnvironment","prefix","isProd","orgAdmin","useContext","Text","className","component","TextVariants","h7","formatMessage","usersDescription","a","href","target","rel","propTypes","defaultProps","UsersRow","row","props","status","isActive","data","title","icon","description","actions","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","map","text","EmptyStateFooter","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","Fragment","every","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","orderBy","direction","index","limit","canSelectAll","toLowerCase","compact","onSelect","_e","isSelected","_idx","uuid","cells","requires","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","undefined","EmptyStateActions","Button","onClick","offset","clearAllFilters","colSpan","e","noBottom","Pagination","dropDirection","directions","isRequired","count","toggleTemplate","paginationBuilder","itemCount","perPage","page","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","checked","id","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","innerRef","filterValues","filterByKey","filterBy","newFilter","pickBy","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","UsersList","selectedUsers","setSelectedUsers","userLinks","usesMetaInURL","displayNarrow","useLocation","dispatch","useDispatch","useRef","useSelector","userReducer","users","meta","redirected","stateFilters","isUserDataLoading","username","useCallback","apiProps","updateStateFilters","orgAdministrator","transforms","email","firstName","lastName","sortByState","setSortByState","useState","setFilters","active","useEffect","newFilters","config","prototype","hasOwnProperty","call","payload","newSelection","user","inactive","searchFilter","AddGroupMembers","cancelRoute","groupId","useParams","onCancel","addNotification","addingGroupMembersTitle","addingGroupMemberTitle","dismissDelay","addingGroupMembersCancelled","addingGroupMemberCancelled","Modal","addMembers","ModalVariant","medium","isOpen","userList","addingGroupMembersDescription","addingGroupMemberDescription","addToGroup","cancel","onClose","Stack","hasGutter","StackItem","TextContent","toManageUsersText","link","createRows","is_active","first_name","last_name","is_org_admin","isOrgAdmin","yes","no","Label","color","find"],"sourceRoot":""}
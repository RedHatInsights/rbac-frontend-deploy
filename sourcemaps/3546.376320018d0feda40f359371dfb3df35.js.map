{"version":3,"file":"js/3546.6b45926eff4412c6cc72.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/TooltipContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/TooltipArrow.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/dropdownConstants.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Tooltip/tooltip.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/role/default-group-change-modal.js","webpack:///./src/smart-components/group/role/remove-role-modal.js","webpack:///./src/smart-components/group/role/group-roles.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nexport const TooltipContent = (_a) => {\n    var { className, children, isLeftAligned } = _a, props = __rest(_a, [\"className\", \"children\", \"isLeftAligned\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.tooltipContent, isLeftAligned && styles.modifiers.textAlignLeft, className) }, props), children));\n};\nTooltipContent.displayName = 'TooltipContent';\n//# sourceMappingURL=TooltipContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nexport const TooltipArrow = (_a) => {\n    var { className } = _a, props = __rest(_a, [\"className\"]);\n    return React.createElement(\"div\", Object.assign({ className: css(styles.tooltipArrow, className) }, props));\n};\nTooltipArrow.displayName = 'TooltipArrow';\n//# sourceMappingURL=TooltipArrow.js.map","export const c_tooltip_MaxWidth = {\n  \"name\": \"--pf-v5-c-tooltip--MaxWidth\",\n  \"value\": \"18.75rem\",\n  \"var\": \"var(--pf-v5-c-tooltip--MaxWidth)\"\n};\nexport default c_tooltip_MaxWidth;","import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipContent } from './TooltipContent';\nimport { TooltipArrow } from './TooltipArrow';\nimport { KeyTypes } from '../../helpers/constants';\nimport tooltipMaxWidth from '@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport var TooltipPosition;\n(function (TooltipPosition) {\n    TooltipPosition[\"auto\"] = \"auto\";\n    TooltipPosition[\"top\"] = \"top\";\n    TooltipPosition[\"bottom\"] = \"bottom\";\n    TooltipPosition[\"left\"] = \"left\";\n    TooltipPosition[\"right\"] = \"right\";\n    TooltipPosition[\"topStart\"] = \"top-start\";\n    TooltipPosition[\"topEnd\"] = \"top-end\";\n    TooltipPosition[\"bottomStart\"] = \"bottom-start\";\n    TooltipPosition[\"bottomEnd\"] = \"bottom-end\";\n    TooltipPosition[\"leftStart\"] = \"left-start\";\n    TooltipPosition[\"leftEnd\"] = \"left-end\";\n    TooltipPosition[\"rightStart\"] = \"right-start\";\n    TooltipPosition[\"rightEnd\"] = \"right-end\";\n})(TooltipPosition || (TooltipPosition = {}));\n// id for associating trigger with the content aria-describedby or aria-labelledby\nlet pfTooltipIdCounter = 1;\nexport const Tooltip = (_a) => {\n    var { content: bodyContent, position = 'top', trigger = 'mouseenter focus', isVisible = false, isContentLeftAligned = false, enableFlip = true, className = '', entryDelay = 300, exitDelay = 300, appendTo = () => document.body, zIndex = 9999, minWidth, maxWidth = tooltipMaxWidth.value, distance = 15, aria = 'describedby', \n    // For every initial starting position, there are 3 escape positions\n    flipBehavior = ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'], id = `pf-tooltip-${pfTooltipIdCounter++}`, children, animationDuration = 300, triggerRef, 'aria-live': ariaLive = triggerRef ? 'polite' : 'off', onTooltipHidden = () => { } } = _a, rest = __rest(_a, [\"content\", \"position\", \"trigger\", \"isVisible\", \"isContentLeftAligned\", \"enableFlip\", \"className\", \"entryDelay\", \"exitDelay\", \"appendTo\", \"zIndex\", \"minWidth\", \"maxWidth\", \"distance\", \"aria\", \"flipBehavior\", \"id\", \"children\", \"animationDuration\", \"triggerRef\", 'aria-live', \"onTooltipHidden\"]);\n    // could make this a prop in the future (true | false | 'toggle')\n    const hideOnClick = true;\n    const triggerOnMouseenter = trigger.includes('mouseenter');\n    const triggerOnFocus = trigger.includes('focus');\n    const triggerOnClick = trigger.includes('click');\n    const triggerManually = trigger === 'manual';\n    const [visible, setVisible] = React.useState(false);\n    const popperRef = React.createRef();\n    const onDocumentKeyDown = (event) => {\n        if (!triggerManually) {\n            if (event.key === KeyTypes.Escape && visible) {\n                hide();\n            }\n        }\n    };\n    const onTriggerEnter = (event) => {\n        if (event.key === KeyTypes.Enter) {\n            if (!visible) {\n                show();\n            }\n            else {\n                hide();\n            }\n        }\n    };\n    React.useEffect(() => {\n        if (isVisible) {\n            show();\n        }\n        else {\n            hide();\n        }\n    }, [isVisible]);\n    const show = () => {\n        setVisible(true);\n    };\n    const hide = () => {\n        setVisible(false);\n    };\n    const positionModifiers = {\n        top: styles.modifiers.top,\n        bottom: styles.modifiers.bottom,\n        left: styles.modifiers.left,\n        right: styles.modifiers.right,\n        'top-start': styles.modifiers.topLeft,\n        'top-end': styles.modifiers.topRight,\n        'bottom-start': styles.modifiers.bottomLeft,\n        'bottom-end': styles.modifiers.bottomRight,\n        'left-start': styles.modifiers.leftTop,\n        'left-end': styles.modifiers.leftBottom,\n        'right-start': styles.modifiers.rightTop,\n        'right-end': styles.modifiers.rightBottom\n    };\n    const hasCustomMaxWidth = maxWidth !== tooltipMaxWidth.value;\n    const content = (React.createElement(\"div\", Object.assign({ \"aria-live\": ariaLive, className: css(styles.tooltip, className), role: \"tooltip\", id: id, style: {\n            maxWidth: hasCustomMaxWidth ? maxWidth : null\n        }, ref: popperRef }, rest),\n        React.createElement(TooltipArrow, null),\n        React.createElement(TooltipContent, { isLeftAligned: isContentLeftAligned }, bodyContent)));\n    const onDocumentClick = (event, triggerElement) => {\n        // event.currentTarget = document\n        // event.target could be triggerElement or something else\n        if (hideOnClick === true) {\n            // hide on inside the toggle as well as on outside clicks\n            if (visible) {\n                hide();\n            }\n            else if (event.target === triggerElement) {\n                show();\n            }\n        }\n        else if (hideOnClick === 'toggle' && event.target === triggerElement) {\n            // prevent outside clicks from hiding but allow it to still be toggled on toggle click\n            if (visible) {\n                hide();\n            }\n            else {\n                show();\n            }\n        }\n        else if (hideOnClick === false && !visible && event.target === triggerElement) {\n            show();\n        }\n    };\n    const addAriaToTrigger = () => {\n        if (aria === 'describedby' && children && children.props && !children.props['aria-describedby']) {\n            return React.cloneElement(children, { 'aria-describedby': id });\n        }\n        else if (aria === 'labelledby' && children.props && !children.props['aria-labelledby']) {\n            return React.cloneElement(children, { 'aria-labelledby': id });\n        }\n        return children;\n    };\n    return (React.createElement(Popper, { trigger: aria !== 'none' && visible ? addAriaToTrigger() : children, triggerRef: triggerRef, popper: content, popperRef: popperRef, minWidth: minWidth !== undefined ? minWidth : 'revert', appendTo: appendTo, isVisible: visible, positionModifiers: positionModifiers, distance: distance, placement: position, onMouseEnter: triggerOnMouseenter && show, onMouseLeave: triggerOnMouseenter && hide, onPopperMouseEnter: triggerOnMouseenter && show, onPopperMouseLeave: triggerOnMouseenter && hide, onFocus: triggerOnFocus && show, onBlur: triggerOnFocus && hide, onDocumentClick: triggerOnClick && onDocumentClick, onDocumentKeyDown: triggerManually ? null : onDocumentKeyDown, onTriggerEnter: triggerManually ? null : onTriggerEnter, enableFlip: enableFlip, zIndex: zIndex, flipBehavior: flipBehavior, animationDuration: animationDuration, entryDelay: entryDelay, exitDelay: exitDelay, onHidden: onTooltipHidden }));\n};\nTooltip.displayName = 'Tooltip';\n//# sourceMappingURL=Tooltip.js.map","import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import './tooltip.css';\nexport default {\n  \"modifiers\": {\n    \"top\": \"pf-m-top\",\n    \"topLeft\": \"pf-m-top-left\",\n    \"topRight\": \"pf-m-top-right\",\n    \"bottom\": \"pf-m-bottom\",\n    \"bottomLeft\": \"pf-m-bottom-left\",\n    \"bottomRight\": \"pf-m-bottom-right\",\n    \"left\": \"pf-m-left\",\n    \"leftTop\": \"pf-m-left-top\",\n    \"leftBottom\": \"pf-m-left-bottom\",\n    \"right\": \"pf-m-right\",\n    \"rightTop\": \"pf-m-right-top\",\n    \"rightBottom\": \"pf-m-right-bottom\",\n    \"textAlignLeft\": \"pf-m-text-align-left\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\",\n  \"tooltip\": \"pf-v5-c-tooltip\",\n  \"tooltipArrow\": \"pf-v5-c-tooltip__arrow\",\n  \"tooltipContent\": \"pf-v5-c-tooltip__content\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../Section/section.css';\nvar Section = function (_a) {\n    var _b;\n    var type = _a.type, children = _a.children, className = _a.className, props = __rest(_a, [\"type\", \"children\", \"className\"]);\n    var sectionClasses = classNames(className, (_b = {}, _b[\"ins-l-\".concat(type)] = type !== undefined, _b));\n    return (_jsxs(\"section\", __assign({}, props, { className: sectionClasses, children: [' ', children, ' '] })));\n};\nexport default Section;\n//# sourceMappingURL=Section.js.map","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, ModalVariant, Split, SplitItem, Stack, TextContent } from '@patternfly/react-core';\nimport './RemoveModal.scss';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, withCheckbox }) => {\n  const intl = useIntl();\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <Modal\n      className=\"rbac\"\n      title={\n        <div>\n          <ExclamationTriangleIcon className=\"ins-m-alert rbac-c__delete-icon\" /> {title}\n        </div>\n      }\n      isOpen={isOpen}\n      variant={ModalVariant.small}\n      onClose={onClose}\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={withCheckbox && !checked} variant=\"danger\" onClick={onSubmit}>\n          {confirmButtonLabel}\n        </Button>,\n        <Button key=\"cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onClose}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <Stack hasGutter>\n            <TextContent>{text}</TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n      {withCheckbox ? (\n        <Checkbox\n          isChecked={checked}\n          onChange={() => setChecked(!checked)}\n          label={intl.formatMessage(messages.confirmCheckMessage)}\n          id=\"remove-modal-check\"\n          className=\"pf-v5-u-mt-lg\"\n        />\n      ) : null}\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.any,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  withCheckbox: PropTypes.bool,\n};\n\nRemoveModal.defaultProps = {\n  withCheckbox: false,\n};\n\nexport default RemoveModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  const intl = useIntl();\n  return (\n    <RemoveModal\n      text={\n        <TextContent>\n          <Text>\n            <FormattedMessage\n              {...messages.defaultAccessGroupEditWarning}\n              values={{\n                b: (text) => <b>{text}</b>,\n              }}\n            />\n          </Text>\n        </TextContent>\n      }\n      title={intl.formatMessage(messages.warning)}\n      withCheckbox\n      isOpen={isOpen}\n      confirmButtonLabel={intl.formatMessage(messages.continue)}\n      onClose={onClose}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DefaultGroupChange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange\n      isOpen={showConfirmModal && isOpen}\n      onClose={() => {\n        onClose();\n        setShowConfirmModal(false);\n      }}\n      onSubmit={() => {\n        onSubmit();\n      }}\n    />\n  ) : (\n    <RemoveModal\n      text={text}\n      title={title}\n      isOpen={isOpen}\n      confirmButtonLabel={confirmButtonLabel}\n      onClose={() => {\n        onClose();\n      }}\n      onSubmit={() => {\n        setShowConfirmModal(true);\n        (!isDefault || isChanged) && onSubmit();\n      }}\n    />\n  );\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.node,\n  title: PropTypes.node,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false,\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment, useContext, useRef, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport {\n  removeRolesFromGroup,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  fetchAddRolesForGroup,\n  fetchSystemGroup,\n  fetchGroup,\n  fetchGroups,\n} from '../../../redux/actions/group-actions';\nimport RemoveRole from './remove-role-modal';\nimport { getBackRoute, getDateFormat } from '../../../helpers/shared/helpers';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport { DEFAULT_ACCESS_GROUP_ID } from '../../../utilities/constants';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\nimport './group-roles.scss';\n\nconst createRows = (groupId, data, checkedRows = []) =>\n  data?.reduce(\n    (acc, { uuid, display_name, name, description, modified }) => [\n      ...acc,\n      {\n        uuid,\n        title: display_name || name,\n        cells: [\n          <Fragment key={`${uuid}-name`}>\n            <AppLink to={pathnames['group-detail-role-detail'].link.replace(':groupId', groupId).replace(':roleId', uuid)}>\n              {display_name || name}\n            </AppLink>\n          </Fragment>,\n          description,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type={getDateFormat(modified)} />\n          </Fragment>,\n        ],\n        selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  ) || [];\n\nconst generateOuiaID = (name) => {\n  // given a group name, generate an OUIA ID for the 'Add role' button\n  return name.toLowerCase().includes('default access') ? 'dag-add-role-button' : 'add-role-button';\n};\n\nconst addRoleButton = (isDisabled, ouiaId, customTooltipText) => {\n  const intl = useIntl();\n  const addRoleButtonContent = (\n    <Button ouiaId={ouiaId} variant=\"primary\" className=\"rbac-m-hide-on-sm\" aria-label=\"Add role\" isAriaDisabled={isDisabled}>\n      {intl.formatMessage(messages.addRole)}\n    </Button>\n  );\n\n  return isDisabled ? (\n    <Tooltip content={customTooltipText || intl.formatMessage(messages.allRolesAdded)}>{addRoleButtonContent}</Tooltip>\n  ) : (\n    addRoleButtonContent\n  );\n};\n\nconst reducer = ({ groupReducer: { selectedGroup, systemGroup, groups } }) => ({\n  roles: selectedGroup.roles,\n  pagination: selectedGroup.pagination || { ...defaultSettings, count: selectedGroup?.roles && selectedGroup.roles.length },\n  groupsPagination: groups.pagination || groups.meta,\n  groupsFilters: groups.filters,\n  isLoading: !selectedGroup.loaded,\n  isPlatformDefault: selectedGroup.platform_default,\n  isAdminDefault: selectedGroup.admin_default,\n  isChanged: !selectedGroup.system,\n  disableAddRoles:\n    /**\n     * First validate if the pagination object exists and is not empty.\n     * If empty or undefined, the disable condition will be always true\n     */\n    Object.keys(selectedGroup.addRoles.pagination || {}).length > 0\n      ? !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0) || !!selectedGroup.admin_default\n      : !!selectedGroup.admin_default,\n  systemGroupUuid: systemGroup?.uuid,\n  group: selectedGroup,\n});\n\nconst GroupRoles = ({ onDefaultGroupChanged }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const { groupId } = useParams();\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [selectedAddRoles, setSelectedAddRoles] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n  const {\n    roles,\n    pagination,\n    groupsPagination,\n    groupsFilters,\n    isLoading,\n    group,\n    isPlatformDefault,\n    isAdminDefault,\n    isChanged,\n    disableAddRoles,\n    systemGroupUuid,\n  } = useSelector(reducer);\n\n  const reloadWrapper = (event, callback) => {\n    event.payload.then(callback);\n    return event;\n  };\n\n  const fetchAddGroupRoles = (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {}));\n  const fetchGroupData = (customId) => dispatch(fetchGroup(customId ?? groupId));\n  const fetchSystGroup = () => dispatch(fetchSystemGroup({ chrome }));\n  const removeRoles = (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback));\n  const fetchGroupRoles = (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options));\n\n  const columns = [\n    { title: intl.formatMessage(messages.name), orderBy: 'name' },\n    { title: intl.formatMessage(messages.description) },\n    { title: intl.formatMessage(messages.lastModified) },\n  ];\n\n  useEffect(() => {\n    if (groupId !== DEFAULT_ACCESS_GROUP_ID) {\n      fetchGroupRoles(pagination)(groupId);\n    } else {\n      systemGroupUuid && fetchGroupRoles(pagination)(systemGroupUuid);\n    }\n  }, [systemGroupUuid]);\n\n  useEffect(() => {\n    if (roles?.length > 0) {\n      if (groupId !== DEFAULT_ACCESS_GROUP_ID) {\n        fetchAddGroupRoles(groupId);\n      } else {\n        systemGroupUuid && fetchAddGroupRoles(systemGroupUuid);\n      }\n    }\n  }, [roles]);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name })));\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      <FormattedMessage\n        {...(plural ? messages.removeRolesModalText : messages.removeRoleModalText)}\n        values={{\n          b: (text) => <b>{text}</b>,\n          name,\n          ...(plural ? { roles: role } : { role }),\n        }}\n      />\n    </p>\n  );\n\n  const fetchUuid = groupId !== DEFAULT_ACCESS_GROUP_ID ? groupId : systemGroupUuid;\n\n  const removeRolesCallback = () => {\n    if (isPlatformDefault) {\n      fetchSystGroup().then(({ value: { data } }) => {\n        fetchGroupRoles({ ...pagination, offset: 0 })(data[0].uuid);\n      });\n    } else {\n      fetchGroupRoles({ ...pagination, offset: 0 })(groupId);\n    }\n  };\n\n  const actionResolver = () => [\n    ...(hasPermissions.current && !isAdminDefault\n      ? [\n          {\n            title: intl.formatMessage(messages.remove),\n            onClick: (_event, _rowId, role) => {\n              setConfirmDelete(() => () => removeRoles(fetchUuid, [role.uuid], removeRolesCallback));\n              setDeleteInfo({\n                title: intl.formatMessage(messages.removeRoleQuestion),\n                confirmButtonLabel: intl.formatMessage(messages.removeRole),\n                text: removeModalText(name, role.title, false),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const toolbarButtons = () => [\n    ...(hasPermissions.current && !isAdminDefault\n      ? [\n          <AppLink\n            className={`rbac-m-hide-on-sm rbac-c-button__add-role${disableAddRoles && '-disabled'}`}\n            to={pathnames['group-add-roles'].link.replace(':groupId', groupId)}\n            key=\"add-to-group\"\n          >\n            {addRoleButton(disableAddRoles, generateOuiaID(name || ''), isAdminDefault && intl.formatMessage(messages.defaultGroupNotManually))}\n          </AppLink>,\n          {\n            label: intl.formatMessage(messages.addRole),\n            props: {\n              isDisabled: disableAddRoles,\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => navigate(pathnames['group-add-roles'].link.replace(':groupId', groupId)),\n          },\n          {\n            label: intl.formatMessage(messages.remove),\n            props: {\n              isDisabled: !selectedRoles || !selectedRoles.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleRolesSelected = selectedRoles.length > 1;\n              setConfirmDelete(\n                () => () =>\n                  removeRoles(\n                    fetchUuid,\n                    selectedRoles.map((role) => role.uuid),\n                    removeRolesCallback\n                  )\n              );\n              setDeleteInfo({\n                title: intl.formatMessage(multipleRolesSelected ? messages.removeRolesQuestion : messages.removeRoleQuestion),\n                confirmButtonLabel: intl.formatMessage(multipleRolesSelected ? messages.removeRoles : messages.removeRole),\n                text: removeModalText(\n                  name,\n                  multipleRolesSelected ? selectedRoles.length : roles.find((role) => role.uuid === selectedRoles[0].uuid).name,\n                  multipleRolesSelected\n                ),\n              });\n\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        isOpen={showRemoveModal}\n        isChanged={isChanged}\n        isDefault={isPlatformDefault || isAdminDefault}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isPlatformDefault && !isChanged);\n        }}\n      />\n\n      <Section type=\"content\" id=\"tab-roles\">\n        <TableToolbarView\n          columns={columns}\n          isSelectable={hasPermissions.current && !isAdminDefault}\n          rows={createRows(groupId, roles, selectedRoles)}\n          data={roles}\n          filterValue={filterValue}\n          fetchData={(config) => {\n            fetchGroupRoles(config)(fetchUuid);\n          }}\n          emptyFilters={{ name: '', description: '' }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedRoles}\n          setCheckedItems={setCheckedItems}\n          titlePlural={intl.formatMessage(messages.roles).toLowerCase()}\n          titleSingular={intl.formatMessage(messages.role)}\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          ouiaId=\"roles-table\"\n          emptyProps={{\n            title: intl.formatMessage(messages.noGroupRoles),\n            description: [intl.formatMessage(isAdminDefault ? messages.contactServiceTeamForRoles : messages.addRoleToConfigureAccess), ''],\n          }}\n          filters={[\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue },\n          ]}\n          tableId=\"group-roles\"\n        />\n      </Section>\n      <Suspense>\n        <Outlet\n          context={{\n            [pathnames['group-roles-edit-group'].path]: {\n              group,\n              cancelRoute: pathnames['group-detail-roles'].link.replace(':groupId', groupId),\n              postMethod: () => dispatch(fetchGroup(fetchUuid)),\n            },\n            [pathnames['group-roles-remove-group'].path]: {\n              postMethod: () => dispatch(fetchGroups({ ...groupsPagination, offset: 0, filters: groupsFilters, usesMetaInURL: true, chrome })),\n              cancelRoute: pathnames['group-detail-roles'].link.replace(':groupId', groupId),\n              submitRoute: getBackRoute(pathnames.groups.link, { ...groupsPagination, offset: 0 }, groupsFilters),\n              groupsUuid: [group],\n            },\n            [pathnames['group-add-roles'].path]: {\n              afterSubmit: () => {\n                if (isPlatformDefault || isAdminDefault) {\n                  fetchSystGroup().then(({ value: { data } }) => {\n                    fetchGroupRoles(pagination)(data[0].uuid);\n                    fetchGroupData(data[0].uuid);\n                  });\n                } else {\n                  fetchGroupRoles(pagination)(groupId);\n                  fetchGroupData();\n                }\n              },\n              fetchUuid: systemGroupUuid,\n              selectedRoles: selectedAddRoles,\n              setSelectedRoles: setSelectedAddRoles,\n              closeUrl: pathnames['group-detail'].link.replace(':groupId', isPlatformDefault ? DEFAULT_ACCESS_GROUP_ID : groupId),\n              addRolesToGroup: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n              groupName: group.name,\n              isDefault: isPlatformDefault || isAdminDefault,\n              isChanged,\n              onDefaultGroupChanged,\n            },\n          }}\n        />\n      </Suspense>\n    </React.Fragment>\n  );\n};\n\nGroupRoles.propTypes = {\n  searchFilter: PropTypes.string,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  onDefaultGroupChanged: PropTypes.func,\n};\n\nGroupRoles.defaultProps = {\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n};\n\nexport default GroupRoles;\n"],"names":["TooltipContent","_a","className","children","isLeftAligned","props","__rest","Object","assign","css","tooltipContent","modifiers","textAlignLeft","displayName","TooltipArrow","tooltipArrow","TooltipPosition","pfTooltipIdCounter","Tooltip","content","bodyContent","position","trigger","isVisible","isContentLeftAligned","enableFlip","entryDelay","exitDelay","appendTo","document","body","zIndex","minWidth","maxWidth","value","distance","aria","flipBehavior","id","animationDuration","triggerRef","ariaLive","onTooltipHidden","rest","triggerOnMouseenter","includes","triggerOnFocus","triggerOnClick","triggerManually","visible","setVisible","popperRef","show","hide","positionModifiers","top","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","leftTop","leftBottom","rightTop","rightBottom","hasCustomMaxWidth","tooltip","role","style","ref","Popper","popper","undefined","placement","onMouseEnter","onMouseLeave","onPopperMouseEnter","onPopperMouseLeave","onFocus","onBlur","onDocumentClick","event","triggerElement","target","onDocumentKeyDown","key","Escape","onTriggerEnter","Enter","onHidden","DropdownPosition","DropdownDirection","DropdownContext","onSelect","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","menuComponent","DropdownArrowContext","keyHandler","sendRef","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_b","type","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","sectionClasses","concat","linkBasename","navigate","useNavigate","to","options","RemoveModal","title","text","onClose","onSubmit","isOpen","confirmButtonLabel","withCheckbox","intl","checked","setChecked","useState","Modal","variant","ModalVariant","small","actions","Button","ouiaId","isDisabled","onClick","formatMessage","cancel","Split","hasGutter","SplitItem","isFilled","Stack","TextContent","Checkbox","isChecked","onChange","label","confirmCheckMessage","propTypes","defaultProps","DefaultGroupChange","Text","defaultAccessGroupEditWarning","values","b","warning","continue","RemoveRoles","isDefault","isChanged","showConfirmModal","setShowConfirmModal","createRows","groupId","data","checkedRows","reduce","acc","uuid","display_name","name","description","modified","cells","Fragment","AppLink","pathnames","link","replace","DateFormat","date","selected","Boolean","find","row","generateOuiaID","toLowerCase","addRoleButton","customTooltipText","addRoleButtonContent","isAriaDisabled","addRole","allRolesAdded","reducer","groupReducer","selectedGroup","systemGroup","groups","roles","pagination","count","groupsPagination","meta","groupsFilters","filters","isLoading","loaded","isPlatformDefault","platform_default","isAdminDefault","admin_default","system","disableAddRoles","keys","addRoles","systemGroupUuid","group","GroupRoles","onDefaultGroupChanged","chrome","useChrome","dispatch","useDispatch","useAppNavigate","useParams","descriptionValue","setDescriptionValue","filterValue","setFilterValue","selectedRoles","setSelectedRoles","selectedAddRoles","setSelectedAddRoles","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","userAccessAdministrator","orgAdmin","useContext","hasPermissions","useRef","useSelector","reloadWrapper","callback","payload","then","fetchAddGroupRoles","fetchGroupData","customId","fetchSystGroup","removeRoles","fetchGroupRoles","config","columns","orderBy","lastModified","useEffect","current","removeModalText","plural","removeRolesModalText","removeRoleModalText","fetchUuid","removeRolesCallback","offset","Section","isSelectable","rows","fetchData","emptyFilters","setCheckedItems","newSelection","map","titlePlural","titleSingular","toolbarButtons","defaultGroupNotManually","remove","multipleRolesSelected","removeRolesQuestion","removeRoleQuestion","removeRole","actionResolver","_event","_rowId","emptyProps","noGroupRoles","contactServiceTeamForRoles","addRoleToConfigureAccess","tableId","Suspense","Outlet","context","path","cancelRoute","postMethod","usesMetaInURL","submitRoute","groupsUuid","afterSubmit","closeUrl","addRolesToGroup","groupName","searchFilter","limit","isRequired"],"sourceRoot":""}
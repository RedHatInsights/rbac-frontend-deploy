{"version":3,"file":"js/7349.3a9490b203374698c624.js","mappings":"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","sources":["webpack:///./src/helpers/shared/filters.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/presentational-components/shared/breadcrumbs.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/smart-components/common/ModalFormTemplate.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/FormButtons.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/common/page-action-route.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/role/add-role/add-permissions-template.js","webpack:///./src/helpers/permission/permission-helper.js","webpack:///./src/redux/actions/permission-action.js","webpack:///./src/smart-components/role/add-role/DisabledRowWrapper.js","webpack:///./src/smart-components/role/add-role/add-permissions.js","webpack:///./src/smart-components/role/add-role/cost-resources.js","webpack:///./src/smart-components/role/edit-role-modal.js","webpack:///./src/hooks/useIsMounted.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/role-selectors.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-success.js","webpack:///./src/smart-components/role/add-role-permissions/review-template.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-wizard.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permissions-summary-content.js","webpack:///./src/smart-components/role/add-role-permissions/schema.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/utilities/async-debounce.ts"],"sourcesContent":["export const syncDefaultFiltersWithUrl = (history, keys, defaults = {}) => {\n  const searchParams = new URLSearchParams(history.location.search);\n\n  let filters = keys.reduce((acc, key) => {\n    const values = searchParams.getAll(key);\n    return {\n      ...acc,\n      [key]: values.length > 1 ? values : values[0],\n    };\n  }, {});\n\n  Object.keys(defaults).forEach((key) => {\n    const value = defaults[key];\n    filters = {\n      ...filters,\n      [key]: Array.isArray(filters[key])\n        ? [...new Set([...filters[key], ...(Array.isArray(value) ? value : [value])])]\n        : (value?.length > 0 && value) || filters[key],\n    };\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => searchParams.getAll(key).includes(item) || searchParams.append(key, item));\n    } else {\n      searchParams.get(key) || (value && searchParams.set(key, value));\n    }\n  });\n\n  history.replace({\n    pathname: history.location.pathname,\n    search: searchParams.toString(),\n  });\n  return filters;\n};\n\nexport const areFiltersPresentInUrl = (history, keys) => {\n  const searchParams = new URLSearchParams(history.location.search);\n  return keys.some((key) => searchParams.get(key));\n};\n\nexport const applyFiltersToUrl = (history, newValues) => {\n  const searchParams = new URLSearchParams(history.location.search);\n  Object.keys(newValues).forEach((key) => searchParams.delete(key));\n\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => item && searchParams.append(key, item));\n    } else {\n      value && searchParams.set(key, value);\n    }\n  });\n\n  history.replace({\n    pathname: history.location.pathname,\n    search: searchParams.toString(),\n  });\n};\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, ModalVariant, Split, SplitItem, Stack, TextContent } from '@patternfly/react-core';\nimport './RemoveModal.scss';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, withCheckbox }) => {\n  const intl = useIntl();\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <Modal\n      className=\"rbac\"\n      title={\n        <div>\n          <ExclamationTriangleIcon className=\"ins-m-alert rbac-c__delete-icon\" /> {title}\n        </div>\n      }\n      isOpen={isOpen}\n      variant={ModalVariant.small}\n      onClose={onClose}\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={withCheckbox && !checked} variant=\"danger\" onClick={onSubmit}>\n          {confirmButtonLabel}\n        </Button>,\n        <Button key=\"cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onClose}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <Stack hasGutter>\n            <TextContent>{text}</TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n      {withCheckbox ? (\n        <Checkbox\n          isChecked={checked}\n          onChange={() => setChecked(!checked)}\n          label={intl.formatMessage(messages.confirmCheckMessage)}\n          id=\"remove-modal-check\"\n          className=\"pf-u-mt-lg\"\n        />\n      ) : null}\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.any,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  withCheckbox: PropTypes.bool,\n};\n\nRemoveModal.defaultProps = {\n  withCheckbox: false,\n};\n\nexport default RemoveModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return breadcrumbs ? (\n    <Breadcrumb>\n      {Object.values(breadcrumbs).map((item, index) =>\n        item.title ? (\n          <BreadcrumbItem key={item.title} isActive={item.isActive}>\n            {(item.to && (\n              <NavLink exact to={item.to}>\n                {item.title}\n              </NavLink>\n            )) ||\n              item.title}\n          </BreadcrumbItem>\n        ) : (\n          <BreadcrumbPlaceholder key={index} />\n        )\n      )}\n    </Breadcrumb>\n  ) : null;\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object,\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrumbs';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children, breadcrumbs }) => (\n  <Fragment>\n    {breadcrumbs && (\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs {...breadcrumbs} />\n      </section>\n    )}\n    <PageHeader className=\"rbac-page-header\">{children}</PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool,\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false,\n};\n\nexport const TopToolbarTitle = ({ title, renderTitleTag, description, children }) => (\n  <Fragment>\n    <Flex>\n      <FlexItem className=\"pf-u-mb-sm\">\n        <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n      </FlexItem>\n      <FlexItem alignSelf={{ modifier: 'alignSelfCenter' }}>{renderTitleTag && renderTitleTag()}</FlexItem>\n    </Flex>\n    {description && (\n      <TextContent className=\"rbac-page-header__description\">\n        {typeof description === 'string' ? <Text component={TextVariants.p}>{description}</Text> : description}\n      </TextContent>\n    )}\n    {children}\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  renderTitleTag: PropTypes.func,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n};\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const getResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const getResource = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\n/**\n * This id is requried to submit form by a button outside of the form element\n */\nconst MODAL_FORM_IDENTIFIER = 'modal-form';\nconst CustomFormWrapper = (props) => <Form {...props} id={MODAL_FORM_IDENTIFIER} />;\n\nconst CustomButtons = ({ saveLabel, cancelLabel }) => {\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy>\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-c-form\">\n          <ActionGroup className=\"pf-u-mt-0\">\n            <Button\n              ouiaId=\"primary-save-button\"\n              variant=\"primary\"\n              form={MODAL_FORM_IDENTIFIER}\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {saveLabel}\n            </Button>\n            <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {cancelLabel}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  saveLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n};\n\nCustomButtons.defaultProps = {\n  saveLabel: 'Save',\n  cancelLabel: 'Cancel',\n};\n\nconst ModalFormTemplate = ({ ModalProps, saveLabel, cancelLabel, alert, ...props }) => (\n  <Modal {...ModalProps} footer={<CustomButtons saveLabel={saveLabel} cancelLabel={cancelLabel} />}>\n    {alert?.()}\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n  ...CustomButtons.propTypes,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  const intl = useIntl();\n\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [...selectOptions]\n    : [{ label: intl.formatMessage(messages[isRequired ? 'pleaseChoose' : 'none']) }, ...selectOptions];\n};\n\nconst Select = ({ input, options, isReadOnly, isDisabled, isRequired, ...rest }) => (\n  <FormSelect {...input} {...rest} isDisabled={isDisabled || isReadOnly}>\n    {createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={props.value || props.label} {...props} label={props.label.toString()} /> // eslint-disable-line react/prop-types\n    ))}\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.any,\n      label: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any,\n};\n\nconst Pf4SelectWrapper = ({ label, isRequired, helperText, meta, description, hideLabel, ...rest }) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={rest.id}\n      isValid={!showError}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select label={label} isValid={!showError} isRequired={isRequired} {...rest} />\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool,\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst FormButtons = ({ dirtyFieldsSinceLastSubmit, submitSucceeded, pristine }) => {\n  const { onCancel } = useFormApi();\n  const noChanges = isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  const intl = useIntl();\n  return (\n    <ActionGroup className=\"pf-u-mt-0\">\n      <Button ouiaId=\"primary-submit-button\" type=\"submit\" isDisabled={noChanges} variant=\"primary\">\n        {intl.formatMessage(messages.save)}\n      </Button>\n      <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={() => onCancel()}>\n        {intl.formatMessage(messages.cancel)}\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport FormButtons from './FormButtons';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nconst FormRenderer = ({ formTemplateProps, ...props }) => (\n  <ReactFormRender\n    componentMapper={{\n      [componentTypes.TEXT_FIELD]: TextField,\n      [componentTypes.TEXTAREA]: Textarea,\n      [componentTypes.SELECT]: Pf4SelectWrapper,\n    }}\n    FormTemplate={(props) => <FormTemplate {...formTemplateProps} {...props} FormButtons={FormButtons} />}\n    {...props}\n  />\n);\n\nFormRenderer.propTypes = {\n  formTemplateProps: PropTypes.object,\n};\n\nexport default FormRenderer;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nconst PageActionRoute = ({ pageAction, ...props }) => {\n  useEffect(() => {\n    insights.chrome.appAction(pageAction);\n    return () => insights.chrome.appAction(undefined);\n  }, [pageAction]);\n  return <Route {...props} />;\n};\n\nPageActionRoute.propTypes = {\n  pageAction: PropTypes.string.isRequired,\n};\n\nexport default PageActionRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './warningModal.scss';\n\nexport const WarningModal = ({\n  type,\n  isOpen,\n  onModalCancel,\n  onConfirmCancel,\n  customTitle,\n  customDescription,\n  customPrimaryButtonTitle,\n  customSecondaryButtonTitle,\n}) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      title={\n        <span className=\"rbac-c-wizard__cancel-warning-header\">\n          <ExclamationTriangleIcon size=\"md\" className=\"rbac-c-wizard__cancel-warning-header--icon\" />\n          {customTitle || intl.formatMessage(messages.exitItemCreation, { item: type })}\n        </span>\n      }\n      variant={ModalVariant.small}\n      className=\"rbac rbac-c-wizard__cancel-warning\"\n      isOpen={isOpen}\n      onClose={onModalCancel}\n      actions={[\n        <Button ouiaId=\"primary-exit-button\" key=\"confirm\" variant=\"primary\" onClick={onConfirmCancel}>\n          {customPrimaryButtonTitle ?? intl.formatMessage(messages.exit)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onModalCancel}>\n          {customSecondaryButtonTitle ?? intl.formatMessage(messages.stay)}\n        </Button>,\n      ]}\n    >\n      <span>{customDescription || intl.formatMessage(messages.discardedInputsWarning)} </span>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  customTitle: PropTypes.node,\n  customDescription: PropTypes.node,\n  customPrimaryButtonTitle: PropTypes.string,\n  customSecondaryButtonTitle: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onConfirmCancel: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Text, TextContent, Title, Button, Popover, Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './add-role-wizard.scss';\n\nconst AddPermissionTemplate = ({ formFields }) => {\n  const formOptions = useFormApi();\n  const [selectedPermissions, setSelectedPermissions] = useState(formOptions.getState().values['add-permissions-table'] || []);\n  const [alertClosed, setAlertClosed] = useState(false);\n  const notAllowedBasePermissions = formOptions.getState().values['not-allowed-permissions'];\n  const intl = useIntl();\n\n  const unresolvedSplats =\n    formOptions.getState().values?.['copy-base-role']?.applications?.filter((app) => !selectedPermissions?.find(({ uuid }) => uuid.includes(app))) ||\n    [];\n  const addPermissions = formFields[0][0];\n  return (\n    <div className=\"rbac\">\n      {selectedPermissions.length > 0 ? (\n        <div className=\"rbac-c-selected-chips\">\n          <ChipGroup categoryName={intl.formatMessage(messages.selectedPermissions)}>\n            {/* immutable reverse */}\n            {selectedPermissions\n              .reduce((acc, i) => [i, ...acc], [])\n              .map(({ uuid }) => (\n                <Chip key={uuid} color=\"blue\" isTruncated onClick={() => setSelectedPermissions(selectedPermissions.filter((p) => p.uuid !== uuid))}>\n                  {uuid}\n                </Chip>\n              ))}\n          </ChipGroup>\n        </div>\n      ) : null}\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"rbac-c-add-permission-title\">\n        {intl.formatMessage(messages.addPermissions)}\n      </Title>\n      <TextContent>\n        <Text>\n          {intl.formatMessage(messages.selectPermissionsForRole)}\n          {unresolvedSplats.length !== 0 && (\n            <Popover\n              headerContent={intl.formatMessage(messages.onlyGranularPermissions)}\n              bodyContent={intl.formatMessage(messages.noWildcardPermissions)}\n            >\n              <Button variant=\"link\">\n                {intl.formatMessage(messages.whyNotSeeingAllPermissions)} <QuestionCircleIcon />\n              </Button>\n            </Popover>\n          )}\n        </Text>\n      </TextContent>\n      {notAllowedBasePermissions?.length > 0 && !alertClosed ? (\n        <Alert\n          variant=\"default\"\n          isInline\n          title={`${intl.formatMessage(messages.followingPermissionsCannotBeAdded)} ${notAllowedBasePermissions.join(', ')}`}\n          actionClose={<AlertActionCloseButton onClose={() => setAlertClosed(true)} />}\n        />\n      ) : null}\n      {[\n        [\n          {\n            ...addPermissions,\n            props: {\n              ...addPermissions.props,\n              selectedPermissions,\n              setSelectedPermissions,\n            },\n          },\n        ],\n      ]}\n    </div>\n  );\n};\n\nAddPermissionTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default AddPermissionTemplate;\n","import { getPermissionApi } from '../shared/user-login';\n\nconst accessApi = getPermissionApi();\n\nexport async function listPermissions(\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  excludeGlobals,\n  excludeRoles,\n  allowedOnly,\n  options\n) {\n  return await accessApi.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    excludeGlobals,\n    excludeRoles,\n    allowedOnly,\n    options\n  );\n}\n\nexport async function listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options) {\n  return await accessApi.listPermissionOptions(field, limit, offset, application, resourceType, verb, undefined, allowedOnly, options);\n}\n","import * as ActionTypes from '../action-types';\nimport * as PermissionsHelper from '../../helpers/permission/permission-helper';\n\nexport const listPermissions = ({\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  exclude_roles,\n  allowed_only,\n  options,\n}) => ({\n  type: ActionTypes.LIST_PERMISSIONS,\n  payload: PermissionsHelper.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    exclude_globals,\n    exclude_roles,\n    allowed_only,\n    options\n  ),\n});\n\nconst fieldToAction = {\n  application: ActionTypes.LIST_APPLICATION_OPTIONS,\n  resource_type: ActionTypes.LIST_RESOURCE_OPTIONS,\n  verb: ActionTypes.LIST_OPERATION_OPTIONS,\n};\n\nexport const listPermissionOptions = ({ field, limit, offset, application, resourceType, verb, allowedOnly, options }) => ({\n  type: fieldToAction[field],\n  payload: PermissionsHelper.listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options),\n});\n\nexport const expandSplats = ({\n  limit = 1000,\n  offset = 0,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  options,\n}) => ({\n  type: ActionTypes.EXPAND_SPLATS,\n  payload: PermissionsHelper.listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, exclude_globals, options),\n});\n\nexport const resetExpandSplats = () => ({\n  type: ActionTypes.RESET_EXPAND_SPLATS,\n  payload: {\n    data: [],\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '@patternfly/react-core';\nimport { RowWrapper } from '@patternfly/react-table';\n\nexport const DisabledRowWrapper = ({ row, ...props }) =>\n  row.disableSelection ? (\n    <Tooltip content={row.disabledContent} exitDelay={1500} entryDelay={1500}>\n      <RowWrapper className=\"rbac-c-disabled-row\" row={row} {...props} />\n    </Tooltip>\n  ) : (\n    <RowWrapper row={row} {...props} />\n  );\n\nDisabledRowWrapper.propTypes = {\n  props: PropTypes.object,\n  row: PropTypes.object,\n};\n","import React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport debouncePromise from '@redhat-cloud-services/frontend-components-utilities/debounce';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { listPermissions, listPermissionOptions, expandSplats, resetExpandSplats } from '../../../redux/actions/permission-action';\nimport { getResourceDefinitions } from '../../../redux/actions/cost-management-actions';\nimport { fetchRole } from '../../../redux/actions/role-actions';\nimport { DisabledRowWrapper } from './DisabledRowWrapper';\nimport { isEqual } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport usePermissions from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst selector = ({\n  permissionReducer: {\n    permission,\n    isLoading,\n    options: { application, operation, resource },\n    expandSplats,\n    isLoadingExpandSplats,\n  },\n  roleReducer: { isRecordLoading, selectedRole },\n  costReducer: { resourceTypes },\n}) => ({\n  permissions: permission.data.map(({ application, resource_type: resource, verb, permission, requires } = {}) => ({\n    application,\n    resource,\n    operation: verb,\n    uuid: permission,\n    requires,\n  })),\n  pagination: permission.meta,\n  isLoading: isLoading || isRecordLoading,\n  baseRole: selectedRole,\n  applicationOptions: application.data.filter((app) => app !== '*'),\n  resourceOptions: resource.data.filter((app) => app !== '*'),\n  operationOptions: operation.data.filter((app) => app !== '*'),\n  expandedPermissions: expandSplats.data.map(({ permission }) => permission),\n  isLoadingExpandSplats,\n  resourceTypes: resourceTypes.data,\n});\n\nconst AddPermissionsTable = ({ selectedPermissions, setSelectedPermissions, ...props }) => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { hasAccess } = usePermissions('cost-management', ['cost-management:*:*']);\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n\n  const fetchData = (apiProps) =>\n    dispatch(\n      listPermissions({\n        ...apiProps,\n        ...(existingRoleId ? { exclude_roles: existingRoleId } : {}),\n        allowed_only: true,\n      })\n    );\n  const fetchOptions = (apiProps) => dispatch(listPermissionOptions({ ...apiProps, allowedOnly: true }));\n  const {\n    permissions,\n    isLoading,\n    pagination,\n    baseRole,\n    applicationOptions,\n    resourceOptions,\n    operationOptions,\n    expandedPermissions,\n    isLoadingExpandSplats,\n    resourceTypes,\n  } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  // TODO: use reducer when cleaning this code\n  const [filters, setFilters] = useState({ applications: [], resources: [], operations: [] });\n  const roleType = formOptions.getState().values['role-type']; // create/copy\n  const existingRoleId = formOptions.getState().values['role-uuid'];\n  const [isToggled, setIsToggled] = useState(false);\n  const [filterBy, setFilterBy] = useState('');\n  const [value, setValue] = useState();\n  const maxFilterItems = 10;\n\n  const getResourceType = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1]);\n  const createRows = (permissions) =>\n    permissions.map(({ application, resource, operation, uuid, requires }) => ({\n      uuid: `${application}:${resource}:${operation}`,\n      requires,\n      cells: [\n        {\n          title: application,\n        },\n        resource,\n        operation,\n      ],\n      selected: Boolean(selectedPermissions && selectedPermissions.find((row) => row.uuid === uuid)),\n      disableSelection: application === 'cost-management' && ((getResourceType(uuid) || { count: 0 }).count === 0 || !hasAccess),\n      disabledContent: (\n        <div>\n          {intl.formatMessage(hasAccess ? messages.configureResourcesForPermission : messages.noCostManagementPermissions)}{' '}\n          {hasAccess ? <a href=\"./settings/sources\">{intl.formatMessage(messages.configureCostSources)}</a> : null}\n        </div>\n      ),\n    }));\n\n  const debouncedGetApplicationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'application',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetResourceOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'resource_type',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetOperationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({ field: 'verb', limit: 50, application: applications.join(), resourceType: resources.join(), verb: operations.join() }),\n      2000\n    ),\n    []\n  );\n\n  useEffect(() => {\n    const baseRoleUuid = formOptions.getState().values['copy-base-role']?.uuid;\n    if (roleType === 'copy' && baseRoleUuid) {\n      dispatch(fetchRole(baseRoleUuid));\n    }\n\n    formOptions.change('has-cost-resources', false);\n    fetchData(pagination);\n    fetchOptions({ field: 'application', limit: 50 });\n    fetchOptions({ field: 'resource_type', limit: 50 });\n    fetchOptions({ field: 'verb', limit: 50 });\n\n    return () => dispatch(resetExpandSplats());\n  }, []);\n\n  useEffect(() => {\n    hasAccess && dispatch(getResourceDefinitions());\n  }, [hasAccess]);\n\n  useEffect(() => {\n    debouncedGetResourceOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.applications]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.resources]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetResourceOptions(filters);\n  }, [filters.operations]);\n\n  useEffect(() => {\n    input.onChange(selectedPermissions);\n  }, [selectedPermissions]);\n\n  useEffect(() => {\n    if (\n      !baseRole ||\n      roleType !== 'copy' ||\n      formOptions.getState().values['base-permissions-loaded'] ||\n      selectedPermissions.length > 0 ||\n      formOptions.getState().values['copy-base-role']?.uuid !== baseRole?.uuid ||\n      isLoadingExpandSplats ||\n      isLoading\n    ) {\n      return;\n    }\n\n    let notAllowed = [];\n\n    const basePermissions =\n      baseRole?.access.filter((item) => {\n        if (applicationOptions.includes(item?.permission?.split(':')[0])) {\n          return true;\n        }\n        notAllowed.push(item);\n\n        return false;\n      }) || [];\n    formOptions.change(\n      'not-allowed-permissions',\n      notAllowed.map(({ permission }) => permission)\n    );\n    if (expandedPermissions.length === 0 && typeof isLoadingExpandSplats === 'undefined') {\n      const applications = [...new Set(basePermissions.map(({ permission }) => permission.split(':')[0]))];\n      dispatch(expandSplats({ application: applications.join() }));\n    } else {\n      const patterns = basePermissions.map(({ permission }) => permission.replace('*', '.*'));\n      setSelectedPermissions(() =>\n        expandedPermissions\n          .filter((p) => p.split(':')[0] !== 'cost-management' || (getResourceType(p) || { count: 0 }).count !== 0) // filter disabled rows\n          .filter((p) => patterns.some((f) => p.match(f))) // filter permissions with unresolved splats\n          .map((permission) => ({ uuid: permission }))\n      );\n      formOptions.change('base-permissions-loaded', true);\n    }\n  }, [permissions, baseRole]);\n\n  const setCheckedItems = (newSelection) => {\n    const newSelected = newSelection(selectedPermissions)\n      .filter(({ uuid, application }) => application !== 'cost-management' || getResourceType(uuid)?.count > 0)\n      .map(({ uuid, requires }) => ({ uuid, requires }));\n\n    setSelectedPermissions(isEqual(newSelected, selectedPermissions) ? [] : newSelected);\n  };\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const preparedFilterItems = {\n    applications: [...applicationOptions].filter((item) => item.includes(filterBy)).map((app) => ({ label: app, value: app })),\n    resources: [...resourceOptions].filter((item) => item.includes(filterBy)).map((res) => ({ label: res, value: res })),\n    operations: [...operationOptions].filter((item) => item.includes(filterBy)).map((op) => ({ label: op, value: op })),\n  };\n\n  const emptyItem = {\n    label: <div>{intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const filterItemOverflow = preparedFilterItems[Object.keys(preparedFilterItems)[value ? value : 0]].length > maxFilterItems;\n  return (\n    <div className=\"rbac-c-permissions-table\">\n      <TableToolbarView\n        columns={columns}\n        isSelectable={true}\n        isCompact={true}\n        borders={false}\n        rows={createRows(permissions)}\n        data={permissions}\n        filterValue={''}\n        noData={permissions?.length === 0}\n        noDataDescription={[intl.formatMessage(messages.permissionNotDisplayedDescription)]}\n        fetchData={({ limit, offset, applications, resources, operations }) => {\n          fetchData({\n            limit,\n            offset,\n            application: (applications || filters.applications).join(),\n            resourceType: (resources || filters.resources).join(),\n            verb: (operations || filters.operations).join(),\n          });\n        }}\n        setFilterValue={({ applications, resources, operations }) => {\n          setFilters({\n            ...filters,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        isLoading={isLoading || isLoadingExpandSplats}\n        pagination={{ ...pagination, count: pagination.count }}\n        checkedRows={selectedPermissions}\n        setCheckedItems={setCheckedItems}\n        titlePlural={intl.formatMessage(messages.permissions).toLowerCase()}\n        titleSingular={intl.formatMessage(messages.permission).toLowerCase()}\n        showMoreTitle={intl.formatMessage(isToggled ? messages.seeLess : messages.seeMore)}\n        onFilter={(filterBy) => setFilterBy(filterBy)}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                setIsToggled(() => !isToggled);\n              }\n            : undefined\n        }\n        onChange={(e, value) => {\n          setFilterBy('');\n          setValue(value);\n        }}\n        value={value}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: preparedFilterItems.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.applications.length > 0\n                    ? [...preparedFilterItems.applications].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: preparedFilterItems.resources.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.resources.length > 0\n                    ? [...preparedFilterItems.resources].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: preparedFilterItems.operations.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.operations.length > 0\n                    ? [...preparedFilterItems.operations].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        isFilterable={true}\n        rowWrapper={DisabledRowWrapper}\n        tableId=\"add-role-permissions\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nAddPermissionsTable.propTypes = {\n  selectedPermissions: PropTypes.array,\n  setSelectedPermissions: PropTypes.func,\n};\n\nexport default AddPermissionsTable;\n","import React, { useEffect, useReducer } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Select, SelectOption, SelectVariant, Grid, GridItem, Text, TextVariants, FormGroup, Tooltip } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { getResourceDefinitions, getResource } from '../../../redux/actions/cost-management-actions';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }) => ({\n  resourceTypes: resourceTypes.data,\n  resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: !prevState.isOpen,\n        },\n      };\n    case 'select':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.selected.includes(action.selection)\n            ? prevState.selected.filter((item) => item !== action.selection)\n            : [...prevState.selected, action.selection],\n        },\n      };\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.options.map((option) => option.value),\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    case 'setOptions':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          options: action.options,\n          filteredOptions: action.options,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filteredOptions: prevState.options.filter(({ value }) => value.includes(action.filtervalue)),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst CostResources = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (apiProps) => dispatch(getResourceDefinitions(apiProps));\n  const fetchResource = (apiProps) => dispatch(getResource(apiProps));\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const permissions = formOptions.getState().values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('cost-management'));\n  const [state, dispatchLocaly] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission.uuid]: {\n          selected: [],\n          options: [],\n          filteredOptions: [],\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n  const onToggle = (key, isOpen) => dispatchLocaly({ type: 'toggle', key, isOpen });\n  const clearSelection = (key) => dispatchLocaly({ type: 'clear', key });\n  const onSelect = (event, selection, selectAll, key) =>\n    selectAll ? dispatchLocaly({ type: 'selectAll', selection, key }) : dispatchLocaly({ type: 'select', selection, key });\n\n  const permissionToResource = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1])?.path.split('/')?.[5];\n\n  useEffect(() => {\n    (formOptions.getState().values['resource-definitions'] || []).map(({ permission, resources }) =>\n      resources.map(\n        (resource) =>\n          permissions.find((item) => item?.uuid === permission) && dispatchLocaly({ type: 'select', selection: resource, key: permission })\n      )\n    );\n    fetchData();\n    formOptions.change('has-cost-resources', true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      const resourcePaths = [\n        ...new Set(permissions.map((permission) => resourceTypes.find((r) => r.value === permission.uuid.split(':')?.[1])?.path)),\n      ].filter((path) => path); // remove undefined\n      resourcePaths.map((path) => fetchResource(path));\n    }\n  }, [resourceTypes]);\n\n  useEffect(() => {\n    if (!isLoadingResources) {\n      permissions.map((p) => dispatchLocaly({ type: 'setOptions', key: p.uuid, options: resources[permissionToResource(p.uuid)] || [] }));\n    }\n  }, [isLoadingResources]);\n\n  useEffect(() => {\n    const resourceDefinitions = Object.entries(state).map(([permission, resources]) => ({ permission, resources: resources.selected }));\n    input.onChange(resourceDefinitions);\n    formOptions.change('resource-definitions', resourceDefinitions);\n  }, [state]);\n\n  // eslint-disable-next-line react/prop-types\n  const makeRow = ({ uuid: permission }) => {\n    const options = state[permission].filteredOptions;\n    return (\n      <React.Fragment>\n        <GridItem md={4} sm={12}>\n          <Tooltip content={<div>{permission}</div>}>\n            <FormGroup label={permission.replace(/^cost-management:/, '')} isRequired></FormGroup>\n          </Tooltip>\n        </GridItem>\n        <GridItem md={8} sm={12}>\n          <Select\n            className=\"rbac-m-cost-resource-select\"\n            variant={SelectVariant.checkbox}\n            typeAheadAriaLabel={intl.formatMessage(messages.selectState)}\n            onToggle={(isOpen) => {\n              dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: '' });\n              onToggle(permission, isOpen);\n            }}\n            onSelect={(event, selection) => {\n              onSelect(event, selection, selection === intl.formatMessage(messages.selectAll, { length: options.length }), permission);\n            }}\n            onClear={() => clearSelection(permission)}\n            selections={state[permission].selected}\n            isOpen={state[permission].isOpen}\n            onFilter={(e) => e && dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: e.target.value })}\n            aria-labelledby={permission}\n            placeholderText={intl.formatMessage(messages.selectResources)}\n            hasInlineFilter\n          >\n            {[\n              <SelectOption key={0} value={intl.formatMessage(messages.selectAll, { length: options.length })} />,\n              ...options.map((option, index) => <SelectOption key={index + 1} value={option.value} />),\n            ]}\n          </Select>\n        </GridItem>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={4} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem md={8} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.resourceDefinitions)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default CostResources;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport FormRenderer from '../common/form-renderer';\nimport useIsMounted from '../../hooks/useIsMounted';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { roleSelector } from './role-selectors';\nimport { fetchRole, fetchRoles } from '../../helpers/role/role-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { patchRole } from '../../redux/actions/role-actions';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst EditRoleModal = ({ routeMatch, cancelRoute, submitRoute = cancelRoute, afterSubmit }) => {\n  const intl = useIntl();\n  const isMounted = useIsMounted();\n  const { replace, push } = useHistory();\n  const dispatch = useDispatch();\n\n  const {\n    params: { id },\n  } = useRouteMatch(routeMatch);\n  const role = useSelector((state) => roleSelector(state, id));\n  const [initialValues, setInitialValues] = useState(role);\n\n  useEffect(() => {\n    !initialValues &&\n      fetchRole(id).then((role) => {\n        if (isMounted.current) {\n          setInitialValues(role);\n        }\n      });\n  }, [id]);\n\n  const validationPromise = (name, idKey, id) => {\n    return name.length < 150\n      ? fetchRoles({ name }).then(({ data }) => {\n          if (data.length === 0) {\n            return undefined;\n          }\n\n          const taken = data.some((item) => item[idKey] !== id && item.display_name === name);\n          if (taken) {\n            throw intl.formatMessage(messages.roleWithNameExists);\n          }\n        })\n      : Promise.reject(intl.formatMessage(messages.maxCharactersWarning, { number: 150 }));\n  };\n\n  const createEditRoleSchema = (id) => {\n    return {\n      fields: [\n        {\n          name: 'name',\n          component: componentTypes.TEXT_FIELD,\n          label: intl.formatMessage(messages.name),\n          isRequired: true,\n          validate: [{ type: 'validate-role-name', id, idKey: 'uuid', validationPromise }],\n        },\n        {\n          name: 'description',\n          component: componentTypes.TEXTAREA,\n          label: intl.formatMessage(messages.description),\n          validate: [\n            {\n              type: validatorTypes.MAX_LENGTH,\n              threshold: 150,\n            },\n          ],\n        },\n      ],\n    };\n  };\n\n  const uniqueNameValidator = asyncDebounce((value, idKey, id, validationPromise) =>\n    !value || value.length === 0 ? Promise.reject(intl.formatMessage(messages.required)) : validationPromise(value, idKey, id)\n  );\n\n  const validatorMapper = {\n    'validate-role-name':\n      ({ idKey, id, validationPromise }) =>\n      (value) =>\n        uniqueNameValidator(value, idKey, id, validationPromise),\n  };\n\n  const onCancel = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        dismissDelay: 8000,\n        title: intl.formatMessage(messages.editingRoleTitle),\n        description: intl.formatMessage(messages.editingRoleCanceledDescription),\n      })\n    );\n    replace(cancelRoute);\n  };\n\n  const handleSubmit = (data) =>\n    dispatch(patchRole(id, { name: data.name, display_name: data.name, description: data.description })).then(() => {\n      afterSubmit();\n      push(submitRoute);\n    });\n\n  return initialValues ? (\n    <FormRenderer\n      schema={createEditRoleSchema(id)}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onCancel={onCancel}\n      validatorMapper={validatorMapper}\n      FormTemplate={(props) => (\n        <ModalFormTemplate {...props} ModalProps={{ onClose: onCancel, isOpen: true, variant: 'small', title: 'Edit role information' }} />\n      )}\n    />\n  ) : null;\n};\n\nEditRoleModal.propTypes = {\n  routeMatch: PropTypes.string.isRequired,\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]).isRequired,\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  afterSubmit: PropTypes.func.isRequired,\n};\n\nexport default EditRoleModal;\n","import { useEffect, useRef } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { removeRole } from '../../redux/actions/role-actions';\nimport { fetchRole } from '../../helpers/role/role-helper';\nimport { roleNameSelector } from './role-selectors';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RemoveRoleModal = ({ routeMatch, cancelRoute, submitRoute = cancelRoute, afterSubmit }) => {\n  const intl = useIntl();\n  const {\n    params: { id },\n  } = useRouteMatch(routeMatch);\n  const roles = id.split(',');\n  const roleName = useSelector((state) => {\n    if (roles.length === 1) {\n      return roleNameSelector(state, roles[0]);\n    }\n\n    return roles.length;\n  });\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [internalRoleName, setInternalRoleName] = useState(roleName);\n  const dispatch = useDispatch();\n  const { push, replace } = useHistory();\n\n  useEffect(() => {\n    if (roles && roleName) {\n      setInternalRoleName(roleName);\n    } else if (roles && roles.length === 1) {\n      fetchRole(roles[0])\n        .then((role) => setInternalRoleName(role.display_name))\n        .catch((error) => dispatch(addNotification({ variant: 'danger', title: 'Could not get role', description: error?.errors?.[0]?.detail })));\n    }\n  }, [roleName, roles]);\n\n  const onSubmit = () => {\n    Promise.all(roles.map((id) => dispatch(removeRole(id)))).then(() => afterSubmit());\n    push(submitRoute);\n  };\n\n  const onCancel = () => replace(cancelRoute);\n  if (!internalRoleName) {\n    return null;\n  }\n\n  return (\n    <Modal\n      className=\"rbac\"\n      aria-label=\"remove-role\"\n      header={\n        <TextContent>\n          <Split hasGutter>\n            <SplitItem>\n              <ExclamationTriangleIcon size=\"lg\" style={{ fill: '#f0ab00' }} />\n            </SplitItem>\n            <SplitItem>\n              <Text component=\"h1\">{intl.formatMessage(messages.deleteRoleQuestion)}</Text>\n            </SplitItem>\n          </Split>\n        </TextContent>\n      }\n      isOpen\n      variant=\"small\"\n      onClose={onCancel}\n      actions={[\n        <Button isDisabled={isDisabled} key=\"submit\" variant=\"danger\" type=\"button\" id=\"confirm-delete-portfolio\" onClick={onSubmit}>\n          {intl.formatMessage(messages.confirm)}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <FormattedMessage\n            {...messages.roleWilBeRemovedWithPermissions}\n            values={{\n              strong: (text) => <strong>{text}</strong>,\n              name: internalRoleName,\n              count: roles.length,\n            }}\n          />\n        </Text>\n        <Checkbox\n          id=\"remove-role-checkbox\"\n          label={intl.formatMessage(messages.understandActionIrreversible)}\n          isChecked={!isDisabled}\n          onChange={() => setIsDisabled((prev) => !prev)}\n        />\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.propTypes = {\n  routeMatch: PropTypes.string.isRequired,\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]).isRequired,\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  afterSubmit: PropTypes.func.isRequired,\n};\n\nexport default RemoveRoleModal;\n","export const roleSelector = (state, roleId) => {\n  const {\n    roleReducer: { roles = { data: [] }, selectedRole },\n  } = state;\n  if (selectedRole?.uuid === roleId) {\n    return selectedRole;\n  }\n\n  return roles.data.find(({ uuid }) => uuid === roleId);\n};\n\nexport const roleNameSelector = (state, roleId) => roleSelector(state, roleId)?.display_name;\n","import React, { Fragment } from 'react';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { getDateFormat } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { Link } from 'react-router-dom';\nimport flatten from 'lodash/flatten';\nimport messages from '../../Messages';\n\nexport const createRows = (showResDefinitions, uuid, data, intl, selectedRows = []) =>\n  data.reduce((acc, { resourceDefinitions, permission, modified }) => {\n    const [appName, type, operation] = permission.split(':');\n    return [\n      ...acc,\n      {\n        uuid: permission,\n        cells: [\n          appName,\n          type,\n          operation,\n          ...(showResDefinitions\n            ? [\n                permission.includes('cost-management') && resourceDefinitions.length > 0 ? (\n                  <Fragment key=\"resource-definitions\">\n                    <Link to={`/roles/detail/${uuid}/permission/${permission}`}>\n                      {flatten(resourceDefinitions.map((definition) => definition.attributeFilter.value)).length}\n                    </Link>\n                  </Fragment>\n                ) : (\n                  <span className=\"rbac-c-text__disabled\">{intl.formatMessage(messages.notApplicable)}</span>\n                ),\n              ]\n            : []),\n          <Fragment key={`${appName}-modified`}>\n            <DateFormat date={modified} type={getDateFormat(modified)} />\n          </Fragment>,\n        ],\n        selected: Boolean(selectedRows?.find(({ uuid }) => uuid === permission)),\n      },\n    ];\n  }, []);\n\nexport const rolePermissionsReducerInitialState = {\n  pagination: defaultSettings,\n  selectedPermissions: [],\n  showRemoveModal: false,\n  confirmDelete: () => null,\n  deleteInfo: {},\n  filters: {\n    applications: [],\n    resources: [],\n    operations: [],\n  },\n  isToggled: false,\n  resources: [],\n  operations: [],\n};\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SELECT_PERMISSIONS = 'SELECT_PERMISSIONS';\nexport const SHOW_REMOVE_MODAL = 'SHOW_REMOVE_MODAL';\nexport const SUBMIT_REMOVE_MODAL = 'SUBMIT_REMOVE_MODAL';\nexport const INITIATE_REMOVE_PERMISSION = 'INITIATE_REMOVE_PERMISSION';\nexport const SET_FILTERS = 'SET_FILTERS';\nexport const SET_TOGGLED = 'SET_TOGGLED';\nexport const SET_FILTER_OPTIONS = 'SET_FILTER_OPTIONS';\nexport const INITIALIZE_ROLE = 'INITIALIZE_ROLE';\nconst reducerHandlers = {\n  [SET_PAGINATION]: (state, pagination) => ({ ...state, pagination: { ...state.pagination, ...pagination } }),\n  [SELECT_PERMISSIONS]: (state, { selection }) => ({ ...state, selectedPermissions: selection }),\n  [SHOW_REMOVE_MODAL]: (state, { showRemoveModal }) => ({ ...state, showRemoveModal }),\n  [SUBMIT_REMOVE_MODAL]: (state) => ({ ...state, selectedPermissions: [], showRemoveModal: false }),\n  [INITIATE_REMOVE_PERMISSION]: (state, { confirmDelete, deleteInfo }) => ({ ...state, confirmDelete, showRemoveModal: true, deleteInfo }),\n  [SET_FILTERS]: (state, filters) => ({ ...state, filters: { ...state.filters, ...filters } }),\n  [SET_TOGGLED]: (state) => ({ ...state, isToggled: !state.isToggled }),\n  [INITIALIZE_ROLE]: (state, { count, ...options }) => ({ ...state, ...options, pagination: { ...state.pagination, count } }),\n};\nexport const rolePermissionsReducer = (state, { type, ...action }) => {\n  if (!reducerHandlers[type]) {\n    return state;\n  }\n\n  return reducerHandlers[type](state, action);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, Button, EmptyState, EmptyStateIcon, EmptyStateBody } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { fetchRole } from '../../../redux/actions/role-actions.js';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRolePermissionSuccess = ({ currentRoleID }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <EmptyState>\n        <EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />\n        <Title headingLevel=\"h4\" size=\"lg\">\n          {intl.formatMessage(messages.permissionsAddedSuccessfully)}\n        </Title>\n        <EmptyStateBody></EmptyStateBody>\n        <Link to={`/roles/detail/${currentRoleID}`}>\n          <Button onClick={() => dispatch(fetchRole(currentRoleID))}>{intl.formatMessage(messages.exit)}</Button>\n        </Link>\n      </EmptyState>\n    </>\n  );\n};\n\nexport default AddRolePermissionSuccess;\n\nAddRolePermissionSuccess.propTypes = {\n  currentRoleID: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { AddRolePermissionWizardContext } from './add-role-permission-wizard';\nimport '../add-role/review.scss';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting } = useContext(AddRolePermissionWizardContext);\n\n  if (submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  return <div className=\"rbac\">{[[{ ...formFields?.[0]?.[0] }]]}</div>;\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React, { useState, useEffect, useRef, createContext, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AddRolePermissionSummaryContent from './add-role-permissions-summary-content';\nimport AddRolePermissionSuccess from './add-role-permission-success';\nimport PropTypes from 'prop-types';\nimport { WarningModal } from '../../common/warningModal';\nimport { useHistory } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { updateRole } from '../../../redux/actions/role-actions.js';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport AddPermissionsTable from '../add-role/add-permissions';\nimport CostResources from '../add-role/cost-resources';\nimport { schemaBuilder } from './schema';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nexport const mapperExtension = {\n  'add-permissions-table': AddPermissionsTable,\n  'cost-resources': CostResources,\n  review: AddRolePermissionSummaryContent,\n};\n\nexport const AddRolePermissionWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst AddRolePermissionWizard = ({ role }) => {\n  const intl = useIntl();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [currentRoleID, setCurrentRoleID] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const container = useRef(document.createElement('div'));\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n  const schema = useMemo(() => schemaBuilder(container.current), []);\n\n  useEffect(() => {\n    setCurrentRoleID(role.uuid);\n  });\n\n  useEffect(() => {\n    container.current.hidden = cancelWarningVisible;\n  }, [cancelWarningVisible]);\n\n  const handleWizardCancel = () => {\n    setCancelWarningVisible(true);\n  };\n\n  const handleConfirmCancel = () => {\n    history.push(`/roles/detail/${role.uuid}`);\n  };\n\n  const onSubmit = async (formData) => {\n    const { 'add-permissions-table': selectedPermissions, 'cost-resources': resourceDefinitions } = formData;\n\n    const selectedPermissionIds = [...role.access.map((record) => record.permission), ...selectedPermissions.map((record) => record.uuid)];\n    const roleData = {\n      ...role,\n      access: [\n        ...selectedPermissions.reduce(\n          (acc, { uuid: permission, requires }) => [\n            ...acc,\n            ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => ({\n              permission,\n              resourceDefinitions: resourceDefinitions?.find((r) => r.permission === permission)\n                ? [\n                    {\n                      attributeFilter: {\n                        key: `cost-management.${permission.split(':')[1]}`,\n                        operation: 'in',\n                        value: resourceDefinitions?.find((r) => r.permission === permission).resources,\n                      },\n                    },\n                  ]\n                : [],\n            })),\n          ],\n          role.access\n        ),\n      ],\n      accessCount: role.accessCount + selectedPermissions.length,\n    };\n\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    dispatch(updateRole(currentRoleID, roleData))\n      .then(() => setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true })))\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        history.push(`/roles/detail/${role.uuid}`);\n      });\n  };\n\n  return (\n    <AddRolePermissionWizardContext.Provider\n      value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm, rolePermissions: role.access }}\n    >\n      <WarningModal\n        type={intl.formatMessage(messages.permission)}\n        isOpen={cancelWarningVisible}\n        onModalCancel={() => setCancelWarningVisible(false)}\n        onConfirmCancel={handleConfirmCancel}\n      />\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.addPermissions)}\n            isOpen\n            steps={[\n              {\n                name: 'success',\n                component: new AddRolePermissionSuccess({ currentRoleID }),\n                isFinishedStep: true,\n              },\n            ]}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          container={container}\n          schema={schema}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-uuid': role.uuid,\n            'role-type': 'create',\n            'role-name': role.display_name,\n            'role-description': role.description,\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            if (values && values['add-permissions-table']?.length > 0) {\n              handleWizardCancel();\n            } else {\n              handleConfirmCancel();\n            }\n          }}\n        />\n      )}\n    </AddRolePermissionWizardContext.Provider>\n  );\n};\n\nAddRolePermissionWizard.defaultProps = {\n  role: {},\n};\n\nAddRolePermissionWizard.propTypes = {\n  role: PropTypes.object,\n};\n\nexport default AddRolePermissionWizard;\n","import React from 'react';\nimport { Grid, GridItem, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRolePermissionSummaryContent = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'add-permissions-table': selectedPermissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n  } = formOptions.getState().values;\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <TextContent>\n          <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-sm\">\n            {intl.formatMessage(messages.reviewDetails)}\n          </Title>\n        </TextContent>\n      </StackItem>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <Grid hasGutter>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleName)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{name}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleDescription)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{description}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.addedPermissions)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <TextContent component={TextVariants.p}>\n              {selectedPermissions.map((permission, index) => (\n                <Text key={index}> {permission.uuid} </Text>\n              ))}\n            </TextContent>\n          </GridItem>\n          {hasCostResources && (\n            <React.Fragment>\n              <GridItem span={3}>\n                <Text className=\"pf-c-title\" component={TextVariants.h6}>\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem span={9}>\n                <TextContent component={TextVariants.p}>\n                  {resourceDefinitions.map(({ resources }) => resources.map((resource, index) => <Text key={index}> {resource} </Text>))}\n                </TextContent>\n              </GridItem>\n            </React.Fragment>\n          )}\n        </Grid>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default AddRolePermissionSummaryContent;\n","import React from 'react';\nimport AddPermissionTemplate from '../add-role/add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const schemaBuilder = (container) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.addPermissions),\n        container,\n        fields: [\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) =>\n              values &&\n              values['add-permissions-table'] &&\n              values['add-permissions-table'].some(({ uuid }) => uuid.split(':')[0].includes('cost-management'))\n                ? 'cost-resources-definition'\n                : 'review',\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) => (value.every((p) => p.resources.length > 0) ? undefined : intl.formatMessage(messages.assignAtLeastOneResource)),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n","import React, { useEffect, useReducer, useState } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport {\n  createRows,\n  INITIALIZE_ROLE,\n  INITIATE_REMOVE_PERMISSION,\n  rolePermissionsReducer,\n  rolePermissionsReducerInitialState,\n  SELECT_PERMISSIONS,\n  SET_FILTERS,\n  SET_PAGINATION,\n  SET_TOGGLED,\n  SHOW_REMOVE_MODAL,\n  SUBMIT_REMOVE_MODAL,\n} from './role-permissions-table-helpers';\nimport { cellWidth } from '@patternfly/react-table';\nimport './role-permissions.scss';\nimport { removeRolePermissions, fetchRole } from '../../redux/actions/role-actions';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { info } from '@patternfly/react-table';\nimport AddRolePermissionWizard from './add-role-permissions/add-role-permission-wizard';\nimport paths from '../../utilities/pathnames';\nimport RemoveModal from '../../presentational-components/shared/RemoveModal';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\n\nconst maxFilterItems = 10;\n\nconst removeModalText = (permissions, role, plural) => {\n  return (\n    <FormattedMessage\n      {...(plural ? messages.permissionsWillNotBeGrantedThroughRole : messages.permissionWillNotBeGrantedThroughRole)}\n      values={{\n        b: (text) => <b>{text}</b>,\n        ...(plural\n          ? {\n              permissions,\n            }\n          : {\n              permission: permissions,\n            }),\n        role: role.name,\n      }}\n    />\n  );\n};\n\nconst Permissions = ({ cantAddPermissions }) => {\n  const intl = useIntl();\n  const { role, isRecordLoading } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const history = useHistory();\n  const [\n    { pagination, selectedPermissions, showRemoveModal, confirmDelete, deleteInfo, filters, isToggled, resources, operations },\n    internalDispatch,\n  ] = useReducer(rolePermissionsReducer, rolePermissionsReducerInitialState);\n\n  const [showResourceDefinitions, setShowResourceDefinitions] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const columns = [\n    { title: intl.formatMessage(messages.application) },\n    { title: intl.formatMessage(messages.resourceType) },\n    { title: intl.formatMessage(messages.operation) },\n    {\n      title: intl.formatMessage(messages.resourceDefinitions),\n      transforms: [\n        info({\n          popover: intl.formatMessage(messages.resourceDefinitionsApplyToCost),\n          ariaLabel: intl.formatMessage(messages.resourceDefinitionsApplyToCost),\n        }),\n      ],\n    },\n    { title: intl.formatMessage(messages.lastCommit), transforms: [cellWidth(15)] },\n  ];\n\n  const setCheckedItems = (newSelection) => {\n    internalDispatch({ type: SELECT_PERMISSIONS, selection: newSelection(selectedPermissions).map(({ uuid }) => ({ uuid })) });\n  };\n  const emptyPropsDescription = cantAddPermissions\n    ? ['']\n    : ['To configure user access to applications,', 'add at least one permission to this role.', ''];\n\n  useEffect(() => {\n    if (Object.keys(role).length > 0) {\n      const { resources, operations } = Object.entries(\n        role.access.reduce(\n          ({ resources, operations }, { permission }) => {\n            const [, resource, operation] = permission.split(':');\n            return {\n              resources: resources.includes(resource) ? resources : [...resources, resource],\n              operations: operations.includes(operation) ? operations : [...operations, operation],\n            };\n          },\n          { resources: [], operations: [] }\n        )\n      ).reduce((acc, [key, value]) => ({ ...acc, [key]: value.map((item) => ({ label: item, value: item })) }), {});\n      internalDispatch({ type: INITIALIZE_ROLE, resources, operations, count: role.access ? role.access.length : 0 });\n    }\n\n    setShowResourceDefinitions(role?.access?.find((a) => a.permission.includes('cost-management')));\n  }, [role]);\n\n  const filteredRows =\n    role && role.access\n      ? (role.access || [])\n          .filter(({ permission }) => {\n            const [application, resource, operation] = permission.split(':');\n            const { applications, resources, operations } = filters;\n            return (\n              (applications.length > 0 ? applications.includes(application) : true) &&\n              (resources.length > 0 ? resources.includes(resource) : true) &&\n              (operations.length > 0 ? operations.includes(operation) : true)\n            );\n          })\n          .map((acc) => ({ uuid: acc.permission, ...acc, modified: role.modified }))\n      : [];\n\n  const removePermissions = (permissions) => {\n    const permissionsToRemove = permissions.reduce((acc, curr) => [...acc, curr.uuid], []);\n    return dispatch(removeRolePermissions(role, permissionsToRemove)).then(() => {\n      dispatch(fetchRole(role.uuid));\n      internalDispatch({ type: SELECT_PERMISSIONS, selection: [] });\n    });\n  };\n\n  const actionResolver = () => [\n    {\n      title: intl.formatMessage(messages.remove),\n      onClick: (_event, _rowId, permission) =>\n        internalDispatch({\n          type: INITIATE_REMOVE_PERMISSION,\n          confirmDelete: () => removePermissions([permission]),\n          deleteInfo: {\n            title: intl.formatMessage(messages.removePermissionQuestion),\n            text: removeModalText(permission.uuid, role, false),\n            confirmButtonLabel: intl.formatMessage(messages.removePermission),\n          },\n        }),\n    },\n  ];\n\n  const toolbarButtons = () =>\n    cantAddPermissions\n      ? []\n      : [\n          <Link to={`/roles/detail/${role.uuid}/role-add-permission`} key=\"role-add-permission\" className=\"rbac-m-hide-on-sm\">\n            <Button variant=\"primary\" aria-label=\"Add Permission\">\n              {intl.formatMessage(messages.addPermissions)}\n            </Button>\n          </Link>,\n          {\n            label: intl.formatMessage(messages.addPermission),\n            props: {\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => {\n              history.push(`/roles/detail/${role.uuid}/role-add-permission`);\n            },\n          },\n          {\n            label: intl.formatMessage(messages.remove),\n            props: {\n              isDisabled: !selectedPermissions.length > 0,\n            },\n            onClick: () => {\n              const multiplePermissionsSelected = selectedPermissions.length > 1;\n              internalDispatch({\n                type: INITIATE_REMOVE_PERMISSION,\n                confirmDelete: () => removePermissions([...selectedPermissions]),\n                deleteInfo: {\n                  title: intl.formatMessage(multiplePermissionsSelected ? messages.removePermissionsQuestion : messages.removePermissionQuestion),\n                  text: removeModalText(\n                    multiplePermissionsSelected ? selectedPermissions.length : selectedPermissions[0].uuid,\n                    role,\n                    selectedPermissions.length > 1\n                  ),\n                  confirmButtonLabel: intl.formatMessage(multiplePermissionsSelected ? messages.removePermissions : messages.removePermission),\n                },\n              });\n            },\n          },\n        ];\n\n  const routes = () => (\n    <Route exact path={paths['role-add-permission'].path}>\n      <AddRolePermissionWizard isOpen={true} role={role} />\n    </Route>\n  );\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const emptyItem = {\n    label: <div> {intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const sanitizedRole = {\n    access: [],\n    applications: [],\n    ...role,\n  };\n\n  const filterItemOverflow = Object.values({ applications: sanitizedRole.applications, operations, resources }).find(\n    (value) => value.length > maxFilterItems\n  );\n  const data = filteredRows.slice(pagination.offset, pagination.offset + pagination.limit);\n\n  return (\n    <section className=\"pf-c-page__main-section rbac-c-role__permissions\">\n      {showRemoveModal && (\n        <RemoveModal\n          text={deleteInfo.text}\n          title={deleteInfo.title}\n          isOpen={showRemoveModal}\n          confirmButtonLabel={deleteInfo.confirmButtonLabel}\n          onClose={() => internalDispatch({ type: SHOW_REMOVE_MODAL, showRemoveModal: false })}\n          onSubmit={() => {\n            confirmDelete();\n            internalDispatch({ type: SUBMIT_REMOVE_MODAL });\n          }}\n        />\n      )}\n      <TableToolbarView\n        columns={showResourceDefinitions ? columns : columns.filter((c) => c.title !== intl.formatMessage(messages.resourceDefinitions))}\n        rows={createRows(showResourceDefinitions, role?.uuid, data, intl)}\n        actionResolver={role.system ? undefined : actionResolver}\n        data={data}\n        filterValue=\"\"\n        ouiaId=\"role-permissions-table\"\n        fetchData={({ limit, offset }) => internalDispatch({ type: SET_PAGINATION, limit, offset })}\n        isSelectable={!role.system}\n        setCheckedItems={setCheckedItems}\n        checkedRows={selectedPermissions}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                internalDispatch({ type: SET_TOGGLED });\n              }\n            : undefined\n        }\n        setFilterValue={({ applications, resources, operations }) => {\n          internalDispatch({\n            type: SET_FILTERS,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        toolbarButtons={toolbarButtons}\n        isLoading={isRecordLoading}\n        pagination={{\n          ...pagination,\n          count: filteredRows.length,\n        }}\n        titlePlural={intl.formatMessage(messages.permissions)}\n        titleSingular={intl.formatMessage(messages.permission)}\n        routes={routes}\n        emptyProps={{\n          title: intl.formatMessage(messages.noRolePermissions),\n          description: emptyPropsDescription,\n        }}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications.length === 0 ? '' : filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: sanitizedRole.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  sanitizedRole.applications.length > 0\n                    ? sanitizedRole.applications.slice(0, isToggled ? undefined : maxFilterItems).map((item) => ({ label: item, value: item }))\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources.length === 0 ? '' : filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: resources.length > 0 ? 'checkbox' : 'plain',\n                items: resources.length > 0 ? resources.slice(0, isToggled ? undefined : maxFilterItems) : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations.length === 0 ? '' : filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: operations.length > 0 ? 'checkbox' : 'plain',\n                items: operations.length > 0 ? operations.slice(0, isToggled ? undefined : maxFilterItems) : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        tableId=\"role-permissions\"\n      />\n    </section>\n  );\n};\n\nPermissions.propTypes = {\n  cantAddPermissions: PropTypes.bool,\n};\n\nexport default Permissions;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Route, useHistory, useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Button, Dropdown, DropdownItem, KebabToggle, Level, LevelItem, Text, TextContent } from '@patternfly/react-core';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport pathnames from '../../utilities/pathnames';\nimport { fetchRole, fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup, fetchRolesForGroup, fetchSystemGroup } from '../../redux/actions/group-actions';\nimport { ToolbarTitlePlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport RemoveRoleModal from './remove-role-modal';\nimport EditRoleModal from './edit-role-modal';\nimport EmptyWithAction from '../../presentational-components/shared/empty-state';\nimport RbacBreadcrumbs from '../../presentational-components/shared/breadcrumbs';\nimport { BAD_UUID, getBackRoute } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role.scss';\n\nconst Role = ({ onDelete }) => {\n  const intl = useIntl();\n  const history = useHistory();\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [isNonPermissionAddingRole, setIsNonPermissionAddingRole] = useState(false);\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading, rolesPagination, rolesFilters, groupsPagination, groupsFilters, systemGroupUuid } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      isRecordLoading: state.roleReducer.isRecordLoading,\n      ...(groupUuid && { group: state.groupReducer.selectedGroup }),\n      systemGroupUuid: state.groupReducer.systemGroup?.uuid,\n      rolesPagination: state.roleReducer?.roles?.pagination || defaultSettings,\n      rolesFilters: state.roleReducer?.roles?.filters || {},\n      groupsPagination: state.groupReducer?.groups?.pagination || defaultSettings,\n      groupsFilters: state.groupReducer?.groups?.filters || {},\n    }),\n    shallowEqual\n  );\n\n  const roleExists = useSelector((state) => {\n    const {\n      roleReducer: { error },\n    } = state;\n    return error !== BAD_UUID;\n  });\n\n  const groupExists = useSelector((state) => {\n    const {\n      groupReducer: { error },\n    } = state;\n    return error !== BAD_UUID;\n  });\n\n  const dispatch = useDispatch();\n  const fetchData = () => {\n    dispatch(fetchRole(uuid));\n    if (groupUuid) {\n      if (groupUuid !== 'default-access') {\n        dispatch(fetchGroup(groupUuid));\n      } else {\n        if (systemGroupUuid) {\n          dispatch(fetchRolesForGroup(systemGroupUuid, {}));\n          insights.chrome.appObjectId(systemGroupUuid);\n          return () => insights.chrome.appObjectId(undefined);\n        } else {\n          dispatch(fetchSystemGroup());\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    insights.chrome.appObjectId(uuid);\n    return () => insights.chrome.appObjectId(undefined);\n  }, [uuid, groupUuid, systemGroupUuid]);\n\n  useEffect(() => {\n    if (role?.accessCount === 0 && role?.external_tenant !== '' && role?.external_role_id !== '' && role?.system) {\n      setIsNonPermissionAddingRole(true);\n    }\n  }, [role]);\n\n  const breadcrumbsList = () => [\n    groupUuid\n      ? {\n          title: intl.formatMessage(messages.groups),\n          to: getBackRoute(pathnames.groups.path, groupsPagination, groupsFilters),\n        }\n      : {\n          title: intl.formatMessage(messages.roles),\n          to: getBackRoute(pathnames.roles.path, rolesPagination, rolesFilters),\n        },\n\n    ...(groupExists && groupUuid && (groupUuid === 'default-access' ? systemGroupUuid : groupExists)\n      ? group\n        ? [\n            {\n              title: group && group.name,\n              to: `/groups/detail/${groupUuid}/roles`,\n              isLoading: group && group.loaded,\n            },\n          ]\n        : [undefined]\n      : groupExists || !groupUuid\n      ? []\n      : [{ title: intl.formatMessage(messages.invalidGroup), isActive: true }]),\n\n    ...(groupExists || !groupUuid\n      ? [\n          {\n            title: isRecordLoading ? undefined : roleExists ? role?.display_name || role?.name : intl.formatMessage(messages.invalidRole),\n            isActive: true,\n          },\n        ]\n      : []),\n  ];\n\n  const title = !isRecordLoading && role ? role.display_name || role.name : undefined;\n  const description = !isRecordLoading && role ? role.description : undefined;\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <Link onClick={() => setDropdownOpen(false)} to={pathnames['role-detail-edit'].path.replace(':id', uuid)}>\n          {intl.formatMessage(messages.edit)}\n        </Link>\n      }\n      key=\"edit-role\"\n    />,\n    <DropdownItem\n      component={\n        <Link onClick={onDelete} to={pathnames['role-detail-remove'].path.replace(':id', uuid)}>\n          {intl.formatMessage(messages.delete)}\n        </Link>\n      }\n      className=\"rbac-c-role__action\"\n      key=\"delete-role\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      {(groupExists || !groupUuid) && roleExists ? (\n        <Fragment>\n          <TopToolbar breadcrumbs={breadcrumbsList()}>\n            <Level>\n              <LevelItem>\n                <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n              </LevelItem>\n              {!isRecordLoading && role && !role.system && (\n                <LevelItem>\n                  <Dropdown\n                    ouiaId=\"role-title-actions-dropdown\"\n                    toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"role-actions-dropdown\" />}\n                    isOpen={isDropdownOpen}\n                    isPlain\n                    position=\"right\"\n                    dropdownItems={dropdownItems}\n                  />\n                </LevelItem>\n              )}\n            </Level>\n            {description && (\n              <TextContent className=\"rbac-page-header__description\">\n                <Text component=\"p\">{description}</Text>\n              </TextContent>\n            )}\n          </TopToolbar>\n          {isRecordLoading || !role ? <ListLoader /> : <Permissions cantAddPermissions={isNonPermissionAddingRole} />}\n          <Route path={pathnames['role-detail-remove'].path}>\n            {!isRecordLoading && (\n              <RemoveRoleModal\n                afterSubmit={() => {\n                  dispatch(fetchRolesWithPolicies({ ...rolesPagination, offset: 0, filters: rolesFilters, inModal: false }));\n                }}\n                cancelRoute={pathnames['role-detail'].path.replace(':uuid', uuid)}\n                submitRoute={getBackRoute(pathnames.roles.path, { ...rolesPagination, offset: 0 }, rolesFilters)}\n                routeMatch={pathnames['role-detail-remove'].path}\n              />\n            )}\n          </Route>\n          <Route path={pathnames['role-detail-edit'].path}>\n            {!isRecordLoading && (\n              <EditRoleModal\n                afterSubmit={fetchData}\n                cancelRoute={pathnames['role-detail'].path.replace(':uuid', uuid)}\n                routeMatch={pathnames['role-detail-edit'].path}\n              />\n            )}\n          </Route>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <section className=\"pf-c-page__main-breadcrumb pf-u-pb-md\">\n            <RbacBreadcrumbs {...breadcrumbsList()} />\n          </section>\n          <EmptyWithAction\n            title={`${groupExists ? 'Role' : 'Group'} not found`}\n            description={[`${groupExists ? 'Role' : 'Group'} with ID ${groupExists ? uuid : groupUuid} does not exist.`]}\n            actions={[\n              <Button\n                key=\"back-button\"\n                className=\"pf-u-mt-xl\"\n                ouiaId=\"back-button\"\n                variant=\"primary\"\n                aria-label=\"Back to previous page\"\n                onClick={() => history.goBack()}\n              >\n                {intl.formatMessage(messages.backToPreviousPage)}\n              </Button>,\n            ]}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nRole.propTypes = {\n  onDelete: PropTypes.func,\n};\n\nexport default Role;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction: (...args: any[]) => Promise<any>, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"names":["syncDefaultFiltersWithUrl","history","keys","defaults","searchParams","URLSearchParams","location","search","filters","reduce","acc","key","values","getAll","length","Object","forEach","value","Array","isArray","Set","item","includes","append","get","set","replace","pathname","toString","areFiltersPresentInUrl","some","applyFiltersToUrl","newValues","RemoveModal","title","text","onClose","onSubmit","isOpen","confirmButtonLabel","withCheckbox","intl","useIntl","useState","checked","setChecked","Modal","className","variant","ModalVariant","actions","Button","ouiaId","isDisabled","onClick","formatMessage","messages","Split","hasGutter","SplitItem","isFilled","Stack","TextContent","Checkbox","isChecked","onChange","label","id","propTypes","PropTypes","defaultProps","RbacBreadcrumbs","breadcrumbs","Breadcrumb","map","index","BreadcrumbItem","isActive","to","NavLink","exact","TopToolbar","children","Fragment","isRequired","paddingBottom","TopToolbarTitle","renderTitleTag","description","Flex","FlexItem","alignSelf","modifier","Text","component","TextVariants","costApi","getCostApi","getResourceDefinitions","apiProps","getResourceTypes","getResource","type","ActionTypes","payload","CostHelper","MODAL_FORM_IDENTIFIER","CustomFormWrapper","props","CustomButtons","saveLabel","cancelLabel","onCancel","useFormApi","pristine","invalid","validating","submitting","form","ModalFormTemplate","ModalProps","alert","footer","showFormControls","FormWrapper","Select","input","options","isReadOnly","rest","FormSelect","inputValue","selectOptions","find","undefined","createOptions","FormSelectOption","FieldProvider","Pf4SelectWrapper","helperText","meta","hideLabel","error","showError","touched","FormGroup","fieldId","isValid","helperTextInvalid","componentType","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","noChanges","ActionGroup","formProps","subscription","FormRenderer","formTemplateProps","componentMapper","componentTypes","TextField","Textarea","FormTemplate","PageActionRoute","pageAction","useEffect","insights","chrome","appAction","Route","WarningModal","onModalCancel","onConfirmCancel","customTitle","customDescription","customPrimaryButtonTitle","customSecondaryButtonTitle","size","AddPermissionTemplate","formFields","formOptions","getState","selectedPermissions","setSelectedPermissions","alertClosed","setAlertClosed","notAllowedBasePermissions","unresolvedSplats","applications","filter","app","uuid","addPermissions","ChipGroup","categoryName","i","Chip","color","isTruncated","p","Title","headingLevel","Popover","headerContent","bodyContent","Alert","isInline","join","actionClose","AlertActionCloseButton","accessApi","getPermissionApi","listPermissions","limit","offset","orderBy","application","resourceType","verb","permission","excludeGlobals","excludeRoles","allowedOnly","listPermissionOptions","field","fieldToAction","resource_type","DisabledRowWrapper","row","disableSelection","Tooltip","content","disabledContent","exitDelay","entryDelay","RowWrapper","selector","permissionReducer","isLoading","operation","resource","expandSplats","isLoadingExpandSplats","roleReducer","isRecordLoading","selectedRole","resourceTypes","costReducer","permissions","data","requires","pagination","baseRole","applicationOptions","resourceOptions","operationOptions","expandedPermissions","AddPermissionsTable","dispatch","useDispatch","hasAccess","usePermissions","columns","fetchData","existingRoleId","exclude_roles","allowed_only","exclude_globals","PermissionsHelper","fetchOptions","useSelector","shallowEqual","useFieldApi","resources","operations","setFilters","roleType","isToggled","setIsToggled","filterBy","setFilterBy","setValue","getResourceType","r","split","debouncedGetApplicationOptions","useCallback","debouncePromise","debouncedGetResourceOptions","debouncedGetOperationOptions","baseRoleUuid","fetchRole","change","notAllowed","basePermissions","access","push","patterns","count","f","match","calculateSelected","curr","preparedFilterItems","res","op","emptyItem","filterItemOverflow","isSelectable","isCompact","borders","rows","cells","selected","Boolean","href","createRows","filterValue","noData","noDataDescription","setFilterValue","checkedRows","setCheckedItems","newSelection","newSelected","titlePlural","toLowerCase","titleSingular","showMoreTitle","onFilter","onShowMore","e","placeholder","groups","items","slice","isFilterable","rowWrapper","tableId","loadingResources","isLoadingResources","reducer","state","action","prevState","selection","option","filteredOptions","filtervalue","useReducer","dispatchLocaly","path","resourceDefinitions","entries","Grid","GridItem","md","sm","SelectVariant","typeAheadAriaLabel","onToggle","onSelect","event","selectAll","onClear","selections","target","placeholderText","hasInlineFilter","SelectOption","EditRoleModal","routeMatch","cancelRoute","submitRoute","afterSubmit","isMounted","useRef","current","useIsMounted","useHistory","useRouteMatch","params","role","roleSelector","initialValues","setInitialValues","then","validationPromise","name","idKey","fetchRoles","display_name","Promise","reject","number","uniqueNameValidator","asyncDebounce","validatorMapper","addNotification","dismissDelay","schema","fields","validate","validatorTypes","threshold","createEditRoleSchema","patchRole","hash","RemoveRoleModal","roles","roleName","roleNameSelector","setIsDisabled","internalRoleName","setInternalRoleName","errors","detail","header","style","fill","all","removeRole","strong","prev","roleId","showResDefinitions","selectedRows","modified","appName","Link","flatten","definition","attributeFilter","DateFormat","date","getDateFormat","rolePermissionsReducerInitialState","defaultSettings","showRemoveModal","confirmDelete","deleteInfo","SET_PAGINATION","SELECT_PERMISSIONS","SHOW_REMOVE_MODAL","SUBMIT_REMOVE_MODAL","INITIATE_REMOVE_PERMISSION","SET_FILTERS","SET_TOGGLED","INITIALIZE_ROLE","reducerHandlers","rolePermissionsReducer","AddRolePermissionSuccess","currentRoleID","EmptyState","EmptyStateIcon","icon","CheckCircleIcon","EmptyStateBody","ReviewTemplate","useContext","AddRolePermissionWizardContext","Bullseye","Spinner","mapperExtension","CostResources","review","hasCostResources","StackItem","span","createContext","success","AddRolePermissionWizard","cancelWarningVisible","setCancelWarningVisible","setCurrentRoleID","hideForm","wizardContextValue","setWizardContextValue","container","document","createElement","useMemo","cache","createIntlCache","createIntl","locale","providerMessages","isDynamic","inModal","showTitles","crossroads","StepTemplate","nextStep","every","schemaBuilder","hidden","handleConfirmCancel","formData","selectedPermissionIds","record","roleData","require","accessCount","updateRole","Provider","setWizardError","setWizardSuccess","setHideForm","rolePermissions","Wizard","steps","isFinishedStep","removeModalText","plural","b","Permissions","cantAddPermissions","internalDispatch","showResourceDefinitions","setShowResourceDefinitions","transforms","info","popover","ariaLabel","cellWidth","emptyPropsDescription","a","filteredRows","removePermissions","permissionsToRemove","removeRolePermissions","sanitizedRole","c","actionResolver","system","_event","_rowId","toolbarButtons","multiplePermissionsSelected","routes","paths","emptyProps","Role","onDelete","isDropdownOpen","setDropdownOpen","isNonPermissionAddingRole","setIsNonPermissionAddingRole","useParams","groupUuid","group","groupReducer","selectedGroup","systemGroupUuid","systemGroup","rolesPagination","rolesFilters","groupsPagination","groupsFilters","roleExists","BAD_UUID","groupExists","fetchGroup","fetchRolesForGroup","appObjectId","fetchSystemGroup","external_tenant","external_role_id","breadcrumbsList","getBackRoute","pathnames","loaded","dropdownItems","DropdownItem","goBack","Level","LevelItem","PageHeaderTitle","Dropdown","toggle","KebabToggle","isPlain","position","fetchRolesWithPolicies","asyncFunction","debounceTime","onlyResolvesLast"],"sourceRoot":""}
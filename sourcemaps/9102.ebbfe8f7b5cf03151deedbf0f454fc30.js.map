{"version":3,"file":"js/9102.a2f5495479fec4900c7b.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/plus-circle-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/role/default-group-change-modal.js","webpack:///./src/smart-components/group/role/remove-role-modal.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./node_modules/react-intl/lib/src/components/message.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationTriangleIcon = createIcon(ExclamationTriangleIconConfig);\n\nexport default ExclamationTriangleIcon;","import { createIcon } from '../createIcon';\n\nexport const PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PlusCircleIcon = createIcon(PlusCircleIconConfig);\n\nexport default PlusCircleIcon;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../Section/section.css';\nvar Section = function (_a) {\n    var _b;\n    var type = _a.type, children = _a.children, className = _a.className, props = __rest(_a, [\"type\", \"children\", \"className\"]);\n    var sectionClasses = classNames(className, (_b = {}, _b[\"ins-l-\".concat(type)] = type !== undefined, _b));\n    return (_jsxs(\"section\", __assign({}, props, { className: sectionClasses }, { children: [' ', children, ' '] })));\n};\nexport default Section;\n//# sourceMappingURL=Section.js.map","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, ModalVariant, Split, SplitItem, Stack, TextContent } from '@patternfly/react-core';\nimport './RemoveModal.scss';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, withCheckbox }) => {\n  const intl = useIntl();\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <Modal\n      className=\"rbac\"\n      title={\n        <div>\n          <ExclamationTriangleIcon className=\"ins-m-alert rbac-c__delete-icon\" /> {title}\n        </div>\n      }\n      isOpen={isOpen}\n      variant={ModalVariant.small}\n      onClose={onClose}\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={withCheckbox && !checked} variant=\"danger\" onClick={onSubmit}>\n          {confirmButtonLabel}\n        </Button>,\n        <Button key=\"cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onClose}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <Stack hasGutter>\n            <TextContent>{text}</TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n      {withCheckbox ? (\n        <Checkbox\n          isChecked={checked}\n          onChange={() => setChecked(!checked)}\n          label={intl.formatMessage(messages.confirmCheckMessage)}\n          id=\"remove-modal-check\"\n          className=\"pf-u-mt-lg\"\n        />\n      ) : null}\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.any,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  withCheckbox: PropTypes.bool,\n};\n\nRemoveModal.defaultProps = {\n  withCheckbox: false,\n};\n\nexport default RemoveModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  const intl = useIntl();\n  return (\n    <RemoveModal\n      text={\n        <TextContent>\n          <Text>\n            <FormattedMessage\n              {...messages.defaultAccessGroupEditWarning}\n              values={{\n                b: (text) => <b>{text}</b>,\n              }}\n            />\n          </Text>\n        </TextContent>\n      }\n      title={intl.formatMessage(messages.warning)}\n      withCheckbox\n      isOpen={isOpen}\n      confirmButtonLabel={intl.formatMessage(messages.continue)}\n      onClose={onClose}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DefaultGroupChange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange\n      isOpen={showConfirmModal && isOpen}\n      onClose={() => {\n        onClose();\n        setShowConfirmModal(false);\n      }}\n      onSubmit={() => {\n        onSubmit();\n      }}\n    />\n  ) : (\n    <RemoveModal\n      text={text}\n      title={title}\n      isOpen={isOpen}\n      confirmButtonLabel={confirmButtonLabel}\n      onClose={() => {\n        onClose();\n      }}\n      onSubmit={() => {\n        setShowConfirmModal(true);\n        (!isDefault || isChanged) && onSubmit();\n      }}\n    />\n  );\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.node,\n  title: PropTypes.node,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false,\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment, useContext, useRef, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport {\n  removeRolesFromGroup,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  fetchAddRolesForGroup,\n  fetchSystemGroup,\n  fetchGroup,\n  fetchGroups,\n} from '../../../redux/actions/group-actions';\nimport RemoveRole from './remove-role-modal';\nimport { getBackRoute, getDateFormat } from '../../../helpers/shared/helpers';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport { DEFAULT_ACCESS_GROUP_ID } from '../../../utilities/constants';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\nimport './group-roles.scss';\n\nconst createRows = (groupId, data, checkedRows = []) =>\n  data?.reduce(\n    (acc, { uuid, display_name, name, description, modified }) => [\n      ...acc,\n      {\n        uuid,\n        title: display_name || name,\n        cells: [\n          <Fragment key={`${uuid}-name`}>\n            <AppLink to={pathnames['group-detail-role-detail'].link.replace(':groupId', groupId).replace(':roleId', uuid)}>\n              {display_name || name}\n            </AppLink>\n          </Fragment>,\n          description,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type={getDateFormat(modified)} />\n          </Fragment>,\n        ],\n        selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  ) || [];\n\nconst generateOuiaID = (name) => {\n  // given a group name, generate an OUIA ID for the 'Add role' button\n  return name.toLowerCase().includes('default access') ? 'dag-add-role-button' : 'add-role-button';\n};\n\nconst addRoleButton = (isDisabled, ouiaId, customTooltipText) => {\n  const intl = useIntl();\n  const addRoleButtonContent = (\n    <Button ouiaId={ouiaId} variant=\"primary\" className=\"rbac-m-hide-on-sm\" aria-label=\"Add role\" isAriaDisabled={isDisabled}>\n      {intl.formatMessage(messages.addRole)}\n    </Button>\n  );\n\n  return isDisabled ? (\n    <Tooltip content={customTooltipText || intl.formatMessage(messages.allRolesAdded)}>{addRoleButtonContent}</Tooltip>\n  ) : (\n    addRoleButtonContent\n  );\n};\n\nconst reducer = ({ groupReducer: { selectedGroup, systemGroup, groups } }) => ({\n  roles: selectedGroup.roles,\n  pagination: selectedGroup.pagination || { ...defaultSettings, count: selectedGroup?.roles && selectedGroup.roles.length },\n  groupsPagination: groups.pagination || groups.meta,\n  groupsFilters: groups.filters,\n  isLoading: !selectedGroup.loaded,\n  isPlatformDefault: selectedGroup.platform_default,\n  isAdminDefault: selectedGroup.admin_default,\n  isChanged: !selectedGroup.system,\n  disableAddRoles:\n    /**\n     * First validate if the pagination object exists and is not empty.\n     * If empty or undefined, the disable condition will be always true\n     */\n    Object.keys(selectedGroup.addRoles.pagination || {}).length > 0\n      ? !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0) || !!selectedGroup.admin_default\n      : !!selectedGroup.admin_default,\n  systemGroupUuid: systemGroup?.uuid,\n  group: selectedGroup,\n});\n\nconst GroupRoles = ({ onDefaultGroupChanged }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const { groupId } = useParams();\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [selectedAddRoles, setSelectedAddRoles] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n  const {\n    roles,\n    pagination,\n    groupsPagination,\n    groupsFilters,\n    isLoading,\n    group,\n    isPlatformDefault,\n    isAdminDefault,\n    isChanged,\n    disableAddRoles,\n    systemGroupUuid,\n  } = useSelector(reducer);\n\n  const reloadWrapper = (event, callback) => {\n    event.payload.then(callback);\n    return event;\n  };\n\n  const fetchAddGroupRoles = (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {}));\n  const fetchGroupData = (customId) => dispatch(fetchGroup(customId ?? groupId));\n  const fetchSystGroup = () => dispatch(fetchSystemGroup({ chrome }));\n  const removeRoles = (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback));\n  const fetchGroupRoles = (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options));\n\n  const columns = [\n    { title: intl.formatMessage(messages.name), orderBy: 'name' },\n    { title: intl.formatMessage(messages.description) },\n    { title: intl.formatMessage(messages.lastModified) },\n  ];\n\n  useEffect(() => {\n    if (groupId !== DEFAULT_ACCESS_GROUP_ID) {\n      fetchGroupRoles(pagination)(groupId);\n    } else {\n      systemGroupUuid && fetchGroupRoles(pagination)(systemGroupUuid);\n    }\n  }, [systemGroupUuid]);\n\n  useEffect(() => {\n    if (roles?.length > 0) {\n      if (groupId !== DEFAULT_ACCESS_GROUP_ID) {\n        fetchAddGroupRoles(groupId);\n      } else {\n        systemGroupUuid && fetchAddGroupRoles(systemGroupUuid);\n      }\n    }\n  }, [roles]);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name })));\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      <FormattedMessage\n        {...(plural ? messages.removeRolesModalText : messages.removeRoleModalText)}\n        values={{\n          b: (text) => <b>{text}</b>,\n          name,\n          ...(plural ? { roles: role } : { role }),\n        }}\n      />\n    </p>\n  );\n\n  const fetchUuid = groupId !== DEFAULT_ACCESS_GROUP_ID ? groupId : systemGroupUuid;\n\n  const removeRolesCallback = () => {\n    if (isPlatformDefault) {\n      fetchSystGroup().then(({ value: { data } }) => {\n        fetchGroupRoles({ ...pagination, offset: 0 })(data[0].uuid);\n      });\n    } else {\n      fetchGroupRoles({ ...pagination, offset: 0 })(groupId);\n    }\n  };\n\n  const actionResolver = () => [\n    ...(hasPermissions.current && !isAdminDefault\n      ? [\n          {\n            title: intl.formatMessage(messages.remove),\n            onClick: (_event, _rowId, role) => {\n              setConfirmDelete(() => () => removeRoles(fetchUuid, [role.uuid], removeRolesCallback));\n              setDeleteInfo({\n                title: intl.formatMessage(messages.removeRoleQuestion),\n                confirmButtonLabel: intl.formatMessage(messages.removeRole),\n                text: removeModalText(name, role.title, false),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const toolbarButtons = () => [\n    ...(hasPermissions.current && !isAdminDefault\n      ? [\n          <AppLink\n            className={`rbac-m-hide-on-sm rbac-c-button__add-role${disableAddRoles && '-disabled'}`}\n            to={pathnames['group-add-roles'].link.replace(':groupId', groupId)}\n            key=\"add-to-group\"\n          >\n            {addRoleButton(disableAddRoles, generateOuiaID(name || ''), isAdminDefault && intl.formatMessage(messages.defaultGroupNotManually))}\n          </AppLink>,\n          {\n            label: intl.formatMessage(messages.addRole),\n            props: {\n              isDisabled: disableAddRoles,\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => navigate(pathnames['group-add-roles'].link.replace(':groupId', groupId)),\n          },\n          {\n            label: intl.formatMessage(messages.remove),\n            props: {\n              isDisabled: !selectedRoles || !selectedRoles.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleRolesSelected = selectedRoles.length > 1;\n              setConfirmDelete(\n                () => () =>\n                  removeRoles(\n                    fetchUuid,\n                    selectedRoles.map((role) => role.uuid),\n                    removeRolesCallback\n                  )\n              );\n              setDeleteInfo({\n                title: intl.formatMessage(multipleRolesSelected ? messages.removeRolesQuestion : messages.removeRoleQuestion),\n                confirmButtonLabel: intl.formatMessage(multipleRolesSelected ? messages.removeRoles : messages.removeRole),\n                text: removeModalText(\n                  name,\n                  multipleRolesSelected ? selectedRoles.length : roles.find((role) => role.uuid === selectedRoles[0].uuid).name,\n                  multipleRolesSelected\n                ),\n              });\n\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        isOpen={showRemoveModal}\n        isChanged={isChanged}\n        isDefault={isPlatformDefault || isAdminDefault}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isPlatformDefault && !isChanged);\n        }}\n      />\n\n      <Section type=\"content\" id=\"tab-roles\">\n        <TableToolbarView\n          columns={columns}\n          isSelectable={hasPermissions.current && !isAdminDefault}\n          rows={createRows(groupId, roles, selectedRoles)}\n          data={roles}\n          filterValue={filterValue}\n          fetchData={(config) => {\n            fetchGroupRoles(config)(fetchUuid);\n          }}\n          emptyFilters={{ name: '', description: '' }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedRoles}\n          setCheckedItems={setCheckedItems}\n          titlePlural={intl.formatMessage(messages.roles).toLowerCase()}\n          titleSingular={intl.formatMessage(messages.role)}\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          ouiaId=\"roles-table\"\n          emptyProps={{\n            title: intl.formatMessage(messages.noGroupRoles),\n            description: [intl.formatMessage(isAdminDefault ? messages.contactServiceTeamForRoles : messages.addRoleToConfigureAccess), ''],\n          }}\n          filters={[\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue },\n          ]}\n          tableId=\"group-roles\"\n        />\n      </Section>\n      <Suspense>\n        <Outlet\n          context={{\n            [pathnames['group-roles-edit-group'].path]: {\n              group,\n              cancelRoute: pathnames['group-detail-roles'].link.replace(':groupId', groupId),\n              postMethod: () => dispatch(fetchGroup(fetchUuid)),\n            },\n            [pathnames['group-roles-remove-group'].path]: {\n              postMethod: () => dispatch(fetchGroups({ ...groupsPagination, offset: 0, filters: groupsFilters, usesMetaInURL: true, chrome })),\n              cancelRoute: pathnames['group-detail-roles'].link.replace(':groupId', groupId),\n              submitRoute: getBackRoute(pathnames.groups.link, { ...groupsPagination, offset: 0 }, groupsFilters),\n              groupsUuid: [group],\n            },\n            [pathnames['group-add-roles'].path]: {\n              afterSubmit: () => {\n                if (isPlatformDefault || isAdminDefault) {\n                  fetchSystGroup().then(({ value: { data } }) => {\n                    fetchGroupRoles(pagination)(data[0].uuid);\n                    fetchGroupData(data[0].uuid);\n                  });\n                } else {\n                  fetchGroupRoles(pagination)(groupId);\n                  fetchGroupData();\n                }\n              },\n              fetchUuid: systemGroupUuid,\n              selectedRoles: selectedAddRoles,\n              setSelectedRoles: setSelectedAddRoles,\n              closeUrl: pathnames['group-detail'].link.replace(':groupId', isPlatformDefault ? DEFAULT_ACCESS_GROUP_ID : groupId),\n              addRolesToGroup: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n              groupName: group.name,\n              isDefault: isPlatformDefault || isAdminDefault,\n              isChanged,\n              onDefaultGroupChanged,\n            },\n          }}\n        />\n      </Suspense>\n    </React.Fragment>\n  );\n};\n\nGroupRoles.propTypes = {\n  searchFilter: PropTypes.string,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  onDefaultGroupChanged: PropTypes.func,\n};\n\nGroupRoles.defaultProps = {\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n};\n\nexport default GroupRoles;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n"],"names":["ExclamationTriangleIconConfig","name","height","width","svgPath","yOffset","xOffset","ExclamationTriangleIcon","PlusCircleIconConfig","PlusCircleIcon","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","value","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","children","addTooltip","_a","_b","dateObj","dateType","toString","className","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","sectionClasses","undefined","linkBasename","navigate","useNavigate","to","options","mergeToBasename","RemoveModal","title","text","onClose","onSubmit","isOpen","confirmButtonLabel","withCheckbox","intl","useIntl","useState","checked","setChecked","Modal","variant","ModalVariant","actions","Button","key","ouiaId","isDisabled","onClick","formatMessage","messages","Split","hasGutter","SplitItem","isFilled","Stack","TextContent","Checkbox","isChecked","onChange","label","id","propTypes","PropTypes","defaultProps","DefaultGroupChange","Text","values","b","RemoveRoles","isDefault","isChanged","showConfirmModal","setShowConfirmModal","createRows","groupId","data","checkedRows","uuid","display_name","modified","cells","Fragment","AppLink","pathnames","replace","DateFormat","getDateFormat","selected","Boolean","find","row","generateOuiaID","toLowerCase","includes","addRoleButton","customTooltipText","addRoleButtonContent","isAriaDisabled","reducer","groupReducer","selectedGroup","systemGroup","groups","roles","pagination","defaultSettings","count","groupsPagination","meta","groupsFilters","filters","isLoading","loaded","isPlatformDefault","platform_default","isAdminDefault","admin_default","system","disableAddRoles","keys","addRoles","systemGroupUuid","group","GroupRoles","onDefaultGroupChanged","chrome","useChrome","dispatch","useDispatch","useAppNavigate","useParams","descriptionValue","setDescriptionValue","filterValue","setFilterValue","selectedRoles","setSelectedRoles","selectedAddRoles","setSelectedAddRoles","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","useContext","PermissionsContext","userAccessAdministrator","orgAdmin","hasPermissions","useRef","useSelector","reloadWrapper","event","callback","payload","then","fetchAddGroupRoles","fetchAddRolesForGroup","fetchGroupData","customId","fetchGroup","fetchSystGroup","fetchSystemGroup","removeRoles","removeRolesFromGroup","fetchGroupRoles","config","fetchRolesForGroup","columns","orderBy","useEffect","DEFAULT_ACCESS_GROUP_ID","current","removeModalText","role","plural","fetchUuid","removeRolesCallback","offset","Section","isSelectable","rows","fetchData","emptyFilters","setCheckedItems","newSelection","map","titlePlural","titleSingular","toolbarButtons","multipleRolesSelected","actionResolver","_event","_rowId","emptyProps","tableId","Suspense","Outlet","context","cancelRoute","postMethod","fetchGroups","usesMetaInURL","submitRoute","getBackRoute","groupsUuid","afterSubmit","closeUrl","addRolesToGroup","groupName","searchFilter","limit","defaultCompactSettings","FormattedMessage","textComponent","defaultMessage","tagName","Component","nodes","ignoreTag","Array","isArray","displayName","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps"],"sourceRoot":""}
{"version":3,"file":"js/2370.7b5a6d3bf61bd94cc3f2.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/WarningModal/WarningModal.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/dropdownConstants.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Backdrop/backdrop.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/ModalBox/modal-box.mjs","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/decorators/wrappable.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/smart-components/group/member/group-members.js","webpack:///./src/smart-components/group/member/member-table-helpers.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalVariant, ButtonVariant, Checkbox } from '@patternfly/react-core';\nconst WarningModal = (_a) => {\n    var { isOpen, onConfirm, onClose, children, confirmButtonLabel = 'Confirm', cancelButtonLabel = 'Cancel', variant = ModalVariant.small, titleIconVariant = 'warning', withCheckbox = false, checkboxLabel = 'I understand that this action cannot be undone', confirmButtonVariant = ButtonVariant.primary, ouiaId = 'WarningModal' } = _a, props = __rest(_a, [\"isOpen\", \"onConfirm\", \"onClose\", \"children\", \"confirmButtonLabel\", \"cancelButtonLabel\", \"variant\", \"titleIconVariant\", \"withCheckbox\", \"checkboxLabel\", \"confirmButtonVariant\", \"ouiaId\"]);\n    const [checked, setChecked] = useState(false);\n    return (React.createElement(Modal, Object.assign({ variant: variant, isOpen: isOpen, onClose: onClose, onEscapePress: onClose, titleIconVariant: titleIconVariant, actions: [\n            React.createElement(Button, { ouiaId: `${ouiaId}-confirm-button`, key: \"confirm\", variant: confirmButtonVariant, onClick: () => {\n                    onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm();\n                    setChecked(false);\n                }, isDisabled: withCheckbox && !checked }, confirmButtonLabel),\n            React.createElement(Button, { ouiaId: `${ouiaId}-cancel-button`, key: \"cancel\", variant: ButtonVariant.link, onClick: onClose }, cancelButtonLabel),\n        ], ouiaId: ouiaId }, props),\n        children,\n        withCheckbox ? (React.createElement(Checkbox, { isChecked: checked, onChange: (_event, value) => setChecked(value), label: checkboxLabel, id: \"warning-modal-check\", className: \"pf-v5-u-mt-lg\", ouiaId: `${ouiaId}-confirm-checkbox` })) : null));\n};\nexport default WarningModal;\n","import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import './backdrop.css';\nexport default {\n  \"backdrop\": \"pf-v5-c-backdrop\",\n  \"backdropOpen\": \"pf-v5-c-backdrop__open\"\n};","import './modal-box.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"modalBox\": \"pf-v5-c-modal-box\",\n  \"modalBoxBody\": \"pf-v5-c-modal-box__body\",\n  \"modalBoxClose\": \"pf-v5-c-modal-box__close\",\n  \"modalBoxDescription\": \"pf-v5-c-modal-box__description\",\n  \"modalBoxFooter\": \"pf-v5-c-modal-box__footer\",\n  \"modalBoxHeader\": \"pf-v5-c-modal-box__header\",\n  \"modalBoxHeaderMain\": \"pf-v5-c-modal-box__header-main\",\n  \"modalBoxTitle\": \"pf-v5-c-modal-box__title\",\n  \"modalBoxTitleIcon\": \"pf-v5-c-modal-box__title-icon\",\n  \"modalBoxTitleText\": \"pf-v5-c-modal-box__title-text\",\n  \"modifiers\": {\n    \"sm\": \"pf-m-sm\",\n    \"md\": \"pf-m-md\",\n    \"lg\": \"pf-m-lg\",\n    \"alignTop\": \"pf-m-align-top\",\n    \"danger\": \"pf-m-danger\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"custom\": \"pf-m-custom\",\n    \"info\": \"pf-m-info\",\n    \"help\": \"pf-m-help\",\n    \"icon\": \"pf-m-icon\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import styles from '@patternfly/react-styles/css/components/Table/table';\nexport const breakWord = () => ({\n    className: styles.modifiers.breakWord\n});\nexport const fitContent = () => ({\n    className: styles.modifiers.fitContent\n});\nexport const nowrap = () => ({\n    className: styles.modifiers.nowrap\n});\nexport const truncate = () => ({\n    className: styles.modifiers.truncate\n});\nexport const wrappable = () => ({\n    className: styles.modifiers.wrap\n});\n//# sourceMappingURL=wrappable.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../Section/section.css';\nvar Section = function (_a) {\n    var _b;\n    var type = _a.type, children = _a.children, className = _a.className, props = __rest(_a, [\"type\", \"children\", \"className\"]);\n    var sectionClasses = classNames(className, (_b = {}, _b[\"ins-l-\".concat(type)] = type !== undefined, _b));\n    return (_jsxs(\"section\", __assign({}, props, { className: sectionClasses, children: [' ', children, ' '] })));\n};\nexport default Section;\n//# sourceMappingURL=Section.js.map","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        'data-is-active': PropTypes.bool,\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  className,\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n  toolbarChildren,\n}) => {\n  const intl = useIntl();\n  const isITLess = useFlag('platform.rbac.itless');\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n          toolbarChildren={toolbarChildren}\n        />\n        {isLoading ? (\n          <SkeletonTable\n            variant={isCompact ? TableVariant.compact : undefined}\n            rows={pagination?.limit}\n            columns={columns.map((item) => item.title)}\n          />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires, ...(isITLess && { username: data[_idx]?.username }) }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <div className={className}>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </div>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  className: propTypes.string,\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n  toolbarChildren: propTypes.func,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n  toolbarChildren: () => null,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n  toolbarChildren,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  >\n    {toolbarChildren()}\n  </PrimaryToolbar>\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n  toolbarChildren: PropTypes.func,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n  toolbarChildren: () => null,\n};\n\nexport default Toolbar;\n","import { nowrap } from '@patternfly/react-table';\nimport React, { Fragment, useState, useEffect, useContext, useRef, Suspense } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent, ButtonVariant } from '@patternfly/react-core';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport { createRows } from './member-table-helpers';\nimport { fetchMembersForGroup, removeMembersFromGroup, fetchGroups, fetchGroup } from '../../../redux/actions/group-actions';\nimport { getBackRoute } from '../../../helpers/shared/helpers';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\n\nconst selector = ({ groupReducer: { selectedGroup, groups } }) => ({\n  members: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  groupsPagination: groups.pagination || groups.meta,\n  groupsFilters: groups.filters,\n  group: selectedGroup,\n  adminDefault: selectedGroup.admin_default,\n  platformDefault: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading,\n});\n\nconst removeModalText = (name, group, plural) => (\n  <FormattedMessage\n    {...(plural ? messages.removeMembersText : messages.removeMemberText)}\n    values={{\n      b: (text) => <b>{text}</b>,\n      name,\n      group,\n    }}\n  />\n);\nconst GroupMembers = () => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  const { groupId } = useParams();\n  const { members, pagination, groupsPagination, groupsFilters, isLoading, adminDefault, platformDefault, group } = useSelector(\n    selector,\n    shallowEqual\n  );\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n\n  const columns = [\n    { title: intl.formatMessage(messages.status), transforms: [nowrap] },\n    { title: intl.formatMessage(messages.username) },\n    { title: intl.formatMessage(messages.email) },\n    { title: intl.formatMessage(messages.lastName) },\n    { title: intl.formatMessage(messages.firstName) },\n  ];\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options = pagination) => {\n    dispatch(fetchMembersForGroup(groupId, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const setCheckedMembers = (newSelection) => {\n    setSelectedMembers((members) => newSelection(members));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(groupId, userNames)).then(() => {\n      setSelectedMembers([]);\n      fetchData(undefined, { ...pagination, offset: 0 });\n      dispatch(fetchGroups({ usesMetaInURL: true, chrome }));\n    });\n  };\n\n  const actionResolver = () =>\n    !hasPermissions.current\n      ? null\n      : [\n          {\n            title: intl.formatMessage(messages.remove),\n            onClick: (_event, _rowId, member) => {\n              setConfirmDelete(() => () => removeMembers([member.username.title]));\n              setDeleteInfo({\n                title: intl.formatMessage(messages.removeMemberQuestion),\n                text: removeModalText(member.username.title, group.name, false),\n                confirmButtonLabel: intl.formatMessage(messages.removeMember),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ];\n\n  const navigate = useAppNavigate();\n\n  const toolbarButtons = () => [\n    ...(hasPermissions.current\n      ? [\n          <AppLink to={pathnames['group-add-members'].link.replace(':groupId', groupId)} key=\"remove-from-group\" className=\"rbac-m-hide-on-sm\">\n            <Button variant=\"primary\" aria-label=\"Add member\">\n              {intl.formatMessage(messages.addMember)}\n            </Button>\n          </AppLink>,\n          {\n            label: intl.formatMessage(messages.addMember),\n            props: {\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => {\n              () => navigate(pathnames['group-add-members'].link.replace(':groupId', groupId));\n            },\n          },\n          {\n            label: intl.formatMessage(messages.remove),\n            props: {\n              isDisabled: !selectedMembers || !selectedMembers.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleMembersSelected = selectedMembers.length > 1;\n              const removeText = intl.formatMessage(multipleMembersSelected ? messages.removeMembersQuestion : messages.removeMemberQuestion);\n              setConfirmDelete(() => () => removeMembers(selectedMembers.map((user) => user.uuid)));\n              setDeleteInfo({\n                title: removeText,\n                confirmButtonLabel: removeText,\n                text: removeModalText(\n                  multipleMembersSelected ? selectedMembers.length : selectedMembers[0].uuid,\n                  group.name,\n                  multipleMembersSelected\n                ),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n  const data = (members || []).map((user) => ({ ...user, uuid: user.username }));\n  const rows = createRows(data, selectedMembers);\n\n  return (\n    <Fragment>\n      <WarningModal\n        title={deleteInfo.title}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        confirmButtonVariant={ButtonVariant.danger}\n        isOpen={showRemoveModal}\n        onClose={() => setShowRemoveModal(false)}\n        onConfirm={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        }}\n      >\n        {deleteInfo.text}\n      </WarningModal>\n      <Section type=\"content\" id=\"tab-principals\">\n        {platformDefault || adminDefault ? (\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={TextVariants.h1}>\n                    {intl.formatMessage(adminDefault ? messages.allOrgAdminsAreMembers : messages.allUsersAreMembers)}\n                  </Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card>\n        ) : (\n          <TableToolbarView\n            data={data}\n            isSelectable={hasPermissions.current}\n            rows={rows}\n            columns={columns}\n            actionResolver={actionResolver}\n            filterPlaceholder={intl.formatMessage(messages.username).toLowerCase()}\n            titlePlural={intl.formatMessage(messages.members).toLowerCase()}\n            titleSingular={intl.formatMessage(messages.member)}\n            ouiaId=\"members-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={({ limit, offset, name }) => fetchData(name, { limit, offset })}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            checkedRows={selectedMembers}\n            isLoading={isLoading}\n            rowWrapper={UsersRow}\n            setCheckedItems={setCheckedMembers}\n            toolbarButtons={toolbarButtons}\n            emptyProps={{ title: intl.formatMessage(messages.noGroupMembers), description: [intl.formatMessage(messages.addUserToConfigure), ''] }}\n            tableId=\"group-members\"\n          />\n        )}\n      </Section>\n      <Suspense>\n        <Outlet\n          context={{\n            [pathnames['group-members-edit-group'].path]: {\n              group,\n              cancelRoute: pathnames['group-detail-members'].link.replace(':groupId', groupId),\n              postMethod: () => dispatch(fetchGroup(group.uuid)),\n            },\n            [pathnames['group-members-remove-group'].path]: {\n              postMethod: () => dispatch(fetchGroups({ ...groupsPagination, offset: 0, filters: groupsFilters, usesMetaInURL: true, chrome })),\n              cancelRoute: pathnames['group-detail-members'].link.replace(':groupId', groupId),\n              submitRoute: getBackRoute(pathnames.groups.link, { ...groupsPagination, offset: 0 }, groupsFilters),\n              groupsUuid: [group],\n            },\n            [pathnames['group-add-members'].path]: {\n              fetchData,\n              cancelRoute: pathnames['group-detail-members'].link.replace(':groupId', groupId),\n            },\n          }}\n        />\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default GroupMembers;\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const createRows = (data, checkedRows = []) => {\n  const intl = useIntl();\n  return data.reduce(\n    (acc, { is_active: isActive, username, email, first_name: firstName, last_name: lastName }) => [\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [\n          {\n            title: <Label color={isActive && 'green'}>{intl.formatMessage(isActive ? messages.active : messages.inactive)}</Label>,\n            props: {\n              data: { isActive },\n            },\n          },\n          username,\n          email,\n          lastName,\n          firstName,\n        ],\n        selected: checkedRows.find((row) => row.uuid === username),\n      },\n    ],\n    []\n  );\n};\n"],"names":["_a","isOpen","onConfirm","onClose","children","confirmButtonLabel","cancelButtonLabel","variant","Modal","small","titleIconVariant","withCheckbox","checkboxLabel","confirmButtonVariant","Button","primary","ouiaId","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","checked","setChecked","useState","assign","onEscapePress","actions","key","onClick","isDisabled","link","Checkbox","isChecked","onChange","_event","value","label","id","className","DropdownPosition","DropdownDirection","DropdownContext","onSelect","event","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","menuComponent","DropdownArrowContext","keyHandler","sendRef","nowrap","modifiers","__assign","n","arguments","apply","this","_b","type","sectionClasses","concat","undefined","linkBasename","navigate","useNavigate","to","options","UsersRow","row","status","isActive","propTypes","data","title","icon","description","EmptyState","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","map","text","EmptyStateFooter","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","tableId","containerRef","textFilterRef","toolbarChildren","intl","isITLess","useFlag","every","formatMessage","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","item","orderBy","direction","index","Fragment","compact","limit","canSelectAll","toLowerCase","_e","isSelected","_idx","uuid","cells","name","requires","username","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","EmptyStateActions","offset","clearAllFilters","colSpan","noBottom","Pagination","dropDirection","directions","isRequired","count","toggleTemplate","defaultProps","paginationBuilder","itemCount","perPage","page","onSetPage","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","filterConfigBuilder","filterItems","selected","placeholder","groups","innerRef","filterValues","filterByKey","filterBy","newFilter","Array","isArray","keys","pickBy","reduce","acc","curr","then","current","focus","activeFiltersConfigBuilder","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","selector","groupReducer","selectedGroup","members","meta","groupsPagination","groupsFilters","group","adminDefault","admin_default","platformDefault","platform_default","removeModalText","plural","removeMembersText","removeMemberText","values","b","chrome","useChrome","selectedMembers","setSelectedMembers","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","groupId","useParams","useSelector","shallowEqual","userAccessAdministrator","orgAdmin","useContext","hasPermissions","useRef","transforms","email","lastName","firstName","dispatch","useDispatch","usernames","useEffect","removeMembers","userNames","usesMetaInURL","useAppNavigate","user","is_active","first_name","last_name","Label","color","active","inactive","find","createRows","WarningModal","ButtonVariant","danger","Section","Card","CardBody","Bullseye","TextContent","Text","component","TextVariants","h1","allOrgAdminsAreMembers","allUsersAreMembers","remove","_rowId","member","removeMemberQuestion","removeMember","newSelection","AppLink","pathnames","replace","addMember","multipleMembersSelected","removeText","removeMembersQuestion","noGroupMembers","addUserToConfigure","Suspense","Outlet","context","path","cancelRoute","postMethod","submitRoute","groupsUuid"],"sourceRoot":""}
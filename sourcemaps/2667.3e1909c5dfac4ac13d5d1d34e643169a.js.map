{"version":3,"file":"js/2667.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/Radio/radio.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Radio/Radio.js","webpack:///./src/smart-components/role/add-role/validators.js","webpack:///./src/smart-components/role/add-role/review-template.js","webpack:///./src/smart-components/role/add-role/cost-resources-template.js","webpack:///./src/smart-components/role/add-role/add-role-success.js","webpack:///./src/smart-components/role/add-role/base-role-table.js","webpack:///./src/smart-components/role/add-role/review.js","webpack:///./src/smart-components/role/add-role/set-name.js","webpack:///./src/smart-components/common/silent-error-boundary.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/add-role/type-selector.js","webpack:///./src/smart-components/role/add-role/schema.js"],"sourcesContent":["import './radio.css';\nexport default {\n  \"modifiers\": {\n    \"standalone\": \"pf-m-standalone\",\n    \"disabled\": \"pf-m-disabled\"\n  },\n  \"radio\": \"pf-v5-c-radio\",\n  \"radioBody\": \"pf-v5-c-radio__body\",\n  \"radioDescription\": \"pf-v5-c-radio__description\",\n  \"radioInput\": \"pf-v5-c-radio__input\",\n  \"radioLabel\": \"pf-v5-c-radio__label\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nclass Radio extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event, event.currentTarget.checked);\n        };\n        if (!props.label && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('Radio:', 'Radio requires an aria-label to be specified');\n        }\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Radio.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, checked, className, inputClassName, defaultChecked, isLabelWrapped, isLabelBeforeButton, isChecked, isDisabled, isValid, label, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onChange, description, body, ouiaId, ouiaSafe = true, component } = _a, props = __rest(_a, ['aria-label', \"checked\", \"className\", \"inputClassName\", \"defaultChecked\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isChecked\", \"isDisabled\", \"isValid\", \"label\", \"onChange\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\", \"component\"]);\n        if (!props.id) {\n            // eslint-disable-next-line no-console\n            console.error('Radio:', 'id is required to make input accessible');\n        }\n        const inputRendered = (React.createElement(\"input\", Object.assign({}, props, { className: css(styles.radioInput, inputClassName), type: \"radio\", onChange: this.handleChange, \"aria-invalid\": !isValid, disabled: isDisabled, checked: checked || isChecked }, (checked === undefined && { defaultChecked }), (!label && { 'aria-label': ariaLabel }), getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))));\n        const wrapWithLabel = (isLabelWrapped && !component) || component === 'label';\n        const Label = wrapWithLabel ? 'span' : 'label';\n        const labelRendered = label ? (React.createElement(Label, { className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled), htmlFor: !wrapWithLabel ? props.id : undefined }, label)) : null;\n        const Component = component !== null && component !== void 0 ? component : (wrapWithLabel ? 'label' : 'div');\n        return (React.createElement(Component, { className: css(styles.radio, !label && styles.modifiers.standalone, className), htmlFor: wrapWithLabel ? props.id : undefined },\n            isLabelBeforeButton ? (React.createElement(React.Fragment, null,\n                labelRendered,\n                inputRendered)) : (React.createElement(React.Fragment, null,\n                inputRendered,\n                labelRendered)),\n            description && React.createElement(\"span\", { className: css(styles.radioDescription) }, description),\n            body && React.createElement(\"span\", { className: css(styles.radioBody) }, body)));\n    }\n}\nRadio.displayName = 'Radio';\nRadio.defaultProps = {\n    className: '',\n    isDisabled: false,\n    isValid: true,\n    onChange: () => { }\n};\nexport { Radio };\n//# sourceMappingURL=Radio.js.map","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchRoles } from '../../../helpers/role/role-helper';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const asyncValidator = async (roleName) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  if (!roleName) {\n    return undefined;\n  }\n\n  const response = await fetchRoles({ limit: 10, offset: 0, name: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  // it has to be here twice because API is using AND instead of OR\n  const responseName = await fetchRoles({ limit: 10, offset: 0, displayName: roleName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (response?.data?.length > 0 || responseName?.data?.length > 0) {\n    throw intl.formatMessage(messages.nameAlreadyTaken);\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce(asyncValidator);\n\nexport const ValidatorReset = ({ name }) => {\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setTimeout(() => formOptions.change(name, '1'));\n\n    return () => formOptions.change(name, '');\n  }, []);\n\n  return null;\n};\n\nValidatorReset.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner, Text, TextContent, Title } from '@patternfly/react-core';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { asyncValidator } from './validators';\nimport './review.scss';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport WizardError from '../../common/wizard-error';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  const { submitting, error, setWizardError } = useContext(AddRoleWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['role-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  if (error === true) {\n    return (\n      <WizardError\n        context={AddRoleWizardContext}\n        title={intl.formatMessage(messages.roleNameTakenTitle)}\n        text={intl.formatMessage(messages.roleNameTakenText)}\n      />\n    );\n  }\n\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-sm\">\n        {intl.formatMessage(messages.reviewDetails)}\n      </Title>\n      <TextContent className=\"pf-v5-u-mb-md\">\n        <Text>{intl.formatMessage(messages.reviewRoleDetails)}</Text>\n      </TextContent>\n      {formFields?.[0]?.[0]}\n    </div>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CostResourcesTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-lg\">\n        {intl.formatMessage(messages.defineCostResources)}\n      </Title>\n      {formFields}\n    </div>\n  );\n};\n\nCostResourcesTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default CostResourcesTemplate;\n","import React, { useContext } from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateActions,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../../Messages';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport pathnames from '../../../utilities/pathnames';\n\nconst AddRoleSuccess = ({ onClose }) => {\n  const { setHideForm, setWizardSuccess } = useContext(AddRoleWizardContext);\n  const intl = useIntl();\n  return (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader\n        titleText={<>{intl.formatMessage(messages.roleCreatedSuccessfully)}</>}\n        icon={<EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateBody></EmptyStateBody>\n      <EmptyStateFooter>\n        <Button onClick={onClose} variant=\"primary\">\n          {intl.formatMessage(messages.exit)}\n        </Button>\n        <EmptyStateActions>\n          <Button\n            onClick={() => {\n              setHideForm(false);\n              setWizardSuccess(false);\n            }}\n            variant=\"link\"\n          >\n            {intl.formatMessage(messages.createAnotherRole)}\n          </Button>\n          <Button component={(props) => <AppLink to={pathnames.groups.link} {...props} />} variant=\"link\">\n            {intl.formatMessage(messages.addRoleToGroup)}\n          </Button>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nAddRoleSuccess.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddRoleSuccess;\n","import React, { useState, useEffect } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Radio, Alert } from '@patternfly/react-core';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesForWizard } from '../../../redux/actions/role-actions';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { sortable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst selector = ({ roleReducer: { rolesForWizard, isWizardLoading } }) => ({\n  roles: rolesForWizard.data,\n  pagination: rolesForWizard.meta,\n  isWizardLoading,\n});\n\nconst BaseRoleTable = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (options) => dispatch(fetchRolesForWizard(options));\n  const [filterValue, setFilterValue] = useState('');\n  const { roles, pagination, isWizardLoading } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const columns = [\n    { title: '' },\n    { title: intl.formatMessage(messages.name), key: 'display_name', transforms: [sortable] },\n    { title: intl.formatMessage(messages.description) },\n  ];\n\n  const [sortByState, setSortByState] = useState({ index: 1, direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n\n  useEffect(() => {\n    fetchData({\n      limit: 50,\n      offset: 0,\n      itemCount: 0,\n      orderBy,\n    });\n  }, []);\n\n  const createRows = (roles) =>\n    roles.map((role) => ({\n      cells: [\n        {\n          title: (\n            <Radio\n              id={`${role.uuid}-radio`}\n              name={`${role.name}-radio`}\n              aria-label={`${role.name}-radio`}\n              ouiaId={`${role.name}-radio`}\n              value={role.uuid}\n              isChecked={input.value.uuid === role.uuid}\n              onChange={() => {\n                formOptions.batch(() => {\n                  input.onChange(role);\n                  formOptions.change('role-copy-name', `Copy of ${role.display_name || role.name}`);\n                  formOptions.change('role-copy-description', role.description);\n                  formOptions.change('add-permissions-table', []);\n                  formOptions.change('base-permissions-loaded', false);\n                  formOptions.change('not-allowed-permissions', []);\n                });\n              }}\n            />\n          ),\n          props: { className: 'pf-v5-c-table__check' },\n        },\n        role.display_name || role.name,\n        role.description,\n      ],\n    }));\n  return (\n    <div>\n      <Alert variant=\"info\" isInline title={intl.formatMessage(messages.granularPermissionsWillBeCopied)} />\n      <TableToolbarView\n        columns={columns}\n        rows={createRows(roles)}\n        data={roles}\n        fetchData={(config) => {\n          fetchData(mappedProps(config));\n        }}\n        filterValue={filterValue}\n        setFilterValue={({ name }) => setFilterValue(name)}\n        isLoading={isWizardLoading}\n        sortBy={sortByState}\n        onSort={(e, index, direction) => {\n          const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n          setSortByState({ index, direction });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            orderBy,\n          });\n        }}\n        pagination={pagination}\n        titlePlural={intl.formatMessage(messages.roles)}\n        titleSingular={intl.formatMessage(messages.role)}\n        filterPlaceholder={intl.formatMessage(messages.roleName).toLowerCase()}\n        ouiaId=\"roles-table\"\n        isCompact\n        tableId=\"base-role\"\n      />\n    </div>\n  );\n};\n\nexport default BaseRoleTable;\n","import React from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Stack, StackItem, Grid, GridItem, Text, TextVariants } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './review.scss';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nconst stickyTable = (columns, rows) => (\n  <div className=\"rbac-c-sticky\">\n    <Grid className=\"rbac-c-sticky--title\">\n      {columns.map((col) => (\n        <GridItem span={12 / columns.length} key={col}>\n          {col}\n        </GridItem>\n      ))}\n    </Grid>\n    <Grid className=\"rbac-c-sticky--data\">\n      {rows.map((row) =>\n        row.cells.map((cell) => (\n          <GridItem span={12 / columns.length} key={cell}>\n            {cell}\n          </GridItem>\n        ))\n      )}\n    </Grid>\n  </div>\n);\n\nconst ReviewStep = () => {\n  const intl = useIntl();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'role-copy-name': copyName,\n    'role-copy-description': copyDescription,\n    'add-permissions-table': permissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n    'inventory-group-permissions': inventoryGroupPermissions,\n    'role-type': type,\n  } = formOptions.getState().values;\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n  const rows = permissions.map((permission) => ({\n    cells: permission.uuid.split(':'),\n  }));\n\n  const resourceDefinitionsRows = (resourceDefinitions || []).map(({ permission, resources }) => ({\n    cells: [permission, resources.join(', ')],\n  }));\n\n  const groupPermissionsRows = (inventoryGroupPermissions || []).map(({ permission, groups }) => ({\n    cells: [permission, groups?.map((group) => (group?.id === null ? intl.formatMessage(messages.ungroupedSystems) : group?.name)).join(', ')],\n  }));\n\n  return (\n    <React.Fragment>\n      <Stack>\n        <StackItem className=\"rbac-l-stack__item-summary\">\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.name)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? name : copyName}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.description)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              <Text component={TextVariants.p}>{type === 'create' ? description : copyDescription}</Text>\n            </GridItem>\n          </Grid>\n          <Grid>\n            <GridItem sm={12} md={2}>\n              <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                {intl.formatMessage(messages.permissions)}\n              </Text>\n            </GridItem>\n            <GridItem sm={12} md={10}>\n              {stickyTable(columns, rows)}\n            </GridItem>\n          </Grid>\n          {inventoryGroupPermissions && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable(\n                  [\n                    intl.formatMessage(messages.permission),\n                    intl.formatMessage(enableWorkspacesNameChange ? messages.workspacesDefinition : messages.groupDefinition),\n                  ],\n                  groupPermissionsRows\n                )}\n              </GridItem>\n            </Grid>\n          )}\n          {hasCostResources && (\n            <Grid>\n              <GridItem sm={12} md={2}>\n                <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem sm={12} md={10}>\n                {stickyTable([intl.formatMessage(messages.permission), intl.formatMessage(messages.resourceDefinitions)], resourceDefinitionsRows)}\n              </GridItem>\n            </Grid>\n          )}\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { FormHelperText, HelperText, HelperTextItem, Stack, StackItem } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { debouncedAsyncValidator } from './validators';\nimport { trimAll } from '../../../helpers/shared/helpers';\nimport messages from '../../../Messages';\n\nconst roleNameValidated = (roleName, roleNameError) => (roleName === undefined || roleNameError || roleName?.length > 150 ? 'error' : 'default');\nconst roleDescriptionValidated = (roleDescription) => (roleDescription?.length > 150 ? 'error' : 'default');\n\nconst SetName = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const { 'role-name': name, 'role-description': description } = formOptions.getState().values;\n  const [roleName, setRoleName] = useState(name || '');\n  const [roleNameError, setRoleNameError] = useState();\n  const [roleDescription, setRoleDescription] = useState(description);\n\n  const processRoleName = (value) => {\n    const trimmedValue = trimAll(value);\n    input.onChange(undefined);\n    debouncedAsyncValidator(trimmedValue)\n      .then(() => {\n        input.onChange(trimmedValue);\n        setRoleNameError(undefined);\n      })\n      .catch((error) => {\n        setRoleNameError(error);\n        input.onChange(undefined);\n      });\n    setRoleName(value);\n  };\n\n  useEffect(() => {\n    roleName?.length > 0 && processRoleName(roleName);\n  }, []);\n\n  const roleNameValid = roleNameValidated(roleName, roleNameError);\n  const roleDescriptionValid = roleDescriptionValidated(roleDescription);\n  return (\n    <Stack hasGutter>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <FormGroup label={intl.formatMessage(messages.roleName)} isRequired>\n          <TextInput\n            id=\"role-name\"\n            value={roleName}\n            type=\"text\"\n            validated={roleNameValid}\n            onBlur={() => roleName === '' && setRoleName(undefined)}\n            onChange={(_event, value) => processRoleName(value)}\n            aria-label=\"Role name\"\n          />\n          {roleNameValid === 'error' && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant={roleNameValid}>{roleName ? roleNameError : intl.formatMessage(messages.required)}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n      <StackItem>\n        <FormGroup label={intl.formatMessage(messages.roleDescription)}>\n          <TextArea\n            id=\"role-description\"\n            value={roleDescription}\n            validated={roleDescriptionValid}\n            onChange={(_event, value) => {\n              setRoleDescription(value);\n              formOptions.change('role-description', value);\n            }}\n            aria-label=\"Role description\"\n            resizeOrientation=\"vertical\"\n          />\n          {roleDescriptionValid === 'error' && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant={roleDescriptionValid}>{intl.formatMessage(messages.maxCharactersWarning, { number: 150 })}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSetName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetName;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SilentErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error) {\n    /**\n     * Propagate error if it does not match the configuration\n     */\n    if (!error.message.includes(this.props.silentErrorString)) {\n      this.setState({ hasError: false });\n      throw error;\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Silently fail\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n\nSilentErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n  silentErrorString: PropTypes.string.isRequired,\n};\n\nexport default SilentErrorBoundary;\n","import React, { useState, useEffect, useRef, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { Wizard } from '@patternfly/react-core/deprecated';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { schemaBuilder } from './schema';\nimport { createRole, fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport AddRoleSuccess from './add-role-success';\nimport BaseRoleTable from './base-role-table';\nimport AddPermissionsTable from './add-permissions';\nimport ReviewStep from './review';\nimport InventoryGroupsRole from './inventory-groups-role';\nimport CostResources from './cost-resources';\nimport TypeSelector from './type-selector';\nimport SetName from './set-name';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport SilentErrorBoundary from '../../common/silent-error-boundary';\nimport messages from '../../../Messages';\nimport paths from '../../../utilities/pathnames';\nimport './add-role-wizard.scss';\n\nexport const AddRoleWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  'set-name': SetName,\n  'base-role-table': BaseRoleTable,\n  'add-permissions-table': AddPermissionsTable,\n  'cost-resources': CostResources,\n  'inventory-groups-role': InventoryGroupsRole,\n  review: ReviewStep,\n  description: Description,\n  'type-selector': TypeSelector,\n};\n\nconst AddRoleWizard = ({ pagination, filters, orderBy }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const chrome = useChrome();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const container = useRef(document.createElement('div'));\n  const [schema, setSchema] = useState();\n\n  useEffect(() => {\n    setSchema(schemaBuilder(container.current, enableWorkspacesNameChange));\n  }, []);\n\n  const onClose = () =>\n    navigate({\n      pathname: paths.roles.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n\n  const onCancel = () => {\n    if (!wizardContextValue.success) {\n      dispatch(\n        addNotification({\n          variant: 'warning',\n          title: intl.formatMessage(messages.creatingRoleCanceled),\n          dismissDelay: 8000,\n        })\n      );\n    }\n\n    setCancelWarningVisible(false);\n\n    navigate({\n      pathname: paths.roles.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    const {\n      'role-name': name,\n      'role-description': description,\n      'role-copy-name': copyName,\n      'role-copy-description': copyDescription,\n      'add-permissions-table': permissions,\n      'inventory-groups-role': invResources,\n      'cost-resources': costResources,\n      'role-type': type,\n    } = formData;\n    const selectedPermissionIds = permissions.map((record) => record.uuid);\n\n    const roleData = {\n      applications: [...new Set(permissions.map(({ uuid: permission }) => permission.split(':')[0]))],\n      description: (type === 'create' ? description : copyDescription) || null,\n      name: type === 'create' ? name : copyName,\n      access: permissions.reduce(\n        (acc, { uuid: permission, requires = [] }) => [\n          ...acc,\n          ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => {\n            let attributeFilter;\n\n            if (permission.includes('cost-management')) {\n              attributeFilter = {\n                key: `cost-management.${permission.split(':')[1]}`,\n                operation: 'in',\n                value: costResources?.find((r) => r.permission === permission)?.resources,\n              };\n            } else if (permission.includes('inventory')) {\n              attributeFilter = {\n                key: 'group.id',\n                operation: 'in',\n                value: invResources?.find((g) => g.permission === permission)?.groups?.map((group) => group?.id),\n              };\n            }\n\n            return {\n              permission,\n              resourceDefinitions: attributeFilter ? [{ attributeFilter }] : [],\n            };\n          }),\n        ],\n        []\n      ),\n    };\n\n    return dispatch(createRole(roleData))\n      .then(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true }));\n        dispatch(fetchRolesWithPolicies({ limit: pagination.limit, orderBy, usesMetaInURL: true, chrome }));\n      })\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        dispatch(fetchRolesWithPolicies({ limit: pagination.limit, orderBy, usesMetaInURL: true, chrome }));\n        onClose();\n      });\n  };\n\n  if (!schema) {\n    return null;\n  }\n  return (\n    <AddRoleWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <SilentErrorBoundary silentErrorString=\"focus-trap\">\n        <WarningModal\n          title={intl.formatMessage(messages.exitItemCreation, { item: intl.formatMessage(messages.role).toLocaleLowerCase() })}\n          confirmButtonLabel={intl.formatMessage(messages.discard)}\n          isOpen={cancelWarningVisible}\n          onClose={() => {\n            container.current.hidden = false;\n            setCancelWarningVisible(false);\n          }}\n          onConfirm={onCancel}\n        >\n          {intl.formatMessage(messages.discardedInputsWarning)}\n        </WarningModal>\n      </SilentErrorBoundary>\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.createRole)}\n            isOpen\n            onClose={onClose}\n            steps={[\n              {\n                name: 'success',\n                component: <AddRoleSuccess onClose={onClose} />,\n                isFinishedStep: true,\n              },\n            ]}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          schema={schema}\n          container={container}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-type': 'create',\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            const showWarning = Boolean((values && values['role-name']) || values['role-description'] || values['copy-base-role']);\n            if (showWarning) {\n              container.current.hidden = true;\n              setCancelWarningVisible(true);\n            } else {\n              onCancel();\n            }\n          }}\n        />\n      )}\n    </AddRoleWizardContext.Provider>\n  );\n};\n\nAddRoleWizard.propTypes = {\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  orderBy: PropTypes.string,\n};\n\nexport default AddRoleWizard;\n","import React, { useState } from 'react';\nimport { Radio } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst TypeSelector = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const [checked, setChecked] = useState(formOptions.getState().values['role-type']);\n  const handleChange = (val) => {\n    setChecked(val);\n    input.onChange(val);\n    formOptions.change('add-permissions-table', []);\n    formOptions.change('base-permissions-loaded', false);\n    formOptions.change('not-allowed-permissions', []);\n  };\n\n  return (\n    <div>\n      <Radio\n        isChecked={checked === 'create'}\n        className=\"pf-v5-u-mb-sm\"\n        name=\"role-type-create\"\n        onChange={() => handleChange('create')}\n        label={intl.formatMessage(messages.createRoleFromScratch)}\n        id=\"role-type-create\"\n        value=\"create\"\n      />\n      <Radio\n        isChecked={checked === 'copy'}\n        name=\"role-type-copy\"\n        onChange={() => handleChange('copy')}\n        label={intl.formatMessage(messages.copyAnExistingRole)}\n        id=\"role-type-copy\"\n        value=\"copy\"\n      />\n    </div>\n  );\n};\n\nexport default TypeSelector;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport AddPermissionTemplate from './add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport CostResourcesTemplate from './cost-resources-template';\nimport { debouncedAsyncValidator, ValidatorReset } from './validators';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddRoleWizardContext } from './add-role-wizard';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\nimport { validateNextAddRolePermissionStep } from '../permission-wizard-helper';\nimport InventoryGroupsRoleTemplate from './inventory-groups-role-template';\n\nexport const schemaBuilder = (container, featureFlag) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.createRole),\n        style: { overflow: 'hidden' },\n        container,\n        fields: [\n          {\n            title: intl.formatMessage(messages.createRole),\n            name: 'step-1',\n            nextStep: {\n              when: 'role-type',\n              stepMapper: {\n                copy: 'name-and-description',\n                create: 'add-permissions',\n              },\n            },\n            fields: [\n              {\n                component: 'type-selector',\n                name: 'role-type',\n                isRequired: true,\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                component: 'set-name',\n                name: 'role-name',\n                type: 'text',\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                  {\n                    type: validatorTypes.MAX_LENGTH,\n                    threshold: 150,\n                  },\n                ],\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n              },\n              {\n                component: 'text-field',\n                name: 'role-description',\n                hideField: true,\n              },\n              {\n                component: 'base-role-table',\n                name: 'copy-base-role',\n                label: intl.formatMessage(messages.baseRole),\n                isRequired: true,\n                condition: {\n                  when: 'role-type',\n                  is: 'copy',\n                },\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                condition: {\n                  when: 'role-type',\n                  is: 'create',\n                },\n                component: 'description',\n                name: 'fixasyncvalidation',\n                Content: ValidatorReset,\n              },\n              {\n                condition: {\n                  when: 'role-type',\n                  is: 'copy',\n                },\n                component: 'description',\n                name: 'fixasyncvalidation2',\n                Content: ValidatorReset,\n              },\n            ],\n          },\n          {\n            title: intl.formatMessage(messages.nameAndDescription),\n            name: 'name-and-description',\n            nextStep: 'add-permissions',\n            fields: [\n              {\n                component: 'text-field',\n                name: 'role-copy-name',\n                type: 'text',\n                label: intl.formatMessage(messages.roleName),\n                isRequired: true,\n                validate: [\n                  debouncedAsyncValidator,\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n              {\n                component: 'text-field',\n                name: 'role-copy-description',\n                type: 'text',\n                label: intl.formatMessage(messages.roleDescription),\n                validate: [\n                  {\n                    type: 'max-length',\n                    threshold: 150,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('add-permissions', values),\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            title: intl.formatMessage(featureFlag ? messages.workspacesAccessTitle : messages.inventoryGroupsAccessTitle),\n            name: 'inventory-groups-role',\n            StepTemplate: InventoryGroupsRoleTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('inventory-groups-role', values),\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'cost-resources',\n                label: (\n                  <p className=\"pf-v5-u-mb-md\">\n                    {intl.formatMessage(featureFlag ? messages.applyWorkspacesRolePermission : messages.applyInventoryGroupsRolePermission)}\n                  </p>\n                ),\n              },\n              {\n                component: 'inventory-groups-role',\n                name: 'inventory-groups-role',\n                validate: [\n                  (value = []) =>\n                    value?.every(({ groups, permission }) => groups?.length > 0 && permission)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneInventoryGroup),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            StepTemplate: CostResourcesTemplate,\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p className=\"pf-v5-u-mb-md\">{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) =>\n                    value?.every(({ resources }) => resources?.length > 0) ? undefined : intl.formatMessage(messages.assignAtLeastOneResource),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            buttons: (props) => <ReviewStepButtons {...props} context={AddRoleWizardContext} />,\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n"],"names":["Radio","constructor","props","super","this","handleChange","event","onChange","currentTarget","checked","label","console","error","state","ouiaStateId","getDefaultOUIAId","displayName","render","_a","ariaLabel","className","inputClassName","defaultChecked","isLabelWrapped","isLabelBeforeButton","isChecked","isDisabled","isValid","description","body","ouiaId","ouiaSafe","component","__rest","id","inputRendered","Object","assign","css","type","disabled","undefined","getOUIAProps","wrapWithLabel","Label","labelRendered","htmlFor","Component","defaultProps","asyncValidator","async","roleName","cache","intl","locale","messages","response","limit","offset","name","nameMatch","catch","responseName","data","length","formatMessage","nameAlreadyTaken","debouncedAsyncValidator","ValidatorReset","formOptions","useEffect","setTimeout","change","propTypes","isRequired","ReviewTemplate","formFields","submitting","setWizardError","useContext","AddRoleWizardContext","getState","values","then","Bullseye","Spinner","size","context","title","roleNameTakenTitle","text","roleNameTakenText","Title","headingLevel","reviewDetails","TextContent","Text","reviewRoleDetails","CostResourcesTemplate","defineCostResources","AddRoleSuccess","onClose","setHideForm","setWizardSuccess","EmptyState","variant","lg","EmptyStateHeader","titleText","roleCreatedSuccessfully","icon","EmptyStateIcon","color","EmptyStateBody","EmptyStateFooter","Button","onClick","exit","EmptyStateActions","createAnotherRole","AppLink","to","pathnames","groups","link","addRoleToGroup","selector","roleReducer","rolesForWizard","isWizardLoading","roles","pagination","meta","stickyTable","columns","rows","Grid","map","col","GridItem","span","key","row","cells","cell","SetName","input","setRoleName","useState","roleNameError","setRoleNameError","roleDescription","setRoleDescription","processRoleName","value","trimmedValue","roleNameValid","roleNameValidated","roleDescriptionValid","roleDescriptionValidated","Stack","hasGutter","StackItem","FormGroup","TextInput","validated","onBlur","_event","FormHelperText","HelperText","HelperTextItem","required","TextArea","resizeOrientation","maxCharactersWarning","number","SilentErrorBoundary","hasError","getDerivedStateFromError","componentDidCatch","message","includes","silentErrorString","setState","children","createContext","success","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","dispatch","useDispatch","fetchData","options","filterValue","setFilterValue","useSelector","shallowEqual","transforms","sortable","sortByState","setSortByState","index","direction","orderBy","itemCount","Alert","isInline","granularPermissionsWillBeCopied","role","uuid","batch","display_name","createRows","config","isLoading","sortBy","onSort","e","titlePlural","titleSingular","filterPlaceholder","toLowerCase","isCompact","tableId","review","enableWorkspacesNameChange","useFlag","copyName","copyDescription","permissions","resourceDefinitions","hasCostResources","inventoryGroupPermissions","application","resourceType","operation","permission","split","resourceDefinitionsRows","resources","join","groupPermissionsRows","group","ungroupedSystems","sm","md","h4","p","workspacesDefinition","groupDefinition","setChecked","val","createRoleFromScratch","copyAnExistingRole","AddRoleWizard","filters","navigate","useAppNavigate","chrome","useChrome","wizardContextValue","setWizardContextValue","hideForm","cancelWarningVisible","setCancelWarningVisible","container","useRef","document","createElement","schema","setSchema","featureFlag","fields","isDynamic","inModal","showTitles","crossroads","createRole","style","overflow","nextStep","when","stepMapper","copy","create","validate","REQUIRED","MAX_LENGTH","threshold","condition","is","hideField","baseRole","nameAndDescription","addPermissions","StepTemplate","workspacesAccessTitle","inventoryGroupsAccessTitle","applyWorkspacesRolePermission","applyInventoryGroupsRolePermission","every","assignAtLeastOneInventoryGroup","applyCostPermissionText","assignAtLeastOneResource","buttons","schemaBuilder","current","pathname","search","page","per_page","onCancel","addNotification","creatingRoleCanceled","dismissDelay","Provider","prev","WarningModal","exitItemCreation","item","toLocaleLowerCase","confirmButtonLabel","discard","isOpen","hidden","onConfirm","discardedInputsWarning","Wizard","steps","isFinishedStep","subscription","initialValues","componentMapper","onSubmit","formData","invResources","costResources","selectedPermissionIds","record","roleData","applications","Set","access","reduce","acc","requires","filter","require","attributeFilter","find","r","g","usesMetaInURL","Boolean"],"sourceRoot":""}
{"version":3,"file":"js/6397.f9ad96ee27ebef5df31f.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/dropdownConstants.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Dark/DarkContext.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/helpers/role/inventory-helper.js","webpack:///./src/presentational-components/shared/breadcrumbs.js","webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/redux/actions/inventory-actions.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js","webpack:///./src/smart-components/role/role-resource-definitions.js"],"sourcesContent":["import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import React from 'react';\nvar DarkContext = React.createContext('light');\nexport default DarkContext;\n//# sourceMappingURL=DarkContext.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { DarkContext } from '../Dark';\nimport '../PageHeader/page-header.css';\nvar PageHeader = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    var pageHeaderClasses = classNames(className, 'pf-v5-l-page-header', 'pf-v5-c-page-header', 'pf-v5-l-page__main-section', 'pf-v5-c-page__main-section');\n    return (_jsx(DarkContext.Consumer, { children: function (theme) {\n            var _a, _b;\n            if (theme === void 0) { theme = 'light'; }\n            var themeClasses = classNames((_a = {}, _a[\"pf-m-\".concat(theme, \"-200\")] = theme === 'dark', _a), (_b = {}, _b[\"pf-m-light\"] = theme === 'light', _b));\n            return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses), \"widget-type\": \"InsightsPageHeader\", children: children })));\n        } }));\n};\nexport default PageHeader;\n//# sourceMappingURL=PageHeader.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title, TitleProps } from \"@patternfly/react-core/dist/dynamic/components/Title\";\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, { headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\", children: title }));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import flatten from 'lodash/flatten';\nimport { getInventoryGroupsApi, getInventoryResourceTypesApi } from '../shared/user-login';\n\nconst inventoryResourceTypesApi = getInventoryResourceTypesApi();\nconst inventoryGroupsApi = getInventoryGroupsApi();\n\nexport const getInventoryGroups = async ({ name, perPage, page, options } = {}) => {\n  return await inventoryResourceTypesApi.apiResourceTypeGetResourceTypeGroupsList(name, perPage, page, options);\n};\n\nexport const getInventoryGroupsDetails = async (groupsIds) => {\n  return await inventoryGroupsApi.apiGroupGetGroupsById(groupsIds);\n};\n\nexport const processResourceDefinitions = (resourceDefinitions) =>\n  resourceDefinitions ? flatten(resourceDefinitions.map((definition) => definition.attributeFilter.value)) : [];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return breadcrumbs ? (\n    <Breadcrumb>\n      {Object.values(breadcrumbs).map((item, index) =>\n        item.title ? (\n          <BreadcrumbItem key={item.title} isActive={item.isActive}>\n            {(item.to && (\n              <NavLink end to={item.to}>\n                {item.title}\n              </NavLink>\n            )) ||\n              item.title}\n          </BreadcrumbItem>\n        ) : (\n          <BreadcrumbPlaceholder key={index} />\n        )\n      )}\n    </Breadcrumb>\n  ) : null;\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object,\n};\n\nexport default RbacBreadcrumbs;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  className,\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n  toolbarChildren,\n}) => {\n  const intl = useIntl();\n  const isITLess = useFlag('platform.rbac.itless');\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n          toolbarChildren={toolbarChildren}\n        />\n        {isLoading ? (\n          <SkeletonTable\n            variant={isCompact ? TableVariant.compact : undefined}\n            rows={pagination?.limit}\n            columns={columns.map((item) => item.title)}\n          />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires, ...(isITLess && { username: data[_idx]?.username }) }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <div className={className}>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </div>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  className: propTypes.string,\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n  toolbarChildren: propTypes.func,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n  toolbarChildren: () => null,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n  toolbarChildren,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  >\n    {toolbarChildren()}\n  </PrimaryToolbar>\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n  toolbarChildren: PropTypes.func,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n  toolbarChildren: () => null,\n};\n\nexport default Toolbar;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrumbs';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children, breadcrumbs }) => (\n  <Fragment>\n    {breadcrumbs && (\n      <section className=\"pf-v5-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs {...breadcrumbs} />\n      </section>\n    )}\n    <PageHeader className=\"rbac-page-header\">{children}</PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool,\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false,\n};\n\nexport const TopToolbarTitle = ({ title, renderTitleTag, description, children }) => (\n  <Fragment>\n    <Flex>\n      <FlexItem className=\"pf-v5-u-mb-sm\">\n        <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n      </FlexItem>\n      <FlexItem alignSelf={{ modifier: 'alignSelfCenter' }}>{renderTitleTag && renderTitleTag()}</FlexItem>\n    </Flex>\n    {description && (\n      <TextContent className=\"rbac-page-header__description\">\n        {typeof description === 'string' ? <Text component={TextVariants.p}>{description}</Text> : description}\n      </TextContent>\n    )}\n    {children}\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  renderTitleTag: PropTypes.func,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n};\n","import * as ActionTypes from '../action-types';\nimport * as InventoryHelper from '../../helpers/role/inventory-helper';\n\nexport const fetchInventoryGroups = (permissions, config) => ({\n  type: ActionTypes.FETCH_INVENTORY_GROUPS,\n  meta: { permissions, config },\n  payload: InventoryHelper.getInventoryGroups(config),\n});\n\nexport const fetchInventoryGroupsDetails = (groupsIds) => {\n  return {\n    type: ActionTypes.FETCH_INVENTORY_GROUPS_DETAILS,\n    meta: { groupsIds },\n    payload: InventoryHelper.getInventoryGroupsDetails(groupsIds.filter((item) => item?.length > 0)),\n  };\n};\n","import messages from '../../Messages';\n\nconst INVENTORY_PREFIX = 'inventory';\nconst COST_MANAGEMENT_PREFIX = 'cost-management';\nconst HOSTS_TYPE = 'hosts';\n\nexport const isInventoryPermission = (permissionId) => permissionId.split(':')[0].includes(INVENTORY_PREFIX);\nexport const isInventoryHostsPermission = (permissionId) => isInventoryPermission(permissionId) && permissionId.split(':')[1].includes(HOSTS_TYPE);\n\nexport const isCostPermission = (permissionId) => permissionId.split(':')[0].includes(COST_MANAGEMENT_PREFIX);\n\nexport const createRows = (data, permissionId, intl) => {\n  let finalData = data.filter(Boolean);\n  if (isInventoryHostsPermission(permissionId) && data.includes(null)) {\n    finalData.unshift(intl.formatMessage(messages.ungroupedSystems));\n  }\n  return finalData.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n};\n","import React, { Fragment, Suspense, useEffect, useMemo, useState } from 'react';\nimport { TextContent, Text, TextVariants, Level, LevelItem, Button } from '@patternfly/react-core';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows, isInventoryPermission } from './role-resource-definitions-table-helpers';\nimport { TopToolbar } from '../../presentational-components/shared/top-toolbar';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { ToolbarTitlePlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport paths from '../../utilities/pathnames';\nimport AppLink, { mergeToBasename } from '../../presentational-components/shared/AppLink';\nimport { getBackRoute } from '../../helpers/shared/helpers';\nimport { useIntl } from 'react-intl';\nimport { fetchInventoryGroupsDetails } from '../../redux/actions/inventory-actions';\nimport { processResourceDefinitions } from '../../helpers/role/inventory-helper';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitions = () => {\n  const intl = useIntl();\n  const [config, setConfig] = useState({\n    pagination: {\n      ...defaultSettings,\n      filter: '',\n    },\n  });\n\n  const { pagination, filter } = config;\n\n  const dispatch = useDispatch();\n\n  const { roleId, permissionId } = useParams();\n  const isInventory = useMemo(() => isInventoryPermission(permissionId), [permissionId]);\n\n  const { role, permission, isRoleLoading, rolesPagination, rolesFilters, inventoryGroupsDetails, isLoadingInventoryDetails } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      permission: state.roleReducer.selectedRole.access\n        ? {\n            ...state.roleReducer.selectedRole?.access.find((a) => a.permission === permissionId),\n          }\n        : {},\n      isRoleLoading: state.roleReducer.isRecordLoading,\n      rolesPagination: state.roleReducer?.roles?.pagination || defaultSettings,\n      rolesFilters: state.roleReducer?.roles?.filters || {},\n      inventoryGroupsDetails: state.inventoryReducer?.inventoryGroupsDetails,\n      isLoadingInventoryDetails: state.inventoryReducer?.isLoading,\n    }),\n    shallowEqual\n  );\n\n  const fetchInventoryGroupNames = (inventoryGroupsIds) => dispatch(fetchInventoryGroupsDetails(inventoryGroupsIds));\n\n  const fetchData = () => {\n    dispatch(fetchRole(roleId)).then(({ value }) => {\n      isInventory &&\n        fetchInventoryGroupNames(processResourceDefinitions(value?.access?.find((item) => item.permission === permissionId)?.resourceDefinitions));\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [roleId]);\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0,\n      },\n    });\n  }, [role]);\n\n  const toolbarButtons = () =>\n    !role.system\n      ? [\n          <Fragment key=\"edit-resource-definitions\">\n            <AppLink to={paths['role-detail-permission-edit'].link.replace(':roleId', roleId).replace(':permissionId', permissionId)}>\n              <Button variant=\"primary\" aria-label=\"Edit\">\n                {intl.formatMessage(messages.edit)}\n              </Button>\n            </AppLink>\n          </Fragment>,\n        ]\n      : [];\n\n  const allData = useMemo(\n    () =>\n      (!isRoleLoading &&\n        !isLoadingInventoryDetails &&\n        processResourceDefinitions(permission.resourceDefinitions).map((item) =>\n          !isInventory || item == null ? item : inventoryGroupsDetails?.[item]?.name\n        )) ||\n      [],\n    [permissionId, isRoleLoading, isLoadingInventoryDetails]\n  );\n  const filteredData = useMemo(() => allData.filter((value) => (filter ? value?.includes(filter) || value === null : true)), [allData, filter]);\n  const data = useMemo(\n    () => filteredData.slice(pagination.offset, pagination.offset + pagination.limit),\n    [filteredData, pagination.offset, pagination.offset]\n  );\n\n  return (\n    <Fragment>\n      <TopToolbar\n        breadcrumbs={[\n          { title: intl.formatMessage(messages.roles), to: getBackRoute(mergeToBasename(paths['roles'].link), rolesPagination, rolesFilters) },\n          {\n            title: isRoleLoading ? undefined : role && (role.display_name || role.name),\n            to: mergeToBasename(paths['role-detail'].link.replace(':roleId', roleId)),\n          },\n          { title: permissionId, isActive: true },\n        ]}\n      >\n        <Level>\n          <LevelItem>\n            <PageHeaderTitle title={permissionId || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n          </LevelItem>\n        </Level>\n      </TopToolbar>\n      <section className=\"pf-v5-c-page__main-section rbac-c-role__permissions\">\n        <TextContent>\n          <Text component={TextVariants.h1}>{intl.formatMessage(messages.definedResources)}</Text>\n        </TextContent>\n        <TableToolbarView\n          columns={[{}]}\n          rows={createRows(data, permissionId, intl)}\n          data={data}\n          filterValue={filter}\n          fetchData={({ limit, offset, name }) =>\n            setConfig({\n              ...config,\n              filter: name,\n              pagination: {\n                ...config.pagination,\n                limit,\n                offset,\n              },\n            })\n          }\n          isCompact\n          setFilterValue={({ name }) =>\n            setConfig({\n              ...config,\n              filter: name,\n            })\n          }\n          toolbarButtons={toolbarButtons}\n          isLoading={isRoleLoading || (isInventory && isLoadingInventoryDetails)}\n          pagination={{\n            ...pagination,\n            count: filteredData.length,\n          }}\n          titlePlural={intl.formatMessage(messages.resources).toLowerCase()}\n          titleSingular={intl.formatMessage(messages.resource).toLowerCase()}\n          hideHeader\n          tableId=\"role-resource-definitions\"\n        />\n        <Suspense>\n          <Outlet\n            context={{\n              cancelRoute: paths['role-detail-permission'].link.replace(':roleId', roleId).replace(':permissionId', permissionId),\n            }}\n          />\n        </Suspense>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default ResourceDefinitions;\n"],"names":["DropdownPosition","DropdownDirection","DropdownContext","onSelect","event","id","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","menuComponent","DropdownArrowContext","keyHandler","sendRef","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","className","children","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","pageHeaderClasses","Consumer","theme","_b","themeClasses","concat","title","pageHeaderTitleClasses","Title","headingLevel","size","inventoryResourceTypesApi","inventoryGroupsApi","getInventoryGroups","async","name","perPage","page","options","apiResourceTypeGetResourceTypeGroupsList","getInventoryGroupsDetails","groupsIds","apiGroupGetGroupsById","processResourceDefinitions","resourceDefinitions","map","definition","attributeFilter","value","RbacBreadcrumbs","breadcrumbs","Breadcrumb","values","item","index","BreadcrumbItem","key","isActive","to","NavLink","end","propTypes","icon","description","actions","EmptyState","variant","EmptyStateVariant","sm","EmptyStateHeader","titleText","EmptyStateIcon","EmptyStateBody","text","EmptyStateFooter","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","toolbarChildren","intl","isITLess","useFlag","every","formatMessage","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","orderBy","direction","Fragment","compact","undefined","limit","canSelectAll","toLowerCase","_e","isSelected","_idx","uuid","cells","requires","username","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","EmptyStateActions","Button","onClick","offset","clearAllFilters","colSpan","noBottom","Pagination","dropDirection","directions","isRequired","count","toggleTemplate","defaultProps","paginationBuilder","itemCount","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","checked","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","innerRef","filterValues","filterByKey","filterBy","newFilter","Array","isArray","keys","pickBy","reduce","acc","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","TopToolbar","paddingBottom","TopToolbarTitle","renderTitleTag","Flex","FlexItem","alignSelf","modifier","TextContent","Text","component","TextVariants","fetchInventoryGroups","permissions","config","meta","payload","fetchInventoryGroupsDetails","isInventoryPermission","permissionId","split","includes","isInventoryHostsPermission","isCostPermission","createRows","finalData","unshift","ungroupedSystems","setConfig","useState","dispatch","useDispatch","roleId","useParams","isInventory","useMemo","role","permission","isRoleLoading","rolesPagination","rolesFilters","inventoryGroupsDetails","isLoadingInventoryDetails","useSelector","state","roleReducer","selectedRole","access","find","a","isRecordLoading","roles","inventoryReducer","shallowEqual","useEffect","inventoryGroupsIds","allData","filteredData","slice","link","display_name","replace","Level","LevelItem","h1","definedResources","system","edit","resources","resource","Suspense","Outlet","context","cancelRoute"],"sourceRoot":""}
{"version":3,"file":"js/5205.df1ce12eae21dce37cbd.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/WarningModal/WarningModal.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/helpers/role/inventory-helper.js","webpack:///./src/redux/actions/inventory-actions.js","webpack:///./src/smart-components/common/ModalFormTemplate.js","webpack:///./src/smart-components/common/FormButtons.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/role/ResourceDefinitionsFormTemplate.js","webpack:///./src/smart-components/role/edit-resource-definitions-modal.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalVariant, ButtonVariant, Checkbox } from '@patternfly/react-core';\nconst WarningModal = (_a) => {\n    var { isOpen, onConfirm, onClose, children, confirmButtonLabel = 'Confirm', cancelButtonLabel = 'Cancel', variant = ModalVariant.small, titleIconVariant = 'warning', withCheckbox = false, checkboxLabel = 'I understand that this action cannot be undone', confirmButtonVariant = ButtonVariant.primary } = _a, props = __rest(_a, [\"isOpen\", \"onConfirm\", \"onClose\", \"children\", \"confirmButtonLabel\", \"cancelButtonLabel\", \"variant\", \"titleIconVariant\", \"withCheckbox\", \"checkboxLabel\", \"confirmButtonVariant\"]);\n    const [checked, setChecked] = useState(false);\n    return (React.createElement(Modal, Object.assign({ variant: variant, isOpen: isOpen, onClose: onClose, onEscapePress: onClose, titleIconVariant: titleIconVariant, actions: [\n            React.createElement(Button, { ouiaId: \"primary-confirm-button\", key: \"confirm\", variant: confirmButtonVariant, onClick: onConfirm, isDisabled: withCheckbox && !checked }, confirmButtonLabel),\n            React.createElement(Button, { ouiaId: \"secondary-cancel-button\", key: \"cancel\", variant: ButtonVariant.link, onClick: onClose }, cancelButtonLabel),\n        ] }, props),\n        children,\n        withCheckbox ? (React.createElement(Checkbox, { isChecked: checked, onChange: () => setChecked(!checked), label: checkboxLabel, id: \"warning-modal-check\", className: \"pf-v5-u-mt-lg\" })) : null));\n};\nexport default WarningModal;\n","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const fetchResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const fetchResource = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import { getInventoryGroupsApi } from '../shared/user-login';\n\nconst inventoryGroupsApi = getInventoryGroupsApi();\n\nexport const getInventoryGroups = async (apiProps) => {\n  return await inventoryGroupsApi.getInventoryGroups(apiProps);\n};\n","import * as ActionTypes from '../action-types';\nimport * as InventoryHelper from '../../helpers/role/inventory-helper';\n\nexport const fetchInventoryGroups = (permissions, config) => ({\n  type: ActionTypes.FETCH_INVENTORY_GROUP,\n  meta: { permissions, config },\n  payload: InventoryHelper.getInventoryGroups(config),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\n/**\n * This id is requried to submit form by a button outside of the form element\n */\nconst MODAL_FORM_IDENTIFIER = 'modal-form';\nconst CustomFormWrapper = (props) => <Form {...props} id={MODAL_FORM_IDENTIFIER} />;\n\nconst CustomButtons = ({ saveLabel, cancelLabel }) => {\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy>\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-v5-c-form\">\n          <ActionGroup className=\"pf-v5-u-mt-0\">\n            <Button\n              ouiaId=\"primary-save-button\"\n              variant=\"primary\"\n              form={MODAL_FORM_IDENTIFIER}\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {saveLabel}\n            </Button>\n            <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {cancelLabel}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  saveLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n};\n\nCustomButtons.defaultProps = {\n  saveLabel: 'Save',\n  cancelLabel: 'Cancel',\n};\n\nconst ModalFormTemplate = ({ ModalProps, saveLabel, cancelLabel, alert, ...props }) => (\n  <Modal role=\"dialog\" {...ModalProps} footer={<CustomButtons saveLabel={saveLabel} cancelLabel={cancelLabel} />}>\n    {alert?.()}\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n  ...CustomButtons.propTypes,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst FormButtons = ({ dirtyFieldsSinceLastSubmit, submitSucceeded, pristine }) => {\n  const { onCancel } = useFormApi();\n  const noChanges = isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  const intl = useIntl();\n  return (\n    <ActionGroup className=\"pf-v5-u-mt-0\">\n      <Button ouiaId=\"primary-submit-button\" type=\"submit\" isDisabled={noChanges} variant=\"primary\">\n        {intl.formatMessage(messages.save)}\n      </Button>\n      <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={() => onCancel()}>\n        {intl.formatMessage(messages.cancel)}\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormButtons from './FormButtons';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nconst FormRenderer = ({ formTemplateProps, ...props }) => (\n  <ReactFormRender\n    componentMapper={{\n      [componentTypes.TEXT_FIELD]: TextField,\n      [componentTypes.TEXTAREA]: Textarea,\n    }}\n    FormTemplate={(props) => <FormTemplate {...formTemplateProps} {...props} FormButtons={FormButtons} />}\n    {...props}\n  />\n);\n\nFormRenderer.propTypes = {\n  formTemplateProps: PropTypes.object,\n};\n\nexport default FormRenderer;\n","import React from 'react';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { Alert } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitionsFormTemplate = ({ ModalProps, ...props }) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  return (\n    <ModalFormTemplate\n      {...props}\n      ModalProps={{\n        ...ModalProps,\n        onClose: () => ModalProps.onClose(values),\n      }}\n      alert={\n        values['dual-list-select']\n          ? undefined\n          : () => (\n              <div className=\"rbac-m-resource-definitions\">\n                <Alert className=\"pf-v5-c-modal__alert\" variant=\"danger\" isInline title={intl.formatMessage(messages.defineAtLeastOneResource)} />\n              </div>\n            )\n      }\n    />\n  );\n};\n\nResourceDefinitionsFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ResourceDefinitionsFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport FormRenderer from '../common/form-renderer';\nimport flatten from 'lodash/flattenDeep';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { updateRole, fetchRole } from '../../redux/actions/role-actions';\nimport { fetchResource, fetchResourceDefinitions } from '../../redux/actions/cost-management-actions';\nimport { fetchInventoryGroups } from '../../redux/actions/inventory-actions';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport { Spinner, Modal, ModalVariant, Bullseye } from '@patternfly/react-core';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport ResourceDefinitionsFormTemplate from './ResourceDefinitionsFormTemplate';\nimport { isInventoryHostsPermission, isInventoryPermission } from './role-resource-definitions-table-helpers';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst createOptions = (resources, permissionId) =>\n  isInventoryPermission(permissionId)\n    ? // options for inventory\n      [\n        ...(isInventoryHostsPermission(permissionId) ? [<FormattedMessage key=\"ungrouped\" data-value=\"null\" {...messages.ungroupedSystems} />] : []),\n        ...Object.values(resources || {}).map((inventoryGroup) => (\n          <span key={inventoryGroup.id} data-value={inventoryGroup.id}>\n            {inventoryGroup.name}\n          </span>\n        )),\n      ]\n    : // options for cost-management\n      Object.entries(resources).reduce(\n        (acc, [key, value]) => [\n          ...acc,\n          ...value.map((r) => ({\n            value: r.value,\n            path: key,\n            label: r.value,\n          })),\n        ],\n        []\n      );\n\nconst initialState = {\n  changedResources: undefined,\n  cancelWarningVisible: false,\n  resourcesPath: undefined,\n  loadingStateVisible: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst createEditResourceDefinitionsSchema = (resources, resourcesPath, options, isInventory) => {\n  const intl = useIntl();\n  return {\n    fields: [\n      {\n        component: componentTypes.DUAL_LIST_SELECT,\n        name: 'dual-list-select',\n        leftTitle: intl.formatMessage(messages.resourcesAvailable),\n        rightTitle: intl.formatMessage(messages.resourcesDefined),\n        filterOptionsTitle: intl.formatMessage(messages.filterByResource),\n        filterValueTitle: intl.formatMessage(messages.filterByResource),\n        options: [...((resourcesPath || isInventory) && resources ? options : [])],\n        validate: [{ type: 'validate-resources' }],\n        isSearchable: true,\n        ...(isInventory\n          ? {\n              getValueFromNode: (option) => option.props['data-value'],\n            }\n          : {}),\n      },\n    ],\n  };\n};\n\nconst selector = (\n  {\n    costReducer: { resourceTypes, isLoading, loadingResources, resources },\n    inventoryReducer: { resourceTypes: inventoryGroups, isLoading: isLoadingInventory },\n  },\n  resourcesPath\n) => ({\n  resourceTypes: resourceTypes.data,\n  resources: resources[resourcesPath] ? { resourcesPath: resources[resourcesPath] } : resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n  isLoadingInventory,\n  inventoryGroups,\n});\n\nconst validatorMapper = {\n  'validate-resources': () => (value) => value && value.length > 0 ? undefined : 'At least one resource must be defined for this permission',\n};\n\nconst EditResourceDefinitionsModal = ({ cancelRoute }) => {\n  const intl = useIntl();\n  const { roleId, permissionId } = useParams();\n  const navigate = useAppNavigate();\n\n  const dispatch = useDispatch();\n  const getResourceDefinitions = () => dispatch(fetchResourceDefinitions());\n  const getInventoryGroups = () => dispatch(fetchInventoryGroups([permissionId]));\n  const [state, dispatchLocally] = useReducer(reducer, initialState);\n  const isInventory = isInventoryPermission(permissionId);\n\n  const { resourceTypes, isLoading, isLoadingResources, resources, isLoadingInventory, inventoryGroups } = useSelector(\n    (props) => selector(props, state.resourcesPath),\n    shallowEqual\n  );\n\n  const { definedResources, role } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      definedResources: state.roleReducer.selectedRole?.access\n        ? flatten(\n            state.roleReducer.selectedRole.access\n              .filter((a) => a.permission === permissionId)\n              .map((access) =>\n                access.resourceDefinitions.map((resource) => {\n                  const value = resource.attributeFilter.value;\n                  if (isInventory) {\n                    return Array.isArray(value) ? value.map((value) => String(value)) : String(value);\n                  }\n                  return resource.attributeFilter.value;\n                })\n              )\n          )\n        : [],\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    (isInventory && getInventoryGroups()) || getResourceDefinitions();\n  }, [permissionId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let path = resourceTypes.find((r) => r.value === permissionId.split(':')?.[1])?.path;\n      if (path) {\n        dispatchLocally({ type: 'update', payload: { resourcesPath: path.split('/')[5] } });\n        dispatch(fetchResource(path));\n      }\n    }\n  }, [resourceTypes]);\n\n  const onCancel = () => navigate(cancelRoute, { replace: true });\n\n  const handleCancel = (data) => {\n    if (data['dual-list-select'] === definedResources) {\n      onCancel();\n    } else {\n      dispatchLocally({\n        type: 'update',\n        payload: {\n          changedResources: data['dual-list-select'],\n          cancelWarningVisible: true,\n        },\n      });\n    }\n  };\n\n  const handleSubmit = (data) => {\n    dispatchLocally({ type: 'update', payload: { changedResources: data['dual-list-select'] } });\n    const dualListData = data['dual-list-select'].map((item) => (item === 'null' ? null : item));\n    const newAccess = {\n      permission: permissionId,\n      resourceDefinitions: [\n        {\n          attributeFilter: {\n            key: isInventory ? 'group.id' : `cost-management.${permissionId.split(':')?.[1]}`,\n            operation: dualListData.length === 1 ? 'equal' : 'in',\n            value: dualListData.length === 1 ? dualListData[0] : dualListData,\n          },\n        },\n      ],\n    };\n    dispatch(updateRole(roleId, { ...role, access: [...role.access.filter((item) => item.permission !== permissionId), newAccess] }), true).then(\n      () => {\n        dispatch(fetchRole(roleId));\n        navigate(cancelRoute);\n      }\n    );\n  };\n\n  const options = createOptions(isInventory ? inventoryGroups[permissionId] : resources, permissionId);\n\n  return (\n    <React.Fragment>\n      <WarningModal\n        title={intl.formatMessage(messages.exitEditResourceDefinitions)}\n        isOpen={state.cancelWarningVisible}\n        onClose={() => dispatchLocally({ type: 'update', payload: { cancelWarningVisible: false } })}\n        onConfirm={onCancel}\n        data-testid=\"warning-modal\"\n        confirmButtonLabel={intl.formatMessage(messages.discard)}\n      >\n        {intl.formatMessage(messages.changesWillBeLost)}\n      </WarningModal>\n      {(isLoading || isLoadingResources || isLoadingInventory) && state.loadingStateVisible ? (\n        <Modal\n          variant={ModalVariant.large}\n          className=\"rbac-m-resource-definitions\"\n          isOpen={true}\n          title={intl.formatMessage(messages.editResourceDefinitions)}\n          onClose={() => {\n            dispatchLocally({ type: 'update', payload: { loadingStateVisible: false } });\n            onCancel();\n          }}\n        >\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        </Modal>\n      ) : (\n        <FormRenderer\n          schema={createEditResourceDefinitionsSchema(resources, state.resourcesPath, options, isInventory)}\n          componentMapper={componentMapper}\n          initialValues={{ 'dual-list-select': state.changedResources || definedResources || [] }}\n          onSubmit={handleSubmit}\n          onCancel={(data) => handleCancel(data)}\n          validatorMapper={validatorMapper}\n          FormTemplate={(props) => (\n            <ResourceDefinitionsFormTemplate\n              {...props}\n              ModalProps={{\n                onClose: handleCancel,\n                isOpen: !state.cancelWarningVisible,\n                variant: 'large',\n                title: intl.formatMessage(messages.editResourceDefinitions),\n                description: intl.formatMessage(messages.editPermissionsUsingArrows),\n              }}\n            />\n          )}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nEditResourceDefinitionsModal.propTypes = {\n  cancelRoute: PropTypes.string.isRequired,\n};\n\nexport default EditResourceDefinitionsModal;\n","import messages from '../../Messages';\n\nconst INVENTORY_PREFIX = 'inventory';\nconst COST_MANAGEMENT_PREFIX = 'cost-management';\nconst HOSTS_TYPE = 'hosts';\n\nexport const isInventoryPermission = (permissionId) => permissionId.split(':')[0].includes(INVENTORY_PREFIX);\nexport const isInventoryHostsPermission = (permissionId) => isInventoryPermission(permissionId) && permissionId.split(':')[1].includes(HOSTS_TYPE);\n\nexport const isCostPermission = (permissionId) => permissionId.split(':')[0].includes(COST_MANAGEMENT_PREFIX);\n\nexport const createRows = (data, permissionId, intl) => {\n  let finalData = data.filter(Boolean);\n  if (isInventoryHostsPermission(permissionId) && data.includes(null)) {\n    finalData.unshift(intl.formatMessage(messages.ungroupedSystems));\n  }\n  return finalData.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n};\n"],"names":["_a","isOpen","onConfirm","onClose","children","confirmButtonLabel","cancelButtonLabel","variant","Modal","small","titleIconVariant","withCheckbox","checkboxLabel","confirmButtonVariant","Button","primary","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","checked","setChecked","useState","assign","onEscapePress","actions","ouiaId","key","onClick","isDisabled","link","Checkbox","isChecked","onChange","label","id","className","linkBasename","navigate","useNavigate","to","options","costApi","async","getResourceDefinitions","apiProps","getResourceTypes","getResource","fetchResourceDefinitions","type","payload","fetchResource","inventoryGroupsApi","getInventoryGroups","fetchInventoryGroups","permissions","config","meta","MODAL_FORM_IDENTIFIER","CustomFormWrapper","CustomButtons","saveLabel","cancelLabel","onCancel","pristine","invalid","validating","submitting","form","propTypes","defaultProps","ModalFormTemplate","ModalProps","alert","role","footer","showFormControls","FormWrapper","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","noChanges","isEmpty","intl","ActionGroup","formatMessage","save","cancel","formProps","subscription","FormRenderer","formTemplateProps","componentMapper","TEXT_FIELD","TEXTAREA","FormTemplate","ResourceDefinitionsFormTemplate","values","getState","undefined","Alert","isInline","title","defineAtLeastOneResource","initialState","changedResources","cancelWarningVisible","resourcesPath","loadingStateVisible","reducer","state","action","Error","createEditResourceDefinitionsSchema","resources","isInventory","fields","component","DUAL_LIST_SELECT","name","leftTitle","resourcesAvailable","rightTitle","resourcesDefined","filterOptionsTitle","filterByResource","filterValueTitle","validate","isSearchable","getValueFromNode","option","validatorMapper","value","EditResourceDefinitionsModal","cancelRoute","roleId","permissionId","useParams","useAppNavigate","dispatch","useDispatch","dispatchLocally","useReducer","resourceTypes","isLoading","isLoadingResources","isLoadingInventory","inventoryGroups","useSelector","costReducer","loadingResources","inventoryReducer","data","selector","shallowEqual","definedResources","roleReducer","selectedRole","access","filter","a","permission","map","resourceDefinitions","resource","attributeFilter","Array","isArray","String","isRecordLoading","useEffect","f","path","find","r","split","replace","handleCancel","ungroupedSystems","inventoryGroup","entries","reduce","acc","createOptions","WarningModal","exitEditResourceDefinitions","discard","changesWillBeLost","ModalVariant","large","editResourceDefinitions","Bullseye","Spinner","schema","initialValues","onSubmit","dualListData","item","newAccess","operation","then","description","editPermissionsUsingArrows","isRequired","isInventoryPermission","includes","isInventoryHostsPermission","isCostPermission","createRows","finalData","Boolean","unshift","cells"],"sourceRoot":""}
{"version":3,"file":"js/2638.3afa951b13735e95f012.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/WarningModal/WarningModal.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/FocusTrap/FocusTrap.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/useUnmountEffect.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/times-icon.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/helpers/role/inventory-helper.js","webpack:///./src/redux/actions/inventory-actions.js","webpack:///./src/smart-components/common/ModalFormTemplate.js","webpack:///./src/smart-components/common/FormButtons.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/role/ResourceDefinitionsFormTemplate.js","webpack:///./src/smart-components/role/edit-resource-definitions-modal.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { Button, Modal, ModalVariant, ButtonVariant } from '@patternfly/react-core';\nconst WarningModal = (_a) => {\n    var { isOpen, onConfirm, onClose, children, confirmButtonLabel = 'Confirm', cancelButtonLabel = 'Cancel', variant = ModalVariant.small, titleIconVariant = 'warning' } = _a, props = __rest(_a, [\"isOpen\", \"onConfirm\", \"onClose\", \"children\", \"confirmButtonLabel\", \"cancelButtonLabel\", \"variant\", \"titleIconVariant\"]);\n    return (React.createElement(Modal, Object.assign({ variant: variant, isOpen: isOpen, onClose: onClose, onEscapePress: onClose, titleIconVariant: titleIconVariant, actions: [\n            React.createElement(Button, { ouiaId: \"primary-confirm-button\", key: \"confirm\", variant: ButtonVariant.primary, onClick: onConfirm }, confirmButtonLabel),\n            React.createElement(Button, { ouiaId: \"secondary-cancel-button\", key: \"cancel\", variant: ButtonVariant.link, onClick: onClose }, cancelButtonLabel),\n        ] }, props), children));\n};\nexport default WarningModal;\n","import { __rest } from \"tslib\";\nimport { createFocusTrap } from 'focus-trap';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { useUnmountEffect } from '../useUnmountEffect';\nexport const FocusTrap = forwardRef(function FocusTrap(_a, forwardedRef) {\n    var { active = true, paused = false, focusTrapOptions = {}, preventScrollOnDeactivate = false } = _a, props = __rest(_a, [\"active\", \"paused\", \"focusTrapOptions\", \"preventScrollOnDeactivate\"]);\n    // Fall back to internal ref if no forwarded ref is provided.\n    const ref = useRef(null);\n    useImperativeHandle(forwardedRef, () => ref.current);\n    // Create focus trap instance after rendering DOM.\n    const focusTrapRef = useRef(null);\n    useEffect(() => {\n        const focusTrap = createFocusTrap(ref.current, Object.assign(Object.assign({}, focusTrapOptions), { returnFocusOnDeactivate: false }));\n        focusTrapRef.current = focusTrap;\n        // Deactivate focus trap on cleanup.\n        return () => {\n            focusTrap.deactivate();\n        };\n    }, []);\n    // Handle activation status based on 'active' prop.\n    useEffect(() => {\n        const focusTrap = focusTrapRef.current;\n        active ? focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.activate() : focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.deactivate();\n    }, [active]);\n    // Handle pause status based on 'pause' prop.\n    useEffect(() => {\n        const focusTrap = focusTrapRef.current;\n        paused ? focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.pause() : focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.unpause();\n    }, [paused]);\n    // Store the currently active element to restore focus to later.\n    const previousElementRef = useRef(typeof document !== 'undefined' ? document.activeElement : null);\n    // Restore focus to the previously active element on unmount.\n    useUnmountEffect(() => {\n        if (focusTrapOptions.returnFocusOnDeactivate !== false && previousElementRef.current instanceof HTMLElement) {\n            previousElementRef.current.focus({\n                preventScroll: preventScrollOnDeactivate\n            });\n        }\n    });\n    return React.createElement(\"div\", Object.assign({ ref: ref }, props));\n});\nFocusTrap.displayName = 'FocusTrap';\n//# sourceMappingURL=FocusTrap.js.map","import { useEffect, useRef } from 'react';\n/**\n * A `useEffect`-like hook that only triggers when a component unmounts. Does not require a dependency list, as the effect callback will always be kept up to date.\n */\nexport function useUnmountEffect(effect) {\n    // Always use the latest effect callback so that it can reference the latest props and state.\n    const effectRef = useRef(effect);\n    effectRef.current = effect;\n    // Trigger the effect callback when the component unmounts.\n    useEffect(() => () => {\n        effectRef.current();\n    }, []);\n}\n//# sourceMappingURL=useUnmountEffect.js.map","import { createIcon } from '../createIcon';\n\nexport const TimesIconConfig = {\n  name: 'TimesIcon',\n  height: 512,\n  width: 352,\n  svgPath: 'M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const TimesIcon = createIcon(TimesIconConfig);\n\nexport default TimesIcon;","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const fetchResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const fetchResource = (apiProps) => ({\n  type: ActionTypes.FETCH_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import { getInventoryGroupsApi } from '../shared/user-login';\n\nconst inventoryGroupsApi = getInventoryGroupsApi();\n\nexport const getInventoryGroups = async (apiProps) => {\n  return await inventoryGroupsApi.getInventoryGroups(apiProps);\n};\n","import * as ActionTypes from '../action-types';\nimport * as InventoryHelper from '../../helpers/role/inventory-helper';\n\nexport const fetchInventoryGroups = (permissions, config) => ({\n  type: ActionTypes.FETCH_INVENTORY_GROUP,\n  meta: { permissions, config },\n  payload: InventoryHelper.getInventoryGroups(config),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\n/**\n * This id is requried to submit form by a button outside of the form element\n */\nconst MODAL_FORM_IDENTIFIER = 'modal-form';\nconst CustomFormWrapper = (props) => <Form {...props} id={MODAL_FORM_IDENTIFIER} />;\n\nconst CustomButtons = ({ saveLabel, cancelLabel }) => {\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy>\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-v5-c-form\">\n          <ActionGroup className=\"pf-v5-u-mt-0\">\n            <Button\n              ouiaId=\"primary-save-button\"\n              variant=\"primary\"\n              form={MODAL_FORM_IDENTIFIER}\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {saveLabel}\n            </Button>\n            <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {cancelLabel}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  saveLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n};\n\nCustomButtons.defaultProps = {\n  saveLabel: 'Save',\n  cancelLabel: 'Cancel',\n};\n\nconst ModalFormTemplate = ({ ModalProps, saveLabel, cancelLabel, alert, ...props }) => (\n  <Modal role=\"dialog\" {...ModalProps} footer={<CustomButtons saveLabel={saveLabel} cancelLabel={cancelLabel} />}>\n    {alert?.()}\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n  ...CustomButtons.propTypes,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst FormButtons = ({ dirtyFieldsSinceLastSubmit, submitSucceeded, pristine }) => {\n  const { onCancel } = useFormApi();\n  const noChanges = isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  const intl = useIntl();\n  return (\n    <ActionGroup className=\"pf-v5-u-mt-0\">\n      <Button ouiaId=\"primary-submit-button\" type=\"submit\" isDisabled={noChanges} variant=\"primary\">\n        {intl.formatMessage(messages.save)}\n      </Button>\n      <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={() => onCancel()}>\n        {intl.formatMessage(messages.cancel)}\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormButtons from './FormButtons';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nconst FormRenderer = ({ formTemplateProps, ...props }) => (\n  <ReactFormRender\n    componentMapper={{\n      [componentTypes.TEXT_FIELD]: TextField,\n      [componentTypes.TEXTAREA]: Textarea,\n    }}\n    FormTemplate={(props) => <FormTemplate {...formTemplateProps} {...props} FormButtons={FormButtons} />}\n    {...props}\n  />\n);\n\nFormRenderer.propTypes = {\n  formTemplateProps: PropTypes.object,\n};\n\nexport default FormRenderer;\n","import React from 'react';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { Alert } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitionsFormTemplate = ({ ModalProps, ...props }) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  return (\n    <ModalFormTemplate\n      {...props}\n      ModalProps={{\n        ...ModalProps,\n        onClose: () => ModalProps.onClose(values),\n      }}\n      alert={\n        values['dual-list-select']\n          ? undefined\n          : () => (\n              <div className=\"rbac-m-resource-definitions\">\n                <Alert className=\"pf-v5-c-modal__alert\" variant=\"danger\" isInline title={intl.formatMessage(messages.defineAtLeastOneResource)} />\n              </div>\n            )\n      }\n    />\n  );\n};\n\nResourceDefinitionsFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ResourceDefinitionsFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport FormRenderer from '../common/form-renderer';\nimport flatten from 'lodash/flattenDeep';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { updateRole, fetchRole } from '../../redux/actions/role-actions';\nimport { fetchResource, fetchResourceDefinitions } from '../../redux/actions/cost-management-actions';\nimport { fetchInventoryGroups } from '../../redux/actions/inventory-actions';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport { Spinner, Modal, ModalVariant, Bullseye } from '@patternfly/react-core';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport ResourceDefinitionsFormTemplate from './ResourceDefinitionsFormTemplate';\nimport { isInventoryHostsPermission, isInventoryPermission } from './role-resource-definitions-table-helpers';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst createOptions = (resources, permissionId) =>\n  isInventoryPermission(permissionId)\n    ? // options for inventory\n      [\n        ...(isInventoryHostsPermission(permissionId) ? [<FormattedMessage key=\"ungrouped\" data-value=\"null\" {...messages.ungroupedSystems} />] : []),\n        ...Object.values(resources || {}).map((inventoryGroup) => (\n          <span key={inventoryGroup.id} data-value={inventoryGroup.id}>\n            {inventoryGroup.name}\n          </span>\n        )),\n      ]\n    : // options for cost-management\n      Object.entries(resources).reduce(\n        (acc, [key, value]) => [\n          ...acc,\n          ...value.map((r) => ({\n            value: r.value,\n            path: key,\n            label: r.value,\n          })),\n        ],\n        []\n      );\n\nconst initialState = {\n  changedResources: undefined,\n  cancelWarningVisible: false,\n  resourcesPath: undefined,\n  loadingStateVisible: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst createEditResourceDefinitionsSchema = (resources, resourcesPath, options, isInventory) => {\n  const intl = useIntl();\n  return {\n    fields: [\n      {\n        component: componentTypes.DUAL_LIST_SELECT,\n        name: 'dual-list-select',\n        leftTitle: intl.formatMessage(messages.resourcesAvailable),\n        rightTitle: intl.formatMessage(messages.resourcesDefined),\n        filterOptionsTitle: intl.formatMessage(messages.filterByResource),\n        filterValueTitle: intl.formatMessage(messages.filterByResource),\n        options: [...((resourcesPath || isInventory) && resources ? options : [])],\n        validate: [{ type: 'validate-resources' }],\n        isSearchable: true,\n        ...(isInventory\n          ? {\n              getValueFromNode: (option) => option.props['data-value'],\n            }\n          : {}),\n      },\n    ],\n  };\n};\n\nconst selector = (\n  {\n    costReducer: { resourceTypes, isLoading, loadingResources, resources },\n    inventoryReducer: { resourceTypes: inventoryGroups, isLoading: isLoadingInventory },\n  },\n  resourcesPath\n) => ({\n  resourceTypes: resourceTypes.data,\n  resources: resources[resourcesPath] ? { resourcesPath: resources[resourcesPath] } : resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n  isLoadingInventory,\n  inventoryGroups,\n});\n\nconst validatorMapper = {\n  'validate-resources': () => (value) => value && value.length > 0 ? undefined : 'At least one resource must be defined for this permission',\n};\n\nconst EditResourceDefinitionsModal = ({ cancelRoute }) => {\n  const intl = useIntl();\n  const { roleId, permissionId } = useParams();\n  const navigate = useAppNavigate();\n\n  const dispatch = useDispatch();\n  const getResourceDefinitions = () => dispatch(fetchResourceDefinitions());\n  const getInventoryGroups = () => dispatch(fetchInventoryGroups([permissionId]));\n  const [state, dispatchLocally] = useReducer(reducer, initialState);\n  const isInventory = isInventoryPermission(permissionId);\n\n  const { resourceTypes, isLoading, isLoadingResources, resources, isLoadingInventory, inventoryGroups } = useSelector(\n    (props) => selector(props, state.resourcesPath),\n    shallowEqual\n  );\n\n  const { definedResources, role } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      definedResources: state.roleReducer.selectedRole?.access\n        ? flatten(\n            state.roleReducer.selectedRole.access\n              .filter((a) => a.permission === permissionId)\n              .map((access) =>\n                access.resourceDefinitions.map((resource) =>\n                  isInventory ? resource.attributeFilter.value.map((value) => String(value)) : resource.attributeFilter.value\n                )\n              )\n          )\n        : [],\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    (isInventory && getInventoryGroups()) || getResourceDefinitions();\n  }, [permissionId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let path = resourceTypes.find((r) => r.value === permissionId.split(':')?.[1])?.path;\n      if (path) {\n        dispatchLocally({ type: 'update', payload: { resourcesPath: path.split('/')[5] } });\n        dispatch(fetchResource(path));\n      }\n    }\n  }, [resourceTypes]);\n\n  const onCancel = () => navigate(cancelRoute, { replace: true });\n\n  const handleCancel = (data) => {\n    if (data['dual-list-select'] === definedResources) {\n      onCancel();\n    } else {\n      dispatchLocally({\n        type: 'update',\n        payload: {\n          changedResources: data['dual-list-select'],\n          cancelWarningVisible: true,\n        },\n      });\n    }\n  };\n\n  const handleSubmit = (data) => {\n    dispatchLocally({ type: 'update', payload: { changedResources: data['dual-list-select'] } });\n    const dualListData = data['dual-list-select'].map((item) => (item === 'null' ? null : item));\n    const newAccess = {\n      permission: permissionId,\n      resourceDefinitions: [\n        {\n          attributeFilter: {\n            key: isInventory ? 'group.id' : `cost-management.${permissionId.split(':')?.[1]}`,\n            operation: dualListData.length === 1 ? 'equal' : 'in',\n            value: dualListData.length === 1 ? dualListData[0] : dualListData,\n          },\n        },\n      ],\n    };\n    dispatch(updateRole(roleId, { ...role, access: [...role.access.filter((item) => item.permission !== permissionId), newAccess] }), true).then(\n      () => {\n        dispatch(fetchRole(roleId));\n        navigate(cancelRoute);\n      }\n    );\n  };\n\n  const options = createOptions(isInventory ? inventoryGroups[permissionId] : resources, permissionId);\n\n  return (\n    <React.Fragment>\n      <WarningModal\n        title={intl.formatMessage(messages.exitEditResourceDefinitions)}\n        isOpen={state.cancelWarningVisible}\n        onClose={() => dispatchLocally({ type: 'update', payload: { cancelWarningVisible: false } })}\n        onConfirm={onCancel}\n        data-testid=\"warning-modal\"\n        confirmButtonLabel={intl.formatMessage(messages.exit)}\n        cancelButtonLabel={intl.formatMessage(messages.stay)}\n      >\n        {intl.formatMessage(messages.changesWillBeLost)}\n      </WarningModal>\n      {(isLoading || isLoadingResources || isLoadingInventory) && state.loadingStateVisible ? (\n        <Modal\n          variant={ModalVariant.large}\n          className=\"rbac-m-resource-definitions\"\n          isOpen={true}\n          title={intl.formatMessage(messages.editResourceDefinitions)}\n          onClose={() => {\n            dispatchLocally({ type: 'update', payload: { loadingStateVisible: false } });\n            onCancel();\n          }}\n        >\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        </Modal>\n      ) : (\n        <FormRenderer\n          schema={createEditResourceDefinitionsSchema(resources, state.resourcesPath, options, isInventory)}\n          componentMapper={componentMapper}\n          initialValues={{ 'dual-list-select': state.changedResources || definedResources || [] }}\n          onSubmit={handleSubmit}\n          onCancel={(data) => handleCancel(data)}\n          validatorMapper={validatorMapper}\n          FormTemplate={(props) => (\n            <ResourceDefinitionsFormTemplate\n              {...props}\n              ModalProps={{\n                onClose: handleCancel,\n                isOpen: !state.cancelWarningVisible,\n                variant: 'large',\n                title: intl.formatMessage(messages.editResourceDefinitions),\n                description: intl.formatMessage(messages.editPermissionsUsingArrows),\n              }}\n            />\n          )}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nEditResourceDefinitionsModal.propTypes = {\n  cancelRoute: PropTypes.string.isRequired,\n};\n\nexport default EditResourceDefinitionsModal;\n","import messages from '../../Messages';\n\nconst INVENTORY_PREFIX = 'inventory';\nconst COST_MANAGEMENT_PREFIX = 'cost-management';\nconst HOSTS_TYPE = 'hosts';\n\nexport const isInventoryPermission = (permissionId) => permissionId.split(':')[0].includes(INVENTORY_PREFIX);\nexport const isInventoryHostsPermission = (permissionId) => isInventoryPermission(permissionId) && permissionId.split(':')[1].includes(HOSTS_TYPE);\n\nexport const isCostPermission = (permissionId) => permissionId.split(':')[0].includes(COST_MANAGEMENT_PREFIX);\n\nexport const createRows = (data, permissionId, intl) => {\n  let finalData = data.filter(Boolean);\n  if (isInventoryHostsPermission(permissionId) && data.includes(null)) {\n    finalData.unshift(intl.formatMessage(messages.ungroupedSystems));\n  }\n  return finalData.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n};\n"],"names":["_a","isOpen","onConfirm","onClose","children","confirmButtonLabel","cancelButtonLabel","variant","Modal","small","titleIconVariant","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","assign","onEscapePress","actions","Button","ouiaId","key","primary","onClick","link","FocusTrap","forwardRef","forwardedRef","active","paused","focusTrapOptions","preventScrollOnDeactivate","ref","useRef","useImperativeHandle","current","focusTrapRef","useEffect","focusTrap","createFocusTrap","returnFocusOnDeactivate","deactivate","activate","pause","unpause","previousElementRef","document","activeElement","effect","effectRef","useUnmountEffect","HTMLElement","focus","preventScroll","displayName","name","height","width","svgPath","yOffset","xOffset","linkBasename","navigate","useNavigate","to","options","costApi","async","getResourceDefinitions","apiProps","getResourceTypes","getResource","fetchResourceDefinitions","type","payload","fetchResource","inventoryGroupsApi","getInventoryGroups","fetchInventoryGroups","permissions","config","meta","MODAL_FORM_IDENTIFIER","CustomFormWrapper","id","CustomButtons","saveLabel","cancelLabel","onCancel","pristine","invalid","validating","submitting","className","form","isDisabled","propTypes","defaultProps","ModalFormTemplate","ModalProps","alert","role","footer","showFormControls","FormWrapper","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","noChanges","isEmpty","intl","ActionGroup","formatMessage","save","cancel","formProps","subscription","FormRenderer","formTemplateProps","componentMapper","TEXT_FIELD","TEXTAREA","FormTemplate","ResourceDefinitionsFormTemplate","values","getState","undefined","Alert","isInline","title","defineAtLeastOneResource","initialState","changedResources","cancelWarningVisible","resourcesPath","loadingStateVisible","reducer","state","action","Error","createEditResourceDefinitionsSchema","resources","isInventory","fields","component","DUAL_LIST_SELECT","leftTitle","resourcesAvailable","rightTitle","resourcesDefined","filterOptionsTitle","filterByResource","filterValueTitle","validate","isSearchable","getValueFromNode","option","validatorMapper","value","EditResourceDefinitionsModal","cancelRoute","roleId","permissionId","useParams","useAppNavigate","dispatch","useDispatch","dispatchLocally","useReducer","resourceTypes","isLoading","isLoadingResources","isLoadingInventory","inventoryGroups","useSelector","costReducer","loadingResources","inventoryReducer","data","selector","shallowEqual","definedResources","roleReducer","selectedRole","access","filter","a","permission","map","resourceDefinitions","resource","attributeFilter","String","isRecordLoading","f","path","find","r","split","replace","handleCancel","ungroupedSystems","inventoryGroup","entries","reduce","acc","label","createOptions","WarningModal","exitEditResourceDefinitions","exit","stay","changesWillBeLost","ModalVariant","large","editResourceDefinitions","Bullseye","Spinner","schema","initialValues","onSubmit","dualListData","item","newAccess","operation","then","description","editPermissionsUsingArrows","isRequired","isInventoryPermission","includes","isInventoryHostsPermission","isCostPermission","createRows","finalData","Boolean","unshift","cells"],"sourceRoot":""}
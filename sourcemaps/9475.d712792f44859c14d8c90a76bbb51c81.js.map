{"version":3,"file":"js/9475.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/presentational-components/shared/empty-state.tsx","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/smart-components/myUserAccess/ResourceDefinitionsModal.js","webpack:///./src/helpers/access/access-helper.js","webpack:///./src/presentational-components/myUserAccess/ResourceDefinitionsLink.js","webpack:///./src/smart-components/myUserAccess/mua-table-helpers.js","webpack:///./src/smart-components/myUserAccess/MUAAccessTable.js","webpack:///./src/redux/actions/access-actions.js","webpack:///./src/smart-components/myUserAccess/MUARolesTable.js","webpack:///./src/smart-components/myUserAccess/CommonBundleView.js","webpack:///./src/smart-components/myUserAccess/bundles/rhel.js"],"sourcesContent":["import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<Omit<React.HTMLProps<SVGElement>, 'ref'>, Record<string, unknown>>;\n  description: React.ReactNode[];\n  actions: React.ReactNode;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.sm} {...props}>\n    <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon icon={icon || SearchIcon} />} headingLevel=\"h4\" />\n    <EmptyStateBody className=\"pf-v5-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    <EmptyStateFooter>{actions}</EmptyStateFooter>\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n","import React, { Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';\nimport { Button, Pagination, EmptyStateActions } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  className,\n  isCompact,\n  borders,\n  columns,\n  rows,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  paginationProps,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  isRowSelectable,\n  fetchData,\n  setCheckedItems,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  onSort,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n  toolbarChildren,\n}) => {\n  const intl = useIntl();\n  const isITLess = useFlag('platform.rbac.itless');\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStateActions key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStateActions>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length,\n    },\n  });\n\n  const renderTable = () => {\n    const orderBy = `${sortBy?.direction === 'desc' ? '-' : ''}${columns[sortBy?.index]?.key}`;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          isRowSelectable={isRowSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={orderBy}\n          pagination={pagination}\n          paginationProps={paginationProps}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n          toolbarChildren={toolbarChildren}\n        />\n        {isLoading ? (\n          <SkeletonTable\n            variant={isCompact ? TableVariant.compact : undefined}\n            rows={pagination?.limit}\n            columns={columns.map((item) => item.title)}\n          />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isSelectable &&\n              rows?.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires, ...(isITLess && { username: data[_idx]?.username }) }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows?.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows?.length > 0 && { actionResolver })}\n            className={rows?.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortBy}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction, isSelectable) => onSort(e, index, direction, isSelectable)}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && (\n              <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps)} variant=\"bottom\" dropDirection=\"up\" />\n            )}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <div className={className}>\n      {routes()}\n      {!isLoading && rows?.length === 0 && filterValue?.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </div>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  className: propTypes.string,\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  isRowSelectable: propTypes.func,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  columns: propTypes.array.isRequired,\n  rows: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number,\n  }),\n  paginationProps: propTypes.shape({\n    toggleTemplate: propTypes.func,\n    isCompact: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  onSort: propTypes.func,\n  containerRef: propTypes.node,\n  noData: propTypes.bool,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n  toolbarChildren: propTypes.func,\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n  toolbarChildren: () => null,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData, filterValue = '', sortBy = '', paginationProps) => ({\n  ...paginationProps,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (\n  isLoading,\n  checkedRows = [],\n  setCheckedItems = () => undefined,\n  data = [],\n  tableId,\n  isRowSelectable = () => true\n) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter(isRowSelectable).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows, isRowSelectable),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type: type ?? 'text',\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  isRowSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  paginationProps,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n  toolbarChildren,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId, isRowSelectable),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy, paginationProps),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  >\n    {toolbarChildren()}\n  </PrimaryToolbar>\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  paginationProps: PropTypes.shape({\n    toggleTemplate: PropTypes.func,\n    isCompact: PropTypes.bool,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n  toolbarChildren: PropTypes.func,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n  toolbarChildren: () => null,\n};\n\nexport default Toolbar;\n","import { Button, Modal } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ResourceDefinitionsModal = ({ isOpen, handleClose, permission, resourceDefinitions }) => {\n  const intl = useIntl();\n  const columns = [''];\n  const [{ rows, pagination, filterValue }, setRows] = useState(() => ({\n    filterValue: '',\n    rows: resourceDefinitions.map(({ attributeFilter: { value } }) => value).slice(0, defaultSettings.limit),\n    pagination: {\n      ...defaultSettings,\n      count: resourceDefinitions.length,\n    },\n  }));\n\n  const handleFilterValue = ({ name = '', limit, offset }, isFilter = false) =>\n    setRows(({ pagination, filterValue }) => {\n      const rows = resourceDefinitions\n        .map(({ attributeFilter: { value } }) => value)\n        .filter((value) => value.includes(name))\n        .slice(offset, limit);\n      return {\n        rows,\n        filterValue: isFilter ? name : filterValue,\n        pagination: {\n          ...pagination,\n          offset: isFilter ? 0 : offset,\n          limit,\n          count: rows.length,\n        },\n      };\n    });\n\n  return (\n    <Modal\n      actions={[\n        <Button key=\"close-action\" variant=\"primary\" onClick={handleClose}>\n          {intl.formatMessage(messages.close)}\n        </Button>,\n      ]}\n      variant=\"large\"\n      isOpen={isOpen}\n      onClose={handleClose}\n      title={intl.formatMessage(messages.resourceDefinitions)}\n      description={\n        <FormattedMessage\n          {...messages.viewResourceDefinitions}\n          values={{\n            strong: (text) => <strong>{text}</strong>,\n            permission,\n          }}\n        />\n      }\n    >\n      <TableToolbarView\n        columns={columns}\n        data={rows}\n        filterValue={filterValue}\n        setFilterValue={(config) => handleFilterValue(config, true)}\n        pagination={pagination}\n        ouiaId=\"resource-definition-table\"\n        noData={resourceDefinitions.length === 0}\n        rows={rows.map((value) => ({ cells: [value] }))}\n        titlePlural={intl.formatMessage(messages.resourceDefinitions)}\n        titleSingular={intl.formatMessage(messages.resourceDefinition)}\n        noDataDescription={[intl.formatMessage(messages.resourceDefinition, { permission: permission })]}\n        fetchData={handleFilterValue}\n        tableId=\"resource-definitions-modal\"\n      />\n    </Modal>\n  );\n};\n\nResourceDefinitionsModal.propTypes = {\n  isOpen: PropTypes.bool,\n  handleClose: PropTypes.func.isRequired,\n  permission: PropTypes.string.isRequired,\n  resourceDefinitions: PropTypes.arrayOf(\n    PropTypes.shape({\n      attributeFilter: PropTypes.shape({\n        value: PropTypes.string.isRequired,\n      }).isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ResourceDefinitionsModal;\n","import { getAccessApi } from '../shared/user-login';\n\nconst accessApi = getAccessApi();\n\nexport async function getPrincipalAccess({ limit, offset, username, application = '', status, orderBy }) {\n  return await accessApi.getPrincipalAccess(application, username, orderBy, status, limit, offset);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ResourceDefinitionsLink = ({ onClick, access }) => {\n  const intl = useIntl();\n\n  return access.resourceDefinitions.length === 0 ? (\n    <span>{intl.formatMessage(messages.notApplicable)}</span>\n  ) : (\n    <a\n      onClick={() => {\n        onClick();\n        return false;\n      }}\n    >\n      {access.resourceDefinitions.length}\n    </a>\n  );\n};\n\nResourceDefinitionsLink.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  access: PropTypes.shape({ resourceDefinitions: PropTypes.array.isRequired }).isRequired,\n};\n\nexport default ResourceDefinitionsLink;\n","import React, { Fragment } from 'react';\nimport ResourceDefinitionsLink from '../../presentational-components/myUserAccess/ResourceDefinitionsLink';\n\nexport const createRows = (data, showResourceDefinitions, onRdClick) =>\n  data.reduce((acc, { permission, ...access }, index) => {\n    const [appName, type, operation] = permission.split(':');\n    return [\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation,\n          ...(showResourceDefinitions\n            ? [\n                <Fragment key=\"rd\">\n                  <ResourceDefinitionsLink onClick={() => onRdClick(index)} access={access} />\n                </Fragment>,\n              ]\n            : []),\n        ],\n      },\n    ];\n  }, []);\n","import React, { Fragment, Suspense, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { getPrincipalAccess } from '../../redux/actions/access-actions';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './mua-table-helpers';\nimport ResourceDefinitionsModal from './ResourceDefinitionsModal';\nimport { sortable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst MUAAccessTable = ({ filters, setFilters, apps, hasActiveFilters, showResourceDefinitions }) => {\n  const intl = useIntl();\n  const [{ rdOpen, rdPermission, resourceDefinitions }, setRdConfig] = useState({ rdOpen: false });\n  const { current: columns } = useRef([\n    { title: intl.formatMessage(messages.application), key: 'application', transforms: [sortable] },\n    { title: intl.formatMessage(messages.resourceType), key: 'resource_type', transforms: [sortable] },\n    { title: intl.formatMessage(messages.operation), key: 'verb', transforms: [sortable] },\n    ...(showResourceDefinitions ? [{ title: intl.formatMessage(messages.resourceDefinitions) }] : []),\n  ]);\n\n  const dispatch = useDispatch();\n  const { permissions, isLoading } = useSelector(\n    (state) => ({\n      permissions: state.accessReducer.access,\n      isLoading: state.accessReducer.isLoading,\n    }),\n    shallowEqual\n  );\n\n  const fetchData = ({ application, ...apiProps }) => {\n    const applicationParam = application?.length > 0 ? application : apps;\n    dispatch(getPrincipalAccess({ application: applicationParam.join(','), ...apiProps }));\n  };\n\n  const handleRdClick = (index) =>\n    setRdConfig({\n      rdOpen: true,\n      rdPermission: permissions.data[index].permission,\n      resourceDefinitions: permissions.data[index].resourceDefinitions,\n    });\n\n  useEffect(() => {\n    fetchData({ ...defaultSettings, orderBy });\n  }, []);\n\n  const [sortByState, setSortByState] = useState({ index: 0, direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n  const filteredRows = permissions?.data || [];\n\n  return (\n    <Fragment>\n      <TableToolbarView\n        columns={columns}\n        rows={createRows(filteredRows, showResourceDefinitions, handleRdClick)}\n        data={filteredRows}\n        fetchData={fetchData}\n        sortBy={sortByState}\n        onSort={(e, index, direction) => {\n          const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n          setSortByState({ index, direction });\n          fetchData({\n            ...permissions?.meta,\n            offset: 0,\n            orderBy,\n            ...(filters?.length > 0\n              ? {\n                  ...filters.reduce(\n                    (acc, curr) => ({\n                      ...acc,\n                      [curr.key]: curr.value,\n                    }),\n                    {}\n                  ),\n                }\n              : { name: '', application: [] }),\n          });\n        }}\n        filters={filters}\n        setFilterValue={setFilters}\n        isLoading={isLoading}\n        pagination={permissions?.meta}\n        ouiaId=\"permissions-table\"\n        titlePlural={intl.formatMessage(messages.permissions).toLowerCase()}\n        titleSingular={intl.formatMessage(messages.permission).toLowerCase()}\n        noData={!isLoading && !hasActiveFilters && filteredRows.length === 0}\n        noDataDescription={[intl.formatMessage(messages.noPermissionsForInsights), intl.formatMessage(messages.contactOrgAdministrator)]}\n        tableId=\"mua-access\"\n      />\n      <Suspense fallback={<Fragment />}>\n        {rdOpen && (\n          <ResourceDefinitionsModal\n            resourceDefinitions={resourceDefinitions}\n            isOpen={rdOpen}\n            handleClose={() => setRdConfig({ rdOpen: false })}\n            permission={rdPermission}\n          />\n        )}\n      </Suspense>\n    </Fragment>\n  );\n};\n\nMUAAccessTable.propTypes = {\n  filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setFilters: PropTypes.func.isRequired,\n  apps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  hasActiveFilters: PropTypes.bool,\n  showResourceDefinitions: PropTypes.bool,\n};\n\nexport default MUAAccessTable;\n","import * as ActionTypes from '../action-types';\nimport * as AccessHelper from '../../helpers/access/access-helper';\n\nexport const getPrincipalAccess = (apiProps) => ({\n  type: ActionTypes.GET_PRINCIPAL_ACCESS,\n  payload: AccessHelper.getPrincipalAccess(apiProps),\n});\n","import React, { Fragment, useCallback, useEffect, useState, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { fetchRoles, fetchRoleForPrincipal } from '../../redux/actions/role-actions';\nimport messages from '../../Messages';\n\nconst ResourceDefinitionsModal = lazy(() => import('./ResourceDefinitionsModal'));\n\nimport { TableVariant, compoundExpand, cellWidth, sortable } from '@patternfly/react-table';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table/deprecated';\nimport ResourceDefinitionsLink from '../../presentational-components/myUserAccess/ResourceDefinitionsLink';\n\nconst MUARolesTable = ({ filters, setFilters, apps, showResourceDefinitions }) => {\n  const intl = useIntl();\n  const [expanded, setExpanded] = useState({});\n  const [{ rdOpen, rdPermission, resourceDefinitions }, setRdConfig] = useState({ rdOpen: false });\n\n  const columns = [\n    {\n      title: intl.formatMessage(messages.roles),\n      key: 'display_name',\n      transforms: [sortable],\n    },\n    { title: intl.formatMessage(messages.description) },\n    {\n      title: intl.formatMessage(messages.permissions),\n      cellTransforms: [compoundExpand, cellWidth(20)],\n    },\n  ];\n\n  const compoundPermissionsCells = [\n    intl.formatMessage(messages.application),\n    intl.formatMessage(messages.resourceType),\n    intl.formatMessage(messages.operation),\n    ...(showResourceDefinitions ? [intl.formatMessage(messages.resourceDefinitions)] : []),\n  ];\n\n  const { roles, isLoading, rolesWithAccess } = useSelector(\n    ({ roleReducer: { roles, isLoading, rolesWithAccess } }) => ({\n      roles,\n      isLoading,\n      rolesWithAccess,\n    }),\n    shallowEqual\n  );\n\n  const [sortByState, setSortByState] = useState({ index: 0, direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRoles({ limit: 20, offset: 0, orderBy, scope: 'principal', application: apps.join(',') }));\n  }, []);\n\n  const createRows = (data) => {\n    return data?.reduce(\n      (acc, { uuid, display_name, name, description, accessCount }, i) => [\n        ...acc,\n        {\n          uuid,\n          cells: [\n            { title: display_name || name, props: { component: 'th', isOpen: false } },\n            { title: description, props: { isOpen: false } },\n            { title: accessCount, props: { isOpen: expanded[uuid] === 2 } },\n          ],\n        },\n        {\n          uuid: `${uuid}-groups`,\n          parent: 2 * i,\n          compoundParent: 2,\n          cells: [\n            {\n              props: { colSpan: 4, className: 'pf-m-no-padding' },\n              title: rolesWithAccess?.[uuid] ? (\n                <Table\n                  ouiaId=\"permissions-in-role-nested-table\"\n                  aria-label=\"Simple Table\"\n                  borders={false}\n                  variant={TableVariant.compact}\n                  cells={compoundPermissionsCells}\n                  rows={rolesWithAccess[uuid].access.map((access) => ({\n                    cells: [\n                      ...access.permission.split(':'),\n                      ...(showResourceDefinitions\n                        ? [\n                            <Fragment key=\"rd\">\n                              <ResourceDefinitionsLink\n                                onClick={() =>\n                                  setRdConfig({\n                                    rdOpen: true,\n                                    rdPermission: access.permission,\n                                    resourceDefinitions: access.resourceDefinitions,\n                                  })\n                                }\n                                access={access}\n                              />\n                            </Fragment>,\n                          ]\n                        : []),\n                    ],\n                  }))}\n                >\n                  <TableHeader />\n                  <TableBody />\n                </Table>\n              ) : (\n                <SkeletonTable columns={compoundPermissionsCells} rows={accessCount} variant={TableVariant.compact} />\n              ),\n            },\n          ],\n        },\n      ],\n      []\n    );\n  };\n\n  let debouncedFetch = useCallback(\n    debounce((limit, offset, name, application, permission, orderBy) => {\n      const applicationParam = application?.length > 0 ? application : apps;\n      return dispatch(fetchRoles({ limit, offset, scope: 'principal', orderBy, name, application: applicationParam.join(','), permission }));\n    }, 800),\n    []\n  );\n\n  const onExpand = (_event, _rowIndex, colIndex, isOpen, rowData) => {\n    if (!isOpen) {\n      setExpanded((expanded) => ({ ...expanded, [rowData.uuid]: colIndex }));\n      // Permissions\n      if (colIndex === 2) {\n        dispatch(fetchRoleForPrincipal(rowData.uuid));\n      }\n    } else {\n      setExpanded((expanded) => ({ ...expanded, [rowData.uuid]: -1 }));\n    }\n  };\n\n  return (\n    <Fragment>\n      <TableToolbarView\n        filters={filters}\n        columns={columns}\n        rows={createRows(roles.data)}\n        data={roles.data}\n        isCompact={false}\n        isExpandable={true}\n        onExpand={onExpand}\n        ouiaId=\"roles-table\"\n        fetchData={({ limit, offset, name, application, permission }) => {\n          debouncedFetch(limit, offset, name, application, permission, orderBy);\n        }}\n        sortBy={sortByState}\n        onSort={(e, index, direction) => {\n          const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index].key}`;\n          setSortByState({ index, direction });\n          dispatch(\n            fetchRoles({\n              offset: 0,\n              orderBy,\n              ...(filters?.length > 0\n                ? {\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                  }\n                : { name: '', application: [] }),\n            })\n          );\n        }}\n        emptyFilters={{ name: '', application: [] }}\n        setFilterValue={setFilters}\n        isLoading={isLoading}\n        pagination={roles.meta}\n        filterPlaceholder=\"role name\"\n        titlePlural=\"roles\"\n        titleSingular=\"role\"\n        tableId=\"mua-roles\"\n      />\n      <Suspense fallback={<Fragment />}>\n        {rdOpen && (\n          <ResourceDefinitionsModal\n            resourceDefinitions={resourceDefinitions}\n            isOpen={rdOpen}\n            handleClose={() => setRdConfig({ rdOpen: false })}\n            permission={rdPermission}\n          />\n        )}\n      </Suspense>\n    </Fragment>\n  );\n};\n\nMUARolesTable.propTypes = {\n  fetchRoles: PropTypes.func,\n  fetchRoleForPrincipal: PropTypes.func,\n  fetchUsers: PropTypes.func,\n  roles: PropTypes.object,\n  isLoading: PropTypes.bool,\n  rolesWithAccess: PropTypes.object,\n  filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setFilters: PropTypes.func.isRequired,\n  apps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  showResourceDefinitions: PropTypes.bool,\n};\n\nexport default MUARolesTable;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport OrgAdminContext from '../../utilities/org-admin-context';\nimport MUAAccessTable from './MUAAccessTable';\nimport MUARolesTable from './MUARolesTable';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\n// TODO: Add permissions back when we support partial matching\n\nexport const createFilter = ({ apps, isOrgAdmin, name = '', application = [] /* permission = '' */ }) => {\n  const intl = useIntl();\n  return [\n    {\n      key: 'application',\n      value: application,\n      placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n      type: 'checkbox',\n      items: apps.map((app) => ({ label: app, value: app })),\n    },\n    ...(isOrgAdmin\n      ? [\n          {\n            key: 'name',\n            type: 'text',\n            value: name,\n            label: intl.formatMessage(messages.roleName),\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.roleName).toLowerCase() }),\n          },\n          // {\n          //   key: 'permission',\n          //   value: permission,\n          //   placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.permission).toLowerCase() }),\n          //   type: 'text',\n          // },\n        ]\n      : []),\n  ];\n};\n\nconst CommonBundleView = ({ apps }) => {\n  const isOrgAdmin = useContext(OrgAdminContext);\n  const [name, setName] = useState('');\n  const [permission, setPermission] = useState('');\n  const [application, setApplication] = useState([]);\n  const handleSetFilters = ({ name, application, permission }) => {\n    if (typeof name === 'string') {\n      setName(name);\n    }\n\n    if (typeof permission === 'string') {\n      setPermission(permission);\n    }\n\n    if (application) {\n      setApplication(typeof application === 'string' ? [] : application);\n    }\n  };\n\n  const filters = createFilter({ apps, isOrgAdmin, name, application, permission });\n  return isOrgAdmin ? (\n    <MUARolesTable setFilters={handleSetFilters} filters={filters} apps={apps} />\n  ) : (\n    <MUAAccessTable setFilters={handleSetFilters} filters={filters} apps={apps} hasActiveFilters={name.length > 0 || application.length > 0} />\n  );\n};\n\nCommonBundleView.propTypes = {\n  apps: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default CommonBundleView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommonBundleView from '../CommonBundleView';\n\nconst RhelBundle = ({ apps }) => <CommonBundleView apps={apps} />;\n\nRhelBundle.propTypes = {\n  apps: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default RhelBundle;\n"],"names":["title","icon","description","actions","props","variant","sm","titleText","SearchIcon","headingLevel","className","map","text","key","TableToolbarView","isCompact","borders","columns","rows","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","paginationProps","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","isRowSelectable","fetchData","setCheckedItems","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","value","sortBy","onSort","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","toolbarChildren","intl","isITLess","useFlag","length","every","formatMessage","configureItems","items","toConfigureUserAccess","createAtLeastOneItem","item","orderBy","direction","index","Fragment","compact","undefined","limit","canSelectAll","toLowerCase","onSelect","_e","isSelected","_idx","uuid","cells","name","requires","username","fullWidth","noMatchingItemsFound","filterMatchesNoItems","tryChangingFilters","onClick","offset","clearAllFilters","colSpan","e","noBottom","dropDirection","propTypes","directions","isRequired","count","toggleTemplate","defaultProps","paginationBuilder","itemCount","perPage","page","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","selectNone","selectPage","filter","checked","id","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","innerRef","filterValues","filterByKey","filterBy","newFilter","Array","isArray","Object","keys","pickBy","reduce","acc","curr","then","current","focus","isDisabled","activeFiltersConfigBuilder","options","category","chips","Boolean","onDelete","deleted","isAll","setKeyValue","filtersValue","Toolbar","bulkSelect","filterConfig","actionsConfig","activeFiltersConfig","isCollapsible","ResourceDefinitionsModal","isOpen","handleClose","permission","resourceDefinitions","setRows","useState","attributeFilter","slice","handleFilterValue","isFilter","includes","close","onClose","viewResourceDefinitions","values","strong","config","resourceDefinition","accessApi","async","getPrincipalAccess","application","status","ResourceDefinitionsLink","access","notApplicable","createRows","showResourceDefinitions","onRdClick","appName","operation","split","MUAAccessTable","setFilters","apps","hasActiveFilters","rdOpen","rdPermission","setRdConfig","useRef","transforms","sortable","resourceType","dispatch","useDispatch","permissions","useSelector","state","accessReducer","shallowEqual","apiProps","payload","join","useEffect","sortByState","setSortByState","filteredRows","meta","noPermissionsForInsights","contactOrgAdministrator","Suspense","fallback","lazy","MUARolesTable","expanded","setExpanded","roles","cellTransforms","compoundExpand","cellWidth","compoundPermissionsCells","rolesWithAccess","roleReducer","scope","debouncedFetch","useCallback","applicationParam","display_name","accessCount","i","component","parent","compoundParent","Table","SkeletonTable","_rowIndex","colIndex","rowData","fetchRoles","fetchRoleForPrincipal","fetchUsers","CommonBundleView","isOrgAdmin","useContext","setName","setPermission","setApplication","handleSetFilters","app","roleName","createFilter","RhelBundle"],"sourceRoot":""}
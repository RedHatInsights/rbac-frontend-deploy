{"version":3,"file":"js/8205.b3bb918847236b966cab.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/TextArea/TextArea.js","webpack:///./src/smart-components/common/review-step-buttons.js","webpack:///./src/smart-components/common/wizard-error.js","webpack:///./src/smart-components/group/add-group/review-template.js","webpack:///./src/smart-components/group/add-group/set-name.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/add-group-success.tsx","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/smart-components/group/add-group/schema.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/validators.js","webpack:///./src/utilities/async-debounce.ts"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { ASTERISK } from '../../helpers/htmlConstants';\nimport { css } from '@patternfly/react-styles';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport const FormGroup = (_a) => {\n    var { children = null, className = '', label, labelInfo, labelIcon, isRequired = false, isInline = false, hasNoPaddingTop = false, isStack = false, fieldId, role } = _a, props = __rest(_a, [\"children\", \"className\", \"label\", \"labelInfo\", \"labelIcon\", \"isRequired\", \"isInline\", \"hasNoPaddingTop\", \"isStack\", \"fieldId\", \"role\"]);\n    const isGroupOrRadioGroup = role === 'group' || role === 'radiogroup';\n    const LabelComponent = isGroupOrRadioGroup ? 'span' : 'label';\n    const labelContent = (React.createElement(React.Fragment, null,\n        React.createElement(LabelComponent, Object.assign({ className: css(styles.formLabel) }, (!isGroupOrRadioGroup && { htmlFor: fieldId })),\n            React.createElement(\"span\", { className: css(styles.formLabelText) }, label),\n            isRequired && (React.createElement(\"span\", { className: css(styles.formLabelRequired), \"aria-hidden\": \"true\" },\n                ' ',\n                ASTERISK))),\n        ' ',\n        React.isValidElement(labelIcon) && labelIcon));\n    return (React.createElement(GenerateId, null, (randomId) => (React.createElement(\"div\", Object.assign({ className: css(styles.formGroup, className) }, (role && { role }), (isGroupOrRadioGroup && { 'aria-labelledby': `${fieldId || randomId}-legend` }), props),\n        label && (React.createElement(\"div\", Object.assign({ className: css(styles.formGroupLabel, labelInfo && styles.modifiers.info, hasNoPaddingTop && styles.modifiers.noPaddingTop) }, (isGroupOrRadioGroup && { id: `${fieldId || randomId}-legend` })),\n            labelInfo && (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: css(styles.formGroupLabelMain) }, labelContent),\n                React.createElement(\"div\", { className: css(styles.formGroupLabelInfo) }, labelInfo))),\n            !labelInfo && labelContent)),\n        React.createElement(\"div\", { className: css(styles.formGroupControl, isInline && styles.modifiers.inline, isStack && styles.modifiers.stack) }, children)))));\n};\nFormGroup.displayName = 'FormGroup';\n//# sourceMappingURL=FormGroup.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { capitalize, ValidatedOptions, canUseDOM } from '../../helpers';\nimport { FormControlIcon } from '../FormControl/FormControlIcon';\nexport var TextAreResizeOrientation;\n(function (TextAreResizeOrientation) {\n    TextAreResizeOrientation[\"horizontal\"] = \"horizontal\";\n    TextAreResizeOrientation[\"vertical\"] = \"vertical\";\n    TextAreResizeOrientation[\"both\"] = \"both\";\n})(TextAreResizeOrientation || (TextAreResizeOrientation = {}));\nexport var TextAreaReadOnlyVariant;\n(function (TextAreaReadOnlyVariant) {\n    TextAreaReadOnlyVariant[\"default\"] = \"default\";\n    TextAreaReadOnlyVariant[\"plain\"] = \"plain\";\n})(TextAreaReadOnlyVariant || (TextAreaReadOnlyVariant = {}));\nclass TextAreaBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.setAutoHeight = (field) => {\n            const parent = field.parentElement;\n            parent.style.setProperty('height', 'inherit');\n            const computed = window.getComputedStyle(field);\n            // Calculate the height\n            const height = parseInt(computed.getPropertyValue('border-top-width')) +\n                parseInt(computed.getPropertyValue('padding-top')) +\n                field.scrollHeight +\n                parseInt(computed.getPropertyValue('padding-bottom')) +\n                parseInt(computed.getPropertyValue('border-bottom-width'));\n            parent.style.setProperty('height', `${height}px`);\n        };\n        this.handleChange = (event) => {\n            // https://gomakethings.com/automatically-expand-a-textarea-as-the-user-types-using-vanilla-javascript/\n            const field = event.currentTarget;\n            if (this.props.autoResize && canUseDOM) {\n                this.setAutoHeight(field);\n            }\n            if (this.props.onChange) {\n                this.props.onChange(event, field.value);\n            }\n        };\n        if (!props.id && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('TextArea: TextArea requires either an id or aria-label to be specified');\n        }\n    }\n    componentDidMount() {\n        const inputRef = this.props.innerRef || this.inputRef;\n        if (this.props.autoResize && canUseDOM) {\n            const field = inputRef.current;\n            this.setAutoHeight(field);\n        }\n    }\n    render() {\n        const _a = this.props, { className, value, validated, isRequired, isDisabled, readOnlyVariant, resizeOrientation, innerRef, disabled, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        autoResize, onChange, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        onBlur, onFocus } = _a, props = __rest(_a, [\"className\", \"value\", \"validated\", \"isRequired\", \"isDisabled\", \"readOnlyVariant\", \"resizeOrientation\", \"innerRef\", \"disabled\", \"autoResize\", \"onChange\", \"onBlur\", \"onFocus\"]);\n        const orientation = `resize${capitalize(resizeOrientation)}`;\n        const hasStatusIcon = ['success', 'error', 'warning'].includes(validated);\n        return (React.createElement(\"span\", { className: css(styles.formControl, readOnlyVariant && styles.modifiers.readonly, readOnlyVariant === 'plain' && styles.modifiers.plain, resizeOrientation && styles.modifiers[orientation], isDisabled && styles.modifiers.disabled, hasStatusIcon && styles.modifiers[validated], className) },\n            React.createElement(\"textarea\", Object.assign({ onChange: this.handleChange, onFocus: onFocus, onBlur: onBlur }, (typeof this.props.defaultValue !== 'string' && { value }), { \"aria-invalid\": validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled || disabled, readOnly: !!readOnlyVariant, ref: innerRef || this.inputRef }, props)),\n            hasStatusIcon && (React.createElement(\"span\", { className: css(styles.formControlUtilities) },\n                React.createElement(FormControlIcon, { status: validated })))));\n    }\n}\nTextAreaBase.displayName = 'TextArea';\nTextAreaBase.defaultProps = {\n    innerRef: React.createRef(),\n    className: '',\n    isRequired: false,\n    isDisabled: false,\n    validated: 'default',\n    resizeOrientation: 'both',\n    'aria-label': null\n};\nexport const TextArea = React.forwardRef((props, ref) => (React.createElement(TextAreaBase, Object.assign({}, props, { innerRef: ref }))));\nTextArea.displayName = 'TextArea';\n//# sourceMappingURL=TextArea.js.map","import { Button } from '@patternfly/react-core';\nimport React, { useContext, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst selectNext = (nextStep, getState) =>\n  ({\n    string: nextStep,\n    function: nextStep({ values: getState().values }),\n  }?.[typeof nextStep] || nextStep.stepMapper?.[get(getState().values, nextStep.when)]);\n\nconst NextButton = ({ nextStep, valid, handleNext, nextLabel, getState, handleSubmit, submitLabel }) => (\n  <Button\n    variant=\"primary\"\n    type=\"button\"\n    isDisabled={!valid || getState().validating}\n    onClick={() => (nextStep ? handleNext(selectNext(nextStep, getState)) : handleSubmit())}\n  >\n    {nextStep ? nextLabel : submitLabel}\n  </Button>\n);\n\nNextButton.propTypes = {\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n  handleSubmit: PropTypes.func.isRequired,\n  submitLabel: PropTypes.node.isRequired,\n  valid: PropTypes.bool,\n  handleNext: PropTypes.func.isRequired,\n  nextLabel: PropTypes.node.isRequired,\n  getState: PropTypes.func.isRequired,\n};\n\nconst ReviewStepButtons = ({ renderNextButton, disableBack, handlePrev, buttonLabels: { cancel, back }, context }) => {\n  const formOptions = useFormApi();\n  const { success, error, submitting } = useContext(context);\n  if (success || typeof error === 'undefined' || error || submitting) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {renderNextButton()}\n      <Button type=\"button\" variant=\"secondary\" isDisabled={disableBack} onClick={handlePrev}>\n        {back}\n      </Button>\n      <Button type=\"button\" variant=\"link\" onClick={formOptions.onCancel}>\n        {cancel}\n      </Button>\n    </Fragment>\n  );\n};\n\nReviewStepButtons.propTypes = {\n  disableBack: PropTypes.bool,\n  handlePrev: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  nextStep: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      when: PropTypes.string.isRequired,\n      stepMapper: PropTypes.object.isRequired,\n    }),\n    PropTypes.func,\n  ]),\n  buttonLabels: PropTypes.shape({\n    submit: PropTypes.node.isRequired,\n    cancel: PropTypes.node.isRequired,\n    back: PropTypes.node.isRequired,\n    next: PropTypes.node.isRequired,\n  }).isRequired,\n  context: PropTypes.object.isRequired,\n  renderNextButton: PropTypes.func,\n};\n\nexport default ReviewStepButtons;\n","import React, { useContext } from 'react';\nimport { Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\n\nconst WizardError = ({ context, title, text }) => {\n  const intl = useIntl();\n  const { jumpToStep } = useContext(WizardContext);\n  const { setWizardError } = useContext(context);\n  return (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader titleText={<>{title}</>} icon={<EmptyStateIcon color=\"red\" icon={ExclamationCircleIcon} />} headingLevel=\"h4\" />\n      <EmptyStateBody>{text}</EmptyStateBody>\n      <EmptyStateFooter>\n        <Button\n          onClick={() => {\n            setWizardError(undefined);\n            jumpToStep(0);\n          }}\n          variant=\"primary\"\n        >\n          {intl.formatMessage(messages.returnToStepNumber, { number: 1 })}\n        </Button>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nWizardError.propTypes = {\n  context: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default WizardError;\n","import React, { useContext, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Bullseye, Spinner, Title } from '@patternfly/react-core';\nimport { AddGroupWizardContext } from './add-group-wizard';\nimport { asyncValidator } from '../validators';\nimport WizardError from '../../common/wizard-error';\nimport messages from '../../../Messages';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  const { submitting, error, setWizardError } = useContext(AddGroupWizardContext);\n  const { getState } = useFormApi();\n  useEffect(() => {\n    setWizardError(undefined);\n    asyncValidator(getState().values['group-name'])\n      .then(() => setWizardError(false))\n      .catch(() => setWizardError(true));\n  }, []);\n\n  if (typeof error === 'undefined' || submitting) {\n    return (\n      <Bullseye>\n        <Spinner className=\"pf-v5-u-mt-xl\" size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  return error === true ? (\n    <WizardError\n      context={AddGroupWizardContext}\n      title={intl.formatMessage(messages.groupNameTakenTitle)}\n      text={intl.formatMessage(messages.groupNameTakenText)}\n    />\n  ) : (\n    <React.Fragment>\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-lg\">\n        {intl.formatMessage(messages.reviewDetails)}\n      </Title>\n      {[[{ ...formFields?.[0]?.[0] }]]}\n    </React.Fragment>\n  );\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { FormHelperText, HelperText, HelperTextItem, Stack, StackItem } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput/TextInput';\nimport { TextArea } from '@patternfly/react-core/dist/esm/components/TextArea/TextArea';\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { debouncedAsyncValidator } from '../validators';\nimport { trimAll } from '../../../helpers/shared/helpers';\nimport messages from '../../../Messages';\n\nconst groupNameValidated = (groupName, groupNameError) =>\n  groupName === undefined || groupNameError || groupName?.length > 150 ? 'error' : 'default';\nconst groupDescriptionValidated = (groupDescription) => (groupDescription?.length > 150 ? 'error' : 'default');\n\nconst SetName = (props) => {\n  const intl = useIntl();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const { 'group-name': name, 'group-description': description } = formOptions.getState().values;\n  const [groupName, setGroupName] = useState(name || '');\n  const [groupNameError, setGroupNameError] = useState();\n  const [groupDescription, setGroupDescription] = useState(description);\n\n  const processGroupName = (value) => {\n    const trimmedValue = trimAll(value);\n    input.onChange(undefined);\n    debouncedAsyncValidator(trimmedValue)\n      .then(() => {\n        input.onChange(trimmedValue);\n        setGroupNameError(undefined);\n      })\n      .catch((error) => {\n        setGroupNameError(error);\n        input.onChange(undefined);\n      });\n    setGroupName(value);\n  };\n\n  useEffect(() => {\n    groupName?.length > 0 && processGroupName(groupName);\n  }, []);\n\n  const groupNameValid = groupNameValidated(groupName, groupNameError);\n  const groupDescriptionValid = groupDescriptionValidated(groupDescription);\n  return (\n    <Stack hasGutter>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <FormGroup label={intl.formatMessage(messages.groupName)} isRequired>\n          <TextInput\n            value={groupName}\n            type=\"text\"\n            validated={groupNameValid}\n            onBlur={() => groupName === '' && setGroupName(undefined)}\n            onChange={(_event, value) => processGroupName(value)}\n            aria-label=\"Group name\"\n          />\n          {groupNameValid === 'error' && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant={groupNameValid}>{groupName ? groupNameError : intl.formatMessage(messages.required)}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n      <StackItem>\n        <FormGroup label={intl.formatMessage(messages.groupDescription)}>\n          <TextArea\n            value={groupDescription}\n            validated={groupDescriptionValid}\n            onChange={(_event, value) => {\n              setGroupDescription(value);\n              formOptions.change('group-description', value);\n            }}\n            aria-label=\"Group description\"\n            resizeOrientation=\"vertical\"\n          />\n          {groupDescriptionValid === 'error' && (\n            <FormHelperText>\n              <HelperText variant={groupDescriptionValid}>\n                <HelperTextItem>{intl.formatMessage(messages.maxCharactersWarning, { number: 150 })}</HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSetName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SetName;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { FormGroup, Stack, StackItem, Text, TextContent } from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport '../../../App.scss';\n\nconst SetRoles = (props) => {\n  const intl = useIntl();\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedRoles(formOptions.getState().values['roles-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedRoles);\n    formOptions.change('roles-list', selectedRoles);\n  }, [selectedRoles]);\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text>{intl.formatMessage(messages.selectRolesForGroupText)}</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <FormGroup fieldId=\"select-role\">\n            <RolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} rolesExcluded={false} />\n          </FormGroup>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetRoles;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Form, FormGroup, Stack, StackItem, TextContent } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport UsersList from './users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport '../../../App.scss';\n\nconst SetUsers = (props) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { input } = useFieldApi(props);\n  const intl = useIntl();\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedUsers(formOptions.getState().values['users-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedUsers);\n    formOptions.change('users-list', selectedUsers);\n  }, [selectedUsers]);\n\n  return (\n    <Fragment>\n      <Form>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <ActiveUser linkDescription={intl.formatMessage(messages.toManageUsersText)} />\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup fieldId=\"select-user\">\n              <Card>\n                <UsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} displayNarrow />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst SummaryContent = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'group-name': name,\n    'group-description': description,\n    'users-list': selectedUsers,\n    'roles-list': selectedRoles,\n  } = formOptions.getState().values;\n\n  return (\n    <div className=\"rbac\">\n      <Stack hasGutter>\n        <StackItem>\n          <Stack hasGutter>\n            <StackItem className=\"rbac-l-stack__item-summary\">\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    {intl.formatMessage(messages.groupName)}\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{name}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    {intl.formatMessage(messages.groupDescription)}\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{description}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    {intl.formatMessage(messages.roles)}\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  {selectedRoles.map((role, index) => (\n                    <Text className=\"pf-v5-u-mb-0\" key={index}>\n                      {role.label}\n                    </Text>\n                  ))}\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n                    {intl.formatMessage(messages.members)}\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  {selectedUsers.map((role, index) => (\n                    <Text className=\"pf-v5-u-mb-0\" key={index}>\n                      {role.label}\n                    </Text>\n                  ))}\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SummaryContent;\n","import React, { useContext } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateActions, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { AddGroupWizardContext } from './add-group-wizard';\nimport messages from '../../../Messages';\n\ninterface AddGroupSuccessProps {\n  onClose: () => void;\n}\n\nconst AddGroupSuccess = ({ onClose }: AddGroupSuccessProps) => {\n  const intl = useIntl();\n  const { setHideForm, setWizardSuccess } = useContext(AddGroupWizardContext);\n\n  return (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader\n        titleText={<>{intl.formatMessage(messages.groupCreatedSuccessfully)}</>}\n        icon={<EmptyStateIcon className=\"pf-v5-u-mt-xl\" color=\"green\" icon={CheckCircleIcon} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateFooter>\n        <Button onClick={onClose} variant=\"primary\">\n          {intl.formatMessage(messages.exit)}\n        </Button>\n        <EmptyStateActions>\n          <Button\n            onClick={() => {\n              setHideForm(false);\n              setWizardSuccess(false);\n            }}\n            variant=\"link\"\n          >\n            {intl.formatMessage(messages.createAnotherGroup)}\n          </Button>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nexport default AddGroupSuccess;\n","import React, { useState, createContext, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core/deprecated';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport { schemaBuilder } from './schema';\nimport { addGroup } from '../../../redux/actions/group-actions';\nimport { createQueryParams } from '../../../helpers/shared/helpers';\nimport SetName from './set-name';\nimport SetRoles from './set-roles';\nimport SetUsers from './set-users';\nimport SummaryContent from './summary-content';\nimport AddGroupSuccess from './add-group-success';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport paths from '../../../utilities/pathnames';\nimport messages from '../../../Messages';\n\nexport const AddGroupWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n  // eslint-disable-next-line no-unused-vars\n  setHideForm: (newValue) => null,\n  // eslint-disable-next-line no-unused-vars\n  setWizardSuccess: (newValue) => null,\n});\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  description: Description,\n  'set-name': SetName,\n  'set-roles': SetRoles,\n  'set-users': SetUsers,\n  'summary-content': SummaryContent,\n};\n\nexport const onCancel = (emptyCallback, nonEmptyCallback, setGroupData) => (formData) => {\n  setGroupData(formData);\n  if (Object.keys(formData).length > 0) {\n    nonEmptyCallback(true);\n  } else {\n    emptyCallback();\n  }\n};\n\nconst AddGroupWizard = ({ postMethod, pagination, filters, orderBy }) => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const container = useRef(document.createElement('div'));\n  const schema = useRef(schemaBuilder(container.current));\n  const navigate = useAppNavigate();\n  const [groupData, setGroupData] = useState({});\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n\n  const redirectToGroups = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        title: intl.formatMessage(messages.addingGroupTitle),\n        dismissDelay: 8000,\n        description: intl.formatMessage(messages.addingGroupCanceledDescription),\n      })\n    );\n    navigate({\n      pathname: paths.groups.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit, ...filters }),\n    });\n  };\n\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardCanceled = (canceled) => setWizardContextValue((prev) => ({ ...prev, canceled }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n\n  const onSubmit = (formData) => {\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    const groupData = {\n      name: formData['group-name'],\n      description: formData['group-description'],\n      user_list: formData['users-list'].map((user) => ({ username: user.label })),\n      roles_list: formData['roles-list'].map((role) => role.uuid),\n    };\n    dispatch(addGroup(groupData)).then(() => {\n      setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true }));\n    });\n  };\n\n  const onClose = () => {\n    setWizardContextValue((prev) => ({ ...prev, success: false, hideForm: false }));\n    postMethod({ limit: pagination.limit, offset: 0, orderBy, filters: {} });\n    navigate({\n      pathname: paths.groups.link,\n      search: createQueryParams({ page: 1, per_page: pagination.limit }),\n    });\n  };\n\n  return (\n    <AddGroupWizardContext.Provider value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm }}>\n      <WarningModal\n        title={intl.formatMessage(messages.exitItemCreation, { item: intl.formatMessage(messages.group).toLocaleLowerCase() })}\n        isOpen={wizardContextValue.canceled}\n        onClose={() => {\n          container.current.hidden = false;\n          setWizardCanceled(false);\n        }}\n        confirmButtonLabel={intl.formatMessage(messages.discard)}\n        onConfirm={redirectToGroups}\n      >\n        {intl.formatMessage(messages.discardedInputsWarning)}\n      </WarningModal>\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            isOpen\n            title={intl.formatMessage(messages.createGroup)}\n            onClose={onClose}\n            steps={[\n              {\n                name: 'success',\n                component: <AddGroupSuccess onClose={onClose} />,\n                isFinishedStep: true,\n              },\n            ]}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          schema={schema.current}\n          container={container}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          initialValues={groupData}\n          onCancel={onCancel(\n            redirectToGroups,\n            () => {\n              container.current.hidden = true;\n              setWizardCanceled(true);\n            },\n            setGroupData\n          )}\n        />\n      )}\n    </AddGroupWizardContext.Provider>\n  );\n};\n\nAddGroupWizard.propTypes = {\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.object.isRequired,\n  orderBy: PropTypes.string,\n};\n\nexport default AddGroupWizard;\n","import React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport ReviewTemplate from './review-template';\nimport ReviewStepButtons from '../../common/review-step-buttons';\nimport { AddGroupWizardContext } from './add-group-wizard';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\n\nexport const schemaBuilder = (container) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        title: intl.formatMessage(messages.createGroup),\n        container,\n        fields: [\n          {\n            name: 'name-and-description',\n            nextStep: 'add-roles',\n            title: intl.formatMessage(messages.nameAndDescription),\n            fields: [\n              {\n                component: 'set-name',\n                name: 'group-name',\n                validate: [\n                  {\n                    type: validatorTypes.REQUIRED,\n                  },\n                ],\n              },\n              {\n                component: componentTypes.TEXTAREA,\n                name: 'group-description',\n                hideField: true,\n                validate: [\n                  {\n                    type: validatorTypes.MAX_LENGTH,\n                    threshold: 150,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            name: 'add-roles',\n            nextStep: 'add-users',\n            title: intl.formatMessage(messages.addRoles),\n            fields: [\n              {\n                component: 'set-roles',\n                name: 'roles-list',\n              },\n            ],\n          },\n          {\n            name: 'add-users',\n            nextStep: 'review',\n            title: intl.formatMessage(messages.addMembers),\n            fields: [\n              {\n                component: 'set-users',\n                name: 'users-list',\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            // eslint-disable-next-line react/display-name\n            buttons: (props) => <ReviewStepButtons {...props} context={AddGroupWizardContext} />,\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'summary-content',\n                name: 'summary-content',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { sortable } from '@patternfly/react-table';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\nimport messages from '../../../Messages';\n\nconst createRows = (data, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description }) => [\n          ...acc,\n          {\n            uuid,\n            cells: [display_name || name, description],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst RolesList = ({ selectedRoles, setSelectedRoles, rolesExcluded, groupId: groupUuid }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const dispatch = useDispatch();\n  const textFilterRef = useRef(null);\n  const selector = ({ roleReducer: { roles, isLoading } }) => ({\n    roles: roles.data,\n    pagination: roles.meta,\n    isLoading: isLoading,\n    filters: roles.filters,\n  });\n  const selectorRolesExluded = ({\n    groupReducer: {\n      selectedGroup: {\n        addRoles: { roles, pagination, loaded },\n        uuid,\n      },\n    },\n  }) => ({\n    roles,\n    pagination: pagination || { ...defaultCompactSettings, count: roles?.length },\n    isLoading: !loaded,\n    groupId: groupUuid || uuid,\n  });\n  const { roles, pagination, isLoading, groupId, filters } = useSelector(rolesExcluded ? selectorRolesExluded : selector, shallowEqual);\n\n  const { current: columns } = useRef([\n    { title: intl.formatMessage(messages.name), key: 'display_name', ...(rolesExcluded ? { orderBy: 'name' } : { transforms: [sortable] }) },\n    { title: intl.formatMessage(messages.description) },\n  ]);\n\n  const [filterValue, setFilterValue] = useState('');\n  const [sortByState, setSortByState] = useState({ index: 1, direction: 'asc' });\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name })));\n  };\n\n  const fetchRoles = useCallback(\n    (groupId, config) =>\n      rolesExcluded ? dispatch(fetchAddRolesForGroup(groupId, config)) : dispatch(fetchRolesWithPolicies(mappedProps({ ...config, chrome }))),\n    [rolesExcluded]\n  );\n  const fetchTableData = (groupId, config) => {\n    const { name, count, limit, offset, orderBy } = config;\n    return fetchRoles(groupId, mappedProps({ count, limit, offset, orderBy, filters: { display_name: name } }));\n  };\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index].key}`;\n  const rows = createRows(roles, selectedRoles);\n\n  useEffect(() => {\n    fetchRoles(groupId, { ...pagination, orderBy });\n  }, []);\n\n  return (\n    <TableToolbarView\n      isSelectable\n      isCompact\n      borders={false}\n      columns={columns}\n      rows={rows}\n      sortBy={sortByState}\n      onSort={(e, index, direction, isSelectable) => {\n        const orderBy = `${direction === 'desc' ? '-' : ''}${columns[isSelectable ? index - 1 : index].key}`;\n        setSortByState({ index, direction });\n        fetchTableData(groupId, {\n          ...pagination,\n          offset: 0,\n          orderBy,\n          ...(filters?.length > 0\n            ? {\n                ...filters.reduce(\n                  (acc, curr) => ({\n                    ...acc,\n                    [curr.key]: curr.value,\n                  }),\n                  {}\n                ),\n              }\n            : { name: filterValue }),\n        });\n      }}\n      data={roles}\n      filterValue={filterValue}\n      filterPlaceholder={intl.formatMessage(messages.roleName).toLowerCase()}\n      fetchData={(config) => fetchRoles(groupId, { ...config, filters: { display_name: config.name } })}\n      setFilterValue={({ name }) => setFilterValue(name)}\n      isLoading={isLoading}\n      ouiaId=\"roles-table\"\n      pagination={pagination}\n      checkedRows={selectedRoles}\n      setCheckedItems={setCheckedItems}\n      titlePlural={intl.formatMessage(messages.roles).toLowerCase()}\n      titleSingular={intl.formatMessage(messages.role)}\n      tableId=\"roles-list\"\n      textFilterRef={textFilterRef}\n    />\n  );\n};\n\nRolesList.propTypes = {\n  canSort: PropTypes.bool,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  rolesExcluded: PropTypes.bool.isRequired,\n  groupId: PropTypes.string,\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  canSort: true,\n};\n\nexport default RolesList;\n","import { fetchGroups } from '../../helpers/group/group-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { locale } from '../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../Messages';\nimport providerMessages from '../../locales/data.json';\n\nexport const asyncValidator = async (groupName, idKey, id) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  if (!groupName) {\n    return undefined;\n  }\n\n  if (groupName.length > 150) {\n    throw intl.formatMessage(messages.maxCharactersWarning, { number: 150 });\n  }\n\n  const response = await fetchGroups({ limit: 10, offset: 0, filters: { name: groupName }, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (id ? response?.data?.some((item) => item[idKey] !== id) : response?.data?.length > 0) {\n    throw intl.formatMessage(messages.nameAlreadyTaken);\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce((value, idKey, id) => asyncValidator(value, idKey, id));\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction: (...args: any[]) => Promise<any>, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"names":["FormGroup","_a","children","className","label","labelInfo","labelIcon","isRequired","isInline","hasNoPaddingTop","isStack","fieldId","role","props","__rest","isGroupOrRadioGroup","LabelComponent","labelContent","Object","assign","css","formLabel","htmlFor","formLabelText","formLabelRequired","randomId","formGroup","formGroupLabel","modifiers","info","noPaddingTop","id","formGroupLabelMain","formGroupLabelInfo","formGroupControl","inline","stack","displayName","TextAreResizeOrientation","TextAreaReadOnlyVariant","TextAreaBase","constructor","super","this","inputRef","setAutoHeight","field","parent","parentElement","style","setProperty","computed","window","getComputedStyle","height","parseInt","getPropertyValue","scrollHeight","handleChange","event","currentTarget","autoResize","onChange","value","console","error","componentDidMount","innerRef","current","render","validated","isDisabled","readOnlyVariant","resizeOrientation","disabled","onBlur","onFocus","orientation","hasStatusIcon","includes","formControl","readonly","plain","defaultValue","required","readOnly","ref","formControlUtilities","status","defaultProps","TextArea","ReviewStepButtons","renderNextButton","disableBack","handlePrev","buttonLabels","cancel","back","context","formOptions","success","submitting","useContext","Fragment","Button","type","variant","onClick","onCancel","propTypes","handleNext","nextStep","when","stepMapper","submit","next","WizardError","title","text","intl","jumpToStep","setWizardError","EmptyState","EmptyStateVariant","lg","EmptyStateHeader","titleText","icon","EmptyStateIcon","color","headingLevel","EmptyStateBody","EmptyStateFooter","undefined","formatMessage","returnToStepNumber","number","ReviewTemplate","formFields","AddGroupWizardContext","getState","useEffect","values","then","catch","Bullseye","Spinner","size","groupNameTakenTitle","groupNameTakenText","Title","reviewDetails","SetName","input","name","description","groupName","setGroupName","useState","groupNameError","setGroupNameError","groupDescription","setGroupDescription","processGroupName","trimmedValue","length","groupNameValid","groupNameValidated","groupDescriptionValid","groupDescriptionValidated","Stack","hasGutter","StackItem","TextInput","_event","FormHelperText","HelperText","HelperTextItem","change","maxCharactersWarning","groups","SetRoles","selectedRoles","setSelectedRoles","TextContent","Text","selectRolesForGroupText","rolesExcluded","SetUsers","selectedUsers","setSelectedUsers","Form","linkDescription","toManageUsersText","Card","displayNarrow","SummaryContent","Grid","GridItem","md","component","TextVariants","h4","p","roles","map","index","key","members","onClose","setHideForm","setWizardSuccess","groupCreatedSuccessfully","exit","EmptyStateActions","createAnotherGroup","createContext","newValue","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","emptyCallback","nonEmptyCallback","setGroupData","formData","keys","AddGroupWizard","postMethod","pagination","filters","orderBy","dispatch","useDispatch","container","useRef","document","createElement","schema","cache","locale","messages","fields","isDynamic","inModal","showTitles","createGroup","nameAndDescription","validate","REQUIRED","TEXTAREA","hideField","MAX_LENGTH","threshold","addRoles","addMembers","buttons","StepTemplate","schemaBuilder","navigate","useAppNavigate","groupData","wizardContextValue","setWizardContextValue","hideForm","redirectToGroups","addNotification","addingGroupTitle","dismissDelay","addingGroupCanceledDescription","pathname","link","search","page","per_page","limit","setWizardCanceled","canceled","prev","offset","Provider","WarningModal","exitItemCreation","item","group","toLocaleLowerCase","isOpen","hidden","confirmButtonLabel","discard","onConfirm","discardedInputsWarning","Wizard","steps","isFinishedStep","subscription","componentMapper","onSubmit","user_list","user","username","roles_list","uuid","initialValues","RolesList","groupId","groupUuid","chrome","textFilterRef","isLoading","useSelector","groupReducer","selectedGroup","loaded","count","roleReducer","data","meta","shallowEqual","columns","transforms","filterValue","setFilterValue","sortByState","setSortByState","direction","fetchRoles","useCallback","config","rows","checkedRows","reduce","acc","display_name","cells","selected","Boolean","find","row","createRows","isSelectable","isCompact","borders","sortBy","onSort","e","fetchTableData","curr","filterPlaceholder","roleName","toLowerCase","fetchData","ouiaId","setCheckedItems","newSelection","titlePlural","titleSingular","tableId","canSort","asyncValidator","async","idKey","response","nameMatch","some","nameAlreadyTaken","debouncedAsyncValidator","asyncFunction","debounceTime","options","onlyResolvesLast"],"sourceRoot":""}
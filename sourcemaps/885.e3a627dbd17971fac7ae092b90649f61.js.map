{"version":3,"file":"js/885.cc3e9b82a95f9c49e3e7.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/createIcon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./node_modules/react-intl/lib/src/components/message.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport var IconSize;\n(function (IconSize) {\n    IconSize[\"sm\"] = \"sm\";\n    IconSize[\"md\"] = \"md\";\n    IconSize[\"lg\"] = \"lg\";\n    IconSize[\"xl\"] = \"xl\";\n})(IconSize || (IconSize = {}));\nexport const getSize = (size) => {\n    switch (size) {\n        case IconSize.sm:\n            return '1em';\n        case IconSize.md:\n            return '1.5em';\n        case IconSize.lg:\n            return '2em';\n        case IconSize.xl:\n            return '3em';\n        default:\n            return '1em';\n    }\n};\nlet currentId = 0;\n/**\n * Factory to create Icon class components for consumers\n */\nexport function createIcon({ name, xOffset = 0, yOffset = 0, width, height, svgPath }) {\n    var _a;\n    return _a = class SVGIcon extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.id = `icon-title-${currentId++}`;\n            }\n            render() {\n                const _a = this.props, { size, color, title, noVerticalAlign } = _a, props = __rest(_a, [\"size\", \"color\", \"title\", \"noVerticalAlign\"]);\n                const hasTitle = Boolean(title);\n                const heightWidth = getSize(size);\n                const baseAlign = -0.125 * Number.parseFloat(heightWidth);\n                const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n                const viewBox = [xOffset, yOffset, width, height].join(' ');\n                return (React.createElement(\"svg\", Object.assign({ style: style, fill: color, height: heightWidth, width: heightWidth, viewBox: viewBox, \"aria-labelledby\": hasTitle ? this.id : null, \"aria-hidden\": hasTitle ? null : true, role: \"img\" }, props),\n                    hasTitle && React.createElement(\"title\", { id: this.id }, title),\n                    React.createElement(\"path\", { d: svgPath })));\n            }\n        },\n        _a.displayName = name,\n        _a.defaultProps = {\n            color: 'currentColor',\n            size: IconSize.sm,\n            noVerticalAlign: false\n        },\n        _a;\n}\n//# sourceMappingURL=createIcon.js.map","import { createIcon } from '../createIcon';\n\nexport const ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationTriangleIcon = createIcon(ExclamationTriangleIconConfig);\n\nexport default ExclamationTriangleIcon;","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { Button, Checkbox, Modal, ModalVariant, Text, TextContent } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport messages from '../../Messages';\nimport './remove-group-modal.scss';\n\nconst RemoveGroupModal = ({ postMethod, pagination, cancelRoute, submitRoute = cancelRoute }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const { groupId } = useParams();\n  const groupsToRemove = groupId.split(',');\n  const multipleGroups = groupsToRemove.length > 1;\n\n  const { group, isLoading } = useSelector(\n    ({ groupReducer: { selectedGroup } }) => ({\n      group: selectedGroup,\n      isLoading: (groupId || groupsToRemove.length === 1) && !selectedGroup.loaded,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    groupsToRemove.length === 1 && dispatch(fetchGroup(groupsToRemove[0]));\n  }, []);\n\n  const [checked, setChecked] = useState(false);\n\n  const onSubmit = () => {\n    dispatch(removeGroups(groupsToRemove))\n      .then(() => postMethod(groupsToRemove, { limit: pagination?.limit }))\n      .then(navigate(submitRoute));\n  };\n\n  const onCancel = () => navigate(cancelRoute);\n\n  return (\n    <Modal\n      className=\"rbac\"\n      isOpen\n      variant={ModalVariant.small}\n      title={\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n          &nbsp; {intl.formatMessage(multipleGroups ? messages.deleteGroupsQuestion : messages.deleteGroupQuestion)}\n        </Text>\n      }\n      onClose={onCancel}\n      actions={[\n        <Button key=\"submit\" isDisabled={!checked} variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage(multipleGroups ? messages.deleteGroups : messages.deleteGroup)}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        {multipleGroups ? (\n          <Text>\n            <FormattedMessage\n              {...messages.deletingGroupsRemovesRoles}\n              values={{\n                b: (text) => <b>{text}</b>,\n                count: groupsToRemove.length,\n              }}\n            />\n          </Text>\n        ) : isLoading ? (\n          <FormItemLoader />\n        ) : (\n          <Text>\n            <FormattedMessage\n              {...messages.deletingGroupRemovesRoles}\n              values={{\n                b: (text) => <b>{text}</b>,\n                name: group.name,\n              }}\n            />\n          </Text>\n        )}\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={checked}\n        onChange={() => setChecked(!checked)}\n        label={intl.formatMessage(messages.understandActionIrreversible)}\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.propTypes = {\n  postMethod: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n  }).isRequired,\n  filters: PropTypes.object.isRequired,\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n};\n\nexport default RemoveGroupModal;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n"],"names":["IconSize","currentId","createIcon","name","xOffset","yOffset","width","height","svgPath","_a","constructor","super","arguments","this","id","render","props","size","color","title","noVerticalAlign","__rest","hasTitle","Boolean","heightWidth","sm","md","lg","xl","getSize","baseAlign","Number","parseFloat","style","verticalAlign","viewBox","join","Object","assign","fill","role","d","displayName","defaultProps","ExclamationTriangleIconConfig","ExclamationTriangleIcon","linkBasename","navigate","useNavigate","to","options","mergeToBasename","RemoveGroupModal","postMethod","pagination","cancelRoute","submitRoute","intl","useIntl","dispatch","useDispatch","useAppNavigate","groupId","useParams","groupsToRemove","split","multipleGroups","length","useSelector","selectedGroup","groupReducer","group","isLoading","loaded","shallowEqual","useEffect","fetchGroup","useState","checked","setChecked","onCancel","Modal","className","isOpen","variant","ModalVariant","Text","formatMessage","messages","onClose","actions","Button","key","isDisabled","type","onClick","removeGroups","then","limit","TextContent","values","b","text","count","Checkbox","isChecked","onChange","label","propTypes","PropTypes","isRequired","filters","pathname","search","hash","FormattedMessage","textComponent","description","defaultMessage","children","_b","tagName","Component","nodes","ignoreTag","Array","isArray","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps"],"sourceRoot":""}
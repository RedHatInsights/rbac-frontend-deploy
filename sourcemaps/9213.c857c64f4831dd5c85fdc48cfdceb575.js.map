{"version":3,"file":"js/9213.cfd8eb155296b69df86a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/createIcon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/breadcrumbs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Dark/DarkContext.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/group.js","webpack:///./node_modules/react-intl/lib/src/components/message.js","webpack:///./src/presentational-components/shared/empty-state.tsx"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport var IconSize;\n(function (IconSize) {\n    IconSize[\"sm\"] = \"sm\";\n    IconSize[\"md\"] = \"md\";\n    IconSize[\"lg\"] = \"lg\";\n    IconSize[\"xl\"] = \"xl\";\n})(IconSize || (IconSize = {}));\nexport const getSize = (size) => {\n    switch (size) {\n        case IconSize.sm:\n            return '1em';\n        case IconSize.md:\n            return '1.5em';\n        case IconSize.lg:\n            return '2em';\n        case IconSize.xl:\n            return '3em';\n        default:\n            return '1em';\n    }\n};\nlet currentId = 0;\n/**\n * Factory to create Icon class components for consumers\n */\nexport function createIcon({ name, xOffset = 0, yOffset = 0, width, height, svgPath }) {\n    var _a;\n    return _a = class SVGIcon extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.id = `icon-title-${currentId++}`;\n            }\n            render() {\n                const _a = this.props, { size, color, title, noVerticalAlign } = _a, props = __rest(_a, [\"size\", \"color\", \"title\", \"noVerticalAlign\"]);\n                const hasTitle = Boolean(title);\n                const heightWidth = getSize(size);\n                const baseAlign = -0.125 * Number.parseFloat(heightWidth);\n                const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n                const viewBox = [xOffset, yOffset, width, height].join(' ');\n                return (React.createElement(\"svg\", Object.assign({ style: style, fill: color, height: heightWidth, width: heightWidth, viewBox: viewBox, \"aria-labelledby\": hasTitle ? this.id : null, \"aria-hidden\": hasTitle ? null : true, role: \"img\" }, props),\n                    hasTitle && React.createElement(\"title\", { id: this.id }, title),\n                    React.createElement(\"path\", { d: svgPath })));\n            }\n        },\n        _a.displayName = name,\n        _a.defaultProps = {\n            color: 'currentColor',\n            size: IconSize.sm,\n            noVerticalAlign: false\n        },\n        _a;\n}\n//# sourceMappingURL=createIcon.js.map","import { createIcon } from '../createIcon';\n\nexport const ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationTriangleIcon = createIcon(ExclamationTriangleIconConfig);\n\nexport default ExclamationTriangleIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title } from '@patternfly/react-core';\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, __assign({ headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\" }, { children: title })));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return breadcrumbs ? (\n    <Breadcrumb>\n      {Object.values(breadcrumbs).map((item, index) =>\n        item.title ? (\n          <BreadcrumbItem key={item.title} isActive={item.isActive}>\n            {(item.to && (\n              <NavLink end to={item.to}>\n                {item.title}\n              </NavLink>\n            )) ||\n              item.title}\n          </BreadcrumbItem>\n        ) : (\n          <BreadcrumbPlaceholder key={index} />\n        )\n      )}\n    </Breadcrumb>\n  ) : null;\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object,\n};\n\nexport default RbacBreadcrumbs;\n","import React from 'react';\nvar DarkContext = React.createContext('light');\nexport default DarkContext;\n//# sourceMappingURL=DarkContext.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { DarkContext } from '../Dark';\nimport '../PageHeader/page-header.css';\nvar PageHeader = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    var pageHeaderClasses = classNames(className, 'pf-l-page-header', 'pf-c-page-header', 'pf-l-page__main-section', 'pf-c-page__main-section');\n    return (_jsx(DarkContext.Consumer, { children: function (theme) {\n            var _a, _b;\n            if (theme === void 0) { theme = 'light'; }\n            var themeClasses = classNames((_a = {}, _a[\"pf-m-\".concat(theme, \"-200\")] = theme === 'dark', _a), (_b = {}, _b[\"pf-m-light\"] = theme === 'light', _b));\n            return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses), \"widget-type\": \"InsightsPageHeader\" }, { children: children })));\n        } }));\n};\nexport default PageHeader;\n//# sourceMappingURL=PageHeader.js.map","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrumbs';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children, breadcrumbs }) => (\n  <Fragment>\n    {breadcrumbs && (\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs {...breadcrumbs} />\n      </section>\n    )}\n    <PageHeader className=\"rbac-page-header\">{children}</PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool,\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false,\n};\n\nexport const TopToolbarTitle = ({ title, renderTitleTag, description, children }) => (\n  <Fragment>\n    <Flex>\n      <FlexItem className=\"pf-u-mb-sm\">\n        <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n      </FlexItem>\n      <FlexItem alignSelf={{ modifier: 'alignSelfCenter' }}>{renderTitleTag && renderTitleTag()}</FlexItem>\n    </Flex>\n    {description && (\n      <TextContent className=\"rbac-page-header__description\">\n        {typeof description === 'string' ? <Text component={TextVariants.p}>{description}</Text> : description}\n      </TextContent>\n    )}\n    {children}\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  renderTitleTag: PropTypes.func,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './warningModal.scss';\n\nexport const WarningModal = ({\n  type,\n  isOpen,\n  onModalCancel,\n  onConfirmCancel,\n  customTitle,\n  customDescription,\n  customPrimaryButtonTitle,\n  customSecondaryButtonTitle,\n}) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      title={\n        <span className=\"rbac-c-wizard__cancel-warning-header\">\n          <ExclamationTriangleIcon size=\"md\" className=\"rbac-c-wizard__cancel-warning-header--icon\" />\n          {customTitle || intl.formatMessage(messages.exitItemCreation, { item: type })}\n        </span>\n      }\n      variant={ModalVariant.small}\n      className=\"rbac rbac-c-wizard__cancel-warning\"\n      isOpen={isOpen}\n      onClose={onModalCancel}\n      actions={[\n        <Button ouiaId=\"primary-exit-button\" key=\"confirm\" variant=\"primary\" onClick={onConfirmCancel}>\n          {customPrimaryButtonTitle ?? intl.formatMessage(messages.exit)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onModalCancel}>\n          {customSecondaryButtonTitle ?? intl.formatMessage(messages.stay)}\n        </Button>,\n      ]}\n    >\n      <span>{customDescription || intl.formatMessage(messages.discardedInputsWarning)} </span>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  customTitle: PropTypes.node,\n  customDescription: PropTypes.node,\n  customPrimaryButtonTitle: PropTypes.string,\n  customSecondaryButtonTitle: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onConfirmCancel: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ tabItems, isHeader }) => {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => navigate(tabItems[tabIndex].to);\n\n  return (\n    <Tabs className={isHeader ? `rbac-page-header__tabs` : ''} activeKey={activeTab ? activeTab.eventKey : 0} onSelect={handleTabClick}>\n      {tabItems.map((item) => (\n        <Tab title={item.title} key={item.eventKey} eventKey={item.eventKey} name={item.name} />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool,\n};\n\nexport default AppTabs;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Popover,\n  PopoverPosition,\n  Split,\n  SplitItem,\n  DropdownItem,\n  Dropdown,\n  KebabToggle,\n  Button,\n} from '@patternfly/react-core';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport AppTabs from '../app-tabs/app-tabs';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { WarningModal } from '../common/warningModal';\nimport { fetchGroup, fetchSystemGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport AppLink, { mergeToBasename } from '../../presentational-components/shared/AppLink';\nimport EmptyWithAction from '../../presentational-components/shared/empty-state';\nimport RbacBreadcrumbs from '../../presentational-components/shared/breadcrumbs';\nimport { BAD_UUID, getBackRoute } from '../../helpers/shared/helpers';\nimport messages from '../../Messages';\nimport pathnames from '../../utilities/pathnames';\nimport './group.scss';\n\nconst Group = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const location = useLocation();\n  const chrome = useChrome();\n  const { groupId } = useParams();\n  const isPlatformDefault = groupId === 'default-access';\n  const enableServiceAccounts = useFlag('platform.rbac.group-service-accounts');\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: pathnames['group-detail-roles'].link.replace(':groupId', groupId), to: 'roles' },\n    { eventKey: 1, title: 'Members', name: pathnames['group-detail-members'].link.replace(':groupId', groupId), to: 'members' },\n    ...(enableServiceAccounts\n      ? [\n          {\n            eventKey: 2,\n            title: 'Service accounts',\n            name: pathnames['group-detail-service-accounts'].link.replace(':groupId', groupId),\n            to: 'service-accounts',\n          },\n        ]\n      : []),\n  ];\n\n  const { pagination, filters, groupExists, systemGroupUuid } = useSelector(\n    ({ groupReducer: { groups, error, systemGroup } }) => ({\n      pagination: groups.pagination || groups.meta,\n      filters: groups.filters,\n      groupExists: error !== BAD_UUID,\n      systemGroupUuid: systemGroup?.uuid,\n    }),\n    shallowEqual\n  );\n\n  const { group, isFetching } = useSelector(\n    ({ groupReducer: { selectedGroup, isRecordLoading, isRecordRolesLoading } }) => ({\n      group: selectedGroup,\n      isFetching: isRecordLoading || isRecordRolesLoading,\n    }),\n    shallowEqual\n  );\n\n  const [isResetWarningVisible, setResetWarningVisible] = useState(false);\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchSystemGroup({ chrome }));\n    const currId = !isPlatformDefault ? groupId : systemGroupUuid;\n    if (currId) {\n      dispatch(fetchGroup(currId));\n      chrome.appObjectId(currId);\n    }\n    return () => chrome.appObjectId(undefined);\n  }, [groupId, systemGroupUuid]);\n\n  const breadcrumbsList = () => [\n    {\n      title: intl.formatMessage(messages.groups),\n      to: getBackRoute(mergeToBasename(pathnames.groups.link), pagination, filters),\n    },\n    groupExists\n      ? { title: isFetching ? undefined : group.name, isActive: true }\n      : { title: intl.formatMessage(messages.invalidGroup), isActive: true },\n  ];\n\n  const defaultGroupChangedIcon = (name) => (\n    <div style={{ display: 'inline-flex' }}>\n      {name}\n      <div className=\"pf-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={\n            <FormattedMessage\n              {...messages.defaultAccessGroupNameChanged}\n              values={{\n                b: (text) => <b>{text}</b>,\n              }}\n            />\n          }\n        >\n          <OutlinedQuestionCircleIcon className=\"rbac-default-group-info-icon\" />\n        </Popover>\n      </div>\n    </div>\n  );\n\n  const defaultGroupRestore = () => (\n    <div className=\"rbac-default-group-reset-btn\">\n      <Button variant=\"link\" onClick={() => setResetWarningVisible(true)}>\n        {intl.formatMessage(messages.restoreToDefault)}\n      </Button>\n      <Popover\n        aria-label=\"default-group-icon\"\n        position={PopoverPosition.bottomEnd}\n        bodyContent={\n          <FormattedMessage\n            {...messages.restoreDefaultAccessInfo}\n            values={{\n              b: (text) => <b>{text}</b>,\n            }}\n          />\n        }\n      >\n        <OutlinedQuestionCircleIcon className=\"rbac-default-group-info-icon pf-u-mt-sm\" />\n      </Popover>\n    </div>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <AppLink\n          onClick={() => setDropdownOpen(false)}\n          to={(location.pathname.includes('members') ? pathnames['group-members-edit-group'] : pathnames['group-roles-edit-group']).link.replace(\n            ':groupId',\n            isPlatformDefault ? 'default-access' : groupId\n          )}\n        >\n          {intl.formatMessage(messages.edit)}\n        </AppLink>\n      }\n      key=\"edit-group\"\n    />,\n    <DropdownItem\n      component={\n        <AppLink\n          to={(location.pathname.includes('members') ? pathnames['group-members-remove-group'] : pathnames['group-roles-remove-group']).link.replace(\n            ':groupId',\n            groupId\n          )}\n        >\n          {intl.formatMessage(messages.delete)}\n        </AppLink>\n      }\n      className=\"rbac-c-group__action\"\n      key=\"delete-group\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      {isResetWarningVisible && (\n        <WarningModal\n          type=\"group\"\n          isOpen={isResetWarningVisible}\n          customTitle={<div>{intl.formatMessage(messages.restoreDefaultAccessQuestion)}</div>}\n          customDescription={\n            <FormattedMessage\n              {...messages.restoreDefaultAccessDescription}\n              values={{\n                b: (text) => <b>{text}</b>,\n              }}\n            />\n          }\n          customPrimaryButtonTitle={intl.formatMessage(messages.continue)}\n          customSecondaryButtonTitle={intl.formatMessage(messages.cancel)}\n          onModalCancel={() => setResetWarningVisible(false)}\n          onConfirmCancel={() => {\n            dispatch(removeGroups([systemGroupUuid])).then(() =>\n              dispatch(fetchSystemGroup({ chrome })).then(() => {\n                setShowDefaultGroupChangedInfo(false);\n              })\n            );\n            setResetWarningVisible(false);\n            navigate(pathnames['group-detail-roles'].link).replace(':groupId', 'default-access');\n          }}\n        />\n      )}\n      {groupExists ? (\n        <Fragment>\n          <TopToolbar breadcrumbs={breadcrumbsList()}>\n            <Split hasGutter>\n              <SplitItem isFilled>\n                <TopToolbarTitle\n                  title={\n                    !isFetching && group ? (\n                      <Fragment>{group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name}</Fragment>\n                    ) : undefined\n                  }\n                  description={!isFetching && group ? group.description : undefined}\n                />\n              </SplitItem>\n              {group.platform_default && !group.system ? <SplitItem>{defaultGroupRestore()}</SplitItem> : null}\n              <SplitItem>\n                {group.platform_default || group.admin_default ? null : (\n                  <Dropdown\n                    ouiaId=\"group-title-actions-dropdown\"\n                    toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"group-actions-dropdown\" />}\n                    isOpen={isDropdownOpen}\n                    isPlain\n                    position=\"right\"\n                    dropdownItems={dropdownItems}\n                  />\n                )}\n              </SplitItem>\n            </Split>\n            {showDefaultGroupChangedInfo ? (\n              <Alert\n                variant=\"info\"\n                isInline\n                title={intl.formatMessage(messages.defaultAccessGroupChanged)}\n                action={<AlertActionCloseButton onClose={() => setShowDefaultGroupChangedInfo(false)} />}\n                className=\"pf-u-mb-lg pf-u-mt-sm\"\n              >\n                <FormattedMessage\n                  {...messages.defaultAccessGroupNameChanged}\n                  values={{\n                    b: (text) => <b>{text}</b>,\n                  }}\n                />\n              </Alert>\n            ) : null}\n          </TopToolbar>\n          <AppTabs isHeader tabItems={tabItems} />\n          <Outlet\n            context={{\n              [pathnames['group-detail-roles'].path]: {\n                onDefaultGroupChanged: setShowDefaultGroupChangedInfo,\n              },\n              groupId, // used for redirect from /:groupId to /:groupId/roles\n            }}\n          />\n          {!group && <ListLoader />}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <section className=\"pf-c-page__main-breadcrumb pf-u-pb-md\">\n            <RbacBreadcrumbs {...breadcrumbsList()} />\n          </section>\n          <EmptyWithAction\n            title={intl.formatMessage(messages.groupNotFound)}\n            description={[intl.formatMessage(messages.groupDoesNotExist, { id: groupId })]}\n            actions={[\n              <Button\n                key=\"back-button\"\n                className=\"pf-u-mt-xl\"\n                ouiaId=\"back-button\"\n                variant=\"primary\"\n                aria-label=\"Back to previous page\"\n                onClick={() => navigate(-1)}\n              >\n                {intl.formatMessage(messages.backToPreviousPage)}\n              </Button>,\n            ]}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Group;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n","import React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { SVGIconProps } from '@patternfly/react-icons/dist/esm/createIcon';\n\ninterface EmptyWithActionProps {\n  title: string;\n  icon?: React.ComponentClass<SVGIconProps, any>;\n  description: any;\n  actions: any;\n}\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }: EmptyWithActionProps) => (\n  <EmptyState variant={EmptyStateVariant.small} {...props}>\n    <EmptyStateIcon icon={icon || SearchIcon} />\n    <Title headingLevel=\"h4\" size=\"lg\">\n      {title}\n    </Title>\n    <EmptyStateBody className=\"pf-u-mb-md\">\n      {description.map((text: React.ReactNode, key: number) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    {actions}\n  </EmptyState>\n);\n\nexport default EmptyWithAction;\n"],"names":["IconSize","currentId","createIcon","name","xOffset","yOffset","width","height","svgPath","_a","constructor","super","arguments","this","id","render","props","size","color","title","noVerticalAlign","__rest","hasTitle","Boolean","heightWidth","sm","md","lg","xl","getSize","baseAlign","Number","parseFloat","style","verticalAlign","viewBox","join","Object","assign","fill","role","d","displayName","defaultProps","ExclamationTriangleIconConfig","ExclamationTriangleIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","__assign","t","s","i","n","length","p","prototype","hasOwnProperty","call","apply","className","pageHeaderTitleClasses","Title","headingLevel","children","linkBasename","navigate","useNavigate","to","options","mergeToBasename","RbacBreadcrumbs","breadcrumbs","Breadcrumb","values","map","item","index","BreadcrumbItem","key","isActive","NavLink","end","propTypes","PropTypes","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","pageHeaderClasses","theme","_b","themeClasses","concat","TopToolbar","Fragment","isRequired","paddingBottom","TopToolbarTitle","renderTitleTag","description","Flex","FlexItem","PageHeaderTitle","alignSelf","modifier","TextContent","Text","component","TextVariants","WarningModal","type","isOpen","onModalCancel","onConfirmCancel","customTitle","customDescription","customPrimaryButtonTitle","customSecondaryButtonTitle","intl","useIntl","Modal","formatMessage","messages","variant","ModalVariant","onClose","actions","Button","ouiaId","onClick","AppTabs","tabItems","isHeader","pathname","useLocation","activeTab","find","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","Tab","dispatch","useDispatch","useAppNavigate","location","chrome","useChrome","groupId","useParams","isPlatformDefault","enableServiceAccounts","useFlag","pathnames","useSelector","groupReducer","groups","error","systemGroup","pagination","meta","filters","groupExists","BAD_UUID","systemGroupUuid","uuid","shallowEqual","selectedGroup","isRecordLoading","isRecordRolesLoading","group","isFetching","useState","isResetWarningVisible","setResetWarningVisible","isDropdownOpen","setDropdownOpen","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","useEffect","fetchSystemGroup","currId","fetchGroup","appObjectId","undefined","breadcrumbsList","getBackRoute","dropdownItems","DropdownItem","AppLink","link","replace","b","text","removeGroups","then","Split","hasGutter","SplitItem","isFilled","platform_default","system","display","Popover","bodyContent","position","PopoverPosition","admin_default","Dropdown","toggle","KebabToggle","onToggle","isPlain","Alert","isInline","action","AlertActionCloseButton","Outlet","context","onDefaultGroupChanged","FormattedMessage","textComponent","defaultMessage","tagName","Component","nodes","ignoreTag","Array","isArray","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps","icon","EmptyState","EmptyStateVariant","EmptyStateIcon","SearchIcon","EmptyStateBody"],"sourceRoot":""}
{"version":3,"file":"js/7349.2a75dd9a13630a273b2d.js","mappings":";mwBAAO,IAAMA,EAA4B,SAACC,EAAUC,EAAUC,GAAwB,IAAlBC,EAAkB,uDAAP,GACvEC,EAAe,IAAIC,gBAAgBL,EAASM,QAE9CC,EAAUL,EAAKM,QAAO,SAACC,EAAKC,GAC9B,IAAMC,EAASP,EAAaQ,OAAOF,GACnC,OAAO,EAAP,KACKD,GADL,cAEGC,EAAMC,EAAOE,OAAS,EAAIF,EAASA,EAAO,OAE5C,IA2BH,OAzBAG,OAAOZ,KAAKC,GAAUY,SAAQ,SAACL,GAC7B,IAAMM,EAAQb,EAASO,GACvBH,EAAU,EAAH,KACFA,GADE,cAEJG,EAAMO,MAAMC,QAAQX,EAAQG,KAAtB,OACC,IAAIS,IAAJ,kBAAYZ,EAAQG,KAApB,OAA8BO,MAAMC,QAAQF,GAASA,EAAQ,CAACA,QACjEA,MAAAA,OAAA,EAAAA,EAAOH,QAAS,GAAKG,GAAUT,EAAQG,KAG1CO,MAAMC,QAAQF,GAChBA,EAAMD,SAAQ,SAACK,GAAD,OAAUhB,EAAaQ,OAAOF,GAAKW,SAASD,IAAShB,EAAakB,OAAOZ,EAAKU,MAE5FhB,EAAamB,IAAIb,IAASM,GAASZ,EAAaoB,IAAId,EAAKM,MAI7Df,EACE,CACEwB,SAAUzB,EAASyB,SACnBnB,OAAQF,EAAasB,YAEvB,CACEC,SAAS,IAGNpB,GAGIqB,EAAyB,SAAC5B,EAAUE,GAC/C,IAAME,EAAe,IAAIC,gBAAgBL,EAASM,QAClD,OAAOJ,EAAK2B,MAAK,SAACnB,GAAD,OAASN,EAAamB,IAAIb,OAGhCoB,EAAoB,SAAC9B,EAAUC,EAAU8B,GACpD,IAAM3B,EAAe,IAAIC,gBAAgBL,EAASM,QAClDQ,OAAOZ,KAAK6B,GAAWhB,SAAQ,SAACL,GAAD,OAASN,EAAY,OAAQM,MAE5DI,OAAOZ,KAAK6B,GAAWhB,SAAQ,SAACL,GAC9B,IAAMM,EAAQe,EAAUrB,GAEpBO,MAAMC,QAAQF,GAChBA,EAAMD,SAAQ,SAACK,GAAD,OAAUA,GAAQhB,EAAakB,OAAOZ,EAAKU,MAEzDJ,GAASZ,EAAaoB,IAAId,EAAKM,MAInCf,EACE,CACEwB,SAAUzB,EAASyB,SACnBnB,OAAQF,EAAasB,YAEvB,CACEC,SAAS,8ECrDf,QARuB,SAACK,GACtB,IAAM/B,GAAWgC,EAAAA,EAAAA,eAEjB,OAAO,SAACC,EAAIC,GACV,OAAOlC,GAASmC,EAAAA,EAAAA,GAAgBF,EAAIF,GAAeG,6sBCHhD,IAAMC,EAAkB,SAACF,GAAsC,IAAlCG,EAAkC,uDAAvB,mBAC7C,MAAkB,iBAAPH,EAEF,UAAGG,EAAH,YAAeH,GAAKI,WAAW,KAAM,KAGvC,EAAP,KACKJ,GADL,IAEET,SAAU,UAAGY,EAAH,YAAeH,EAAGT,UAAWa,WAAW,KAAM,QAItDC,EAAUC,IAAAA,YAAiB,SAACC,EAAOC,GAAR,OAAgB,kBAAC,EAAAC,MAAD,UAAUF,EAAV,CAAiBC,IAAKA,EAAKR,GAAIE,EAAgBK,EAAMP,GAAIO,EAAMT,oBAChHO,EAAQK,YAAc,UAEtBL,EAAQM,UAAY,CAClBX,GAAIY,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAC3Cd,aAAcc,IAAAA,QAGhB,2JChBMC,EAAc,SAAC,GAAiF,IAA/EC,EAA+E,EAA/EA,MAAOC,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,mBAAoBC,EAAmB,EAAnBA,aAC3EC,GAAOC,EAAAA,EAAAA,KACb,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,kBAAC,EAAAC,MAAD,CACEC,UAAU,OACVb,MACE,6BACE,kBAAC,KAAD,CAAyBa,UAAU,oCADrC,IAC2Eb,GAG7EI,OAAQA,EACRU,QAASC,EAAAA,aAAAA,MACTb,QAASA,EACTc,QAAS,CACP,kBAAC,EAAAC,OAAD,CAAQvD,IAAI,UAAUwD,OAAO,yBAAyBC,WAAYb,IAAiBI,EAASI,QAAQ,SAASM,QAASjB,GACnHE,GAEH,kBAAC,EAAAY,OAAD,CAAQvD,IAAI,SAASwD,OAAO,0BAA0BJ,QAAQ,OAAOM,QAASlB,GAC3EK,EAAKc,cAAcC,EAAAA,EAAAA,WAIxB,kBAAC,EAAAC,MAAD,CAAOC,WAAS,GACd,kBAAC,EAAAC,UAAD,CAAWC,UAAQ,GACjB,kBAAC,EAAAC,MAAD,CAAOH,WAAS,GACd,kBAAC,EAAAI,YAAD,KAAc3B,MAInBK,EACC,kBAAC,EAAAuB,SAAD,CACEC,UAAWpB,EACXqB,SAAU,kBAAMpB,GAAYD,IAC5BsB,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,qBAC1BW,GAAG,qBACHpB,UAAU,eAEV,OAKVd,EAAYF,UAAY,CACtBI,KAAMH,IAAAA,IACNE,MAAOF,IAAAA,OACPO,mBAAoBP,IAAAA,OACpBK,SAAUL,IAAAA,KACVI,QAASJ,IAAAA,KACTM,OAAQN,IAAAA,KACRQ,aAAcR,IAAAA,MAGhBC,EAAYmC,aAAe,CACzB5B,cAAc,GAGhB,sIC5DM6B,EAAkB,SAACC,GACvB,OAAOA,EACL,kBAAC,EAAAC,WAAD,KACGvE,OAAOH,OAAOyE,GAAaE,KAAI,SAAClE,EAAMmE,GAAP,OAC9BnE,EAAK4B,MACH,kBAAC,EAAAwC,eAAD,CAAgB9E,IAAKU,EAAK4B,MAAOyC,SAAUrE,EAAKqE,UAC5CrE,EAAKc,IACL,kBAAC,EAAAwD,QAAD,CAASC,KAAG,EAACzD,GAAId,EAAKc,IACnBd,EAAK4B,QAGR5B,EAAK4B,OAGT,kBAAC,KAAD,CAAuBtC,IAAK6E,QAIhC,MAGNJ,EAAgBtC,UAAY,CAC1BuC,YAAatC,IAAAA,QAGf,oKCtBa8C,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUT,EAAb,EAAaA,YAAb,OACxB,kBAAC,EAAAU,SAAD,KACGV,GACC,6BAASvB,UAAU,8BACjB,kBAAC,IAAoBuB,IAGzB,kBAAC,IAAD,CAAYvB,UAAU,oBAAoBgC,KAI9CD,EAAW/C,UAAY,CACrBgD,SAAU/C,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,MAAiBA,IAAAA,OAAiBiD,WACnFX,YAAatC,IAAAA,MACbkD,cAAelD,IAAAA,MAGjB8C,EAAWV,aAAe,CACxBc,eAAe,GAGV,IAAMC,EAAkB,SAAC,GAAD,IAAGjD,EAAH,EAAGA,MAAOkD,EAAV,EAAUA,eAAgBC,EAA1B,EAA0BA,YAAaN,EAAvC,EAAuCA,SAAvC,OAC7B,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAM,KAAD,KACE,kBAAC,EAAAC,SAAD,CAAUxC,UAAU,cAClB,kBAAC,IAAD,CAAiBb,MAAOA,GAAS,kBAAC,KAAD,MAA6Ba,UAAU,6BAE1E,kBAAC,EAAAwC,SAAD,CAAUC,UAAW,CAAEC,SAAU,oBAAsBL,GAAkBA,MAE1EC,GACC,kBAAC,EAAAvB,YAAD,CAAaf,UAAU,iCACG,iBAAhBsC,EAA2B,kBAAC,EAAAK,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBP,GAAsBA,GAG9FN,IAILI,EAAgBpD,UAAY,CAC1BG,MAAOF,IAAAA,KACPoD,eAAgBpD,IAAAA,KAChBqD,YAAarD,IAAAA,KACb+C,SAAU/C,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,QAAkBA,IAAAA,kHClDnE,gzMACA,IAAM6D,GAAUC,WAAAA,MAET,SAAeC,EAAtB,0EAAO,WAAsCC,GAAtC,iFACQH,EAAQI,iBAAiBD,GADjC,0GAIA,SAAeE,EAAtB,0EAAO,WAA2BF,GAA3B,iFACQH,EAAQK,YAAYF,GAD5B,0GCLA,IAAMD,EAAyB,SAACC,GAAD,MAAe,CACnDG,KAAMC,EAAAA,GACNC,QAASC,EAAkCN,KAGhCE,EAAc,SAACF,GAAD,MAAe,CACxCG,KAAMC,EAAAA,GACNC,QAASC,EAAuBN,6dCKlC,IAAMO,EAAwB,aACxBC,EAAoB,SAAC7E,GAAD,OAAW,kBAAC,KAAD,UAAUA,EAAV,CAAiBwC,GAAIoC,MAEpDE,EAAgB,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAC1BC,GAAaC,EAAAA,EAAAA,WAAbD,SAER,OACE,kBAAC,IAAD,MACG,gBAAGE,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,WAAlC,OACC,yBAAKlE,UAAU,aACb,kBAAC,IAAD,CAAaA,UAAU,aACrB,kBAAC,EAAAI,OAAD,CACEC,OAAO,sBACPJ,QAAQ,UACRkE,KAAMX,EACNJ,KAAK,SACL9C,WAAYyD,GAAYE,GAAcC,GAAcF,GAEnDL,GAEH,kBAAC,EAAAvD,OAAD,CAAQC,OAAO,0BAA0BJ,QAAQ,OAAOM,QAASsD,EAAUzC,GAAG,gBAC3EwC,SASfF,EAAc1E,UAAY,CACxB2E,UAAW1E,IAAAA,KACX2E,YAAa3E,IAAAA,MAGfyE,EAAcrC,aAAe,CAC3BsC,UAAW,OACXC,YAAa,UAGf,IAAMQ,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYV,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,YAAaU,EAAvC,EAAuCA,MAAU1F,GAAjD,mBACxB,kBAAC,EAAAmB,OAAD,UAAWsE,EAAX,CAAuBE,OAAQ,kBAACb,EAAD,CAAeC,UAAWA,EAAWC,YAAaA,MAC9EU,MAAAA,OADH,EACGA,IACD,kBAAC,MAAD,UAAkB1F,EAAlB,CAAyB4F,kBAAkB,EAAOC,YAAahB,OAInEW,EAAkBpF,+WAAlB,EACEqF,WAAYpF,IAAAA,QACTyE,EAAc1E,WAGnB,qTChDM0F,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOrG,EAAV,EAAUA,QAASsG,EAAnB,EAAmBA,WAAYtE,EAA/B,EAA+BA,WAAY4B,EAA3C,EAA2CA,WAAe2C,GAA1D,mBACb,kBAAC,EAAAC,YAAD,UAAgBH,EAAWE,EAA3B,CAAiCvE,WAAYA,GAAcsE,IAdvC,SAACtG,EAASyG,EAAY7C,GAC1C,IAAMxC,GAAOC,EAAAA,EAAAA,KAEb,GAAIoF,GAAc7C,EAChB,OAAO5D,EAGT,IAAI0G,GAAgB,OAAI1G,GACxB,OAAO0G,EAAcC,MAAK,wBAAyBC,IAAzB,EAAG/H,UAAtB,OACC6H,GADD,CAEF,CAAE7D,MAAOzB,EAAKc,cAAcC,EAAAA,EAASyB,EAAa,eAAiB,WAFjE,eAEgF8C,IAKpFG,CAAc7G,EAASqG,EAAMxH,MAAO+E,GAAYT,KAAI,SAAC7C,GAAD,OACnD,kBAAC,EAAAwG,kBAAD,QAAkBvI,IAAK+B,EAAMzB,OAASyB,EAAMuC,OAAWvC,EAAvD,CAA8DuC,MAAOvC,EAAMuC,MAAMtD,mBAKvF6G,EAAO1F,UAAY,CACjB2F,MAAO1F,IAAAA,OAAAA,WACPX,QAASW,IAAAA,QACPA,IAAAA,MAAgB,CACd9B,MAAO8B,IAAAA,IACPkC,MAAOlC,IAAAA,OAAAA,cAETiD,WACF0C,WAAY3F,IAAAA,KACZqB,WAAYrB,IAAAA,KACZiD,WAAYjD,IAAAA,KACZoG,cAAepG,IAAAA,KAGjB,IAAMqG,EAAmB,SAAC,GAA6E,IAA3EnE,EAA2E,EAA3EA,MAAOe,EAAoE,EAApEA,WAAYqD,EAAwD,EAAxDA,WAAYC,EAA4C,EAA5CA,KAAMlD,EAAsC,EAAtCA,YAAamD,EAAyB,EAAzBA,UAAcZ,GAAW,YAC7Fa,EAAmBF,EAAnBE,MACFC,EADqBH,EAAZI,SACcF,EAE7B,OACE,kBAAC,EAAAG,UAAD,CACE3D,WAAYA,EACZf,OAAQsE,GAAatE,EACrB2E,QAASjB,EAAKzD,GACd2E,SAAUJ,EACVJ,WAAYA,EACZS,kBAAmBR,EAAKE,OAEvBpD,GACC,kBAAC,EAAAvB,YAAD,KACE,kBAAC,EAAA4B,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,OAAqBP,IAG1C,kBAACoC,GAAD,QAAQvD,MAAOA,EAAO4E,SAAUJ,EAAWzD,WAAYA,GAAgB2C,MAK7ES,EAAiBtG,UAAY,CAC3BiH,cAAehH,IAAAA,OACfkC,MAAOlC,IAAAA,OACPiD,WAAYjD,IAAAA,KACZsG,WAAYtG,IAAAA,OACZuG,KAAMvG,IAAAA,OACNqD,YAAarD,IAAAA,OACbwG,UAAWxG,IAAAA,MAGb,wDCjEMiH,EAAc,SAAC,GAA8D,IAA5DC,EAA4D,EAA5DA,2BAA4BC,EAAgC,EAAhCA,gBAAiBrC,EAAe,EAAfA,SAC1DF,GAAaC,EAAAA,EAAAA,WAAbD,SACFwC,EAAY,IAAQF,KAAiCC,GAAmBrC,EACxErE,GAAOC,EAAAA,EAAAA,KACb,OACE,kBAAC,EAAA2G,YAAD,CAAatG,UAAU,aACrB,kBAAC,EAAAI,OAAD,CAAQC,OAAO,wBAAwB+C,KAAK,SAAS9C,WAAY+F,EAAWpG,QAAQ,WACjFP,EAAKc,cAAcC,EAAAA,EAAAA,OAEtB,kBAAC,EAAAL,OAAD,CAAQC,OAAO,0BAA0BJ,QAAQ,OAAOM,QAAS,kBAAMsD,MACpEnE,EAAKc,cAAcC,EAAAA,EAAAA,WAM5ByF,EAAYlH,UAAY,CACtBmH,2BAA4BlH,IAAAA,OAAA,UACzBA,IAAAA,OAAmBA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,OAAkBA,IAAAA,SAE/EmH,gBAAiBnH,IAAAA,KACjB8E,SAAU9E,IAAAA,KACV4E,SAAU5E,IAAAA,MAeZ,QAZ4B,SAACsH,GAAD,OAC1B,kBAAC,IAAD,CACEC,aAAc,CACZzC,UAAU,EACVqC,iBAAiB,EACjBD,4BAA4B,KAG7B,SAACvH,GAAD,OAAW,kBAACsH,GAAD,UAAiBtH,EAAW2H,2FChCtCE,EAAe,SAAC,GAAD,MAAGC,EAAH,EAAGA,kBAAsB9H,GAAzB,mBACnB,kBAAC,KAAD,QACE+H,iBAAe,eACZC,EAAAA,EAAAA,WAA4BC,EAAAA,IADhB,SAEZD,EAAAA,EAAAA,SAA0BE,EAAAA,IAFd,SAGZF,EAAAA,EAAAA,OAAwBtB,GAHZ,GAKfyB,aAAc,SAACnI,GAAD,OAAW,kBAAC,MAAD,UAAkB8H,EAAuB9H,EAAzC,CAAgDsH,YAAaA,OAClFtH,KAIR6H,EAAazH,UAAY,CACvB0H,kBAAmBzH,IAAAA,QAGrB,uGCtBM+H,EAAkB,SAAC,GAA6B,IAA3BC,EAA2B,EAA3BA,WAAYjF,EAAe,EAAfA,SAC/BkF,GAASC,EAAAA,EAAAA,KAKf,OAJAC,EAAAA,EAAAA,YAAU,WAER,OADAF,EAAOG,UAAUJ,GACV,kBAAMC,EAAOG,eAAUnC,MAC7B,CAAC+B,IACGjF,GAGTgF,EAAgBhI,UAAY,CAC1BiI,WAAYhI,IAAAA,OAAAA,YAGd,iJCTaqI,EAAe,SAAC,GASvB,IARJlE,EAQI,EARJA,KACA7D,EAOI,EAPJA,OACAgI,EAMI,EANJA,cACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,yBACAC,EACI,EADJA,2BAEMlI,GAAOC,EAAAA,EAAAA,KACb,OACE,kBAAC,EAAAI,MAAD,CACEZ,MACE,0BAAMa,UAAU,wCACd,kBAAC,KAAD,CAAyB6H,KAAK,KAAK7H,UAAU,+CAC5CyH,GAAe/H,EAAKc,cAAcC,EAAAA,EAAAA,iBAA2B,CAAElD,KAAM6F,KAG1EnD,QAASC,EAAAA,aAAAA,MACTF,UAAU,qCACVT,OAAQA,EACRF,QAASkI,EACTpH,QAAS,CACP,kBAAC,EAAAC,OAAD,CAAQC,OAAO,sBAAsBxD,IAAI,UAAUoD,QAAQ,UAAUM,QAASiH,GAC3EG,MAAAA,EAAAA,EAA4BjI,EAAKc,cAAcC,EAAAA,EAAAA,OAElD,kBAAC,EAAAL,OAAD,CAAQC,OAAO,0BAA0BxD,IAAI,SAASoD,QAAQ,OAAOM,QAASgH,GAC3EK,MAAAA,EAAAA,EAA8BlI,EAAKc,cAAcC,EAAAA,EAAAA,SAItD,8BAAOiH,GAAqBhI,EAAKc,cAAcC,EAAAA,EAAAA,wBAA/C,OAKN6G,EAAatI,UAAY,CACvBoE,KAAMnE,IAAAA,OACNwI,YAAaxI,IAAAA,KACbyI,kBAAmBzI,IAAAA,KACnB0I,yBAA0B1I,IAAAA,OAC1B2I,2BAA4B3I,IAAAA,OAC5BM,OAAQN,IAAAA,KACRsI,cAAetI,IAAAA,KACfuI,gBAAiBvI,IAAAA,6vBC5CnB,IAAM6I,EAAwB,SAAC,GAAmB,UAAjBC,EAAiB,EAAjBA,WACzBC,GAAclE,EAAAA,EAAAA,WACpB,GAAsDlE,EAAAA,EAAAA,UAASoI,EAAYC,WAAWnL,OAAO,0BAA4B,IAAzH,eAAOoL,EAAP,KAA4BC,EAA5B,KACA,GAAsCvI,EAAAA,EAAAA,WAAS,GAA/C,eAAOwI,EAAP,KAAoBC,EAApB,KACMC,EAA4BN,EAAYC,WAAWnL,OAAO,2BAC1D4C,GAAOC,EAAAA,EAAAA,KAEP4I,GACJ,UAAAP,EAAYC,WAAWnL,cAAvB,mBAAgC,yBAAhC,mBAAmD0L,oBAAnD,eAAiEC,QAAO,SAACC,GAAD,QAAUR,MAAAA,GAAAA,EAAqBjD,MAAK,qBAAG0D,KAAgBnL,SAASkL,YACxI,GACIE,EAAiBb,EAAW,GAAG,GACrC,OACE,yBAAK/H,UAAU,QACZkI,EAAoBlL,OAAS,EAC5B,yBAAKgD,UAAU,yBACb,kBAAC,EAAA6I,UAAD,CAAWC,aAAcpJ,EAAKc,cAAcC,EAAAA,EAAAA,sBAEzCyH,EACEvL,QAAO,SAACC,EAAKmM,GAAN,OAAaA,GAAb,eAAmBnM,MAAM,IAChC6E,KAAI,gBAAGkH,EAAH,EAAGA,KAAH,OACH,kBAAC,EAAAK,KAAD,CAAMnM,IAAK8L,EAAMM,MAAM,OAAOC,aAAW,EAAC3I,QAAS,kBAAM4H,EAAuBD,EAAoBO,QAAO,SAACU,GAAD,OAAOA,EAAER,OAASA,QAC1HA,QAKT,KACJ,kBAAC,EAAAS,MAAD,CAAOC,aAAa,KAAKxB,KAAK,KAAK7H,UAAU,+BAC1CN,EAAKc,cAAcC,EAAAA,EAAAA,iBAEtB,kBAAC,EAAAM,YAAD,KACE,kBAAC,EAAA4B,KAAD,KACGjD,EAAKc,cAAcC,EAAAA,EAAAA,0BACS,IAA5B8H,EAAiBvL,QAChB,kBAAC,EAAAsM,QAAD,CACEC,cAAe7J,EAAKc,cAAcC,EAAAA,EAAAA,yBAClC+I,YAAa9J,EAAKc,cAAcC,EAAAA,EAAAA,wBAEhC,kBAAC,EAAAL,OAAD,CAAQH,QAAQ,QACbP,EAAKc,cAAcC,EAAAA,EAAAA,4BADtB,IAC4D,kBAAC,KAAD,WAMnE6H,MAAAA,OAAA,EAAAA,EAA2BtL,QAAS,IAAMoL,EACzC,kBAAC,EAAAqB,MAAD,CACExJ,QAAQ,UACRyJ,UAAQ,EACRvK,MAAK,UAAKO,EAAKc,cAAcC,EAAAA,EAAAA,mCAAxB,YAAuE6H,EAA0BqB,KAAK,OAC3GC,YAAa,kBAAC,EAAAC,uBAAD,CAAwBxK,QAAS,kBAAMgJ,GAAe,QAEnE,KACH,CACC,CAAC,EAAD,KAEOO,GAFP,IAGIhK,MAAO,EAAF,KACAgK,EAAehK,OADf,IAEHsJ,oBAAAA,EACAC,uBAAAA,UASdL,EAAsB9I,UAAY,CAChC+I,WAAY9I,IAAAA,OAGd,oRCjFA,gzMACA,IAAM6K,GAAYC,WAAAA,MAEX,SAAeC,EAAtB,8FAAO,WACLC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACApM,GAXK,iFAaQwL,EAAUE,gBACrBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACApM,GAxBG,0GA4BA,SAAeqM,EAAtB,wFAAO,WAAqCC,EAAOX,EAAOC,EAAQE,EAAaC,EAAcC,EAAMI,EAAapM,GAAzG,iFACQwL,EAAUa,sBAAsBC,EAAOX,EAAOC,EAAQE,EAAaC,EAAcC,OAAMpF,EAAWwF,EAAapM,GADvH,0GC7BA,IA6BDuM,EAAgB,CACpBT,YAAa/G,EAAAA,GACbyH,cAAezH,EAAAA,GACfiH,KAAMjH,EAAAA,yDC9BK0H,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAQpM,GAAX,mBAChCoM,EAAIC,iBACF,kBAAC,EAAAC,QAAD,CAASC,QAASH,EAAII,gBAAiBC,UAAW,KAAMC,WAAY,MAClE,kBAAC,EAAAC,YAAD,QAAYvL,UAAU,sBAAsBgL,IAAKA,GAASpM,KAG5D,kBAAC,EAAA2M,YAAD,QAAYP,IAAKA,GAASpM,KAG9BmM,EAAmB/L,UAAY,CAC7BJ,MAAOK,IAAAA,OACP+L,IAAK/L,IAAAA,qqBCAP,IAAMuM,EAAW,SAAC,GAAD,QACfC,kBACElB,EAFa,EAEbA,WACAmB,EAHa,EAGbA,UAHa,IAIbpN,QAAW8L,EAJE,EAIFA,YAAauB,EAJX,EAIWA,UAAWC,EAJtB,EAIsBA,SACnCC,EALa,EAKbA,aACAC,EANa,EAMbA,sBANa,IAQfC,YAAeC,EARA,EAQAA,gBAAiBC,EARjB,EAQiBA,aACjBC,EATA,EASfC,YAAeD,cATA,MAUV,CACLE,YAAa7B,EAAW8B,KAAK5K,KAAI,wEAAwE,GAArE2I,EAAH,EAAGA,YAA4BwB,EAA/B,EAAgBd,cAAyBR,EAAzC,EAAyCA,KAAMC,EAA/C,EAA+CA,WAAY+B,EAA3D,EAA2DA,SAA3D,MAAgF,CAC/GlC,YAAAA,EACAwB,SAAAA,EACAD,UAAWrB,EACX3B,KAAM4B,EACN+B,SAAAA,MAEFC,WAAYhC,EAAW/E,KACvBkG,UAAWA,GAAaM,EACxBQ,SAAUP,EACVQ,mBAAoBrC,EAAYiC,KAAK5D,QAAO,SAACC,GAAD,MAAiB,MAARA,KACrDgE,gBAAiBd,EAASS,KAAK5D,QAAO,SAACC,GAAD,MAAiB,MAARA,KAC/CiE,iBAAkBhB,EAAUU,KAAK5D,QAAO,SAACC,GAAD,MAAiB,MAARA,KACjDkE,oBAAqBf,EAAaQ,KAAK5K,KAAI,qBAAG8I,cAC9CuB,sBAAAA,EACAI,cAAeA,EAAcG,OAGzBQ,EAAsB,SAAC,GAA8D,IAA5D3E,EAA4D,EAA5DA,oBAAqBC,EAAuC,EAAvCA,uBAA2BvJ,GAAY,YACnFkO,GAAWC,EAAAA,EAAAA,eACXrN,GAAOC,EAAAA,EAAAA,KACLqN,GAAcC,EAAAA,EAAAA,IAAe,kBAAmB,CAAC,wBAAjDD,UACFE,EAAU,CAACxN,EAAKc,cAAcC,EAAAA,EAAAA,aAAuBf,EAAKc,cAAcC,EAAAA,EAAAA,cAAwBf,EAAKc,cAAcC,EAAAA,EAAAA,YAEnH0M,EAAY,SAAClK,GAAD,OAChB6J,GFhDF7C,GAD8B,EEkDV,EAAD,OACVhH,GACCmK,GAAiB,CAAEC,cAAeD,IAAmB,IAF5C,IAGbE,cAAc,KFpDpBrD,MACAC,EAF6B,EAE7BA,OACAC,EAH6B,EAG7BA,QACAC,EAJ6B,EAI7BA,YACAC,EAL6B,EAK7BA,aACAC,EAN6B,EAM7BA,KACAC,EAP6B,EAO7BA,WACAgD,OAR6B,SAQ7BA,kBAR6B,EAS7BF,EAT6B,EAS7BA,cACAC,EAV6B,EAU7BA,aACAhP,EAX6B,EAW7BA,QACK,CACL8E,KAAMC,EAAAA,GACNC,QAASkK,EACPvD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAgD,EACAF,EACAC,EACAhP,MAzB2B,IAAC,EAC9B2L,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAP6B,EAQ7BgD,EACAF,EACAC,EACAhP,GE6CMmP,EAAe,SAACxK,GAAD,OAAc6J,GFrBGlC,GAAF,EEqB8B,EAAD,KAAM3H,GAAN,IAAgByH,aAAa,KFrBxDE,MAAOX,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,OAAQE,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,aAAcC,EAApD,EAAoDA,KAAMI,EAA1D,EAA0DA,YAAapM,EAAvE,EAAuEA,QAAe,CACzH8E,KAAMyH,EAAcD,GACpBtH,QAASkK,EAAwC5C,EAAOX,EAAOC,EAAQE,EAAaC,EAAcC,EAAMI,EAAapM,MAFlF,IAAC,EAAEsM,EAAOX,EAAOC,EAAQE,EAAaC,EAAcC,EAAMI,EAAapM,GEsB1G,GAWIoP,EAAAA,EAAAA,aAAYlC,EAAUmC,EAAAA,cAVxBvB,EADF,EACEA,YACAV,EAFF,EAEEA,UACAa,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,mBACAC,EANF,EAMEA,gBACAC,EAPF,EAOEA,iBACAC,EARF,EAQEA,oBACAd,EATF,EASEA,sBACAI,EAVF,EAUEA,cAEMvH,GAAUiJ,EAAAA,EAAAA,GAAYhP,GAAtB+F,MACFqD,GAAclE,EAAAA,EAAAA,WAEpB,GAA8BlE,EAAAA,EAAAA,UAAS,CAAE4I,aAAc,GAAIqF,UAAW,GAAIC,WAAY,KAAtF,eAAOpR,EAAP,KAAgBqR,EAAhB,KACMC,EAAWhG,EAAYC,WAAWnL,OAAO,aACzCsQ,GAAiBpF,EAAYC,WAAWnL,OAAO,aACrD,IAAkC8C,EAAAA,EAAAA,WAAS,GAA3C,iBAAOqO,GAAP,MAAkBC,GAAlB,MACA,IAAgCtO,EAAAA,EAAAA,UAAS,IAAzC,iBAAOuO,GAAP,MAAiBC,GAAjB,MACA,IAA0BxO,EAAAA,EAAAA,YAA1B,iBAAOzC,GAAP,MAAckR,GAAd,MAGMC,GAAkB,SAAC/D,GAAD,OAAgB2B,EAAcjH,MAAK,SAACsJ,GAAD,aAAOA,EAAEpR,SAAF,UAAYoN,EAAWiE,MAAM,YAA7B,aAAY,EAAwB,QAsBhGC,IAAiCC,EAAAA,EAAAA,cACrCC,EAAAA,EAAAA,IACE,gBAAGnG,EAAH,EAAGA,aAAcqF,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,WAA5B,OACEL,EAAa,CACX7C,MAAO,cACPX,MAAO,GACPG,YAAa5B,EAAamB,OAC1BU,aAAcwD,EAAUlE,OACxBW,KAAMwD,EAAWnE,WAErB,KAEF,IAEIiF,IAA8BF,EAAAA,EAAAA,cAClCC,EAAAA,EAAAA,IACE,gBAAGnG,EAAH,EAAGA,aAAcqF,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,WAA5B,OACEL,EAAa,CACX7C,MAAO,gBACPX,MAAO,GACPG,YAAa5B,EAAamB,OAC1BU,aAAcwD,EAAUlE,OACxBW,KAAMwD,EAAWnE,WAErB,KAEF,IAEIkF,IAA+BH,EAAAA,EAAAA,cACnCC,EAAAA,EAAAA,IACE,gBAAGnG,EAAH,EAAGA,aAAcqF,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,WAA5B,OACEL,EAAa,CAAE7C,MAAO,OAAQX,MAAO,GAAIG,YAAa5B,EAAamB,OAAQU,aAAcwD,EAAUlE,OAAQW,KAAMwD,EAAWnE,WAC9H,KAEF,KAGFvC,EAAAA,EAAAA,YAAU,WAAM,MACR0H,EAAY,UAAG9G,EAAYC,WAAWnL,OAAO,yBAAjC,aAAG,EAAiD6L,KAWtE,MAViB,SAAbqF,GAAuBc,GACzBhC,GAASiC,EAAAA,EAAAA,IAAUD,IAGrB9G,EAAYgH,OAAO,sBAAsB,GACzC7B,EAAUZ,GACVkB,EAAa,CAAE7C,MAAO,cAAeX,MAAO,KAC5CwD,EAAa,CAAE7C,MAAO,gBAAiBX,MAAO,KAC9CwD,EAAa,CAAE7C,MAAO,OAAQX,MAAO,KAE9B,kBAAM6C,EFhGuB,CACtC1J,KAAMC,EAAAA,GACNC,QAAS,CACP+I,KAAM,SE8FL,KAEHjF,EAAAA,EAAAA,YAAU,WACR4F,GAAaF,GAAS9J,EAAAA,EAAAA,QACrB,CAACgK,KAEJ5F,EAAAA,EAAAA,YAAU,WACRwH,GAA4BlS,GAC5BmS,GAA6BnS,KAC5B,CAACA,EAAQ8L,gBAEZpB,EAAAA,EAAAA,YAAU,WACRqH,GAA+B/R,GAC/BmS,GAA6BnS,KAC5B,CAACA,EAAQmR,aAEZzG,EAAAA,EAAAA,YAAU,WACRqH,GAA+B/R,GAC/BkS,GAA4BlS,KAC3B,CAACA,EAAQoR,cAEZ1G,EAAAA,EAAAA,YAAU,WACRzC,EAAMzD,SAASgH,KACd,CAACA,KAEJd,EAAAA,EAAAA,YAAU,WAAM,MACd,MACGoF,GACY,SAAbwB,GACAhG,EAAYC,WAAWnL,OAAO,4BAC9BoL,EAAoBlL,OAAS,IAC7B,UAAAgL,EAAYC,WAAWnL,OAAO,yBAA9B,eAAiD6L,SAAS6D,MAAAA,OAA1D,EAA0DA,EAAU7D,OACpEmD,GACAJ,GAPF,CAYA,IFtJyB,EAAD,EAC1BzB,EAD0B,EAE1BC,EACAC,EACAC,EACAC,EACAC,EACAC,EAP0B,EAQ1BgD,EACAjP,EE6IM2Q,EAAa,GAEXC,GACJ1C,MAAAA,OAAA,EAAAA,EAAU2C,OAAO1G,QAAO,SAAClL,GAAS,MAChC,QAAIkP,EAAmBjP,SAASD,MAAAA,GAA5B,UAA4BA,EAAMgN,kBAAlC,aAA4B,EAAkBiE,MAAM,KAAK,MAG7DS,EAAWG,KAAK7R,IAET,QACH,GAKR,GAJAyK,EAAYgH,OACV,0BACAC,EAAWxN,KAAI,qBAAG8I,eAEe,IAA/BqC,EAAoB5P,aAAiD,IAA1B8O,EAAuC,CACpF,IAAMtD,GAAe,OAAI,IAAIlL,IAAI4R,EAAgBzN,KAAI,qBAAG8I,WAA4BiE,MAAM,KAAK,QAC/F1B,GFtKJ7C,OAD0B,QAAC,EEuKD,CAAEG,YAAa5B,EAAamB,SFtKtDM,OAAQ,IADkB,EAE1BC,OAF0B,SAE1BA,QAAS,EAFiB,EAG1BC,EAH0B,EAG1BA,QACAC,EAJ0B,EAI1BA,YACAC,EAL0B,EAK1BA,aACAC,EAN0B,EAM1BA,KACAC,EAP0B,EAO1BA,WACAgD,OAR0B,SAQ1BA,kBAR0B,EAS1BjP,EAT0B,EAS1BA,QACK,CACL8E,KAAMC,EAAAA,EACNC,QAASkK,EAAkCvD,EAAOC,EAAQC,EAASC,EAAaC,EAAcC,EAAMC,EAAYgD,EAAiBjP,UE4JxH,CACL,IAAM+Q,EAAWH,EAAgBzN,KAAI,qBAAG8I,WAA4BzM,QAAQ,IAAK,SACjFqK,GAAuB,kBACrByE,EACGnE,QAAO,SAACU,GAAD,MAA2B,oBAApBA,EAAEqF,MAAM,KAAK,IAA2E,KAA9CF,GAAgBnF,IAAM,CAAEmG,MAAO,IAAKA,SAC5F7G,QAAO,SAACU,GAAD,OAAOkG,EAASrR,MAAK,SAACuR,GAAD,OAAOpG,EAAEqG,MAAMD,SAC3C9N,KAAI,SAAC8I,GAAD,MAAiB,CAAE5B,KAAM4B,SAElCvC,EAAYgH,OAAO,2BAA2B,OAE/C,CAAC5C,EAAaI,IAEjB,IAQMiD,GAAoB,SAAChH,GAAD,OACxBA,EAAO9L,QACL,SAACC,EAAK8S,GAAN,MAAgB,CACd,GAAI,EAAJ,KACK9S,MAAAA,OADL,EACKA,EAAM,KADX,cAEG8S,GAAO,OAGZ,CAAE,GAAI,MAGJC,GAAsB,CAC1BnH,cAAc,OAAIiE,GAAoBhE,QAAO,SAAClL,GAAD,OAAUA,EAAKC,SAAS2Q,OAAW1M,KAAI,SAACiH,GAAD,MAAU,CAAEvH,MAAOuH,EAAKvL,MAAOuL,MACnHmF,WAAW,OAAInB,GAAiBjE,QAAO,SAAClL,GAAD,OAAUA,EAAKC,SAAS2Q,OAAW1M,KAAI,SAACmO,GAAD,MAAU,CAAEzO,MAAOyO,EAAKzS,MAAOyS,MAC7G9B,YAAY,OAAInB,GAAkBlE,QAAO,SAAClL,GAAD,OAAUA,EAAKC,SAAS2Q,OAAW1M,KAAI,SAACoO,GAAD,MAAS,CAAE1O,MAAO0O,EAAI1S,MAAO0S,OAGzGC,GAAY,CAChB3O,MAAO,6BAAMzB,EAAKc,cAAcC,EAAAA,EAAAA,iBAChCH,YAAY,GAGRyP,GAAqBJ,GAAoB1S,OAAOZ,KAAKsT,IAAqBxS,IAAgB,IAAIH,OA5K7E,GA6KvB,OACE,yBAAKgD,UAAU,4BACb,kBAAC,KAAD,QACEkN,QAASA,EACT8C,cAAc,EACdC,WAAW,EACXC,SAAS,EACTC,KAjLa,SAAC/D,GAAD,OACjBA,EAAY3K,KAAI,gBAAG2I,EAAH,EAAGA,YAAawB,EAAhB,EAAgBA,SAAUD,EAA1B,EAA0BA,UAAWhD,EAArC,EAAqCA,KAAM2D,EAA3C,EAA2CA,SAA3C,MAA2D,CACzE3D,KAAM,GAAF,OAAKyB,EAAL,YAAoBwB,EAApB,YAAgCD,GACpCW,SAAAA,EACA8D,MAAO,CACL,CACEjR,MAAOiL,GAETwB,EACAD,GAEF0E,SAAUC,QAAQpI,GAAuBA,EAAoBjD,MAAK,SAAC+F,GAAD,OAASA,EAAIrC,OAASA,MACxFsC,iBAAkC,oBAAhBb,IAAwF,KAAjDkE,GAAgB3F,IAAS,CAAE2G,MAAO,IAAKA,QAAgBtC,GAChH5B,gBACE,6BACG1L,EAAKc,cAAcwM,EAAYvM,EAAAA,EAAAA,gCAA2CA,EAAAA,EAAAA,6BAAuC,IACjHuM,EAAY,uBAAGuD,KAAK,sBAAsB7Q,EAAKc,cAAcC,EAAAA,EAAAA,uBAAsC,UAiKhG+P,CAAWpE,GACjBC,KAAMD,EACNqE,YAAY,GACZC,OAAgC,KAAxBtE,MAAAA,OAAA,EAAAA,EAAapP,QACrB2T,kBAAmB,CAACjR,EAAKc,cAAcC,EAAAA,EAAAA,oCACvC0M,UAAW,YAA4D,IAAzDlD,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,OAAQ1B,EAA0C,EAA1CA,aAAcqF,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACpDX,EAAU,CACRlD,MAAAA,EACAC,OAAAA,EACAE,aAAc5B,GAAgB9L,EAAQ8L,cAAcmB,OACpDU,cAAewD,GAAanR,EAAQmR,WAAWlE,OAC/CW,MAAOwD,GAAcpR,EAAQoR,YAAYnE,UAG7CiH,eAAgB,YAA6C,IAA1CpI,EAA0C,EAA1CA,aAAcqF,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC1CC,EAAW,EAAD,SACLrR,GACC8L,EAAe,CAAEA,aAAAA,GAAiB9L,EAAQ8L,cAC1CqF,EAAY,CAAEA,UAAAA,GAAcnR,EAAQmR,WACpCC,EAAa,CAAEA,WAAAA,GAAepR,EAAQoR,cAG9CpC,UAAWA,GAAaI,EACxBS,WAAU,OAAOA,GAAP,IAAmB+C,MAAO/C,EAAW+C,QAC/CuB,YAAa3I,EACb4I,gBA/DkB,SAACC,GACvB,IAAMC,EAAcD,EAAa7I,GAC9BO,QAAO,kBAAGE,EAAH,EAAGA,KAAH,MAA2C,oBAA3C,EAASyB,cAAuD,UAAAkE,GAAgB3F,UAAhB,eAAuB2G,OAAQ,KACtG7N,KAAI,kBAAyB,CAAEkH,KAA3B,EAAGA,KAA8B2D,SAAjC,EAASA,aAEhBnE,EAAuB,IAAQ6I,EAAa9I,GAAuB,GAAK8I,IA2DpEC,YAAavR,EAAKc,cAAcC,EAAAA,EAAAA,aAAsByQ,cACtDC,cAAezR,EAAKc,cAAcC,EAAAA,EAAAA,YAAqByQ,cACvDE,cAAe1R,EAAKc,cAAcyN,GAAYxN,EAAAA,EAAAA,QAAmBA,EAAAA,EAAAA,SACjE4Q,SAAU,SAAClD,GAAD,OAAcC,GAAYD,IACpCmD,WACEvB,GACI,WACE7B,IAAa,kBAAOD,YAEtB/I,EAENhE,SAAU,SAACqQ,EAAGpU,GACZiR,GAAY,IACZC,GAASlR,IAEXA,MAAOA,GACPT,QAAS,CACP,CACEG,IAAK,eACLM,MAAOT,EAAQ8L,aACfgJ,YAAa9R,EAAKc,cAAcC,EAAAA,EAAAA,YAAsB,CAAE5D,IAAK6C,EAAKc,cAAcC,EAAAA,EAAAA,aAAsByQ,gBACtG9N,KAAM,QACNiN,SAAUZ,GAAkB/S,EAAQ8L,cACpCiJ,OAAQ,CACN,CACErO,KAAMuM,GAAoBnH,aAAaxL,OAAS,EAAI,WAAa,QACjE0U,MACE/B,GAAoBnH,aAAaxL,OAAS,GACtC,OAAI2S,GAAoBnH,cAAcmJ,MAAM,EAAG1D,QAAY/I,EA1OxD,IA2OH,CAAC4K,OAIb,CACEjT,IAAK,YACLM,MAAOT,EAAQmR,UACf2D,YAAa9R,EAAKc,cAAcC,EAAAA,EAAAA,YAAsB,CAAE5D,IAAK6C,EAAKc,cAAcC,EAAAA,EAAAA,cAAuByQ,gBACvG9N,KAAM,QACNiN,SAAUZ,GAAkB/S,EAAQmR,WACpC4D,OAAQ,CACN,CACErO,KAAMuM,GAAoB9B,UAAU7Q,OAAS,EAAI,WAAa,QAC9D0U,MACE/B,GAAoB9B,UAAU7Q,OAAS,GACnC,OAAI2S,GAAoB9B,WAAW8D,MAAM,EAAG1D,QAAY/I,EA1PrD,IA2PH,CAAC4K,OAIb,CACEjT,IAAK,aACLM,MAAOT,EAAQoR,WACf0D,YAAa9R,EAAKc,cAAcC,EAAAA,EAAAA,YAAsB,CAAE5D,IAAK6C,EAAKc,cAAcC,EAAAA,EAAAA,WAAoByQ,gBACpG9N,KAAM,QACNiN,SAAUZ,GAAkB/S,EAAQoR,YACpC2D,OAAQ,CACN,CACErO,KAAMuM,GAAoB7B,WAAW9Q,OAAS,EAAI,WAAa,QAC/D0U,MACE/B,GAAoB7B,WAAW9Q,OAAS,GACpC,OAAI2S,GAAoB7B,YAAY6D,MAAM,EAAG1D,QAAY/I,EA1QtD,IA2QH,CAAC4K,QAKf8B,cAAc,EACdC,WAAY9G,EACZ+G,QAAQ,wBACJlT,MAMZiO,EAAoB7N,UAAY,CAC9BkJ,oBAAqBjJ,IAAAA,MACrBkJ,uBAAwBlJ,IAAAA,MAG1B,mwBCrWA,IAAMuM,EAAW,SAAC,GAAD,QAAGW,YAAeD,EAAlB,EAAkBA,cAAeR,EAAjC,EAAiCA,UAAWqG,EAA5C,EAA4CA,iBAAkBlE,EAA9D,EAA8DA,UAA9D,MAAiF,CAChG3B,cAAeA,EAAcG,KAC7BwB,UAAAA,EACAnC,UAAAA,EACAsG,mBAAoBD,EAAmB,IAGnCE,EAAU,SAACC,EAAOC,GACtB,IAAMC,EAAYF,EAAMC,EAAOtV,KAC/B,OAAQsV,EAAO/O,MACb,IAAK,SACH,OAAO,EAAP,KACK8O,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII7S,QAAS6S,EAAU7S,WAGzB,IAAK,SACH,OAAO,EAAP,KACK2S,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII/B,SAAU+B,EAAU/B,SAAS7S,SAAS2U,EAAOE,WACzCD,EAAU/B,SAAS5H,QAAO,SAAClL,GAAD,OAAUA,IAAS4U,EAAOE,aAD9C,kBAEFD,EAAU/B,UAFR,CAEkB8B,EAAOE,gBAGzC,IAAK,YACH,OAAO,EAAP,KACKH,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII/B,SAAU+B,EAAU9T,QAAQmD,KAAI,SAAC6Q,GAAD,OAAYA,EAAOnV,aAGzD,IAAK,QACH,OAAO,EAAP,KACK+U,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII/B,SAAU,OAGhB,IAAK,aACH,OAAO,EAAP,KACK6B,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII9T,QAAS6T,EAAO7T,QAChBiU,gBAAiBJ,EAAO7T,YAG9B,IAAK,YACH,OAAO,EAAP,KACK4T,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAIIG,gBAAiBH,EAAU9T,QAAQmK,QAAO,qBAAGtL,MAAkBK,SAAS2U,EAAOK,oBAGrF,QACE,OAAON,IA6Hb,QAzHsB,SAACtT,GACrB,IAAMc,GAAOC,EAAAA,EAAAA,KACPmN,GAAWC,EAAAA,EAAAA,eAGjB,GAAoEW,EAAAA,EAAAA,aAAYlC,EAAUmC,EAAAA,cAAlFzB,EAAR,EAAQA,cAAeR,EAAvB,EAAuBA,UAAWsG,EAAlC,EAAkCA,mBAAoBnE,EAAtD,EAAsDA,UAC9ClJ,GAAUiJ,EAAAA,EAAAA,GAAYhP,GAAtB+F,MACFqD,GAAclE,EAAAA,EAAAA,WACdsI,EAAcpE,EAAYC,WAAWnL,OAAO,yBAAyB2L,QAAO,qBAAGE,KAAgB6F,MAAM,KAAK,GAAGhR,SAAS,sBAE5H,GAAgCiV,EAAAA,EAAAA,YAC9BR,EACA7F,EAAYzP,QACV,SAACC,EAAK2N,GAAN,cACK3N,GADL,cAEG2N,EAAW5B,KAAO,CACjB0H,SAAU,GACV/R,QAAS,GACTiU,gBAAiB,GACjBhT,QAAQ,OAGZ,KAZJ,eAAO2S,EAAP,KAAcQ,EAAd,KA8FA,OAxEAtL,EAAAA,EAAAA,YAAU,YACPY,EAAYC,WAAWnL,OAAO,yBAA2B,IAAI2E,KAAI,gBAAG8I,EAAH,EAAGA,WAAH,SAAesD,UACrEpM,KACR,SAACmK,GAAD,OACEQ,EAAYnH,MAAK,SAAC1H,GAAD,OAAUA,MAAAA,OAAA,EAAAA,EAAMoL,QAAS4B,MAAemI,EAAe,CAAEtP,KAAM,SAAUiP,UAAWzG,EAAU/O,IAAK0N,UAjC5FuC,GAAS9J,EAAAA,EAAAA,GAAtBC,YAqCjB+E,EAAYgH,OAAO,sBAAsB,KACxC,KAEH5H,EAAAA,EAAAA,YAAU,WACHsE,IACmB,OACjB,IAAIpO,IAAI8O,EAAY3K,KAAI,SAAC8I,GAAD,uBAAgB2B,EAAcjH,MAAK,SAACsJ,GAAD,aAAOA,EAAEpR,SAAF,UAAYoN,EAAW5B,KAAK6F,MAAM,YAAlC,aAAY,EAA6B,cAAnF,aAAgB,EAAwEmE,UACnHlK,QAAO,SAACkK,GAAD,OAAUA,KACLlR,KAAI,SAACkR,GAAD,OA5CC1P,EA4CuB0P,EA5CV7F,GAAS3J,EAAAA,EAAAA,GAAYF,IAAnC,IAACA,OA8CpB,CAACiJ,KAEJ9E,EAAAA,EAAAA,YAAU,WACH4K,GACH5F,EAAY3K,KAAI,SAAC0H,GAAD,OAAOuJ,EAAe,CAAEtP,KAAM,aAAcvG,IAAKsM,EAAER,KAAMrK,QAASuP,GAxBxDtD,EAwBuFpB,EAAER,KAxB1F,UAAgBuD,EAAcjH,MAAK,SAACsJ,GAAD,aAAOA,EAAEpR,SAAF,UAAYoN,EAAWiE,MAAM,YAA7B,aAAY,EAAwB,cAA9E,iBAAgB,EAAmEmE,KAAKnE,MAAM,YAA9F,aAAgB,EAAqF,MAwBD,KAxBpG,IAACjE,EAAD,SA0B1B,CAACyH,KAEJ5K,EAAAA,EAAAA,YAAU,WACR,IAAMwL,EAAsB3V,OAAO4V,QAAQX,GAAOzQ,KAAI,qCAA8B,CAAE8I,WAAhC,KAA4CsD,UAA5C,KAAiEwC,aACvH1L,EAAMzD,SAAS0R,GACf5K,EAAYgH,OAAO,uBAAwB4D,KAC1C,CAACV,IA2CF,kBAAC,EAAAY,KAAD,CAAMnS,WAAS,GACb,kBAAC,EAAAoS,SAAD,CAAUC,GAAI,EAAGhT,UAAU,qBACzB,kBAAC,EAAA2C,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiB7C,UAAU,kBACzCN,EAAKc,cAAcC,EAAAA,EAAAA,eAGxB,kBAAC,EAAAsS,SAAD,CAAUC,GAAI,EAAGhT,UAAU,qBACzB,kBAAC,EAAA2C,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiB7C,UAAU,kBACzCN,EAAKc,cAAcC,EAAAA,EAAAA,uBAGvB2L,EAAY3K,KAnDD,SAAC,GAAyB,IAAjB8I,EAAiB,EAAvB5B,KACXrK,EAAU4T,EAAM3H,GAAYgI,gBAClC,OACE,kBAAC,aAAD,KACE,kBAAC,EAAAQ,SAAD,CAAUC,GAAI,EAAGC,GAAI,IACnB,kBAAC,EAAA/H,QAAD,CAASC,QAAS,6BAAMZ,IACtB,kBAAC,EAAA1E,UAAD,CAAW1E,MAAOoJ,EAAWzM,QAAQ,oBAAqB,IAAKoE,YAAU,MAG7E,kBAAC,EAAA6Q,SAAD,CAAUC,GAAI,EAAGC,GAAI,IACnB,kBAAC,EAAAvO,OAAD,CACE1E,UAAU,8BACVC,QAASiT,EAAAA,cAAAA,SACTC,mBAAoBzT,EAAKc,cAAcC,EAAAA,EAAAA,aACvC2S,SAAU,SAAC7T,GACTmT,EAAe,CAAEtP,KAAM,YAAavG,IAAK0N,EAAYiI,YAAa,KAvD7D,SAAC3V,EAAK0C,GAAWmT,EAAe,CAAEtP,KAAM,SAAUvG,IAAAA,EAAK0C,OAAAA,IAwD5D6T,CAAS7I,EAAYhL,IAEvB8T,SAAU,SAACC,EAAOjB,IAxDX,SAACiB,EAAOjB,EAAWkB,EAAW1W,GACjC6V,EAAZa,EAA2B,CAAEnQ,KAAM,YAAaiP,UAAAA,EAAWxV,IAAAA,GAAwB,CAAEuG,KAAM,SAAUiP,UAAAA,EAAWxV,IAAAA,IAwDtGwW,CAASC,EAAOjB,EAAWA,IAAc3S,EAAKc,cAAcC,EAAAA,EAAAA,UAAoB,CAAEzD,OAAQsB,EAAQtB,SAAWuN,IAE/GiJ,QAAS,kBA5Dad,EAAe,CAAEtP,KAAM,QAASvG,IA4DxB0N,KAC9BkJ,WAAYvB,EAAM3H,GAAY8F,SAC9B9Q,OAAQ2S,EAAM3H,GAAYhL,OAC1B8R,SAAU,SAACE,GAAD,OAAOA,GAAKmB,EAAe,CAAEtP,KAAM,YAAavG,IAAK0N,EAAYiI,YAAajB,EAAEmC,OAAOvW,SACjG,kBAAiBoN,EACjBoJ,gBAAiBjU,EAAKc,cAAcC,EAAAA,EAAAA,iBACpCmT,iBAAe,GAjBjB,CAoBI,kBAAC,EAAAC,aAAD,CAAchX,IAAK,EAAGM,MAAOuC,EAAKc,cAAcC,EAAAA,EAAAA,UAAoB,CAAEzD,OAAQsB,EAAQtB,YApB1F,eAqBOsB,EAAQmD,KAAI,SAAC6Q,EAAQ5Q,GAAT,OAAmB,kBAAC,EAAAmS,aAAD,CAAchX,IAAK6E,EAAQ,EAAGvE,MAAOmV,EAAOnV,iJCtKtF2W,EAA8B,SAAC,GAAmB,IAAjB/L,EAAiB,EAAjBA,WAC/BrI,GAAOC,EAAAA,EAAAA,KACb,OACE,yBAAKK,UAAU,QACb,kBAAC,EAAAoJ,MAAD,CAAOC,aAAa,KAAKxB,KAAK,KAAK7H,UAAU,cAC1CN,EAAKc,cAAcC,EAAAA,EAAAA,gBAErBsH,IAKP+L,EAA4B9U,UAAY,CACtC+I,WAAY9I,IAAAA,OAGd,sNCrBA,gzMACA,IAAM8U,GAAqBC,WAAAA,MAEdC,EAAkB,mCAAG,WAAOhR,GAAP,iFACnB8Q,EAAmBE,mBAAmBhR,GADnB,mFAAH,gvBCM/B,IAAMuI,EAAW,SAAC,GAAD,MAA8C,CAC7DU,cADe,EAAGgI,iBAAoBhI,cACTG,OAGzB4F,EAAU,SAACC,EAAOC,GAAW,QAC3BC,EAAYF,EAAMC,EAAOtV,KAC/B,OAAQsV,EAAO/O,MACb,IAAK,SACH,OAAO,EAAP,KACK8O,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII7S,QAAS6S,EAAU7S,WAGzB,IAAK,SACH,OAAI6S,EAAU/B,SAASrS,MAAK,SAACT,GAAD,aAAUA,MAAAA,OAAA,EAAAA,EAAM6D,OAAN,UAAa+Q,EAAOgC,0BAApB,aAAa,EAA2B/S,OACrE,EAAP,KACK8Q,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII/B,SAAU+B,EAAU/B,SAAS5H,QAAO,SAAClL,GAAD,aAAUA,EAAK6D,MAAL,UAAY+Q,EAAOgC,0BAAnB,aAAY,EAA2B/S,gBAG9C8D,KAAlC,UAAAiN,EAAOgC,0BAAP,eAA2B/S,UAAwD8D,KAApC,UAAAiN,EAAOgC,0BAAP,eAA2BC,MAC5E,EAAP,KACKlC,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII/B,SAAU,GAAF,eAAM+B,EAAU/B,UAAhB,CAA0B8B,EAAOgC,yBAItCjC,EAEX,IAAK,YACH,OAAO,EAAP,KACKA,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII/B,UAAU,OAAI+B,EAAU9T,aAG9B,IAAK,YACH,OAAO,EAAP,KACK4T,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAIIG,gBAAiBH,EAAU9T,QAAQmK,QAAO,qBAAGtL,MAAkBK,SAAS2U,EAAO1B,oBAGrF,IAAK,QACH,OAAO,EAAP,KACKyB,GADL,cAEGC,EAAOtV,IAFV,OAGOuV,GAHP,IAII/B,SAAU,OAGhB,QACE,OAAO6B,IA2Hb,QAvH4B,SAACtT,GAC3B,IAAMc,GAAOC,EAAAA,EAAAA,KACPmN,GAAWC,EAAAA,EAAAA,eACTpI,GAAUiJ,EAAAA,EAAAA,GAAYhP,GAAtB+F,MACFqD,GAAclE,EAAAA,EAAAA,WACpB,GAAkClE,EAAAA,EAAAA,UAAS,IAA3C,eAAOyU,EAAP,KAAkBC,EAAlB,KAEQpI,GAAkBwB,EAAAA,EAAAA,aAAYlC,EAAUmC,EAAAA,cAAxCzB,cACFE,EAAcpE,EAAYC,WAAWnL,OAAO,yBAAyB2L,QAAO,qBAAGE,KAAgB6F,MAAM,KAAK,GAAGhR,SAAS,gBAiB5H,GAAiCiV,EAAAA,EAAAA,YAC/BR,EACA7F,EAAYzP,QACV,SAACC,EAAK2N,GAAN,cACK3N,GADL,cAEG2N,EAAW5B,KAAO,CACjB0H,SAAU,GACV/R,QAAS,GACTiU,gBAAiB,GACjBhT,QAAQ,OAGZ,KAZJ,eAAO2S,EAAP,KAAcqC,EAAd,KA6EA,OA7DAnN,EAAAA,EAAAA,YAAU,WAnCsB0F,EC7ES,CACzC1J,KAAMC,EAAAA,GACNC,QAASkR,MDgHPxM,EAAYgH,OAAO,8BAA+B,MACjD,KAEH5H,EAAAA,EAAAA,YAAU,WACR,IACMqN,GADUvI,GAAiBA,EAAclP,OAASkP,EAAgB,IAC3CvP,QAAO,SAACC,EAAK0V,GAExC,OADA1V,EAAI0V,EAAO8B,MAAQ9B,EAAOlR,GACnBxE,IACN,IAEH0X,EAAaG,KACZ,CAACvI,KAEJ9E,EAAAA,EAAAA,YAAU,WACR,IAAMsN,EAA8BzX,OAAO4V,QAAQX,GAAOzQ,KAAI,qCAAiC,CAAE8I,WAAnC,KAA+CkH,OAA/C,KAAgBpB,aAC9E1L,EAAMzD,SAASwT,GACf1M,EAAYgH,OAAO,8BAA+B0F,KACjD,CAACxC,IA2CF,kBAAC,EAAAY,KAAD,CAAMnS,WAAS,GACb,kBAAC,EAAAoS,SAAD,CAAUC,GAAI,EAAGhT,UAAU,qBACzB,kBAAC,EAAA2C,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiB7C,UAAU,6BACzCN,EAAKc,cAAcC,EAAAA,EAAAA,eAGxB,kBAAC,EAAAsS,SAAD,CAAUC,GAAI,EAAGhT,UAAU,qBACzB,kBAAC,EAAA2C,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiB7C,UAAU,6BACzCN,EAAKc,cAAcC,EAAAA,EAAAA,mBAGvB2L,EAAY3K,KApDD,SAAC,GAAyB,IAAjB8I,EAAiB,EAAvB5B,KACXrK,EAAU4N,GAAiBA,EAAclP,OAASkP,EAAgB,GAExE,OACE,kBAAC,aAAD,CAAgBrP,IAAG,UAAK0N,IACtB,kBAAC,EAAAwI,SAAD,CAAUC,GAAI,EAAGC,GAAI,IACnB,kBAAC,EAAApN,UAAD,CAAW1E,MAAOoJ,EAAYrI,YAAU,KAE1C,kBAAC,EAAA6Q,SAAD,CAAUC,GAAI,EAAGC,GAAI,IACnB,kBAAC,EAAA/H,QAAD,CAASC,QAAS,6BAAMzL,EAAKc,cAAcC,EAAAA,EAAAA,0BACzC,kBAAC,EAAAiE,OAAD,CACE1E,UAAU,8BACVC,QAASiT,EAAAA,cAAAA,SACTC,mBAAoBzT,EAAKc,cAAcC,EAAAA,EAAAA,+BACvC,kBAAiB8J,EACjBkJ,WAAYvB,EAAM3H,GAAY8F,SAAS5O,KAAI,qBAAG2S,QAC9CT,gBAAiBjU,EAAKc,cAAcC,EAAAA,EAAAA,cACpC4S,SAAU,SAACC,EAAOjB,GAAR,aApEL,SAACiB,EAAOjB,EAAWkB,EAAW1W,GAC7C,IAAMsX,EAAqB,CAAEC,KAAM/B,EAAWjR,GAAIiT,EAAUhC,IAE5D,GAAIkB,EAAW,q6BACQrH,GADR,IACb,IAAK,EAAL,qBAAoC,KAAzBoG,EAAyB,QAC5BqC,EAAkB,CAAEP,KAAM9B,EAAO8B,KAAMhT,GAAIkR,EAAOlR,IACxDmT,EAAgB,CAAEnR,KAAM,SAAU+Q,mBAAoBQ,EAAiB9X,IAAAA,KAH5D,oCAMb0X,EAAgB,CAAEnR,KAAM,SAAU+Q,mBAAAA,EAAoBtX,IAAAA,IA4D5CwW,CAASC,EAAOjB,EAAWA,IAAc3S,EAAKc,cAAcC,EAAAA,EAAAA,UAAoB,CAAEzD,OAAM,UAAEsB,MAAAA,OAAF,EAAEA,EAAStB,cAAX,QAAqB,IAAMuN,IAErH6I,SAAU,SAAC7T,GACTgV,EAAgB,CAAEnR,KAAM,YAAavG,IAAK0N,EAAYkG,YAAa,KAzEhE,SAAC5T,EAAK0C,GAAWgV,EAAgB,CAAEnR,KAAM,SAAUvG,IAAAA,EAAK0C,OAAAA,IA0E3D6T,CAAS7I,EAAYhL,IAEvBiU,QAAS,kBA/DWe,EAAgB,CAAEnR,KAAM,QAASvG,IA+DvB0N,KAC9B8G,SAAU,SAACE,GAAD,OAAOA,GAAKgD,EAAgB,CAAEnR,KAAM,YAAavG,IAAK0N,EAAYiI,YAAajB,EAAEmC,OAAOvW,SAClGoC,OAAQ2S,EAAM3H,GAAYhL,OAC1BqU,iBAAe,GAjBjB,CAoBI,kBAAC,EAAAC,aAAD,CAAchX,IAAG,UAAK0N,EAAL,QAAuBpN,MAAOuC,EAAKc,cAAcC,EAAAA,EAAAA,UAAoB,CAAEzD,OAAQsB,MAAAA,OAAF,EAAEA,EAAStB,YApB7G,gBAqBQsB,GAAW,IAAImD,KAAI,SAAC6Q,EAAQ5Q,GAAT,OAAmB,kBAAC,EAAAmS,aAAD,CAAchX,IAAG,UAAK0N,EAAL,YAAmB7I,EAAQ,GAAKvE,MAAOmV,MAAAA,OAAF,EAAEA,EAAQ8B,yREtJpHQ,EAAgB,SAAC,GAA4D,IAA1DC,EAA0D,EAA1DA,YAA0D,IAA7CC,YAAAA,OAA6C,MAA/BD,EAA+B,EAAlBE,EAAkB,EAAlBA,YACzDrV,GAAOC,EAAAA,EAAAA,KACPqV,ECjBa,WACnB,IAAMA,GAAYC,EAAAA,EAAAA,SAAO,GAOzB,OANA7N,EAAAA,EAAAA,YAAU,WAER,OADA4N,EAAUE,SAAU,EACb,WACLF,EAAUE,SAAU,KAErB,IACIF,EDSWG,GACZ/Y,GAAWgC,EAAAA,EAAAA,eACX0O,GAAWC,EAAAA,EAAAA,eAETqI,GAAWC,EAAAA,EAAAA,aAAXD,OACFE,GAAO5H,EAAAA,EAAAA,cAAY,SAACwE,GAAD,OAAWqD,EAAAA,EAAAA,GAAarD,EAAOkD,MACxD,GAA0CxV,EAAAA,EAAAA,UAAS0V,GAAnD,eAAOE,EAAP,KAAsBC,EAAtB,MAEArO,EAAAA,EAAAA,YAAU,YACPoO,IACCzG,EAAAA,EAAAA,IAAUqG,GAAQM,MAAK,SAACJ,GAClBN,EAAUE,SACZO,EAAiBH,QAGtB,CAACF,IAEJ,IAe8BhU,EAyBxBuU,GAAsBC,EAAAA,EAAAA,IAAc,SAACzY,EAAO0Y,EAAOzU,EAAI0U,GAAnB,OACvC3Y,GAA0B,IAAjBA,EAAMH,OAAuE8Y,EAAkB3Y,EAAO0Y,EAAOzU,GAAxF2U,QAAQC,OAAOtW,EAAKc,cAAcC,EAAAA,EAAAA,cAG7DwV,EAAkB,CACtB,qBACE,gBAAGJ,EAAH,EAAGA,MAAOzU,EAAV,EAAUA,GAAI0U,EAAd,EAAcA,kBAAd,OACA,SAAC3Y,GAAD,OACEwY,EAAoBxY,EAAO0Y,EAAOzU,EAAI0U,MAGtCjS,EAAW,WACfiJ,GACEoJ,EAAAA,EAAAA,iBAAgB,CACdjW,QAAS,UACTkW,aAAc,IACdhX,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,kBAC1B6B,YAAa5C,EAAKc,cAAcC,EAAAA,EAAAA,mCAGpCrE,EAASyY,EAAa,CAAE/W,SAAS,KASnC,OAAO0X,EACL,kBAAC,IAAD,CACEY,QAxD0BhV,EAwDGgU,EAvDxB,CACLiB,OAAQ,CACN,CACEjC,KAAM,OACNxR,UAAWgE,EAAAA,EAAAA,WACXzF,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,MAC1ByB,YAAY,EACZoU,SAAU,CAAC,CAAElT,KAAM,qBAAsBhC,GAAAA,EAAIyU,MAAO,OAAQC,kBAvB1C,SAAC1B,EAAMyB,EAAOzU,GACtC,OAAOgT,EAAKpX,OAAS,KACjBuZ,EAAAA,EAAAA,IAAW,CAAEnC,KAAAA,IAAQsB,MAAK,YAAc,IAAXrJ,EAAW,EAAXA,KAC3B,GAAoB,IAAhBA,EAAKrP,QAIKqP,EAAKrO,MAAK,SAACT,GAAD,OAAUA,EAAKsY,KAAWzU,GAAM7D,EAAKiZ,eAAiBpC,KAE5E,MAAM1U,EAAKc,cAAcC,EAAAA,EAAAA,uBAG7BsV,QAAQC,OAAOtW,EAAKc,cAAcC,EAAAA,EAAAA,qBAA+B,CAAEgW,OAAQ,WAa3E,CACErC,KAAM,cACNxR,UAAWgE,EAAAA,EAAAA,SACXzF,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,aAC1B6V,SAAU,CACR,CACElT,KAAMsT,EAAAA,EAAAA,WACNC,UAAW,UAwCnBnB,cAAeA,EACflW,SAViB,SAAC+M,GAAD,OACnBS,GAAS8J,EAAAA,EAAAA,IAAUxB,EAAQ,CAAEhB,KAAM/H,EAAK+H,KAAMoC,aAAcnK,EAAK+H,KAAM9R,YAAa+J,EAAK/J,eAAgBoT,MAAK,WAC5GX,IACA3Y,EAAS0Y,OAQTjR,SAAUA,EACVoS,gBAAiBA,EACjBlP,aAAc,SAACnI,GAAD,OACZ,kBAACwF,EAAA,GAAD,UAAuBxF,EAAvB,CAA8ByF,WAAY,CAAEhF,QAASwE,EAAUtE,QAAQ,EAAMU,QAAS,QAASd,MAAO,+BAGxG,MAGNyV,EAAc5V,UAAY,CACxB6V,YAAa5V,IAAAA,UAAoB,CAC/BA,IAAAA,OACAA,IAAAA,MAAgB,CACdrB,SAAUqB,IAAAA,OAAAA,WACVxC,OAAQwC,IAAAA,OACR4X,KAAM5X,IAAAA,WAEPiD,WACH4S,YAAa7V,IAAAA,UAAoB,CAC/BA,IAAAA,OACAA,IAAAA,MAAgB,CACdrB,SAAUqB,IAAAA,OAAAA,WACVxC,OAAQwC,IAAAA,OACR4X,KAAM5X,IAAAA,WAGV8V,YAAa9V,IAAAA,KAAAA,YAGf,wDE3IO,IAAM6X,EAAoC,SAACC,EAAaja,GAC7D,IAAMsP,EAAetP,GAAUA,EAAO,0BAA6B,GAC7Dka,EAAqB5K,EAAYpO,MAAK,qBAAG2K,KAAgB6F,MAAM,KAAK,GAAGhR,SAAS,sBAChFyZ,EAA0B7K,EAAYpO,MAAK,qBAAG2K,KAAgB6F,MAAM,KAAK,GAAGhR,SAAS,gBAE3F,MAAoB,0BAAhBuZ,GAA2CC,EAA2B,4BAEtD,oBAAhBD,GAAqCE,EAChC,wBAGW,oBAAhBF,GAAqCC,EAChC,4BAGF,oPCFHE,EAAkB,SAAC,GAA4D,IAA1DrC,EAA0D,EAA1DA,YAA0D,IAA7CC,YAAAA,OAA6C,MAA/BD,EAA+B,EAAlBE,EAAkB,EAAlBA,YAC3DrV,GAAOC,EAAAA,EAAAA,KAEPwX,GADa9B,EAAAA,EAAAA,aAAXD,OACa5G,MAAM,KACrB4I,GAAW1J,EAAAA,EAAAA,cAAY,SAACwE,GAC5B,OAAqB,IAAjBiF,EAAMna,QACDqa,EAAAA,EAAAA,GAAiBnF,EAAOiF,EAAM,IAGhCA,EAAMna,UAEf,GAAoC4C,EAAAA,EAAAA,WAAS,GAA7C,eAAOU,EAAP,KAAmBgX,EAAnB,KACA,GAAgD1X,EAAAA,EAAAA,UAASwX,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACM1K,GAAWC,EAAAA,EAAAA,eACX3Q,GAAWgC,EAAAA,EAAAA,gBAEjBgJ,EAAAA,EAAAA,YAAU,WACJ+P,GAASC,EACXI,EAAoBJ,GACXD,GAA0B,IAAjBA,EAAMna,SACxB+R,EAAAA,EAAAA,IAAUoI,EAAM,IACbzB,MAAK,SAACJ,GAAD,OAAUkC,EAAoBlC,EAAKkB,iBAD3C,OAES,SAAC9Q,GAAD,eAAWoH,GAASoJ,EAAAA,EAAAA,IAAgB,CAAEjW,QAAS,SAAUd,MAAO,qBAAsBmD,YAAaoD,MAAAA,GAAF,UAAEA,EAAO+R,cAAT,iBAAE,EAAgB,UAAlB,aAAE,EAAoBC,eAEjI,CAACN,EAAUD,IAEd,IAKMtT,EAAW,kBAAMzH,EAASyY,EAAa,CAAE/W,SAAS,KACxD,OAAKyZ,EAKH,kBAAC,EAAAxX,MAAD,CACEC,UAAU,OACV,aAAW,cACX2X,OACE,kBAAC,EAAA5W,YAAD,KACE,kBAAC,EAAAL,MAAD,CAAOC,WAAS,GACd,kBAAC,EAAAC,UAAD,KACE,kBAAC,KAAD,CAAyBiH,KAAK,KAAK+P,MAAO,CAAEC,KAAM,cAEpD,kBAAC,EAAAjX,UAAD,KACE,kBAAC,EAAA+B,KAAD,CAAMC,UAAU,MAAMlD,EAAKc,cAAcC,EAAAA,EAAAA,wBAKjDlB,QAAM,EACNU,QAAQ,QACRZ,QAASwE,EACT1D,QAAS,CACP,kBAAC,EAAAC,OAAD,CAAQE,WAAYA,EAAYzD,IAAI,SAASoD,QAAQ,SAASmD,KAAK,SAAShC,GAAG,2BAA2Bb,QA9B/F,WACfwV,QAAQ+B,IAAIX,EAAM1V,KAAI,SAACL,GAAD,OAAQ0L,GAASiL,EAAAA,EAAAA,IAAW3W,QAAOsU,MAAK,kBAAMX,OACpE3Y,EAAS0Y,KA6BFpV,EAAKc,cAAcC,EAAAA,EAAAA,UAEtB,kBAAC,EAAAL,OAAD,CAAQvD,IAAI,SAASoD,QAAQ,OAAOmD,KAAK,SAAS7C,QAASsD,GACxDnE,EAAKc,cAAcC,EAAAA,EAAAA,WAIxB,kBAAC,EAAAM,YAAD,KACE,kBAAC,EAAA4B,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GACf,kBAAC,KAAD,UACMpC,EAAAA,EAAAA,gCADN,CAEE3D,OAAQ,CACNkb,OAAQ,SAAC5Y,GAAD,OAAU,gCAASA,IAC3BgV,KAAMmD,EACNjI,MAAO6H,EAAMna,YAInB,kBAAC,EAAAgE,SAAD,CACEI,GAAG,uBACHD,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,8BAC1BQ,WAAYX,EACZY,SAAU,kBAAMoW,GAAc,SAACW,GAAD,OAAWA,UA9CxC,MAqDXf,EAAgBlY,UAAY,CAC1B6V,YAAa5V,IAAAA,UAAoB,CAC/BA,IAAAA,OACAA,IAAAA,MAAgB,CACdrB,SAAUqB,IAAAA,OAAAA,WACVxC,OAAQwC,IAAAA,OACR4X,KAAM5X,IAAAA,WAEPiD,WACH4S,YAAa7V,IAAAA,UAAoB,CAC/BA,IAAAA,OACAA,IAAAA,MAAgB,CACdrB,SAAUqB,IAAAA,OAAAA,WACVxC,OAAQwC,IAAAA,OACR4X,KAAM5X,IAAAA,WAGV8V,YAAa9V,IAAAA,KAAAA,YAGf,iECvHO,IAAMsW,EAAe,SAACrD,EAAOkD,GAClC,MAEIlD,EADFnG,YADF,IACiBoL,MAAAA,OADjB,MACyB,CAAE9K,KAAM,IADjC,EACuCJ,EADvC,EACuCA,aAEvC,OAAIA,MAAAA,OAAA,EAAAA,EAActD,QAASyM,EAClBnJ,EAGFkL,EAAM9K,KAAKpH,MAAK,qBAAG0D,OAAoByM,MAGnCiC,EAAmB,SAACnF,EAAOkD,GAAR,uBAAmBG,EAAarD,EAAOkD,UAAvC,aAAmB,EAA6BoB,i+BCFzE,IAAMhG,EAAa,SAAC0H,EAAoBvP,EAAM0D,EAAM3M,GAAjC,IAAuCyY,EAAvC,uDAAsD,GAAtD,OACxB9L,EAAK1P,QAAO,SAACC,EAAD,GAAwD,IAAhDgW,EAAgD,EAAhDA,oBAAqBrI,EAA2B,EAA3BA,WAAY6N,EAAe,EAAfA,SACnD,EAAmC7N,EAAWiE,MAAM,KAApD,eAAO6J,EAAP,KAAgBjV,EAAhB,KAAsBuI,EAAtB,KACA,MAAO,GAAP,eACK/O,GADL,CAEE,CACE+L,KAAM4B,EACN6F,MAAO,CACLiI,EACAjV,EACAuI,GAHG,eAICuM,EACA,CACE3N,EAAW/M,SAAS,oBAAsBoV,EAAoB5V,OAAS,EACrE,kBAAC,EAAAiF,SAAD,CAAUpF,IAAI,wBACZ,kBAAC6B,EAAA,EAAD,CAASL,GAAIia,EAAAA,EAAAA,0BAAAA,KAAAA,QAAiD,UAAW3P,GAAM7K,QAAQ,gBAAiByM,IACrGgO,GAAAA,CAAQ3F,EAAoBnR,KAAI,SAAC+W,GAAD,OAAgBA,EAAWC,gBAAgBtb,UAAQH,SAIxF,0BAAMgD,UAAU,yBAAyBN,EAAKc,cAAcC,EAAAA,EAAAA,iBAGhE,IAhBD,CAiBH,kBAAC,EAAAwB,SAAD,CAAUpF,IAAG,UAAKwb,EAAL,cACX,kBAACK,EAAA,EAAD,CAAYC,KAAMP,EAAUhV,MAAMwV,EAAAA,EAAAA,IAAcR,QAGpD/H,SAAUC,QAAQ6H,MAAAA,OAAD,EAACA,EAAclT,MAAK,qBAAG0D,OAAoB4B,WAG/D,KAEQsO,EAAqC,CAChDtM,WAAYuM,EAAAA,GACZ5Q,oBAAqB,GACrB6Q,iBAAiB,EACjBC,cAAe,kBAAM,MACrBC,WAAY,GACZvc,QAAS,CACP8L,aAAc,GACdqF,UAAW,GACXC,WAAY,IAEdG,WAAW,EACXJ,UAAW,GACXC,WAAY,IAEDoL,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAA6B,6BAC7BC,EAAc,cACdC,EAAc,cAEdC,EAAkB,kBACzBC,GAAe,eAClBR,GAAiB,SAAChH,EAAO3F,GAAR,cAA6B2F,GAA7B,IAAoC3F,WAAY,EAAF,KAAO2F,EAAM3F,YAAeA,SADzE,SAElB4M,GAAqB,SAACjH,EAAD,OAAUG,EAAV,EAAUA,UAAV,cAAgCH,GAAhC,IAAuChK,oBAAqBmK,QAF/D,SAGlB+G,GAAoB,SAAClH,EAAD,OAAU6G,EAAV,EAAUA,gBAAV,cAAsC7G,GAAtC,IAA6C6G,gBAAAA,QAH/C,SAIlBM,GAAsB,SAACnH,GAAD,cAAiBA,GAAjB,IAAwBhK,oBAAqB,GAAI6Q,iBAAiB,QAJtE,SAKlBO,GAA6B,SAACpH,EAAD,OAAU8G,EAAV,EAAUA,cAAeC,EAAzB,EAAyBA,WAAzB,cAAgD/G,GAAhD,IAAuD8G,cAAAA,EAAeD,iBAAiB,EAAME,WAAAA,QALxG,SAMlBM,GAAc,SAACrH,EAAOxV,GAAR,cAA0BwV,GAA1B,IAAiCxV,QAAS,EAAF,KAAOwV,EAAMxV,SAAYA,SAN7D,SAOlB8c,GAAc,SAACtH,GAAD,cAAiBA,GAAjB,IAAwBjE,WAAYiE,EAAMjE,gBAPtC,SAQlBwL,GAAkB,SAACvH,EAAD,OAAU5C,EAAV,EAAUA,MAAUhR,GAApB,4BAAwC4T,GAAU5T,GAAlD,IAA2DiO,WAAY,EAAF,KAAO2F,EAAM3F,YAAb,IAAyB+C,MAAAA,SAR9F,GAURqK,EAAyB,SAACzH,EAAD,GAAgC,IAAtB9O,EAAsB,EAAtBA,KAAS+O,GAAa,YACpE,OAAKuH,EAAgBtW,GAIdsW,EAAgBtW,GAAM8O,EAAOC,GAH3BD,+GCnEL0H,GAA2B,SAAC,GAAsB,IAApBC,EAAoB,EAApBA,cAC5Bna,GAAOC,EAAAA,EAAAA,KACPmN,GAAWC,EAAAA,EAAAA,eACjB,OACE,oCACE,kBAAC,EAAA+M,WAAD,KACE,kBAAC,EAAAC,eAAD,CAAgB9Q,MAAM,QAAQ+Q,KAAMC,GAAAA,KACpC,kBAAC,EAAA7Q,MAAD,CAAOC,aAAa,KAAKxB,KAAK,MAC3BnI,EAAKc,cAAcC,EAAAA,EAAAA,+BAEtB,kBAAC,EAAAyZ,eAAD,MACA,kBAACxb,EAAA,EAAD,CAASL,GAAIia,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,UAAWuB,IAC5D,kBAAC,EAAAzZ,OAAD,CAAQG,QAAS,kBAAMuM,GAASiC,EAAAA,EAAAA,IAAU8K,MAAkBna,EAAKc,cAAcC,EAAAA,EAAAA,WAOzF,YAEAmZ,GAAyB5a,UAAY,CACnC6a,cAAe5a,IAAAA,OAAAA,6nBC3BjB,IAAMkb,GAAiB,SAAC,GAAmB,MAAjBpS,EAAiB,EAAjBA,WAGxB,OAFuBqS,EAAAA,EAAAA,YAAWC,IAA1BnW,WAIJ,kBAAC,EAAAoW,SAAD,KACE,kBAAC,EAAAC,QAAD,CAAS1S,KAAK,QAKb,yBAAK7H,UAAU,QAAQ,CAAC,CAAC,MAAK+H,MAAAA,GAAN,UAAMA,EAAa,UAAnB,aAAM,EAAkB,QAGzDoS,GAAenb,UAAY,CACzB+I,WAAY9I,IAAAA,OAGd,oGCvBA,qiGAAA8J,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+0BAmBA,IAAMhC,GAAe,SAACnI,GAAD,OAAW,kBAAC,MAAD,UAAqBA,EAArB,CAA4B4F,kBAAkB,MAEjEgW,GAAkB,CAC7B,wBAAyB3N,GAAAA,EACzB,wBAAyB4N,GAAAA,EACzB,iBAAkBC,GAAAA,EAClBC,OCpBsC,WACtC,IAAMjb,GAAOC,EAAAA,EAAAA,KAEb,GADoBmE,EAAAA,GAAAA,WAOJmE,WAAWnL,OALZsX,EADf,EACE,aACoB9R,EAFtB,EAEE,oBACyB4F,EAH3B,EAGE,yBACwB0K,EAJ1B,EAIE,wBACsBgI,EALxB,EAKE,sBAGF,OACE,kBAAC,EAAA9Z,MAAD,CAAOH,WAAS,GACd,kBAAC,EAAAka,UAAD,KACE,kBAAC,EAAA9Z,YAAD,KACE,kBAAC,EAAAqI,MAAD,CAAOC,aAAa,KAAKxB,KAAK,KAAK7H,UAAU,cAC1CN,EAAKc,cAAcC,EAAAA,EAAAA,kBAI1B,kBAAC,EAAAoa,UAAD,CAAW7a,UAAU,8BACnB,kBAAC,EAAA8S,KAAD,CAAMnS,WAAS,GACb,kBAAC,EAAAoS,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAAnY,KAAD,CAAM3C,UAAU,aAAa4C,UAAWC,EAAAA,aAAAA,IACrCnD,EAAKc,cAAcC,EAAAA,EAAAA,YAGxB,kBAAC,EAAAsS,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAAnY,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBuR,IAEpC,kBAAC,EAAArB,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAAnY,KAAD,CAAM3C,UAAU,aAAa4C,UAAWC,EAAAA,aAAAA,IACrCnD,EAAKc,cAAcC,EAAAA,EAAAA,mBAGxB,kBAAC,EAAAsS,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAAnY,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GAAiBP,IAEpC,kBAAC,EAAAyQ,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAAnY,KAAD,CAAM3C,UAAU,aAAa4C,UAAWC,EAAAA,aAAAA,IACrCnD,EAAKc,cAAcC,EAAAA,EAAAA,oBAGxB,kBAAC,EAAAsS,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAA/Z,YAAD,CAAa6B,UAAWC,EAAAA,aAAAA,GACrBqF,EAAoBzG,KAAI,SAAC8I,EAAY7I,GAAb,OACvB,kBAAC,EAAAiB,KAAD,CAAM9F,IAAK6E,GAAX,IAAoB6I,EAAW5B,KAA/B,UAILiS,GACC,kBAAC,aAAD,KACE,kBAAC,EAAA7H,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAAnY,KAAD,CAAM3C,UAAU,aAAa4C,UAAWC,EAAAA,aAAAA,IACrCnD,EAAKc,cAAcC,EAAAA,EAAAA,uBAGxB,kBAAC,EAAAsS,SAAD,CAAU+H,KAAM,GACd,kBAAC,EAAA/Z,YAAD,CAAa6B,UAAWC,EAAAA,aAAAA,GACrB+P,EAAoBnR,KAAI,qBAAGoM,UAA0BpM,KAAI,SAACmK,EAAUlK,GAAX,OAAqB,kBAAC,EAAAiB,KAAD,CAAM9F,IAAK6E,GAAX,IAAoBkK,EAApB,mBDpCpFyO,IAAiCU,EAAAA,EAAAA,eAAc,CAC1DC,SAAS,EACT9W,YAAY,EACZwB,WAAOR,IAGH+V,GAA0B,SAAC,GAAa,IAAX3F,EAAW,EAAXA,KAC3B5V,GAAOC,EAAAA,EAAAA,KACb,GAAwDC,EAAAA,EAAAA,WAAS,GAAjE,eAAOsb,EAAP,KAA6BC,EAA7B,KACA,GAA0Cvb,EAAAA,EAAAA,UAAS,IAAnD,eAAOia,EAAP,KAAsBuB,EAAtB,KACMhf,GAAWif,EAAAA,EAAAA,KACXvO,GAAWC,EAAAA,EAAAA,eACjB,GAAoDnN,EAAAA,EAAAA,UAAS,CAC3Dob,SAAS,EACT9W,YAAY,EACZwB,WAAOR,EACPoW,UAAU,IAJZ,eAAOC,EAAP,KAA2BC,EAA3B,KAMMC,GAAYxG,EAAAA,EAAAA,QAAOyG,SAASC,cAAc,QAI1CvF,GAASwF,EAAAA,EAAAA,UAAQ,kBEzCI,SAACH,GAC5B,IAAMI,GAAQC,EAAAA,GAAAA,MACRpc,GAAOqc,EAAAA,GAAAA,GAAW,CAAEC,OAAAA,GAAAA,EAAQvb,SAAUwb,IAAoBJ,GAChE,MAAO,CACLxF,OAAQ,CACN,CACEzT,UAAW,SACXwR,KAAM,SACN8H,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,WAAY,CAAC,aACbld,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,gBAC1Bgb,UAAAA,EACApF,OAAQ,CACN,CACEjC,KAAM,kBACNjV,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,gBAC1B6b,aAAcxU,GAAAA,EACdyU,SAAU,YAAgB,IAAbzf,EAAa,EAAbA,OACX,OAAOga,EAAAA,GAAAA,GAAkC,kBAAmBha,IAE9DuZ,OAAQ,CACN,CACEzT,UAAW,wBACXwR,KAAM,2BAIZ,CACEA,KAAM,wBACNjV,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,4BAC1B6b,aAAcxI,GAAAA,EACdyI,SAAU,YAAgB,IAAbzf,EAAa,EAAbA,OACX,OAAOga,EAAAA,GAAAA,GAAkC,wBAAyBha,IAEpEuZ,OAAQ,CACN,CACEzT,UAAW,aACXwR,KAAM,mBACNjT,MAAO,2BAAIzB,EAAKc,cAAcC,EAAAA,EAAAA,oCAEhC,CACEmC,UAAW,wBACXwR,KAAM,2BAIZ,CACEA,KAAM,4BACNjV,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,qBAC1B8b,SAAU,SACVlG,OAAQ,CACN,CACEzT,UAAW,aACXwR,KAAM,mBACNjT,MAAO,2BAAIzB,EAAKc,cAAcC,EAAAA,EAAAA,2BAEhC,CACEmC,UAAW,iBACXwR,KAAM,iBACNkC,SAAU,CACR,yEAAS,IACDkG,OAAM,gBAAG3O,EAAH,EAAGA,UAAH,OAAmBA,GAAaA,EAAU7Q,OAAS,UAC3DkI,EACAxF,EAAKc,cAAcC,EAAAA,EAAAA,+BAKjC,CACE2T,KAAM,SACNjV,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,eAC1B6b,aAAcnC,GACd9D,OAAQ,CACN,CACEzT,UAAW,SACXwR,KAAM,gBFpCSqI,CAAchB,EAAUvG,WAAU,KAE/D9N,EAAAA,EAAAA,YAAU,WACRgU,EAAiB9F,EAAK3M,UAGxBvB,EAAAA,EAAAA,YAAU,WACRqU,EAAUvG,QAAQwH,OAASxB,IAC1B,CAACA,IAEJ,IAIMyB,EAAsB,WAC1BvgB,EAASkc,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,UAAWhD,EAAK3M,QAG3DrJ,EAAQ,oCAAG,WAAOsd,GAAP,8EACkB1U,EAA+D0U,EAAxF,yBAAgEhK,EAAwBgK,EAA1C,kBAEhDC,EAHS,kBAGmBvH,EAAKnG,OAAO1N,KAAI,SAACqb,GAAD,OAAYA,EAAOvS,gBAHtD,OAGsErC,EAAoBzG,KAAI,SAACqb,GAAD,OAAYA,EAAOnU,UAC1HoU,EAJS,SAKVzH,GALU,IAMbnG,QAAQ,OACHjH,EAAoBvL,QACrB,SAACC,EAAD,OAAc2N,EAAd,EAAQ5B,KAAkB2D,EAA1B,EAA0BA,SAA1B,wBACK1P,IADL,OAEK,CAAC2N,GAAD,eAAgB+B,EAAS7D,QAAO,SAACuU,GAAD,OAAcH,EAAsBrf,SAASwf,QAAWvb,KAAI,SAAC8I,GAAD,MAAiB,CAC9GA,WAAAA,EACAqI,oBAAqBA,MAAAA,GAAAA,EAAqB3N,MAAK,SAACsJ,GAAD,OAAOA,EAAEhE,aAAeA,KACnE,CACE,CACEkO,gBAAiB,CACf5b,IAAK,mBAAF,OAAqB0N,EAAWiE,MAAM,KAAK,IAC9C7C,UAAW,KACXxO,MAAOyV,MAAAA,OAAF,EAAEA,EAAqB3N,MAAK,SAACsJ,GAAD,OAAOA,EAAEhE,aAAeA,KAAYsD,aAI3E,WAGRyH,EAAKnG,SAGT8N,YAAa3H,EAAK2H,YAAc/U,EAAoBlL,SAGtDwe,GAAsB,SAACvD,GAAD,UAAC,MAAeA,GAAhB,IAAsB/T,YAAY,OACxD4I,GAASoQ,EAAAA,EAAAA,IAAWrD,EAAekD,IAChCrH,MAAK,kBAAM8F,GAAsB,SAACvD,GAAD,UAAC,MAAeA,GAAhB,IAAsB/T,YAAY,EAAO8W,SAAS,EAAMM,UAAU,UADtG,OAES,WACLE,GAAsB,SAACvD,GAAD,UAAC,MAAeA,GAAhB,IAAsB/T,YAAY,EAAO8W,SAAS,EAAOM,UAAU,OACzFlf,EAASkc,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,UAAWhD,EAAK3M,UApCpD,2CAAH,sDAwCd,OACE,kBAAC0R,GAA+B8C,SAAhC,CACEhgB,MAAK,SAAOoe,GAAP,IAA2B6B,eA/Db,SAAC1X,GAAD,OAAW8V,GAAsB,SAACvD,GAAD,UAAC,MAAeA,GAAhB,IAAsBvS,MAAAA,QA+D1B2X,iBA9D3B,SAACrC,GAAD,OAAaQ,GAAsB,SAACvD,GAAD,UAAC,MAAeA,GAAhB,IAAsB+C,QAAAA,QA8DZsC,YA7DlD,SAAChC,GAAD,OAAcE,GAAsB,SAACvD,GAAD,UAAC,MAAeA,GAAhB,IAAsBqD,SAAAA,QA6DKiC,gBAAiBjI,EAAKnG,UAErG,kBAAC,KAAD,CACE/L,KAAM1D,EAAKc,cAAcC,EAAAA,EAAAA,YACzBlB,OAAQ2b,EACR3T,cAAe,kBAAM4T,GAAwB,IAC7C3T,gBAAiBmV,IAElBpB,EAAmBD,SAClBC,EAAmBP,QACjB,kBAAC,EAAAwC,OAAD,CACEre,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,gBAC1BlB,QAAM,EACNke,MAAO,CACL,CACErJ,KAAM,UACNxR,UAAW,IAAIgX,GAAyB,CAAEC,cAAAA,IAC1C6D,gBAAgB,IAGpBre,QAASsd,IAET,KAEJ,kBAAC,IAAD,CACElB,UAAWA,EACXrF,OAAQA,EACR5P,aAAc,CAAE1J,QAAQ,GACxBiK,aAAcA,GACdyO,cAAe,CACb,YAAaF,EAAK3M,KAClB,YAAa,SACb,YAAa2M,EAAKkB,aAClB,mBAAoBlB,EAAKhT,aAE3BqE,gBAAe,SAAOA,GAAAA,IAAoB6T,IAC1Clb,SAAUA,EACVuE,SAAU,SAAC/G,GAAW,MAChBA,IAAU,UAAAA,EAAO,gCAAP,eAAiCE,QAAS,EAvFhEme,GAAwB,GA0FdwB,SASd1B,GAAwB5Z,aAAe,CACrCiU,KAAM,IAGR2F,GAAwBjc,UAAY,CAClCsW,KAAMrW,IAAAA,QAGR,omBG1IA,IAEM0e,GAAkB,SAACvR,EAAakJ,EAAMsI,GAC1C,OACE,kBAAC,KAAD,UACOA,EAASnd,EAAAA,EAAAA,uCAAkDA,EAAAA,EAAAA,sCADlE,CAEE3D,OAAM,OACJ+gB,EAAG,SAACze,GAAD,OAAU,2BAAIA,KACbwe,EACA,CACExR,YAAAA,GAEF,CACE7B,WAAY6B,IAPd,IASJkJ,KAAMA,EAAKlB,WAMb0J,GAAc,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,mBACfre,GAAOC,EAAAA,EAAAA,KACb,GAAkC+N,EAAAA,EAAAA,cAChC,SAACwE,GAAD,MAAY,CACVoD,KAAMpD,EAAMnG,YAAYE,aACxBD,gBAAiBkG,EAAMnG,YAAYC,mBAErC2B,EAAAA,cALM2H,EAAR,EAAQA,KAAMtJ,EAAd,EAAcA,gBAQR5P,GAAWif,EAAAA,EAAAA,KACjB,GAGI5I,EAAAA,EAAAA,YAAWkH,EAAwBd,GAHvC,sBACItM,EADJ,EACIA,WAAYrE,EADhB,EACgBA,oBAAqB6Q,EADrC,EACqCA,gBAAiBC,EADtD,EACsDA,cAAeC,EADrE,EACqEA,WAAYvc,EADjF,EACiFA,QAASuR,EAD1F,EAC0FA,UAAWJ,EADrG,EACqGA,UAAWC,EADhH,EACgHA,WAC9GkQ,EAFF,KAKA,GAA8Dpe,EAAAA,EAAAA,WAAS,GAAvE,eAAOqe,EAAP,KAAgCC,EAAhC,KAEMpR,GAAWC,EAAAA,EAAAA,eAEXG,EAAU,CACd,CAAE/N,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,cAC5B,CAAEtB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,eAC5B,CAAEtB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,YAC5B,CACEtB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,qBAC1B0d,WAAY,EACVC,EAAAA,EAAAA,MAAK,CACHC,QAAS3e,EAAKc,cAAcC,EAAAA,EAAAA,gCAC5B6d,UAAW5e,EAAKc,cAAcC,EAAAA,EAAAA,oCAIpC,CAAEtB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,YAAsB0d,WAAY,EAACI,EAAAA,EAAAA,WAAU,OAMrEC,EAAwBT,EAC1B,CAAC,IACD,CAAC,4CAA6C,4CAA6C,KAE/F3W,EAAAA,EAAAA,YAAU,WAAM,MACd,GAAInK,OAAOZ,KAAKiZ,GAAMtY,OAAS,EAAG,CAChC,MAAkCC,OAAO4V,QACvCyC,EAAKnG,OAAOxS,QACV,cAA+C,IAA5CkR,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,WACZ,EAD6C,EAAjBvD,WACeiE,MAAM,KAAjD,eAAS5C,EAAT,KAAmBD,EAAnB,KACA,MAAO,CACLkC,UAAWA,EAAUrQ,SAASoO,GAAYiC,EAA/B,kBAA+CA,GAA/C,CAA0DjC,IACrEkC,WAAYA,EAAWtQ,SAASmO,GAAamC,EAAjC,kBAAkDA,GAAlD,CAA8DnC,OAG9E,CAAEkC,UAAW,GAAIC,WAAY,MAE/BnR,QAAO,SAACC,EAAD,sBAAOC,EAAP,KAAYM,EAAZ,eAAC,MAA4BP,GAA7B,cAAmCC,EAAMM,EAAMsE,KAAI,SAAClE,GAAD,MAAW,CAAE4D,MAAO5D,EAAMJ,MAAOI,UAAa,IAXlGsQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAYnBkQ,EAAiB,CAAE5a,KAAMqW,EAAiB5L,UAAAA,EAAWC,WAAAA,EAAYwB,MAAOgG,EAAKnG,OAASmG,EAAKnG,OAAOnS,OAAS,IAG7GkhB,EAA2B5I,MAAAA,GAAD,UAACA,EAAMnG,cAAP,aAAC,EAAclK,MAAK,SAACwZ,GAAD,OAAOA,EAAElU,WAAW/M,SAAS,yBAC1E,CAAC8X,IAEJ,IAAMoJ,GACJpJ,GAAQA,EAAKnG,QACRmG,EAAKnG,QAAU,IACb1G,QAAO,YAAoB,IAC1B,EAD0B,EAAjB8B,WAC6CiE,MAAM,KAA5D,eAAOpE,EAAP,KAAoBwB,EAApB,KAA8BD,EAA9B,KACQnD,EAAwC9L,EAAxC8L,aAAcqF,EAA0BnR,EAA1BmR,UAAWC,EAAepR,EAAfoR,WACjC,SACGtF,EAAaxL,OAAS,IAAIwL,EAAahL,SAAS4M,QAChDyD,EAAU7Q,OAAS,IAAI6Q,EAAUrQ,SAASoO,QAC1CkC,EAAW9Q,OAAS,IAAI8Q,EAAWtQ,SAASmO,OAGhDlK,KAAI,SAAC7E,GAAD,UAAC,IAAW+L,KAAM/L,EAAI2N,YAAe3N,GAArC,IAA0Cwb,SAAU9C,EAAK8C,cAChE,GAEAuG,GAAoB,SAACvS,GACzB,IAAMwS,EAAsBxS,EAAYzP,QAAO,SAACC,EAAK8S,GAAN,wBAAmB9S,GAAnB,CAAwB8S,EAAK/G,SAAO,IACnF,OAAOmE,GAAS+R,EAAAA,EAAAA,IAAsBvJ,EAAMsJ,IAAsBlJ,MAAK,WACrE5I,GAASiC,EAAAA,EAAAA,IAAUuG,EAAK3M,OACxBqV,EAAiB,CAAE5a,KAAM+V,EAAoB9G,UAAW,SA8DtD5C,GAAoB,SAAChH,GAAD,OACxBA,EAAO9L,QACL,SAACC,EAAK8S,GAAN,MAAgB,CACd,GAAI,SACC9S,MAAAA,OADL,EACKA,EAAM,KADX,cAEG8S,GAAO,OAGZ,CAAE,GAAI,MAGJI,GAAY,CAChB3O,MAAO,iCAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,iBACjCH,YAAY,GAGRwe,GAAgB,IACpB3P,OAAQ,GACR3G,aAAc,IACX8M,GAGCvF,GAAqB9S,OAAOH,OAAO,CAAE0L,aAAcsW,GAActW,aAAcsF,WAAAA,EAAYD,UAAAA,IAAa5I,MAC5G,SAAC9H,GAAD,OAAWA,EAAMH,OA5LE,MA8LfqP,GAAOqS,GAAa/M,MAAMpF,EAAWrC,OAAQqC,EAAWrC,OAASqC,EAAWtC,OAElF,OACE,6BAASjK,UAAU,oDAChB+Y,GACC,kBAAC7Z,GAAA,EAAD,CACEE,KAAM6Z,EAAW7Z,KACjBD,MAAO8Z,EAAW9Z,MAClBI,OAAQwZ,EACRvZ,mBAAoByZ,EAAWzZ,mBAC/BH,QAAS,kBAAM2e,EAAiB,CAAE5a,KAAMgW,EAAmBL,iBAAiB,KAC5EzZ,SAAU,WACR0Z,IACAgF,EAAiB,CAAE5a,KAAMiW,OAI/B,kBAAC,EAAA0F,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOrM,KAAMsM,EAAAA,EAAAA,uBAAAA,KAAmCC,QAAS,kBAAC,GAAD,CAAyB3f,QAAQ,EAAM+V,KAAMA,OAExG,kBAAC,IAAD,CACEpI,QAAS+Q,EAA0B/Q,EAAUA,EAAQzE,QAAO,SAAC0W,GAAD,OAAOA,EAAEhgB,QAAUO,EAAKc,cAAcC,EAAAA,EAAAA,wBAClG0P,KAAMK,EAAWyN,EAAyB3I,MAAAA,OAA1B,EAA0BA,EAAM3M,KAAM0D,GAAM3M,GAC5D0f,eAAgB9J,EAAK+J,YAASna,EA1Gb,iBAAM,CAC3B,CACE/F,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,QAC1BF,QAAS,SAAC+e,EAAQC,EAAQhV,GAAjB,OACPyT,EAAiB,CACf5a,KAAMkW,EACNN,cAAe,kBAAM2F,GAAkB,CAACpU,KACxC0O,WAAY,CACV9Z,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,0BAC1BrB,KAAMue,GAAgBpT,EAAW5B,KAAM2M,GAAM,GAC7C9V,mBAAoBE,EAAKc,cAAcC,EAAAA,EAAAA,yBAiG3C4L,KAAMA,GACNoE,YAAY,GACZpQ,OAAO,yBACP8M,UAAW,gBAAGlD,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OAAuB8T,EAAiB,CAAE5a,KAAM8V,EAAgBjP,MAAAA,EAAOC,OAAAA,KAClF8F,cAAesF,EAAK+J,OACpBvO,gBAlKkB,SAACC,GACvBiN,EAAiB,CAAE5a,KAAM+V,EAAoB9G,UAAWtB,EAAa7I,GAAqBzG,KAAI,kBAAe,CAAEkH,KAAjB,EAAGA,YAkK7FkI,YAAa3I,EACboJ,WACEvB,GACI,WACEiO,EAAiB,CAAE5a,KAAMoW,UAE3BtU,EAEN0L,eAAgB,YAA6C,IAA1CpI,EAA0C,EAA1CA,aAAcqF,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC1CkQ,EAAiB,UACf5a,KAAMmW,GACF/Q,EAAe,CAAEA,aAAAA,GAAiB9L,EAAQ8L,cAC1CqF,EAAY,CAAEA,UAAAA,GAAcnR,EAAQmR,WACpCC,EAAa,CAAEA,WAAAA,GAAepR,EAAQoR,cAG9C0R,eAjHiB,kBACrBzB,EACI,GACA,CACE,kBAACrf,EAAA,EAAD,CAASL,GAAIia,EAAAA,EAAAA,uBAAAA,KAAAA,QAA8C,UAAWhD,EAAK3M,MAAO9L,IAAI,sBAAsBmD,UAAU,qBACpH,kBAAC,EAAAI,OAAD,CAAQH,QAAQ,UAAU,aAAW,kBAClCP,EAAKc,cAAcC,EAAAA,EAAAA,kBAGxB,CACEU,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,eAC1B7B,MAAO,CACLoB,UAAW,qBAEbO,QAAS,WACPnE,EAASkc,EAAAA,EAAAA,uBAAAA,KAAAA,QAA8C,UAAWhD,EAAK3M,SAG3E,CACExH,MAAOzB,EAAKc,cAAcC,EAAAA,EAAAA,QAC1B7B,MAAO,CACL0B,YAAa4H,EAAoBlL,OAAS,GAE5CuD,QAAS,WACP,IAAMkf,EAA8BvX,EAAoBlL,OAAS,EACjEghB,EAAiB,CACf5a,KAAMkW,EACNN,cAAe,kBAAM2F,IAAkB,OAAIzW,KAC3C+Q,WAAY,CACV9Z,MAAOO,EAAKc,cAAcif,EAA8Bhf,EAAAA,EAAAA,0BAAqCA,EAAAA,EAAAA,0BAC7FrB,KAAMue,GACJ8B,EAA8BvX,EAAoBlL,OAASkL,EAAoB,GAAGS,KAClF2M,EACApN,EAAoBlL,OAAS,GAE/BwC,mBAAoBE,EAAKc,cAAcif,EAA8Bhf,EAAAA,EAAAA,kBAA6BA,EAAAA,EAAAA,yBA+E5GiL,UAAWM,EACXO,WAAU,SACLA,GADK,IAER+C,MAAOoP,GAAa1hB,SAEtBiU,YAAavR,EAAKc,cAAcC,EAAAA,EAAAA,aAChC0Q,cAAezR,EAAKc,cAAcC,EAAAA,EAAAA,YAClCif,WAAY,CACVvgB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,mBAC1B6B,YAAakc,GAEf9hB,QAAS,CACP,CACEG,IAAK,eACLM,MAAuC,IAAhCT,EAAQ8L,aAAaxL,OAAe,GAAKN,EAAQ8L,aACxDgJ,YAAa9R,EAAKc,cAAcC,EAAAA,EAAAA,YAAsB,CAAE5D,IAAK6C,EAAKc,cAAcC,EAAAA,EAAAA,aAAsByQ,gBACtG9N,KAAM,QACNiN,SAAUZ,GAAkB/S,EAAQ8L,cACpCiJ,OAAQ,CACN,CACErO,KAAM0b,GAActW,aAAaxL,OAAS,EAAI,WAAa,QAC3D0U,MACEoN,GAActW,aAAaxL,OAAS,EAChC8hB,GAActW,aAAamJ,MAAM,EAAG1D,OAAY/I,EApQ/C,IAoQ2EzD,KAAI,SAAClE,GAAD,MAAW,CAAE4D,MAAO5D,EAAMJ,MAAOI,MACjH,CAACuS,OAIb,CACEjT,IAAK,YACLM,MAAoC,IAA7BT,EAAQmR,UAAU7Q,OAAe,GAAKN,EAAQmR,UACrD2D,YAAa9R,EAAKc,cAAcC,EAAAA,EAAAA,YAAsB,CAAE5D,IAAK6C,EAAKc,cAAcC,EAAAA,EAAAA,cAAuByQ,gBACvG9N,KAAM,QACNiN,SAAUZ,GAAkB/S,EAAQmR,WACpC4D,OAAQ,CACN,CACErO,KAAMyK,EAAU7Q,OAAS,EAAI,WAAa,QAC1C0U,MAAO7D,EAAU7Q,OAAS,EAAI6Q,EAAU8D,MAAM,EAAG1D,OAAY/I,EAlRtD,IAkRoF,CAAC4K,OAIlG,CACEjT,IAAK,aACLM,MAAqC,IAA9BT,EAAQoR,WAAW9Q,OAAe,GAAKN,EAAQoR,WACtD0D,YAAa9R,EAAKc,cAAcC,EAAAA,EAAAA,YAAsB,CAAE5D,IAAK6C,EAAKc,cAAcC,EAAAA,EAAAA,WAAoByQ,gBACpG9N,KAAM,QACNiN,SAAUZ,GAAkB/S,EAAQoR,YACpC2D,OAAQ,CACN,CACErO,KAAM0K,EAAW9Q,OAAS,EAAI,WAAa,QAC3C0U,MAAO5D,EAAW9Q,OAAS,EAAI8Q,EAAW6D,MAAM,EAAG1D,OAAY/I,EA/RxD,IA+RsF,CAAC4K,QAKtGgC,QAAQ,uBAMhBgM,GAAY9e,UAAY,CACtB+e,mBAAoB9e,IAAAA,MAGtB,qpBCnTA,IAAM0gB,GAAO,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACRlgB,GAAOC,EAAAA,EAAAA,KACPuH,GAASC,EAAAA,GAAAA,KACT/K,GAAWif,EAAAA,EAAAA,KACjB,GAA0Czb,EAAAA,EAAAA,WAAS,GAAnD,eAAOigB,EAAP,KAAuBC,EAAvB,KACA,GAAkElgB,EAAAA,EAAAA,WAAS,GAA3E,eAAOmgB,EAAP,KAAkCC,EAAlC,KACA,GAA4B3K,EAAAA,EAAAA,aAApBD,EAAR,EAAQA,OAAQ6K,EAAhB,EAAgBA,QAChB,GAA0HvS,EAAAA,EAAAA,cACxH,SAACwE,GAAD,gCAAC,IACCoD,KAAMpD,EAAMnG,YAAYE,aACxBD,gBAAiBkG,EAAMnG,YAAYC,iBAC/BiU,GAAW,CAAEC,MAAOhO,EAAMiO,aAAaC,gBAH7C,IAIEC,gBAAe,UAAEnO,EAAMiO,aAAaG,mBAArB,aAAE,EAAgC3X,KACjD4X,iBAAiB,UAAArO,EAAMnG,mBAAN,mBAAmBoL,aAAnB,eAA0B5K,aAAcuM,EAAAA,GACzD0H,cAAc,UAAAtO,EAAMnG,mBAAN,mBAAmBoL,aAAnB,eAA0Bza,UAAW,GACnD+jB,kBAAkB,UAAAvO,EAAMiO,oBAAN,mBAAoB1O,cAApB,eAA4BlF,aAAcuM,EAAAA,GAC5D4H,eAAe,UAAAxO,EAAMiO,oBAAN,mBAAoB1O,cAApB,eAA4B/U,UAAW,OAExDiR,EAAAA,cAXM2H,EAAR,EAAQA,KAAM4K,EAAd,EAAcA,MAAOlU,EAArB,EAAqBA,gBAAiBuU,EAAtC,EAAsCA,gBAAiBC,EAAvD,EAAuDA,aAAcC,EAArE,EAAqEA,iBAAkBC,EAAvF,EAAuFA,cAAeL,EAAtG,EAAsGA,gBAchGM,GAAajT,EAAAA,EAAAA,cAAY,SAACwE,GAI9B,OADIA,EADFnG,YAAerG,QAEAkb,EAAAA,MAGbC,GAAcnT,EAAAA,EAAAA,cAAY,SAACwE,GAI/B,OADIA,EADFiO,aAAgBza,QAEDkb,EAAAA,MAGb9T,GAAWC,EAAAA,EAAAA,eACXI,EAAY,WAEhB,GADAL,GAASiC,EAAAA,EAAAA,IAAUqG,IACf6K,EACF,GAAgB,mBAAZA,EACFnT,GAASgU,EAAAA,EAAAA,IAAWb,QACf,CACL,GAAII,EAGF,OAFAvT,GAASiU,EAAAA,EAAAA,IAAmBV,EAAiB,KAC7CnZ,EAAO8Z,YAAYX,GACZ,kBAAMnZ,EAAO8Z,iBAAY9b,IAEhC4H,GAASmU,EAAAA,EAAAA,UAMjB7Z,EAAAA,EAAAA,YAAU,WAGR,OAFA+F,IACAjG,EAAO8Z,YAAY5L,GACZ,kBAAMlO,EAAO8Z,iBAAY9b,MAC/B,CAACkQ,EAAQ6K,EAASI,KAErBjZ,EAAAA,EAAAA,YAAU,WACkB,KAAtBkO,MAAAA,OAAA,EAAAA,EAAM2H,cAA+C,MAA1B3H,MAAAA,OAAA,EAAAA,EAAM4L,kBAAqD,MAA3B5L,MAAAA,OAAA,EAAAA,EAAM6L,mBAAjE,MAA4F7L,GAAAA,EAAM+J,QACpGW,GAA6B,KAE9B,CAAC1K,IAEJ,IAAM8L,EAAkB,kBACtBnB,EACI,CACE9gB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,QAC1BpC,IAAIgjB,EAAAA,EAAAA,KAAa9iB,EAAAA,EAAAA,GAAgB+Z,EAAAA,EAAAA,OAAAA,MAAwBmI,EAAkBC,IAE7E,CACEvhB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,OAC1BpC,IAAIgjB,EAAAA,EAAAA,KAAa9iB,EAAAA,EAAAA,GAAgB+Z,EAAAA,EAAAA,MAAAA,MAAuBiI,EAAiBC,KARzD,eAWlBK,GAAeZ,IAAwB,mBAAZA,EAA+BI,EAAkBQ,GAC5EX,EACE,CACE,CACE/gB,MAAO+gB,GAASA,EAAM9L,KACtB/V,GAAIia,EAAAA,EAAAA,sBAAAA,KAAAA,QAA6C,UAAW2H,GAC5DvU,UAAWwU,GAASA,EAAMoB,SAG9B,MAACpc,GACH2b,IAAgBZ,EAChB,GACA,CAAC,CAAE9gB,MAAOO,EAAKc,cAAcC,EAAAA,EAAAA,cAAwBmB,UAAU,MAvB7C,OAyBlBif,IAAgBZ,EAChB,CACE,CACE9gB,MAAO6M,OAAkB9G,EAAYyb,GAAarL,MAAAA,OAAA,EAAAA,EAAMkB,gBAAgBlB,MAAAA,OAAtB,EAAsBA,EAAMlB,MAAO1U,EAAKc,cAAcC,EAAAA,EAAAA,aACxGmB,UAAU,IAGd,MAGAzC,GAAS6M,GAAmBsJ,EAAOA,EAAKkB,cAAgBlB,EAAKlB,UAAOlP,EACpE5C,GAAe0J,GAAmBsJ,EAAOA,EAAKhT,iBAAc4C,EAC5Dqc,EAAgB,CACpB,kBAAC,EAAAC,aAAD,CACE5e,UACE,kBAAClE,EAAA,EAAD,CAAS6B,QAAS,kBAAMuf,GAAgB,IAAQzhB,GAAIia,EAAAA,EAAAA,oBAAAA,KAAAA,QAA2C,UAAWlD,IACvG1V,EAAKc,cAAcC,EAAAA,EAAAA,OAGxB5D,IAAI,cAEN,kBAAC,EAAA2kB,aAAD,CACE5e,UACE,kBAAClE,EAAA,EAAD,CAAS6B,QAASqf,EAAUvhB,GAAIia,EAAAA,EAAAA,sBAAAA,KAAAA,QAA6C,UAAWlD,IACrF1V,EAAKc,cAAcC,EAAAA,EAAAA,SAGxBT,UAAU,sBACVnD,IAAI,iBAIR,OACE,kBAAC,EAAAoF,SAAD,MACI4e,GAAgBZ,IAAYU,EA8D5B,kBAAC,EAAA1e,SAAD,KACE,6BAASjC,UAAU,yCACjB,kBAAC,KAAoBohB,MAEvB,kBAAC,KAAD,CACEjiB,MAAK,UAAK0hB,EAAc,OAAS,QAA5B,cACLve,YAAa,CAAC,GAAD,OAAIue,EAAc,OAAS,QAA3B,oBAA8CA,EAAczL,EAAS6K,EAArE,qBACb9f,QAAS,CACP,kBAAC,EAAAC,OAAD,CACEvD,IAAI,cACJmD,UAAU,aACVK,OAAO,cACPJ,QAAQ,UACR,aAAW,wBACXM,QAAS,kBAAMnE,GAAU,KAExBsD,EAAKc,cAAcC,EAAAA,EAAAA,yBA7E5B,kBAAC,EAAAwB,SAAD,KACE,kBAAC,IAAD,CAAYV,YAAa6f,KACvB,kBAAC,EAAAK,MAAD,KACE,kBAAC,EAAAC,UAAD,KACE,kBAACC,EAAA,EAAD,CAAiBxiB,MAAOA,GAAS,kBAAC,KAAD,MAA6Ba,UAAU,8BAExEgM,GAAmBsJ,IAASA,EAAK+J,QACjC,kBAAC,EAAAqC,UAAD,KACE,kBAAC,EAAAE,SAAD,CACEvhB,OAAO,8BACPwhB,OAAQ,kBAAC,EAAAC,YAAD,CAAa1O,SAAU,SAAC7T,GAAD,OAAYugB,EAAgBvgB,IAAS6B,GAAG,0BACvE7B,OAAQsgB,EACRkC,SAAO,EACPC,SAAS,QACTT,cAAeA,MAKtBjf,GACC,kBAAC,EAAAvB,YAAD,CAAaf,UAAU,iCACrB,kBAAC,EAAA2C,KAAD,CAAMC,UAAU,KAAKN,KAI1B0J,IAAoBsJ,EAAO,kBAAC,KAAD,MAAiB,kBAAC,GAAD,CAAayI,mBAAoBgC,IAC9E,kBAAC,EAAAhB,OAAD,KACE,kBAAC,EAAAC,MAAD,CACErM,KAAM2F,EAAAA,EAAAA,sBAAAA,KACN4G,QACE,qCACIlT,GACA,kBAAC,KAAD,CACE+I,YAAa,WACXjI,GAASmV,EAAAA,EAAAA,IAAuB,SAAK1B,GAAN,IAAuBrW,OAAQ,EAAGxN,QAAS8jB,EAAc0B,eAAe,OAEzGrN,YAAayD,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,UAAWlD,GAC9DN,aAAauM,EAAAA,EAAAA,KAAa9iB,EAAAA,EAAAA,GAAgB+Z,EAAAA,EAAAA,MAAAA,MAAjB,GAAC,MAA+CiI,GAAhD,IAAiErW,OAAQ,IAAKsW,GACvG2B,WAAY7J,EAAAA,EAAAA,sBAAAA,UAMtB,kBAAC,EAAA0G,MAAD,CACErM,KAAM2F,EAAAA,EAAAA,oBAAAA,KACN4G,QACE,qCACIlT,GACA,kBAAC,KAAD,CACE+I,YAAa5H,EACb0H,YAAayD,EAAAA,EAAAA,eAAAA,KAAAA,QAAsC,UAAWlD,GAC9D+M,WAAY7J,EAAAA,EAAAA,oBAAAA,cAmClCqH,GAAK3gB,UAAY,CACf4gB,SAAU3gB,IAAAA,MAGZ,0EChPA,SAAgBmjB,EAAiDC,EAAe,IAAK/jB,EAAU,CAAEgkB,kBAAkB,MACjH,OAAuBF,EAAeC,EAAc/jB","sources":["webpack:///./src/helpers/shared/filters.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/presentational-components/shared/AppLink.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/presentational-components/shared/breadcrumbs.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/smart-components/common/ModalFormTemplate.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/FormButtons.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/common/page-action-route.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/role/add-role/add-permissions-template.js","webpack:///./src/helpers/permission/permission-helper.js","webpack:///./src/redux/actions/permission-action.js","webpack:///./src/smart-components/role/add-role/DisabledRowWrapper.js","webpack:///./src/smart-components/role/add-role/add-permissions.js","webpack:///./src/smart-components/role/add-role/cost-resources.js","webpack:///./src/smart-components/role/add-role/inventory-groups-role-template.js","webpack:///./src/helpers/role/inventory-helper.js","webpack:///./src/smart-components/role/add-role/inventory-groups-role.js","webpack:///./src/redux/actions/inventory-actions.js","webpack:///./src/smart-components/role/edit-role-modal.js","webpack:///./src/hooks/useIsMounted.js","webpack:///./src/smart-components/role/permission-wizard-helper.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/role-selectors.js","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-success.js","webpack:///./src/smart-components/role/add-role-permissions/review-template.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-wizard.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permissions-summary-content.js","webpack:///./src/smart-components/role/add-role-permissions/schema.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/utilities/async-debounce.ts"],"sourcesContent":["export const syncDefaultFiltersWithUrl = (location, navigate, keys, defaults = {}) => {\n  const searchParams = new URLSearchParams(location.search);\n\n  let filters = keys.reduce((acc, key) => {\n    const values = searchParams.getAll(key);\n    return {\n      ...acc,\n      [key]: values.length > 1 ? values : values[0],\n    };\n  }, {});\n\n  Object.keys(defaults).forEach((key) => {\n    const value = defaults[key];\n    filters = {\n      ...filters,\n      [key]: Array.isArray(filters[key])\n        ? [...new Set([...filters[key], ...(Array.isArray(value) ? value : [value])])]\n        : (value?.length > 0 && value) || filters[key],\n    };\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => searchParams.getAll(key).includes(item) || searchParams.append(key, item));\n    } else {\n      searchParams.get(key) || (value && searchParams.set(key, value));\n    }\n  });\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n  return filters;\n};\n\nexport const areFiltersPresentInUrl = (location, keys) => {\n  const searchParams = new URLSearchParams(location.search);\n  return keys.some((key) => searchParams.get(key));\n};\n\nexport const applyFiltersToUrl = (location, navigate, newValues) => {\n  const searchParams = new URLSearchParams(location.search);\n  Object.keys(newValues).forEach((key) => searchParams.delete(key));\n\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n\n    if (Array.isArray(value)) {\n      value.forEach((item) => item && searchParams.append(key, item));\n    } else {\n      value && searchParams.set(key, value);\n    }\n  });\n\n  navigate(\n    {\n      pathname: location.pathname,\n      search: searchParams.toString(),\n    },\n    {\n      replace: true,\n    }\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const mergeToBasename = (to, basename = '/iam/user-access') => {\n  if (typeof to === 'string') {\n    // replace possible \"//\" after basename\n    return `${basename}/${to}`.replaceAll('//', '/');\n  }\n\n  return {\n    ...to,\n    pathname: `${basename}/${to.pathname}`.replaceAll('//', '/'),\n  };\n};\n\nconst AppLink = React.forwardRef((props, ref) => <Link {...props} ref={ref} to={mergeToBasename(props.to, props.linkBasename)} />);\nAppLink.displayName = 'AppLink';\n\nAppLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  linkBasename: PropTypes.string,\n};\n\nexport default AppLink;\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, ModalVariant, Split, SplitItem, Stack, TextContent } from '@patternfly/react-core';\nimport './RemoveModal.scss';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, withCheckbox }) => {\n  const intl = useIntl();\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <Modal\n      className=\"rbac\"\n      title={\n        <div>\n          <ExclamationTriangleIcon className=\"ins-m-alert rbac-c__delete-icon\" /> {title}\n        </div>\n      }\n      isOpen={isOpen}\n      variant={ModalVariant.small}\n      onClose={onClose}\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={withCheckbox && !checked} variant=\"danger\" onClick={onSubmit}>\n          {confirmButtonLabel}\n        </Button>,\n        <Button key=\"cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onClose}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <Stack hasGutter>\n            <TextContent>{text}</TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n      {withCheckbox ? (\n        <Checkbox\n          isChecked={checked}\n          onChange={() => setChecked(!checked)}\n          label={intl.formatMessage(messages.confirmCheckMessage)}\n          id=\"remove-modal-check\"\n          className=\"pf-u-mt-lg\"\n        />\n      ) : null}\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.any,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  withCheckbox: PropTypes.bool,\n};\n\nRemoveModal.defaultProps = {\n  withCheckbox: false,\n};\n\nexport default RemoveModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return breadcrumbs ? (\n    <Breadcrumb>\n      {Object.values(breadcrumbs).map((item, index) =>\n        item.title ? (\n          <BreadcrumbItem key={item.title} isActive={item.isActive}>\n            {(item.to && (\n              <NavLink end to={item.to}>\n                {item.title}\n              </NavLink>\n            )) ||\n              item.title}\n          </BreadcrumbItem>\n        ) : (\n          <BreadcrumbPlaceholder key={index} />\n        )\n      )}\n    </Breadcrumb>\n  ) : null;\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object,\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrumbs';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children, breadcrumbs }) => (\n  <Fragment>\n    {breadcrumbs && (\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs {...breadcrumbs} />\n      </section>\n    )}\n    <PageHeader className=\"rbac-page-header\">{children}</PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool,\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false,\n};\n\nexport const TopToolbarTitle = ({ title, renderTitleTag, description, children }) => (\n  <Fragment>\n    <Flex>\n      <FlexItem className=\"pf-u-mb-sm\">\n        <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n      </FlexItem>\n      <FlexItem alignSelf={{ modifier: 'alignSelfCenter' }}>{renderTitleTag && renderTitleTag()}</FlexItem>\n    </Flex>\n    {description && (\n      <TextContent className=\"rbac-page-header__description\">\n        {typeof description === 'string' ? <Text component={TextVariants.p}>{description}</Text> : description}\n      </TextContent>\n    )}\n    {children}\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  renderTitleTag: PropTypes.func,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n};\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const getResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const getResource = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\n/**\n * This id is requried to submit form by a button outside of the form element\n */\nconst MODAL_FORM_IDENTIFIER = 'modal-form';\nconst CustomFormWrapper = (props) => <Form {...props} id={MODAL_FORM_IDENTIFIER} />;\n\nconst CustomButtons = ({ saveLabel, cancelLabel }) => {\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy>\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-c-form\">\n          <ActionGroup className=\"pf-u-mt-0\">\n            <Button\n              ouiaId=\"primary-save-button\"\n              variant=\"primary\"\n              form={MODAL_FORM_IDENTIFIER}\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {saveLabel}\n            </Button>\n            <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {cancelLabel}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  saveLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n};\n\nCustomButtons.defaultProps = {\n  saveLabel: 'Save',\n  cancelLabel: 'Cancel',\n};\n\nconst ModalFormTemplate = ({ ModalProps, saveLabel, cancelLabel, alert, ...props }) => (\n  <Modal {...ModalProps} footer={<CustomButtons saveLabel={saveLabel} cancelLabel={cancelLabel} />}>\n    {alert?.()}\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n  ...CustomButtons.propTypes,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  const intl = useIntl();\n\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [...selectOptions]\n    : [{ label: intl.formatMessage(messages[isRequired ? 'pleaseChoose' : 'none']) }, ...selectOptions];\n};\n\nconst Select = ({ input, options, isReadOnly, isDisabled, isRequired, ...rest }) => (\n  <FormSelect {...input} {...rest} isDisabled={isDisabled || isReadOnly}>\n    {createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={props.value || props.label} {...props} label={props.label.toString()} /> // eslint-disable-line react/prop-types\n    ))}\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.any,\n      label: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any,\n};\n\nconst Pf4SelectWrapper = ({ label, isRequired, helperText, meta, description, hideLabel, ...rest }) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={rest.id}\n      isValid={!showError}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select label={label} isValid={!showError} isRequired={isRequired} {...rest} />\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool,\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst FormButtons = ({ dirtyFieldsSinceLastSubmit, submitSucceeded, pristine }) => {\n  const { onCancel } = useFormApi();\n  const noChanges = isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  const intl = useIntl();\n  return (\n    <ActionGroup className=\"pf-u-mt-0\">\n      <Button ouiaId=\"primary-submit-button\" type=\"submit\" isDisabled={noChanges} variant=\"primary\">\n        {intl.formatMessage(messages.save)}\n      </Button>\n      <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={() => onCancel()}>\n        {intl.formatMessage(messages.cancel)}\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport FormButtons from './FormButtons';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nconst FormRenderer = ({ formTemplateProps, ...props }) => (\n  <ReactFormRender\n    componentMapper={{\n      [componentTypes.TEXT_FIELD]: TextField,\n      [componentTypes.TEXTAREA]: Textarea,\n      [componentTypes.SELECT]: Pf4SelectWrapper,\n    }}\n    FormTemplate={(props) => <FormTemplate {...formTemplateProps} {...props} FormButtons={FormButtons} />}\n    {...props}\n  />\n);\n\nFormRenderer.propTypes = {\n  formTemplateProps: PropTypes.object,\n};\n\nexport default FormRenderer;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst PageActionRoute = ({ pageAction, children }) => {\n  const chrome = useChrome();\n  useEffect(() => {\n    chrome.appAction(pageAction);\n    return () => chrome.appAction(undefined);\n  }, [pageAction]);\n  return children;\n};\n\nPageActionRoute.propTypes = {\n  pageAction: PropTypes.string.isRequired,\n};\n\nexport default PageActionRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './warningModal.scss';\n\nexport const WarningModal = ({\n  type,\n  isOpen,\n  onModalCancel,\n  onConfirmCancel,\n  customTitle,\n  customDescription,\n  customPrimaryButtonTitle,\n  customSecondaryButtonTitle,\n}) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      title={\n        <span className=\"rbac-c-wizard__cancel-warning-header\">\n          <ExclamationTriangleIcon size=\"md\" className=\"rbac-c-wizard__cancel-warning-header--icon\" />\n          {customTitle || intl.formatMessage(messages.exitItemCreation, { item: type })}\n        </span>\n      }\n      variant={ModalVariant.small}\n      className=\"rbac rbac-c-wizard__cancel-warning\"\n      isOpen={isOpen}\n      onClose={onModalCancel}\n      actions={[\n        <Button ouiaId=\"primary-exit-button\" key=\"confirm\" variant=\"primary\" onClick={onConfirmCancel}>\n          {customPrimaryButtonTitle ?? intl.formatMessage(messages.exit)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onModalCancel}>\n          {customSecondaryButtonTitle ?? intl.formatMessage(messages.stay)}\n        </Button>,\n      ]}\n    >\n      <span>{customDescription || intl.formatMessage(messages.discardedInputsWarning)} </span>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  customTitle: PropTypes.node,\n  customDescription: PropTypes.node,\n  customPrimaryButtonTitle: PropTypes.string,\n  customSecondaryButtonTitle: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onConfirmCancel: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Text, TextContent, Title, Button, Popover, Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './add-role-wizard.scss';\n\nconst AddPermissionTemplate = ({ formFields }) => {\n  const formOptions = useFormApi();\n  const [selectedPermissions, setSelectedPermissions] = useState(formOptions.getState().values['add-permissions-table'] || []);\n  const [alertClosed, setAlertClosed] = useState(false);\n  const notAllowedBasePermissions = formOptions.getState().values['not-allowed-permissions'];\n  const intl = useIntl();\n\n  const unresolvedSplats =\n    formOptions.getState().values?.['copy-base-role']?.applications?.filter((app) => !selectedPermissions?.find(({ uuid }) => uuid.includes(app))) ||\n    [];\n  const addPermissions = formFields[0][0];\n  return (\n    <div className=\"rbac\">\n      {selectedPermissions.length > 0 ? (\n        <div className=\"rbac-c-selected-chips\">\n          <ChipGroup categoryName={intl.formatMessage(messages.selectedPermissions)}>\n            {/* immutable reverse */}\n            {selectedPermissions\n              .reduce((acc, i) => [i, ...acc], [])\n              .map(({ uuid }) => (\n                <Chip key={uuid} color=\"blue\" isTruncated onClick={() => setSelectedPermissions(selectedPermissions.filter((p) => p.uuid !== uuid))}>\n                  {uuid}\n                </Chip>\n              ))}\n          </ChipGroup>\n        </div>\n      ) : null}\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"rbac-c-add-permission-title\">\n        {intl.formatMessage(messages.addPermissions)}\n      </Title>\n      <TextContent>\n        <Text>\n          {intl.formatMessage(messages.selectPermissionsForRole)}\n          {unresolvedSplats.length !== 0 && (\n            <Popover\n              headerContent={intl.formatMessage(messages.onlyGranularPermissions)}\n              bodyContent={intl.formatMessage(messages.noWildcardPermissions)}\n            >\n              <Button variant=\"link\">\n                {intl.formatMessage(messages.whyNotSeeingAllPermissions)} <QuestionCircleIcon />\n              </Button>\n            </Popover>\n          )}\n        </Text>\n      </TextContent>\n      {notAllowedBasePermissions?.length > 0 && !alertClosed ? (\n        <Alert\n          variant=\"default\"\n          isInline\n          title={`${intl.formatMessage(messages.followingPermissionsCannotBeAdded)} ${notAllowedBasePermissions.join(', ')}`}\n          actionClose={<AlertActionCloseButton onClose={() => setAlertClosed(true)} />}\n        />\n      ) : null}\n      {[\n        [\n          {\n            ...addPermissions,\n            props: {\n              ...addPermissions.props,\n              selectedPermissions,\n              setSelectedPermissions,\n            },\n          },\n        ],\n      ]}\n    </div>\n  );\n};\n\nAddPermissionTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default AddPermissionTemplate;\n","import { getPermissionApi } from '../shared/user-login';\n\nconst accessApi = getPermissionApi();\n\nexport async function listPermissions(\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  excludeGlobals,\n  excludeRoles,\n  allowedOnly,\n  options\n) {\n  return await accessApi.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    excludeGlobals,\n    excludeRoles,\n    allowedOnly,\n    options\n  );\n}\n\nexport async function listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options) {\n  return await accessApi.listPermissionOptions(field, limit, offset, application, resourceType, verb, undefined, allowedOnly, options);\n}\n","import * as ActionTypes from '../action-types';\nimport * as PermissionsHelper from '../../helpers/permission/permission-helper';\n\nexport const listPermissions = ({\n  limit,\n  offset,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  exclude_roles,\n  allowed_only,\n  options,\n}) => ({\n  type: ActionTypes.LIST_PERMISSIONS,\n  payload: PermissionsHelper.listPermissions(\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    exclude_globals,\n    exclude_roles,\n    allowed_only,\n    options\n  ),\n});\n\nconst fieldToAction = {\n  application: ActionTypes.LIST_APPLICATION_OPTIONS,\n  resource_type: ActionTypes.LIST_RESOURCE_OPTIONS,\n  verb: ActionTypes.LIST_OPERATION_OPTIONS,\n};\n\nexport const listPermissionOptions = ({ field, limit, offset, application, resourceType, verb, allowedOnly, options }) => ({\n  type: fieldToAction[field],\n  payload: PermissionsHelper.listPermissionOptions(field, limit, offset, application, resourceType, verb, allowedOnly, options),\n});\n\nexport const expandSplats = ({\n  limit = 1000,\n  offset = 0,\n  orderBy,\n  application,\n  resourceType,\n  verb,\n  permission,\n  exclude_globals = true,\n  options,\n}) => ({\n  type: ActionTypes.EXPAND_SPLATS,\n  payload: PermissionsHelper.listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, exclude_globals, options),\n});\n\nexport const resetExpandSplats = () => ({\n  type: ActionTypes.RESET_EXPAND_SPLATS,\n  payload: {\n    data: [],\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '@patternfly/react-core';\nimport { RowWrapper } from '@patternfly/react-table';\n\nexport const DisabledRowWrapper = ({ row, ...props }) =>\n  row.disableSelection ? (\n    <Tooltip content={row.disabledContent} exitDelay={1500} entryDelay={1500}>\n      <RowWrapper className=\"rbac-c-disabled-row\" row={row} {...props} />\n    </Tooltip>\n  ) : (\n    <RowWrapper row={row} {...props} />\n  );\n\nDisabledRowWrapper.propTypes = {\n  props: PropTypes.object,\n  row: PropTypes.object,\n};\n","import React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport debouncePromise from '@redhat-cloud-services/frontend-components-utilities/debounce';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { listPermissions, listPermissionOptions, expandSplats, resetExpandSplats } from '../../../redux/actions/permission-action';\nimport { getResourceDefinitions } from '../../../redux/actions/cost-management-actions';\nimport { fetchRole } from '../../../redux/actions/role-actions';\nimport { DisabledRowWrapper } from './DisabledRowWrapper';\nimport { isEqual } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport usePermissions from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst selector = ({\n  permissionReducer: {\n    permission,\n    isLoading,\n    options: { application, operation, resource },\n    expandSplats,\n    isLoadingExpandSplats,\n  },\n  roleReducer: { isRecordLoading, selectedRole },\n  costReducer: { resourceTypes },\n}) => ({\n  permissions: permission.data.map(({ application, resource_type: resource, verb, permission, requires } = {}) => ({\n    application,\n    resource,\n    operation: verb,\n    uuid: permission,\n    requires,\n  })),\n  pagination: permission.meta,\n  isLoading: isLoading || isRecordLoading,\n  baseRole: selectedRole,\n  applicationOptions: application.data.filter((app) => app !== '*'),\n  resourceOptions: resource.data.filter((app) => app !== '*'),\n  operationOptions: operation.data.filter((app) => app !== '*'),\n  expandedPermissions: expandSplats.data.map(({ permission }) => permission),\n  isLoadingExpandSplats,\n  resourceTypes: resourceTypes.data,\n});\n\nconst AddPermissionsTable = ({ selectedPermissions, setSelectedPermissions, ...props }) => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { hasAccess } = usePermissions('cost-management', ['cost-management:*:*']);\n  const columns = [intl.formatMessage(messages.application), intl.formatMessage(messages.resourceType), intl.formatMessage(messages.operation)];\n\n  const fetchData = (apiProps) =>\n    dispatch(\n      listPermissions({\n        ...apiProps,\n        ...(existingRoleId ? { exclude_roles: existingRoleId } : {}),\n        allowed_only: true,\n      })\n    );\n  const fetchOptions = (apiProps) => dispatch(listPermissionOptions({ ...apiProps, allowedOnly: true }));\n  const {\n    permissions,\n    isLoading,\n    pagination,\n    baseRole,\n    applicationOptions,\n    resourceOptions,\n    operationOptions,\n    expandedPermissions,\n    isLoadingExpandSplats,\n    resourceTypes,\n  } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  // TODO: use reducer when cleaning this code\n  const [filters, setFilters] = useState({ applications: [], resources: [], operations: [] });\n  const roleType = formOptions.getState().values['role-type']; // create/copy\n  const existingRoleId = formOptions.getState().values['role-uuid'];\n  const [isToggled, setIsToggled] = useState(false);\n  const [filterBy, setFilterBy] = useState('');\n  const [value, setValue] = useState();\n  const maxFilterItems = 10;\n\n  const getResourceType = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1]);\n  const createRows = (permissions) =>\n    permissions.map(({ application, resource, operation, uuid, requires }) => ({\n      uuid: `${application}:${resource}:${operation}`,\n      requires,\n      cells: [\n        {\n          title: application,\n        },\n        resource,\n        operation,\n      ],\n      selected: Boolean(selectedPermissions && selectedPermissions.find((row) => row.uuid === uuid)),\n      disableSelection: application === 'cost-management' && ((getResourceType(uuid) || { count: 0 }).count === 0 || !hasAccess),\n      disabledContent: (\n        <div>\n          {intl.formatMessage(hasAccess ? messages.configureResourcesForPermission : messages.noCostManagementPermissions)}{' '}\n          {hasAccess ? <a href=\"./settings/sources\">{intl.formatMessage(messages.configureCostSources)}</a> : null}\n        </div>\n      ),\n    }));\n\n  const debouncedGetApplicationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'application',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetResourceOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({\n          field: 'resource_type',\n          limit: 50,\n          application: applications.join(),\n          resourceType: resources.join(),\n          verb: operations.join(),\n        }),\n      2000\n    ),\n    []\n  );\n  const debouncedGetOperationOptions = useCallback(\n    debouncePromise(\n      ({ applications, resources, operations }) =>\n        fetchOptions({ field: 'verb', limit: 50, application: applications.join(), resourceType: resources.join(), verb: operations.join() }),\n      2000\n    ),\n    []\n  );\n\n  useEffect(() => {\n    const baseRoleUuid = formOptions.getState().values['copy-base-role']?.uuid;\n    if (roleType === 'copy' && baseRoleUuid) {\n      dispatch(fetchRole(baseRoleUuid));\n    }\n\n    formOptions.change('has-cost-resources', false);\n    fetchData(pagination);\n    fetchOptions({ field: 'application', limit: 50 });\n    fetchOptions({ field: 'resource_type', limit: 50 });\n    fetchOptions({ field: 'verb', limit: 50 });\n\n    return () => dispatch(resetExpandSplats());\n  }, []);\n\n  useEffect(() => {\n    hasAccess && dispatch(getResourceDefinitions());\n  }, [hasAccess]);\n\n  useEffect(() => {\n    debouncedGetResourceOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.applications]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetOperationOptions(filters);\n  }, [filters.resources]);\n\n  useEffect(() => {\n    debouncedGetApplicationOptions(filters);\n    debouncedGetResourceOptions(filters);\n  }, [filters.operations]);\n\n  useEffect(() => {\n    input.onChange(selectedPermissions);\n  }, [selectedPermissions]);\n\n  useEffect(() => {\n    if (\n      !baseRole ||\n      roleType !== 'copy' ||\n      formOptions.getState().values['base-permissions-loaded'] ||\n      selectedPermissions.length > 0 ||\n      formOptions.getState().values['copy-base-role']?.uuid !== baseRole?.uuid ||\n      isLoadingExpandSplats ||\n      isLoading\n    ) {\n      return;\n    }\n\n    let notAllowed = [];\n\n    const basePermissions =\n      baseRole?.access.filter((item) => {\n        if (applicationOptions.includes(item?.permission?.split(':')[0])) {\n          return true;\n        }\n        notAllowed.push(item);\n\n        return false;\n      }) || [];\n    formOptions.change(\n      'not-allowed-permissions',\n      notAllowed.map(({ permission }) => permission)\n    );\n    if (expandedPermissions.length === 0 && typeof isLoadingExpandSplats === 'undefined') {\n      const applications = [...new Set(basePermissions.map(({ permission }) => permission.split(':')[0]))];\n      dispatch(expandSplats({ application: applications.join() }));\n    } else {\n      const patterns = basePermissions.map(({ permission }) => permission.replace('*', '.*'));\n      setSelectedPermissions(() =>\n        expandedPermissions\n          .filter((p) => p.split(':')[0] !== 'cost-management' || (getResourceType(p) || { count: 0 }).count !== 0) // filter disabled rows\n          .filter((p) => patterns.some((f) => p.match(f))) // filter permissions with unresolved splats\n          .map((permission) => ({ uuid: permission }))\n      );\n      formOptions.change('base-permissions-loaded', true);\n    }\n  }, [permissions, baseRole]);\n\n  const setCheckedItems = (newSelection) => {\n    const newSelected = newSelection(selectedPermissions)\n      .filter(({ uuid, application }) => application !== 'cost-management' || getResourceType(uuid)?.count > 0)\n      .map(({ uuid, requires }) => ({ uuid, requires }));\n\n    setSelectedPermissions(isEqual(newSelected, selectedPermissions) ? [] : newSelected);\n  };\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const preparedFilterItems = {\n    applications: [...applicationOptions].filter((item) => item.includes(filterBy)).map((app) => ({ label: app, value: app })),\n    resources: [...resourceOptions].filter((item) => item.includes(filterBy)).map((res) => ({ label: res, value: res })),\n    operations: [...operationOptions].filter((item) => item.includes(filterBy)).map((op) => ({ label: op, value: op })),\n  };\n\n  const emptyItem = {\n    label: <div>{intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const filterItemOverflow = preparedFilterItems[Object.keys(preparedFilterItems)[value ? value : 0]].length > maxFilterItems;\n  return (\n    <div className=\"rbac-c-permissions-table\">\n      <TableToolbarView\n        columns={columns}\n        isSelectable={true}\n        isCompact={true}\n        borders={false}\n        rows={createRows(permissions)}\n        data={permissions}\n        filterValue=\"\"\n        noData={permissions?.length === 0}\n        noDataDescription={[intl.formatMessage(messages.permissionNotDisplayedDescription)]}\n        fetchData={({ limit, offset, applications, resources, operations }) => {\n          fetchData({\n            limit,\n            offset,\n            application: (applications || filters.applications).join(),\n            resourceType: (resources || filters.resources).join(),\n            verb: (operations || filters.operations).join(),\n          });\n        }}\n        setFilterValue={({ applications, resources, operations }) => {\n          setFilters({\n            ...filters,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        isLoading={isLoading || isLoadingExpandSplats}\n        pagination={{ ...pagination, count: pagination.count }}\n        checkedRows={selectedPermissions}\n        setCheckedItems={setCheckedItems}\n        titlePlural={intl.formatMessage(messages.permissions).toLowerCase()}\n        titleSingular={intl.formatMessage(messages.permission).toLowerCase()}\n        showMoreTitle={intl.formatMessage(isToggled ? messages.seeLess : messages.seeMore)}\n        onFilter={(filterBy) => setFilterBy(filterBy)}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                setIsToggled(() => !isToggled);\n              }\n            : undefined\n        }\n        onChange={(e, value) => {\n          setFilterBy('');\n          setValue(value);\n        }}\n        value={value}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: preparedFilterItems.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.applications.length > 0\n                    ? [...preparedFilterItems.applications].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: preparedFilterItems.resources.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.resources.length > 0\n                    ? [...preparedFilterItems.resources].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: preparedFilterItems.operations.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  preparedFilterItems.operations.length > 0\n                    ? [...preparedFilterItems.operations].slice(0, isToggled ? undefined : maxFilterItems)\n                    : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        isFilterable={true}\n        rowWrapper={DisabledRowWrapper}\n        tableId=\"add-role-permissions\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nAddPermissionsTable.propTypes = {\n  selectedPermissions: PropTypes.array,\n  setSelectedPermissions: PropTypes.func,\n};\n\nexport default AddPermissionsTable;\n","import React, { useEffect, useReducer } from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Select, SelectOption, SelectVariant, Grid, GridItem, Text, TextVariants, FormGroup, Tooltip } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { getResourceDefinitions, getResource } from '../../../redux/actions/cost-management-actions';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './cost-resources.scss';\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }) => ({\n  resourceTypes: resourceTypes.data,\n  resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: !prevState.isOpen,\n        },\n      };\n    case 'select':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.selected.includes(action.selection)\n            ? prevState.selected.filter((item) => item !== action.selection)\n            : [...prevState.selected, action.selection],\n        },\n      };\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: prevState.options.map((option) => option.value),\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    case 'setOptions':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          options: action.options,\n          filteredOptions: action.options,\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filteredOptions: prevState.options.filter(({ value }) => value.includes(action.filtervalue)),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst CostResources = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const fetchData = (apiProps) => dispatch(getResourceDefinitions(apiProps));\n  const fetchResource = (apiProps) => dispatch(getResource(apiProps));\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector(selector, shallowEqual);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const permissions = formOptions.getState().values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('cost-management'));\n\n  const [state, dispatchLocaly] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission.uuid]: {\n          selected: [],\n          options: [],\n          filteredOptions: [],\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n  const onToggle = (key, isOpen) => dispatchLocaly({ type: 'toggle', key, isOpen });\n  const clearSelection = (key) => dispatchLocaly({ type: 'clear', key });\n  const onSelect = (event, selection, selectAll, key) =>\n    selectAll ? dispatchLocaly({ type: 'selectAll', selection, key }) : dispatchLocaly({ type: 'select', selection, key });\n\n  const permissionToResource = (permission) => resourceTypes.find((r) => r.value === permission.split(':')?.[1])?.path.split('/')?.[5];\n\n  useEffect(() => {\n    (formOptions.getState().values['resource-definitions'] || []).map(({ permission, resources }) =>\n      resources.map(\n        (resource) =>\n          permissions.find((item) => item?.uuid === permission) && dispatchLocaly({ type: 'select', selection: resource, key: permission })\n      )\n    );\n    fetchData();\n    formOptions.change('has-cost-resources', true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      const resourcePaths = [\n        ...new Set(permissions.map((permission) => resourceTypes.find((r) => r.value === permission.uuid.split(':')?.[1])?.path)),\n      ].filter((path) => path); // remove undefined\n      resourcePaths.map((path) => fetchResource(path));\n    }\n  }, [resourceTypes]);\n\n  useEffect(() => {\n    if (!isLoadingResources) {\n      permissions.map((p) => dispatchLocaly({ type: 'setOptions', key: p.uuid, options: resources[permissionToResource(p.uuid)] || [] }));\n    }\n  }, [isLoadingResources]);\n\n  useEffect(() => {\n    const resourceDefinitions = Object.entries(state).map(([permission, resources]) => ({ permission, resources: resources.selected }));\n    input.onChange(resourceDefinitions);\n    formOptions.change('resource-definitions', resourceDefinitions);\n  }, [state]);\n\n  // eslint-disable-next-line react/prop-types\n  const makeRow = ({ uuid: permission }) => {\n    const options = state[permission].filteredOptions;\n    return (\n      <React.Fragment>\n        <GridItem md={4} sm={12}>\n          <Tooltip content={<div>{permission}</div>}>\n            <FormGroup label={permission.replace(/^cost-management:/, '')} isRequired></FormGroup>\n          </Tooltip>\n        </GridItem>\n        <GridItem md={8} sm={12}>\n          <Select\n            className=\"rbac-m-cost-resource-select\"\n            variant={SelectVariant.checkbox}\n            typeAheadAriaLabel={intl.formatMessage(messages.selectState)}\n            onToggle={(isOpen) => {\n              dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: '' });\n              onToggle(permission, isOpen);\n            }}\n            onSelect={(event, selection) => {\n              onSelect(event, selection, selection === intl.formatMessage(messages.selectAll, { length: options.length }), permission);\n            }}\n            onClear={() => clearSelection(permission)}\n            selections={state[permission].selected}\n            isOpen={state[permission].isOpen}\n            onFilter={(e) => e && dispatchLocaly({ type: 'setFilter', key: permission, filtervalue: e.target.value })}\n            aria-labelledby={permission}\n            placeholderText={intl.formatMessage(messages.selectResources)}\n            hasInlineFilter\n          >\n            {[\n              <SelectOption key={0} value={intl.formatMessage(messages.selectAll, { length: options.length })} />,\n              ...options.map((option, index) => <SelectOption key={index + 1} value={option.value} />),\n            ]}\n          </Select>\n        </GridItem>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={4} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem md={8} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text\">\n          {intl.formatMessage(messages.resourceDefinitions)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default CostResources;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst InventoryGroupsRoleTemplate = ({ formFields }) => {\n  const intl = useIntl();\n  return (\n    <div className=\"rbac\">\n      <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-lg\">\n        {intl.formatMessage(messages.reviewDetails)}\n      </Title>\n      {formFields}\n    </div>\n  );\n};\n\nInventoryGroupsRoleTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default InventoryGroupsRoleTemplate;\n","import { getInventoryGroupsApi } from '../shared/user-login';\n\nconst inventoryGroupsApi = getInventoryGroupsApi();\n\nexport const getInventoryGroups = async (apiProps) => {\n  return await inventoryGroupsApi.getInventoryGroups(apiProps);\n};\n","import React, { useEffect, useState, useReducer } from 'react';\nimport { Select, SelectOption, SelectVariant, Grid, GridItem, Text, TextVariants, FormGroup, Tooltip } from '@patternfly/react-core';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport { fetchInventoryGroups } from '../../../redux/actions/inventory-actions';\nimport './cost-resources.scss';\nimport messages from '../../../Messages';\n\nconst selector = ({ inventoryReducer: { resourceTypes } }) => ({\n  resourceTypes: resourceTypes.data,\n});\n\nconst reducer = (state, action) => {\n  const prevState = state[action.key];\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          isOpen: !prevState.isOpen,\n        },\n      };\n    case 'select':\n      if (prevState.selected.some((item) => item?.id === action.processedSelection?.id)) {\n        return {\n          ...state,\n          [action.key]: {\n            ...prevState,\n            selected: prevState.selected.filter((item) => item.id !== action.processedSelection?.id),\n          },\n        };\n      } else if (action.processedSelection?.id !== undefined && action.processedSelection?.name !== undefined) {\n        return {\n          ...state,\n          [action.key]: {\n            ...prevState,\n            selected: [...prevState.selected, action.processedSelection],\n          },\n        };\n      } else {\n        return state;\n      }\n    case 'selectAll':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [...prevState.options],\n        },\n      };\n    case 'setFilter':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          filteredOptions: prevState.options.filter(({ value }) => value.includes(action.filterValue)),\n        },\n      };\n    case 'clear':\n      return {\n        ...state,\n        [action.key]: {\n          ...prevState,\n          selected: [],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst InventoryGroupsRole = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n  const [optionMap, setOptionMap] = useState({});\n  const fetchData = (apiProps) => dispatch(fetchInventoryGroups(apiProps));\n  const { resourceTypes } = useSelector(selector, shallowEqual);\n  const permissions = formOptions.getState().values['add-permissions-table'].filter(({ uuid }) => uuid.split(':')[0].includes('inventory'));\n\n  const onToggle = (key, isOpen) => dispatchLocally({ type: 'toggle', key, isOpen });\n  const onSelect = (event, selection, selectAll, key) => {\n    const processedSelection = { name: selection, id: optionMap[selection] };\n\n    if (selectAll) {\n      for (const option of resourceTypes) {\n        const processedOption = { name: option.name, id: option.id };\n        dispatchLocally({ type: 'select', processedSelection: processedOption, key });\n      }\n    } else {\n      dispatchLocally({ type: 'select', processedSelection, key });\n    }\n  };\n  const clearSelection = (key) => dispatchLocally({ type: 'clear', key });\n\n  const [state, dispatchLocally] = useReducer(\n    reducer,\n    permissions.reduce(\n      (acc, permission) => ({\n        ...acc,\n        [permission.uuid]: {\n          selected: [],\n          options: [],\n          filteredOptions: [],\n          isOpen: false,\n        },\n      }),\n      {}\n    )\n  );\n\n  useEffect(() => {\n    fetchData();\n    formOptions.change('inventory-group-permissions', []);\n  }, []);\n\n  useEffect(() => {\n    const options = resourceTypes && resourceTypes.length ? resourceTypes : [];\n    const newOptionMap = options.reduce((acc, option) => {\n      acc[option.name] = option.id;\n      return acc;\n    }, {});\n\n    setOptionMap(newOptionMap);\n  }, [resourceTypes]);\n\n  useEffect(() => {\n    const groupsPermissionsDefinition = Object.entries(state).map(([permission, { selected }]) => ({ permission, groups: selected }));\n    input.onChange(groupsPermissionsDefinition);\n    formOptions.change('inventory-group-permissions', groupsPermissionsDefinition);\n  }, [state]);\n\n  const makeRow = ({ uuid: permission }) => {\n    const options = resourceTypes && resourceTypes.length ? resourceTypes : [];\n\n    return (\n      <React.Fragment key={`${permission}`}>\n        <GridItem md={4} sm={12}>\n          <FormGroup label={permission} isRequired />\n        </GridItem>\n        <GridItem md={8} sm={12}>\n          <Tooltip content={<div>{intl.formatMessage(messages.inventoryGroupsTooltip)}</div>}>\n            <Select\n              className=\"rbac-m-cost-resource-select\"\n              variant={SelectVariant.checkbox}\n              typeAheadAriaLabel={intl.formatMessage(messages.inventoryGroupsTypeAheadLabel)}\n              aria-labelledby={permission}\n              selections={state[permission].selected.map(({ name }) => name)}\n              placeholderText={intl.formatMessage(messages.selectGroups)}\n              onSelect={(event, selection) =>\n                onSelect(event, selection, selection === intl.formatMessage(messages.selectAll, { length: options?.length ?? 0 }), permission)\n              }\n              onToggle={(isOpen) => {\n                dispatchLocally({ type: 'setFilter', key: permission, filterValue: '' });\n                onToggle(permission, isOpen);\n              }}\n              onClear={() => clearSelection(permission)}\n              onFilter={(e) => e && dispatchLocally({ type: 'setFilter', key: permission, filtervalue: e.target.value })}\n              isOpen={state[permission].isOpen}\n              hasInlineFilter\n            >\n              {[\n                <SelectOption key={`${permission}-all`} value={intl.formatMessage(messages.selectAll, { length: options?.length })} />,\n                ...(options || []).map((option, index) => <SelectOption key={`${permission}-${index + 1}`} value={option?.name} />),\n              ]}\n            </Select>\n          </Tooltip>\n        </GridItem>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={4} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text pf-u-mt-sm\">\n          {intl.formatMessage(messages.permissions)}\n        </Text>\n      </GridItem>\n      <GridItem md={8} className=\"rbac-m-hide-on-sm\">\n        <Text component={TextVariants.h4} className=\"rbac-bold-text pf-u-mt-sm\">\n          {intl.formatMessage(messages.groupDefinition)}\n        </Text>\n      </GridItem>\n      {permissions.map(makeRow)}\n    </Grid>\n  );\n};\n\nexport default InventoryGroupsRole;\n","import * as ActionTypes from '../action-types';\nimport * as InventoryHelper from '../../helpers/role/inventory-helper';\n\nexport const fetchInventoryGroups = () => ({\n  type: ActionTypes.FETCH_INVENTORY_GROUP,\n  payload: InventoryHelper.getInventoryGroups(),\n});\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useIntl } from 'react-intl';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport FormRenderer from '../common/form-renderer';\nimport useIsMounted from '../../hooks/useIsMounted';\nimport { roleSelector } from './role-selectors';\nimport { fetchRole, fetchRoles } from '../../helpers/role/role-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { patchRole } from '../../redux/actions/role-actions';\nimport messages from '../../Messages';\n\nconst EditRoleModal = ({ cancelRoute, submitRoute = cancelRoute, afterSubmit }) => {\n  const intl = useIntl();\n  const isMounted = useIsMounted();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { roleId } = useParams();\n  const role = useSelector((state) => roleSelector(state, roleId));\n  const [initialValues, setInitialValues] = useState(role);\n\n  useEffect(() => {\n    !initialValues &&\n      fetchRole(roleId).then((role) => {\n        if (isMounted.current) {\n          setInitialValues(role);\n        }\n      });\n  }, [roleId]);\n\n  const validationPromise = (name, idKey, id) => {\n    return name.length < 150\n      ? fetchRoles({ name }).then(({ data }) => {\n          if (data.length === 0) {\n            return undefined;\n          }\n\n          const taken = data.some((item) => item[idKey] !== id && item.display_name === name);\n          if (taken) {\n            throw intl.formatMessage(messages.roleWithNameExists);\n          }\n        })\n      : Promise.reject(intl.formatMessage(messages.maxCharactersWarning, { number: 150 }));\n  };\n\n  const createEditRoleSchema = (id) => {\n    return {\n      fields: [\n        {\n          name: 'name',\n          component: componentTypes.TEXT_FIELD,\n          label: intl.formatMessage(messages.name),\n          isRequired: true,\n          validate: [{ type: 'validate-role-name', id, idKey: 'uuid', validationPromise }],\n        },\n        {\n          name: 'description',\n          component: componentTypes.TEXTAREA,\n          label: intl.formatMessage(messages.description),\n          validate: [\n            {\n              type: validatorTypes.MAX_LENGTH,\n              threshold: 150,\n            },\n          ],\n        },\n      ],\n    };\n  };\n\n  const uniqueNameValidator = asyncDebounce((value, idKey, id, validationPromise) =>\n    !value || value.length === 0 ? Promise.reject(intl.formatMessage(messages.required)) : validationPromise(value, idKey, id)\n  );\n\n  const validatorMapper = {\n    'validate-role-name':\n      ({ idKey, id, validationPromise }) =>\n      (value) =>\n        uniqueNameValidator(value, idKey, id, validationPromise),\n  };\n\n  const onCancel = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        dismissDelay: 8000,\n        title: intl.formatMessage(messages.editingRoleTitle),\n        description: intl.formatMessage(messages.editingRoleCanceledDescription),\n      })\n    );\n    navigate(cancelRoute, { replace: true });\n  };\n\n  const handleSubmit = (data) =>\n    dispatch(patchRole(roleId, { name: data.name, display_name: data.name, description: data.description })).then(() => {\n      afterSubmit();\n      navigate(submitRoute);\n    });\n\n  return initialValues ? (\n    <FormRenderer\n      schema={createEditRoleSchema(roleId)}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onCancel={onCancel}\n      validatorMapper={validatorMapper}\n      FormTemplate={(props) => (\n        <ModalFormTemplate {...props} ModalProps={{ onClose: onCancel, isOpen: true, variant: 'small', title: 'Edit role information' }} />\n      )}\n    />\n  ) : null;\n};\n\nEditRoleModal.propTypes = {\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]).isRequired,\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  afterSubmit: PropTypes.func.isRequired,\n};\n\nexport default EditRoleModal;\n","import { useEffect, useRef } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","export const validateNextAddRolePermissionStep = (currentStep, values) => {\n  const permissions = (values && values['add-permissions-table']) || [];\n  const hasCostPermissions = permissions.some(({ uuid }) => uuid.split(':')[0].includes('cost-management'));\n  const hasInventoryPermissions = permissions.some(({ uuid }) => uuid.split(':')[0].includes('inventory'));\n\n  if (currentStep === 'inventory-groups-role' && hasCostPermissions) return 'cost-resources-definition';\n\n  if (currentStep === 'add-permissions' && hasInventoryPermissions) {\n    return 'inventory-groups-role';\n  }\n\n  if (currentStep === 'add-permissions' && hasCostPermissions) {\n    return 'cost-resources-definition';\n  }\n\n  return 'review';\n};\n\n// TODO: add step dictionary to replace literal strings across both add-role and add-role-permission\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { removeRole } from '../../redux/actions/role-actions';\nimport { fetchRole } from '../../helpers/role/role-helper';\nimport { roleNameSelector } from './role-selectors';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RemoveRoleModal = ({ cancelRoute, submitRoute = cancelRoute, afterSubmit }) => {\n  const intl = useIntl();\n  const { roleId } = useParams();\n  const roles = roleId.split(',');\n  const roleName = useSelector((state) => {\n    if (roles.length === 1) {\n      return roleNameSelector(state, roles[0]);\n    }\n\n    return roles.length;\n  });\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [internalRoleName, setInternalRoleName] = useState(roleName);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (roles && roleName) {\n      setInternalRoleName(roleName);\n    } else if (roles && roles.length === 1) {\n      fetchRole(roles[0])\n        .then((role) => setInternalRoleName(role.display_name))\n        .catch((error) => dispatch(addNotification({ variant: 'danger', title: 'Could not get role', description: error?.errors?.[0]?.detail })));\n    }\n  }, [roleName, roles]);\n\n  const onSubmit = () => {\n    Promise.all(roles.map((id) => dispatch(removeRole(id)))).then(() => afterSubmit());\n    navigate(submitRoute);\n  };\n\n  const onCancel = () => navigate(cancelRoute, { replace: true });\n  if (!internalRoleName) {\n    return null;\n  }\n\n  return (\n    <Modal\n      className=\"rbac\"\n      aria-label=\"remove-role\"\n      header={\n        <TextContent>\n          <Split hasGutter>\n            <SplitItem>\n              <ExclamationTriangleIcon size=\"lg\" style={{ fill: '#f0ab00' }} />\n            </SplitItem>\n            <SplitItem>\n              <Text component=\"h1\">{intl.formatMessage(messages.deleteRoleQuestion)}</Text>\n            </SplitItem>\n          </Split>\n        </TextContent>\n      }\n      isOpen\n      variant=\"small\"\n      onClose={onCancel}\n      actions={[\n        <Button isDisabled={isDisabled} key=\"submit\" variant=\"danger\" type=\"button\" id=\"confirm-delete-portfolio\" onClick={onSubmit}>\n          {intl.formatMessage(messages.confirm)}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <FormattedMessage\n            {...messages.roleWilBeRemovedWithPermissions}\n            values={{\n              strong: (text) => <strong>{text}</strong>,\n              name: internalRoleName,\n              count: roles.length,\n            }}\n          />\n        </Text>\n        <Checkbox\n          id=\"remove-role-checkbox\"\n          label={intl.formatMessage(messages.understandActionIrreversible)}\n          isChecked={!isDisabled}\n          onChange={() => setIsDisabled((prev) => !prev)}\n        />\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.propTypes = {\n  cancelRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]).isRequired,\n  submitRoute: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  afterSubmit: PropTypes.func.isRequired,\n};\n\nexport default RemoveRoleModal;\n","export const roleSelector = (state, roleId) => {\n  const {\n    roleReducer: { roles = { data: [] }, selectedRole },\n  } = state;\n  if (selectedRole?.uuid === roleId) {\n    return selectedRole;\n  }\n\n  return roles.data.find(({ uuid }) => uuid === roleId);\n};\n\nexport const roleNameSelector = (state, roleId) => roleSelector(state, roleId)?.display_name;\n","import React, { Fragment } from 'react';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport AppLink from '../../presentational-components/shared/AppLink';\nimport { getDateFormat } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport flatten from 'lodash/flatten';\nimport messages from '../../Messages';\nimport pathnames from '../../utilities/pathnames';\n\nexport const createRows = (showResDefinitions, uuid, data, intl, selectedRows = []) =>\n  data.reduce((acc, { resourceDefinitions, permission, modified }) => {\n    const [appName, type, operation] = permission.split(':');\n    return [\n      ...acc,\n      {\n        uuid: permission,\n        cells: [\n          appName,\n          type,\n          operation,\n          ...(showResDefinitions\n            ? [\n                permission.includes('cost-management') && resourceDefinitions.length > 0 ? (\n                  <Fragment key=\"resource-definitions\">\n                    <AppLink to={pathnames['role-detail-permission'].link.replace(':roleId', uuid).replace(':permissionId', permission)}>\n                      {flatten(resourceDefinitions.map((definition) => definition.attributeFilter.value)).length}\n                    </AppLink>\n                  </Fragment>\n                ) : (\n                  <span className=\"rbac-c-text__disabled\">{intl.formatMessage(messages.notApplicable)}</span>\n                ),\n              ]\n            : []),\n          <Fragment key={`${appName}-modified`}>\n            <DateFormat date={modified} type={getDateFormat(modified)} />\n          </Fragment>,\n        ],\n        selected: Boolean(selectedRows?.find(({ uuid }) => uuid === permission)),\n      },\n    ];\n  }, []);\n\nexport const rolePermissionsReducerInitialState = {\n  pagination: defaultSettings,\n  selectedPermissions: [],\n  showRemoveModal: false,\n  confirmDelete: () => null,\n  deleteInfo: {},\n  filters: {\n    applications: [],\n    resources: [],\n    operations: [],\n  },\n  isToggled: false,\n  resources: [],\n  operations: [],\n};\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SELECT_PERMISSIONS = 'SELECT_PERMISSIONS';\nexport const SHOW_REMOVE_MODAL = 'SHOW_REMOVE_MODAL';\nexport const SUBMIT_REMOVE_MODAL = 'SUBMIT_REMOVE_MODAL';\nexport const INITIATE_REMOVE_PERMISSION = 'INITIATE_REMOVE_PERMISSION';\nexport const SET_FILTERS = 'SET_FILTERS';\nexport const SET_TOGGLED = 'SET_TOGGLED';\nexport const SET_FILTER_OPTIONS = 'SET_FILTER_OPTIONS';\nexport const INITIALIZE_ROLE = 'INITIALIZE_ROLE';\nconst reducerHandlers = {\n  [SET_PAGINATION]: (state, pagination) => ({ ...state, pagination: { ...state.pagination, ...pagination } }),\n  [SELECT_PERMISSIONS]: (state, { selection }) => ({ ...state, selectedPermissions: selection }),\n  [SHOW_REMOVE_MODAL]: (state, { showRemoveModal }) => ({ ...state, showRemoveModal }),\n  [SUBMIT_REMOVE_MODAL]: (state) => ({ ...state, selectedPermissions: [], showRemoveModal: false }),\n  [INITIATE_REMOVE_PERMISSION]: (state, { confirmDelete, deleteInfo }) => ({ ...state, confirmDelete, showRemoveModal: true, deleteInfo }),\n  [SET_FILTERS]: (state, filters) => ({ ...state, filters: { ...state.filters, ...filters } }),\n  [SET_TOGGLED]: (state) => ({ ...state, isToggled: !state.isToggled }),\n  [INITIALIZE_ROLE]: (state, { count, ...options }) => ({ ...state, ...options, pagination: { ...state.pagination, count } }),\n};\nexport const rolePermissionsReducer = (state, { type, ...action }) => {\n  if (!reducerHandlers[type]) {\n    return state;\n  }\n\n  return reducerHandlers[type](state, action);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, Button, EmptyState, EmptyStateIcon, EmptyStateBody } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { useDispatch } from 'react-redux';\nimport AppLink from '../../../presentational-components/shared/AppLink.js';\nimport { fetchRole } from '../../../redux/actions/role-actions.js';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames.js';\n\nconst AddRolePermissionSuccess = ({ currentRoleID }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <EmptyState>\n        <EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />\n        <Title headingLevel=\"h4\" size=\"lg\">\n          {intl.formatMessage(messages.permissionsAddedSuccessfully)}\n        </Title>\n        <EmptyStateBody />\n        <AppLink to={pathnames['role-detail'].link.replace(':roleId', currentRoleID)}>\n          <Button onClick={() => dispatch(fetchRole(currentRoleID))}>{intl.formatMessage(messages.exit)}</Button>\n        </AppLink>\n      </EmptyState>\n    </>\n  );\n};\n\nexport default AddRolePermissionSuccess;\n\nAddRolePermissionSuccess.propTypes = {\n  currentRoleID: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { AddRolePermissionWizardContext } from './add-role-permission-wizard';\nimport '../add-role/review.scss';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting } = useContext(AddRolePermissionWizardContext);\n\n  if (submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  return <div className=\"rbac\">{[[{ ...formFields?.[0]?.[0] }]]}</div>;\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React, { useState, useEffect, useRef, createContext, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { WarningModal } from '../../common/warningModal';\nimport { updateRole } from '../../../redux/actions/role-actions.js';\nimport AddPermissionsTable from '../add-role/add-permissions';\nimport AddRolePermissionSummaryContent from './add-role-permissions-summary-content';\nimport AddRolePermissionSuccess from './add-role-permission-success';\nimport CostResources from '../add-role/cost-resources';\nimport InventoryGroupsRole from '../add-role/inventory-groups-role';\nimport { schemaBuilder } from './schema';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nexport const mapperExtension = {\n  'add-permissions-table': AddPermissionsTable,\n  'inventory-groups-role': InventoryGroupsRole,\n  'cost-resources': CostResources,\n  review: AddRolePermissionSummaryContent,\n};\n\nexport const AddRolePermissionWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst AddRolePermissionWizard = ({ role }) => {\n  const intl = useIntl();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [currentRoleID, setCurrentRoleID] = useState('');\n  const navigate = useAppNavigate();\n  const dispatch = useDispatch();\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const container = useRef(document.createElement('div'));\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n  const schema = useMemo(() => schemaBuilder(container.current), []);\n\n  useEffect(() => {\n    setCurrentRoleID(role.uuid);\n  });\n\n  useEffect(() => {\n    container.current.hidden = cancelWarningVisible;\n  }, [cancelWarningVisible]);\n\n  const handleWizardCancel = () => {\n    setCancelWarningVisible(true);\n  };\n\n  const handleConfirmCancel = () => {\n    navigate(pathnames['role-detail'].link.replace(':roleId', role.uuid));\n  };\n\n  const onSubmit = async (formData) => {\n    const { 'add-permissions-table': selectedPermissions, 'cost-resources': resourceDefinitions } = formData;\n\n    const selectedPermissionIds = [...role.access.map((record) => record.permission), ...selectedPermissions.map((record) => record.uuid)];\n    const roleData = {\n      ...role,\n      access: [\n        ...selectedPermissions.reduce(\n          (acc, { uuid: permission, requires }) => [\n            ...acc,\n            ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => ({\n              permission,\n              resourceDefinitions: resourceDefinitions?.find((r) => r.permission === permission)\n                ? [\n                    {\n                      attributeFilter: {\n                        key: `cost-management.${permission.split(':')[1]}`,\n                        operation: 'in',\n                        value: resourceDefinitions?.find((r) => r.permission === permission).resources,\n                      },\n                    },\n                  ]\n                : [],\n            })),\n          ],\n          role.access\n        ),\n      ],\n      accessCount: role.accessCount + selectedPermissions.length,\n    };\n\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    dispatch(updateRole(currentRoleID, roleData))\n      .then(() => setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true })))\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        navigate(pathnames['role-detail'].link.replace(':roleId', role.uuid));\n      });\n  };\n\n  return (\n    <AddRolePermissionWizardContext.Provider\n      value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm, rolePermissions: role.access }}\n    >\n      <WarningModal\n        type={intl.formatMessage(messages.permission)}\n        isOpen={cancelWarningVisible}\n        onModalCancel={() => setCancelWarningVisible(false)}\n        onConfirmCancel={handleConfirmCancel}\n      />\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.addPermissions)}\n            isOpen\n            steps={[\n              {\n                name: 'success',\n                component: new AddRolePermissionSuccess({ currentRoleID }),\n                isFinishedStep: true,\n              },\n            ]}\n            onClose={handleConfirmCancel}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          container={container}\n          schema={schema}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-uuid': role.uuid,\n            'role-type': 'create',\n            'role-name': role.display_name,\n            'role-description': role.description,\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            if (values && values['add-permissions-table']?.length > 0) {\n              handleWizardCancel();\n            } else {\n              handleConfirmCancel();\n            }\n          }}\n        />\n      )}\n    </AddRolePermissionWizardContext.Provider>\n  );\n};\n\nAddRolePermissionWizard.defaultProps = {\n  role: {},\n};\n\nAddRolePermissionWizard.propTypes = {\n  role: PropTypes.object,\n};\n\nexport default AddRolePermissionWizard;\n","import React from 'react';\nimport { Grid, GridItem, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRolePermissionSummaryContent = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'add-permissions-table': selectedPermissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n  } = formOptions.getState().values;\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <TextContent>\n          <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-u-mb-sm\">\n            {intl.formatMessage(messages.reviewDetails)}\n          </Title>\n        </TextContent>\n      </StackItem>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <Grid hasGutter>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleName)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{name}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleDescription)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{description}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.addedPermissions)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <TextContent component={TextVariants.p}>\n              {selectedPermissions.map((permission, index) => (\n                <Text key={index}> {permission.uuid} </Text>\n              ))}\n            </TextContent>\n          </GridItem>\n          {hasCostResources && (\n            <React.Fragment>\n              <GridItem span={3}>\n                <Text className=\"pf-c-title\" component={TextVariants.h6}>\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem span={9}>\n                <TextContent component={TextVariants.p}>\n                  {resourceDefinitions.map(({ resources }) => resources.map((resource, index) => <Text key={index}> {resource} </Text>))}\n                </TextContent>\n              </GridItem>\n            </React.Fragment>\n          )}\n        </Grid>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default AddRolePermissionSummaryContent;\n","import React from 'react';\nimport AddPermissionTemplate from '../add-role/add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\nimport { validateNextAddRolePermissionStep } from '../permission-wizard-helper';\nimport InventoryGroupsRoleTemplate from '../add-role/inventory-groups-role-template';\n\nexport const schemaBuilder = (container) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.addPermissions),\n        container,\n        fields: [\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) => {\n              return validateNextAddRolePermissionStep('add-permissions', values);\n            },\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            name: 'inventory-groups-role',\n            title: intl.formatMessage(messages.inventoryGroupsAccessTitle),\n            StepTemplate: InventoryGroupsRoleTemplate,\n            nextStep: ({ values }) => {\n              return validateNextAddRolePermissionStep('inventory-groups-role', values);\n            },\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(messages.inventoryGroupsAccessDescription)}</p>,\n              },\n              {\n                component: 'inventory-groups-role',\n                name: 'inventory-groups-role',\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) =>\n                    value.every(({ resources }) => resources && resources.length > 0)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneResource),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n","import React, { useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, info } from '@patternfly/react-table';\nimport { Button } from '@patternfly/react-core';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Route, Routes } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport AppLink from '../../presentational-components/shared/AppLink';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport {\n  createRows,\n  INITIALIZE_ROLE,\n  INITIATE_REMOVE_PERMISSION,\n  rolePermissionsReducer,\n  rolePermissionsReducerInitialState,\n  SELECT_PERMISSIONS,\n  SET_FILTERS,\n  SET_PAGINATION,\n  SET_TOGGLED,\n  SHOW_REMOVE_MODAL,\n  SUBMIT_REMOVE_MODAL,\n} from './role-permissions-table-helpers';\nimport { removeRolePermissions, fetchRole } from '../../redux/actions/role-actions';\nimport AddRolePermissionWizard from './add-role-permissions/add-role-permission-wizard';\nimport paths from '../../utilities/pathnames';\nimport RemoveModal from '../../presentational-components/shared/RemoveModal';\nimport messages from '../../Messages';\nimport pathnames from '../../utilities/pathnames';\nimport './role-permissions.scss';\n\nconst maxFilterItems = 10;\n\nconst removeModalText = (permissions, role, plural) => {\n  return (\n    <FormattedMessage\n      {...(plural ? messages.permissionsWillNotBeGrantedThroughRole : messages.permissionWillNotBeGrantedThroughRole)}\n      values={{\n        b: (text) => <b>{text}</b>,\n        ...(plural\n          ? {\n              permissions,\n            }\n          : {\n              permission: permissions,\n            }),\n        role: role.name,\n      }}\n    />\n  );\n};\n\nconst Permissions = ({ cantAddPermissions }) => {\n  const intl = useIntl();\n  const { role, isRecordLoading } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const navigate = useAppNavigate();\n  const [\n    { pagination, selectedPermissions, showRemoveModal, confirmDelete, deleteInfo, filters, isToggled, resources, operations },\n    internalDispatch,\n  ] = useReducer(rolePermissionsReducer, rolePermissionsReducerInitialState);\n\n  const [showResourceDefinitions, setShowResourceDefinitions] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const columns = [\n    { title: intl.formatMessage(messages.application) },\n    { title: intl.formatMessage(messages.resourceType) },\n    { title: intl.formatMessage(messages.operation) },\n    {\n      title: intl.formatMessage(messages.resourceDefinitions),\n      transforms: [\n        info({\n          popover: intl.formatMessage(messages.resourceDefinitionsApplyToCost),\n          ariaLabel: intl.formatMessage(messages.resourceDefinitionsApplyToCost),\n        }),\n      ],\n    },\n    { title: intl.formatMessage(messages.lastCommit), transforms: [cellWidth(15)] },\n  ];\n\n  const setCheckedItems = (newSelection) => {\n    internalDispatch({ type: SELECT_PERMISSIONS, selection: newSelection(selectedPermissions).map(({ uuid }) => ({ uuid })) });\n  };\n  const emptyPropsDescription = cantAddPermissions\n    ? ['']\n    : ['To configure user access to applications,', 'add at least one permission to this role.', ''];\n\n  useEffect(() => {\n    if (Object.keys(role).length > 0) {\n      const { resources, operations } = Object.entries(\n        role.access.reduce(\n          ({ resources, operations }, { permission }) => {\n            const [, resource, operation] = permission.split(':');\n            return {\n              resources: resources.includes(resource) ? resources : [...resources, resource],\n              operations: operations.includes(operation) ? operations : [...operations, operation],\n            };\n          },\n          { resources: [], operations: [] }\n        )\n      ).reduce((acc, [key, value]) => ({ ...acc, [key]: value.map((item) => ({ label: item, value: item })) }), {});\n      internalDispatch({ type: INITIALIZE_ROLE, resources, operations, count: role.access ? role.access.length : 0 });\n    }\n\n    setShowResourceDefinitions(role?.access?.find((a) => a.permission.includes('cost-management')));\n  }, [role]);\n\n  const filteredRows =\n    role && role.access\n      ? (role.access || [])\n          .filter(({ permission }) => {\n            const [application, resource, operation] = permission.split(':');\n            const { applications, resources, operations } = filters;\n            return (\n              (applications.length > 0 ? applications.includes(application) : true) &&\n              (resources.length > 0 ? resources.includes(resource) : true) &&\n              (operations.length > 0 ? operations.includes(operation) : true)\n            );\n          })\n          .map((acc) => ({ uuid: acc.permission, ...acc, modified: role.modified }))\n      : [];\n\n  const removePermissions = (permissions) => {\n    const permissionsToRemove = permissions.reduce((acc, curr) => [...acc, curr.uuid], []);\n    return dispatch(removeRolePermissions(role, permissionsToRemove)).then(() => {\n      dispatch(fetchRole(role.uuid));\n      internalDispatch({ type: SELECT_PERMISSIONS, selection: [] });\n    });\n  };\n\n  const actionResolver = () => [\n    {\n      title: intl.formatMessage(messages.remove),\n      onClick: (_event, _rowId, permission) =>\n        internalDispatch({\n          type: INITIATE_REMOVE_PERMISSION,\n          confirmDelete: () => removePermissions([permission]),\n          deleteInfo: {\n            title: intl.formatMessage(messages.removePermissionQuestion),\n            text: removeModalText(permission.uuid, role, false),\n            confirmButtonLabel: intl.formatMessage(messages.removePermission),\n          },\n        }),\n    },\n  ];\n\n  const toolbarButtons = () =>\n    cantAddPermissions\n      ? []\n      : [\n          <AppLink to={pathnames['role-add-permission'].link.replace(':roleId', role.uuid)} key=\"role-add-permission\" className=\"rbac-m-hide-on-sm\">\n            <Button variant=\"primary\" aria-label=\"Add Permission\">\n              {intl.formatMessage(messages.addPermissions)}\n            </Button>\n          </AppLink>,\n          {\n            label: intl.formatMessage(messages.addPermission),\n            props: {\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => {\n              navigate(pathnames['role-add-permission'].link.replace(':roleId', role.uuid));\n            },\n          },\n          {\n            label: intl.formatMessage(messages.remove),\n            props: {\n              isDisabled: !selectedPermissions.length > 0,\n            },\n            onClick: () => {\n              const multiplePermissionsSelected = selectedPermissions.length > 1;\n              internalDispatch({\n                type: INITIATE_REMOVE_PERMISSION,\n                confirmDelete: () => removePermissions([...selectedPermissions]),\n                deleteInfo: {\n                  title: intl.formatMessage(multiplePermissionsSelected ? messages.removePermissionsQuestion : messages.removePermissionQuestion),\n                  text: removeModalText(\n                    multiplePermissionsSelected ? selectedPermissions.length : selectedPermissions[0].uuid,\n                    role,\n                    selectedPermissions.length > 1\n                  ),\n                  confirmButtonLabel: intl.formatMessage(multiplePermissionsSelected ? messages.removePermissions : messages.removePermission),\n                },\n              });\n            },\n          },\n        ];\n\n  const calculateSelected = (filter) =>\n    filter.reduce(\n      (acc, curr) => ({\n        '': {\n          ...acc?.[''],\n          [curr]: true,\n        },\n      }),\n      { '': {} }\n    );\n\n  const emptyItem = {\n    label: <div> {intl.formatMessage(messages.noResultsFound)}</div>,\n    isDisabled: true,\n  };\n\n  const sanitizedRole = {\n    access: [],\n    applications: [],\n    ...role,\n  };\n\n  const filterItemOverflow = Object.values({ applications: sanitizedRole.applications, operations, resources }).find(\n    (value) => value.length > maxFilterItems\n  );\n  const data = filteredRows.slice(pagination.offset, pagination.offset + pagination.limit);\n\n  return (\n    <section className=\"pf-c-page__main-section rbac-c-role__permissions\">\n      {showRemoveModal && (\n        <RemoveModal\n          text={deleteInfo.text}\n          title={deleteInfo.title}\n          isOpen={showRemoveModal}\n          confirmButtonLabel={deleteInfo.confirmButtonLabel}\n          onClose={() => internalDispatch({ type: SHOW_REMOVE_MODAL, showRemoveModal: false })}\n          onSubmit={() => {\n            confirmDelete();\n            internalDispatch({ type: SUBMIT_REMOVE_MODAL });\n          }}\n        />\n      )}\n      <Routes>\n        <Route path={paths['role-add-permission'].path} element={<AddRolePermissionWizard isOpen={true} role={role} />} />\n      </Routes>\n      <TableToolbarView\n        columns={showResourceDefinitions ? columns : columns.filter((c) => c.title !== intl.formatMessage(messages.resourceDefinitions))}\n        rows={createRows(showResourceDefinitions, role?.uuid, data, intl)}\n        actionResolver={role.system ? undefined : actionResolver}\n        data={data}\n        filterValue=\"\"\n        ouiaId=\"role-permissions-table\"\n        fetchData={({ limit, offset }) => internalDispatch({ type: SET_PAGINATION, limit, offset })}\n        isSelectable={!role.system}\n        setCheckedItems={setCheckedItems}\n        checkedRows={selectedPermissions}\n        onShowMore={\n          filterItemOverflow\n            ? () => {\n                internalDispatch({ type: SET_TOGGLED });\n              }\n            : undefined\n        }\n        setFilterValue={({ applications, resources, operations }) => {\n          internalDispatch({\n            type: SET_FILTERS,\n            ...(applications ? { applications } : filters.applications),\n            ...(resources ? { resources } : filters.resources),\n            ...(operations ? { operations } : filters.operations),\n          });\n        }}\n        toolbarButtons={toolbarButtons}\n        isLoading={isRecordLoading}\n        pagination={{\n          ...pagination,\n          count: filteredRows.length,\n        }}\n        titlePlural={intl.formatMessage(messages.permissions)}\n        titleSingular={intl.formatMessage(messages.permission)}\n        emptyProps={{\n          title: intl.formatMessage(messages.noRolePermissions),\n          description: emptyPropsDescription,\n        }}\n        filters={[\n          {\n            key: 'applications',\n            value: filters.applications.length === 0 ? '' : filters.applications,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.application).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.applications),\n            groups: [\n              {\n                type: sanitizedRole.applications.length > 0 ? 'checkbox' : 'plain',\n                items:\n                  sanitizedRole.applications.length > 0\n                    ? sanitizedRole.applications.slice(0, isToggled ? undefined : maxFilterItems).map((item) => ({ label: item, value: item }))\n                    : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'resources',\n            value: filters.resources.length === 0 ? '' : filters.resources,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.resourceType).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.resources),\n            groups: [\n              {\n                type: resources.length > 0 ? 'checkbox' : 'plain',\n                items: resources.length > 0 ? resources.slice(0, isToggled ? undefined : maxFilterItems) : [emptyItem],\n              },\n            ],\n          },\n          {\n            key: 'operations',\n            value: filters.operations.length === 0 ? '' : filters.operations,\n            placeholder: intl.formatMessage(messages.filterByKey, { key: intl.formatMessage(messages.operation).toLowerCase() }),\n            type: 'group',\n            selected: calculateSelected(filters.operations),\n            groups: [\n              {\n                type: operations.length > 0 ? 'checkbox' : 'plain',\n                items: operations.length > 0 ? operations.slice(0, isToggled ? undefined : maxFilterItems) : [emptyItem],\n              },\n            ],\n          },\n        ]}\n        tableId=\"role-permissions\"\n      />\n    </section>\n  );\n};\n\nPermissions.propTypes = {\n  cantAddPermissions: PropTypes.bool,\n};\n\nexport default Permissions;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Routes, useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Button, Dropdown, DropdownItem, KebabToggle, Level, LevelItem, Text, TextContent } from '@patternfly/react-core';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { useIntl } from 'react-intl';\nimport pathnames from '../../utilities/pathnames';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport { fetchRole, fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { fetchGroup, fetchRolesForGroup, fetchSystemGroup } from '../../redux/actions/group-actions';\nimport { ToolbarTitlePlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport RemoveRoleModal from './remove-role-modal';\nimport EditRoleModal from './edit-role-modal';\nimport EmptyWithAction from '../../presentational-components/shared/empty-state';\nimport RbacBreadcrumbs from '../../presentational-components/shared/breadcrumbs';\nimport { BAD_UUID, getBackRoute } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport AppLink, { mergeToBasename } from '../../presentational-components/shared/AppLink';\nimport messages from '../../Messages';\nimport './role.scss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst Role = ({ onDelete }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const navigate = useAppNavigate();\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [isNonPermissionAddingRole, setIsNonPermissionAddingRole] = useState(false);\n  const { roleId, groupId } = useParams();\n  const { role, group, isRecordLoading, rolesPagination, rolesFilters, groupsPagination, groupsFilters, systemGroupUuid } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      isRecordLoading: state.roleReducer.isRecordLoading,\n      ...(groupId && { group: state.groupReducer.selectedGroup }),\n      systemGroupUuid: state.groupReducer.systemGroup?.uuid,\n      rolesPagination: state.roleReducer?.roles?.pagination || defaultSettings,\n      rolesFilters: state.roleReducer?.roles?.filters || {},\n      groupsPagination: state.groupReducer?.groups?.pagination || defaultSettings,\n      groupsFilters: state.groupReducer?.groups?.filters || {},\n    }),\n    shallowEqual\n  );\n\n  const roleExists = useSelector((state) => {\n    const {\n      roleReducer: { error },\n    } = state;\n    return error !== BAD_UUID;\n  });\n\n  const groupExists = useSelector((state) => {\n    const {\n      groupReducer: { error },\n    } = state;\n    return error !== BAD_UUID;\n  });\n\n  const dispatch = useDispatch();\n  const fetchData = () => {\n    dispatch(fetchRole(roleId));\n    if (groupId) {\n      if (groupId !== 'default-access') {\n        dispatch(fetchGroup(groupId));\n      } else {\n        if (systemGroupUuid) {\n          dispatch(fetchRolesForGroup(systemGroupUuid, {}));\n          chrome.appObjectId(systemGroupUuid);\n          return () => chrome.appObjectId(undefined);\n        } else {\n          dispatch(fetchSystemGroup());\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    chrome.appObjectId(roleId);\n    return () => chrome.appObjectId(undefined);\n  }, [roleId, groupId, systemGroupUuid]);\n\n  useEffect(() => {\n    if (role?.accessCount === 0 && role?.external_tenant !== '' && role?.external_role_id !== '' && role?.system) {\n      setIsNonPermissionAddingRole(true);\n    }\n  }, [role]);\n\n  const breadcrumbsList = () => [\n    groupId\n      ? {\n          title: intl.formatMessage(messages.groups),\n          to: getBackRoute(mergeToBasename(pathnames.groups.link), groupsPagination, groupsFilters),\n        }\n      : {\n          title: intl.formatMessage(messages.roles),\n          to: getBackRoute(mergeToBasename(pathnames.roles.link), rolesPagination, rolesFilters),\n        },\n\n    ...(groupExists && groupId && (groupId === 'default-access' ? systemGroupUuid : groupExists)\n      ? group\n        ? [\n            {\n              title: group && group.name,\n              to: pathnames['group-detail-roles'].link.replace('groupId', groupId),\n              isLoading: group && group.loaded,\n            },\n          ]\n        : [undefined]\n      : groupExists || !groupId\n      ? []\n      : [{ title: intl.formatMessage(messages.invalidGroup), isActive: true }]),\n\n    ...(groupExists || !groupId\n      ? [\n          {\n            title: isRecordLoading ? undefined : roleExists ? role?.display_name || role?.name : intl.formatMessage(messages.invalidRole),\n            isActive: true,\n          },\n        ]\n      : []),\n  ];\n\n  const title = !isRecordLoading && role ? role.display_name || role.name : undefined;\n  const description = !isRecordLoading && role ? role.description : undefined;\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <AppLink onClick={() => setDropdownOpen(false)} to={pathnames['role-detail-edit'].link.replace(':roleId', roleId)}>\n          {intl.formatMessage(messages.edit)}\n        </AppLink>\n      }\n      key=\"edit-role\"\n    />,\n    <DropdownItem\n      component={\n        <AppLink onClick={onDelete} to={pathnames['role-detail-remove'].link.replace(':roleId', roleId)}>\n          {intl.formatMessage(messages.delete)}\n        </AppLink>\n      }\n      className=\"rbac-c-role__action\"\n      key=\"delete-role\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      {(groupExists || !groupId) && roleExists ? (\n        <Fragment>\n          <TopToolbar breadcrumbs={breadcrumbsList()}>\n            <Level>\n              <LevelItem>\n                <PageHeaderTitle title={title || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n              </LevelItem>\n              {!isRecordLoading && role && !role.system && (\n                <LevelItem>\n                  <Dropdown\n                    ouiaId=\"role-title-actions-dropdown\"\n                    toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"role-actions-dropdown\" />}\n                    isOpen={isDropdownOpen}\n                    isPlain\n                    position=\"right\"\n                    dropdownItems={dropdownItems}\n                  />\n                </LevelItem>\n              )}\n            </Level>\n            {description && (\n              <TextContent className=\"rbac-page-header__description\">\n                <Text component=\"p\">{description}</Text>\n              </TextContent>\n            )}\n          </TopToolbar>\n          {isRecordLoading || !role ? <ListLoader /> : <Permissions cantAddPermissions={isNonPermissionAddingRole} />}\n          <Routes>\n            <Route\n              path={pathnames['role-detail-remove'].path}\n              element={\n                <>\n                  {!isRecordLoading && (\n                    <RemoveRoleModal\n                      afterSubmit={() => {\n                        dispatch(fetchRolesWithPolicies({ ...rolesPagination, offset: 0, filters: rolesFilters, usesMetaInURL: true }));\n                      }}\n                      cancelRoute={pathnames['role-detail'].path.replace(':roleId', roleId)}\n                      submitRoute={getBackRoute(mergeToBasename(pathnames['roles'].link), { ...rolesPagination, offset: 0 }, rolesFilters)}\n                      routeMatch={pathnames['role-detail-remove'].path}\n                    />\n                  )}\n                </>\n              }\n            />\n            <Route\n              path={pathnames['role-detail-edit'].path}\n              element={\n                <>\n                  {!isRecordLoading && (\n                    <EditRoleModal\n                      afterSubmit={fetchData}\n                      cancelRoute={pathnames['role-detail'].path.replace(':roleId', roleId)}\n                      routeMatch={pathnames['role-detail-edit'].path}\n                    />\n                  )}\n                </>\n              }\n            />\n          </Routes>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <section className=\"pf-c-page__main-breadcrumb pf-u-pb-md\">\n            <RbacBreadcrumbs {...breadcrumbsList()} />\n          </section>\n          <EmptyWithAction\n            title={`${groupExists ? 'Role' : 'Group'} not found`}\n            description={[`${groupExists ? 'Role' : 'Group'} with ID ${groupExists ? roleId : groupId} does not exist.`]}\n            actions={[\n              <Button\n                key=\"back-button\"\n                className=\"pf-u-mt-xl\"\n                ouiaId=\"back-button\"\n                variant=\"primary\"\n                aria-label=\"Back to previous page\"\n                onClick={() => navigate(-1)}\n              >\n                {intl.formatMessage(messages.backToPreviousPage)}\n              </Button>,\n            ]}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nRole.propTypes = {\n  onDelete: PropTypes.func,\n};\n\nexport default Role;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction: (...args: any[]) => Promise<any>, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"names":["syncDefaultFiltersWithUrl","location","navigate","keys","defaults","searchParams","URLSearchParams","search","filters","reduce","acc","key","values","getAll","length","Object","forEach","value","Array","isArray","Set","item","includes","append","get","set","pathname","toString","replace","areFiltersPresentInUrl","some","applyFiltersToUrl","newValues","linkBasename","useNavigate","to","options","mergeToBasename","basename","replaceAll","AppLink","React","props","ref","Link","displayName","propTypes","PropTypes","RemoveModal","title","text","onClose","onSubmit","isOpen","confirmButtonLabel","withCheckbox","intl","useIntl","useState","checked","setChecked","Modal","className","variant","ModalVariant","actions","Button","ouiaId","isDisabled","onClick","formatMessage","messages","Split","hasGutter","SplitItem","isFilled","Stack","TextContent","Checkbox","isChecked","onChange","label","id","defaultProps","RbacBreadcrumbs","breadcrumbs","Breadcrumb","map","index","BreadcrumbItem","isActive","NavLink","end","TopToolbar","children","Fragment","isRequired","paddingBottom","TopToolbarTitle","renderTitleTag","description","Flex","FlexItem","alignSelf","modifier","Text","component","TextVariants","costApi","getCostApi","getResourceDefinitions","apiProps","getResourceTypes","getResource","type","ActionTypes","payload","CostHelper","MODAL_FORM_IDENTIFIER","CustomFormWrapper","CustomButtons","saveLabel","cancelLabel","onCancel","useFormApi","pristine","invalid","validating","submitting","form","ModalFormTemplate","ModalProps","alert","footer","showFormControls","FormWrapper","Select","input","isReadOnly","rest","FormSelect","inputValue","selectOptions","find","undefined","createOptions","FormSelectOption","FieldProvider","Pf4SelectWrapper","helperText","meta","hideLabel","error","showError","touched","FormGroup","fieldId","isValid","helperTextInvalid","componentType","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","noChanges","ActionGroup","formProps","subscription","FormRenderer","formTemplateProps","componentMapper","componentTypes","TextField","Textarea","FormTemplate","PageActionRoute","pageAction","chrome","useChrome","useEffect","appAction","WarningModal","onModalCancel","onConfirmCancel","customTitle","customDescription","customPrimaryButtonTitle","customSecondaryButtonTitle","size","AddPermissionTemplate","formFields","formOptions","getState","selectedPermissions","setSelectedPermissions","alertClosed","setAlertClosed","notAllowedBasePermissions","unresolvedSplats","applications","filter","app","uuid","addPermissions","ChipGroup","categoryName","i","Chip","color","isTruncated","p","Title","headingLevel","Popover","headerContent","bodyContent","Alert","isInline","join","actionClose","AlertActionCloseButton","accessApi","getPermissionApi","listPermissions","limit","offset","orderBy","application","resourceType","verb","permission","excludeGlobals","excludeRoles","allowedOnly","listPermissionOptions","field","fieldToAction","resource_type","DisabledRowWrapper","row","disableSelection","Tooltip","content","disabledContent","exitDelay","entryDelay","RowWrapper","selector","permissionReducer","isLoading","operation","resource","expandSplats","isLoadingExpandSplats","roleReducer","isRecordLoading","selectedRole","resourceTypes","costReducer","permissions","data","requires","pagination","baseRole","applicationOptions","resourceOptions","operationOptions","expandedPermissions","AddPermissionsTable","dispatch","useDispatch","hasAccess","usePermissions","columns","fetchData","existingRoleId","exclude_roles","allowed_only","exclude_globals","PermissionsHelper","fetchOptions","useSelector","shallowEqual","useFieldApi","resources","operations","setFilters","roleType","isToggled","setIsToggled","filterBy","setFilterBy","setValue","getResourceType","r","split","debouncedGetApplicationOptions","useCallback","debouncePromise","debouncedGetResourceOptions","debouncedGetOperationOptions","baseRoleUuid","fetchRole","change","notAllowed","basePermissions","access","push","patterns","count","f","match","calculateSelected","curr","preparedFilterItems","res","op","emptyItem","filterItemOverflow","isSelectable","isCompact","borders","rows","cells","selected","Boolean","href","createRows","filterValue","noData","noDataDescription","setFilterValue","checkedRows","setCheckedItems","newSelection","newSelected","titlePlural","toLowerCase","titleSingular","showMoreTitle","onFilter","onShowMore","e","placeholder","groups","items","slice","isFilterable","rowWrapper","tableId","loadingResources","isLoadingResources","reducer","state","action","prevState","selection","option","filteredOptions","filtervalue","useReducer","dispatchLocaly","path","resourceDefinitions","entries","Grid","GridItem","md","sm","SelectVariant","typeAheadAriaLabel","onToggle","onSelect","event","selectAll","onClear","selections","target","placeholderText","hasInlineFilter","SelectOption","InventoryGroupsRoleTemplate","inventoryGroupsApi","getInventoryGroupsApi","getInventoryGroups","inventoryReducer","processedSelection","name","optionMap","setOptionMap","dispatchLocally","InventoryHelper","newOptionMap","groupsPermissionsDefinition","processedOption","EditRoleModal","cancelRoute","submitRoute","afterSubmit","isMounted","useRef","current","useIsMounted","roleId","useParams","role","roleSelector","initialValues","setInitialValues","then","uniqueNameValidator","asyncDebounce","idKey","validationPromise","Promise","reject","validatorMapper","addNotification","dismissDelay","schema","fields","validate","fetchRoles","display_name","number","validatorTypes","threshold","patchRole","hash","validateNextAddRolePermissionStep","currentStep","hasCostPermissions","hasInventoryPermissions","RemoveRoleModal","roles","roleName","roleNameSelector","setIsDisabled","internalRoleName","setInternalRoleName","errors","detail","header","style","fill","all","removeRole","strong","prev","showResDefinitions","selectedRows","modified","appName","pathnames","flatten","definition","attributeFilter","DateFormat","date","getDateFormat","rolePermissionsReducerInitialState","defaultSettings","showRemoveModal","confirmDelete","deleteInfo","SET_PAGINATION","SELECT_PERMISSIONS","SHOW_REMOVE_MODAL","SUBMIT_REMOVE_MODAL","INITIATE_REMOVE_PERMISSION","SET_FILTERS","SET_TOGGLED","INITIALIZE_ROLE","reducerHandlers","rolePermissionsReducer","AddRolePermissionSuccess","currentRoleID","EmptyState","EmptyStateIcon","icon","CheckCircleIcon","EmptyStateBody","ReviewTemplate","useContext","AddRolePermissionWizardContext","Bullseye","Spinner","mapperExtension","InventoryGroupsRole","CostResources","review","hasCostResources","StackItem","span","createContext","success","AddRolePermissionWizard","cancelWarningVisible","setCancelWarningVisible","setCurrentRoleID","useAppNavigate","hideForm","wizardContextValue","setWizardContextValue","container","document","createElement","useMemo","cache","createIntlCache","createIntl","locale","providerMessages","isDynamic","inModal","showTitles","crossroads","StepTemplate","nextStep","every","schemaBuilder","hidden","handleConfirmCancel","formData","selectedPermissionIds","record","roleData","require","accessCount","updateRole","Provider","setWizardError","setWizardSuccess","setHideForm","rolePermissions","Wizard","steps","isFinishedStep","removeModalText","plural","b","Permissions","cantAddPermissions","internalDispatch","showResourceDefinitions","setShowResourceDefinitions","transforms","info","popover","ariaLabel","cellWidth","emptyPropsDescription","a","filteredRows","removePermissions","permissionsToRemove","removeRolePermissions","sanitizedRole","Routes","Route","paths","element","c","actionResolver","system","_event","_rowId","toolbarButtons","multiplePermissionsSelected","emptyProps","Role","onDelete","isDropdownOpen","setDropdownOpen","isNonPermissionAddingRole","setIsNonPermissionAddingRole","groupId","group","groupReducer","selectedGroup","systemGroupUuid","systemGroup","rolesPagination","rolesFilters","groupsPagination","groupsFilters","roleExists","BAD_UUID","groupExists","fetchGroup","fetchRolesForGroup","appObjectId","fetchSystemGroup","external_tenant","external_role_id","breadcrumbsList","getBackRoute","loaded","dropdownItems","DropdownItem","Level","LevelItem","PageHeaderTitle","Dropdown","toggle","KebabToggle","isPlain","position","fetchRolesWithPolicies","usesMetaInURL","routeMatch","asyncFunction","debounceTime","onlyResolvesLast"],"sourceRoot":""}
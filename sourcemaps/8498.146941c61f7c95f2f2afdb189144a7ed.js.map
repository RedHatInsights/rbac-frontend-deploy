{"version":3,"file":"js/8498.124996b051a97fd877cc.js","mappings":"oIAEAA,EAAQ,GAAuB,CAC7B,KAAQ,8BACR,MAAS,IACT,IAAO,oCAETA,EAAA,GAAqBA,EAAQ,I,8RCPhBC,EAAa,SAACC,GAAD,OACxBA,EAAKC,QACH,SAACC,EAAKC,GAAN,wBACKD,GADL,CAEE,CACEE,MAAO,CAACD,QAGZ,K,8uBCCJ,IAAME,EAAkC,SAAC,GAA6B,IAA3BC,EAA2B,EAA3BA,WAAeC,GAAY,YAC9DC,GAAOC,EAAAA,EAAAA,KAEPC,GADcC,EAAAA,EAAAA,WACOC,WAAWF,OAEtC,OACE,kBAACG,EAAA,GAAD,UACMN,EADN,CAEED,WAAU,OACLA,GADK,IAERQ,QAAS,kBAAMR,EAAWQ,QAAQJ,MAEpCK,MACEL,EAAO,yBACHM,EACA,kBACE,yBAAKC,UAAU,+BACb,kBAAC,EAAAC,MAAD,CAAOD,UAAU,oBAAoBE,QAAQ,SAASC,UAAQ,EAACC,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,kCAQzGlB,EAAgCmB,UAAY,CAC1ClB,WAAYmB,IAAAA,QAGd,U,6lBCpBA,IAaMC,EAAe,CACnBC,sBAAkBX,EAClBY,sBAAsB,EACtBC,mBAAeb,EACfc,qBAAqB,GAGvB,SAASC,EAAQC,EAAOC,GACtB,GACO,WADCA,EAAOC,KAEX,OAAO,OACFF,GACAC,EAAOE,SAGZ,MAAM,IAAIC,MAIhB,IAAMC,EAAsC,SAACC,EAAWT,EAAeU,GACrE,IAAM/B,GAAOC,EAAAA,EAAAA,KACb,MAAO,CACL+B,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAAA,iBACXC,KAAM,mBACNC,UAAWpC,EAAKc,cAAcC,EAAAA,EAAAA,oBAC9BsB,WAAYrC,EAAKc,cAAcC,EAAAA,EAAAA,kBAC/BuB,mBAAoBtC,EAAKc,cAAcC,EAAAA,EAAAA,kBACvCwB,iBAAkBvC,EAAKc,cAAcC,EAAAA,EAAAA,kBACrCgB,SAAS,OAAKV,GAAiBS,EAAYC,EAAU,IACrDS,SAAU,CAAC,CAAEd,KAAM,uBACnBe,cAAc,MAahBC,EAAkB,CACtB,qBAAsB,kBAAM,SAAC/C,GAAD,OAAWA,GAASA,EAAMgD,OAAS,OAAInC,EAAY,+DAG3EoC,EAA+B,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,YAChC7C,GAAOC,EAAAA,EAAAA,KACP6C,GAAaC,EAAAA,EAAAA,eAAcC,EAAAA,EAAAA,+BAAAA,MACjC,GAEID,EAAAA,EAAAA,eAAcD,GADhBG,OAAUC,EADZ,EACYA,aAAcC,EAD1B,EAC0BA,OAE1B,GAA0BC,EAAAA,EAAAA,cAAlBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAEXC,GAAWC,EAAAA,EAAAA,eAGjB,GAAiCC,EAAAA,EAAAA,YAAWlC,EAASL,GAArD,eAAOM,EAAP,KAAckC,EAAd,KAEA,GAAmCC,EAAAA,EAAAA,cACjC,SAACnC,GAAD,YAAY,CACVoC,KAAMpC,EAAMqC,YAAYC,aACxBC,iBAAkB,UAAAvC,EAAMqC,YAAYC,oBAAlB,SAAgCE,OAC9CC,GAAAA,CACEzC,EAAMqC,YAAYC,aAAaE,OAC5BE,QAAO,SAACC,GAAD,OAAOA,EAAEC,aAAelB,KAC/BmB,KAAI,SAACL,GAAD,OAAYA,EAAOM,oBAAoBD,KAAI,SAACE,GAAD,OAAcA,EAASC,gBAAgB7E,aAE3F,GACJ8E,gBAAiBjD,EAAMqC,YAAYY,mBAErCC,EAAAA,cAZMX,EAAR,EAAQA,iBAAkBH,EAA1B,EAA0BA,KAe1B,GAAoED,EAAAA,EAAAA,cAAY,SAAC5D,GAAD,OAvCjE,SAAC,EAA4EsB,GAA7E,QAAGsD,YAAeC,EAAlB,EAAkBA,cAAeC,EAAjC,EAAiCA,UAAWC,EAA5C,EAA4CA,iBAAkBhD,EAA9D,EAA8DA,UAA9D,MAAgG,CAC/G8C,cAAeA,EAAcpF,KAC7BsC,UAAWA,EAAUT,GAAiB,CAAEA,cAAeS,EAAUT,IAAmBS,EACpF+C,UAAAA,EACAE,mBAAoBD,EAAmB,GAmCoDE,CAASjF,EAAOyB,EAAMH,iBAAgBqD,EAAAA,cAAzHE,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,UAAWE,EAAlC,EAAkCA,mBAAoBjD,EAAtD,EAAsDA,WAEtDmD,EAAAA,EAAAA,YAAU,WArB6B1B,GAAS2B,EAAAA,EAAAA,QAuB7C,CAAChC,KAEJ+B,EAAAA,EAAAA,YAAU,WACR,IAAKJ,EAAW,OACVM,EAAI,UAAGP,EAAcQ,MAAK,SAACC,GAAD,aAAOA,EAAE1F,SAAF,UAAYuD,EAAaoC,MAAM,YAA/B,aAAY,EAA0B,cAAnE,aAAG,EAAqEH,KAC5EA,IACFzB,EAAgB,CAAEhC,KAAM,SAAUC,QAAS,CAAEN,cAAe8D,EAAKG,MAAM,KAAK,MAC5E/B,GAASgC,EAAAA,EAAAA,GAAYJ,QAGxB,CAACP,IAEJ,IAAMY,EAAW,kBAAMnC,EAAQR,IAEzB4C,EAAe,SAACjG,GAChBA,EAAK,sBAAwBuE,EAC/ByB,IAEA9B,EAAgB,CACdhC,KAAM,SACNC,QAAS,CACPR,iBAAkB3B,EAAK,oBACvB4B,sBAAsB,MA4BxBW,EAhJc,SAACD,GAAD,OACpB4D,OAAOC,QAAQ7D,GAAWrC,QACxB,SAACC,EAAD,sBAAOkG,EAAP,KAAYjG,EAAZ,6BACKD,IADL,OAEKC,EAAM0E,KAAI,SAACgB,GAAD,MAAQ,CACnB1F,MAAO0F,EAAE1F,MACTwF,KAAMS,EACNC,MAAOR,EAAE1F,cAGb,IAsIcmG,CAAchE,GAE9B,OACE,kBAAC,aAAD,KACE,kBAAC,IAAD,CACEiE,YAAa/F,EAAKc,cAAcC,EAAAA,EAAAA,6BAChCiF,kBAAmBhG,EAAKc,cAAcC,EAAAA,EAAAA,mBACtCkF,OAAQzE,EAAMJ,qBACd8E,cAAe,kBAAMxC,EAAgB,CAAEhC,KAAM,SAAUC,QAAS,CAAEP,sBAAsB,MACxF+E,gBAAiBX,KAEjBX,GAAaE,IAAuBvD,EAAMF,oBAC1C,kBAAC,EAAA8E,MAAD,CACEzF,QAAS0F,EAAAA,aAAAA,MACT5F,UAAU,8BACVwF,QAAQ,EACRpF,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,yBAC1BT,QAAS,WACPoD,EAAgB,CAAEhC,KAAM,SAAUC,QAAS,CAAEL,qBAAqB,KAClEkE,MAGF,kBAAC,EAAAc,SAAD,KACE,kBAAC,EAAAC,QAAD,QAIJ,kBAAC,IAAD,CACEC,OAAQ3E,EAAoCC,EAAWN,EAAMH,cAAeU,GAC5E0E,gBAAiBA,EAAAA,GACjBC,cAAe,CAAE,mBAAoBlF,EAAML,kBAAoB4C,GAAoB,IACnF4C,SArDa,SAACnH,GAAS,MAC7BkE,EAAgB,CAAEhC,KAAM,SAAUC,QAAS,CAAER,iBAAkB3B,EAAK,uBACpE,IAAMoH,EAAY,CAChBxC,WAAYlB,EACZoB,oBAAqB,CACnB,CACEE,gBAAiB,CACfoB,IAAK,mBAAF,iBAAqB1C,EAAaoC,MAAM,YAAxC,aAAqB,EAA0B,IAClDuB,UAA+C,IAApCrH,EAAK,oBAAoBmD,OAAe,QAAU,KAC7DhD,MAA2C,IAApCH,EAAK,oBAAoBmD,OAAenD,EAAK,oBAAoB,GAAKA,EAAK,wBAK1F+D,GAASuD,EAAAA,EAAAA,IAAW3D,EAAD,EAAC,KAAaS,GAAd,IAAoBI,OAAQ,GAAF,eAAMJ,EAAKI,OAAOE,QAAO,SAAC6C,GAAD,OAAUA,EAAK3C,aAAelB,MAAvD,CAAsE0D,QAAe,GAAMI,MACtI,WACEzD,GAAS0D,EAAAA,EAAAA,IAAU9D,IACnBG,EAAKT,OAqCH2C,SAAU,SAAChG,GAAD,OAAUiG,EAAajG,IACjCkD,gBAAiBA,EACjBwE,aAAc,SAACnH,GAAD,OACZ,kBAAC,GAAD,UACMA,EADN,CAEED,WAAY,CACVQ,QAASmF,EACTQ,QAASzE,EAAMJ,qBACfT,QAAS,QACTE,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,yBAC1BoG,YAAanH,EAAKc,cAAcC,EAAAA,EAAAA,qCAUhD6B,EAA6B5B,UAAY,CACvC6B,YAAa5B,IAAAA,OAAAA,YAGf,W,omBC9DA,SAzI4B,WAC1B,IAAMjB,GAAOC,EAAAA,EAAAA,KACb,GAA4BmH,EAAAA,EAAAA,UAAS,CACnCC,WAAY,SACPC,EAAAA,IADK,IAERpD,OAAQ,OAHZ,eAAOqD,EAAP,KAAeC,EAAf,KAOQH,EAAuBE,EAAvBF,WAAYnD,EAAWqD,EAAXrD,OAEdX,GAAWC,EAAAA,EAAAA,eAEjB,GAAiCiE,EAAAA,EAAAA,aAAzBtE,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,aAEhB,GAA6ES,EAAAA,EAAAA,cAC3E,SAACnC,GAAD,oBAAY,CACVoC,KAAMpC,EAAMqC,YAAYC,aACxBM,WAAY5C,EAAMqC,YAAYC,aAAaE,OAA/B,gBAEHxC,EAAMqC,YAAYC,oBAFf,aAEH,EAAgCE,OAAOoB,MAAK,SAACjB,GAAD,OAAOA,EAAEC,aAAelB,MAEzE,GACJuB,gBAAiBjD,EAAMqC,YAAYY,gBACnCiD,iBAAiB,UAAAlG,EAAMqC,mBAAN,mBAAmB8D,aAAnB,eAA0BN,aAAcC,EAAAA,GACzDM,cAAc,UAAApG,EAAMqC,mBAAN,mBAAmB8D,aAAnB,eAA0BE,UAAW,MAErDnD,EAAAA,cAZMd,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,WAAYK,EAA1B,EAA0BA,gBAAiBiD,EAA3C,EAA2CA,gBAAiBE,EAA5D,EAA4DA,cAmB5D3C,EAAAA,EAAAA,YAAU,WAHR1B,GAAS0D,EAAAA,EAAAA,IAAU9D,MAKlB,CAACA,KAEJ8B,EAAAA,EAAAA,YAAU,WACRuC,EAAU,SACLD,GADI,IAEPF,WAAY,SACPE,EAAOF,YADF,IAERS,MAAOlE,EAAKI,OAASJ,EAAKI,OAAOrB,OAAS,SAG7C,CAACiB,IAEJ,IAAMmE,EAAe3D,EAAWE,oBAC5BL,IAAAA,CAAQG,EAAWE,oBAAoBD,KAAI,SAAC2D,GAAD,OAAgBA,EAAWxD,gBAAgB7E,UAAQuE,QAAO,SAACvE,GAAD,OACnGuE,GAASvE,EAAMsI,SAAS/D,MAE1B,GAEEgE,EAAS,kBACb,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,OAAK,EAAClD,KAAMnC,EAAAA,EAAAA,+BAAAA,MACjB,kBAAC,GAAD,CACEH,YAAaG,EAAAA,EAAAA,0BAAAA,KAAAA,QAA6C,UAAWG,GAAQE,QAAQ,gBAAiBH,QAkBxG1D,EAAOuI,EAAaO,MAAMjB,EAAWkB,OAAQlB,EAAWkB,OAASlB,EAAWmB,OAElF,OACE,kBAAC,EAAAL,SAAD,KACE,kBAAC,IAAD,CACEM,YAAa,CACX,CAAE5H,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,OAAiB2H,IAAIC,EAAAA,EAAAA,IAAaT,EAAOP,MAAOD,EAAiBE,IAC7F,CAAE/G,MAAO4D,OAAkBjE,EAAYoD,IAASA,EAAKgF,cAAgBhF,EAAKzB,MAAOuG,GAAI,iBAAF,OAAmBvF,IACtG,CAAEtC,MAAOqC,EAAc2F,UAAU,KAGnC,kBAAC,EAAAC,MAAD,KACE,kBAAC,EAAAC,UAAD,KACE,kBAACC,EAAA,EAAD,CAAiBnI,MAAOqC,GAAgB,kBAAC,KAAD,MAA6BzC,UAAU,+BAIrF,6BAASA,UAAU,oDACjB,kBAAC,EAAAwI,YAAD,KACE,kBAAC,EAAAC,KAAD,CAAMjH,UAAWkH,EAAAA,aAAAA,IAAkBnJ,EAAKc,cAAcC,EAAAA,EAAAA,oBAExD,kBAAC,IAAD,CACEqI,QAAS,CAAC,IACVC,KAAM9J,EAAWC,GACjBA,KAAMA,EACN8J,YAAapF,EACbqF,UAAW,gBAAGf,EAAH,EAAGA,MAAOD,EAAV,EAAUA,OAAQpG,EAAlB,EAAkBA,KAAlB,OACTqF,EAAU,SACLD,GADI,IAEPrD,OAAQ/B,EACRkF,WAAY,SACPE,EAAOF,YADF,IAERmB,MAAAA,EACAD,OAAAA,QAINiB,WAAS,EACTtB,OAAQA,EACRuB,eAAgB,gBAAGtH,EAAH,EAAGA,KAAH,OACdqF,EAAU,SACLD,GADI,IAEPrD,OAAQ/B,MAGZuH,eAzDe,kBACpB9F,EAAK+F,OAUF,GATA,CACE,kBAAC,EAAAxB,SAAD,CAAUvC,IAAI,6BACZ,kBAAC,EAAAgE,KAAD,CAAMlB,GAAE,wBAAmBvF,EAAnB,uBAAwCD,EAAxC,UACN,kBAAC,EAAA2G,OAAD,CAAQlJ,QAAQ,UAAU,aAAW,QAClCX,EAAKc,cAAcC,EAAAA,EAAAA,WAoD1B8D,UAAWJ,EACX4C,WAAU,SACLA,GADK,IAERS,MAAOC,EAAapF,SAEtBmH,YAAa9J,EAAKc,cAAcC,EAAAA,EAAAA,WAAoBgJ,cACpDC,cAAehK,EAAKc,cAAcC,EAAAA,EAAAA,UAAmBgJ,cACrDE,YAAU,EACVC,QAAQ,iC,oGCvIlB,SARkB,CACdC,GAAIC,SAAS,oBAA2B,KAAM,KAC9CC,GAAID,SAAS,yBAA2B,KAAM,KAC9CE,GAAIF,SAAS,yBAA2B,KAAM,KAC9CG,GAAIH,SAAS,yBAA2B,KAAM,KAC9CI,GAAIJ,SAAS,yBAA2B,KAAM,KAC9C,MAAOA,SAAS,yBAA4B,KAAM,MCCtD,GAZiB,WAGb,IAFA,IACIK,EADAC,EAAQC,OAAOC,WAEVC,EAAK,EAAGC,EAAKpF,OAAOC,QAAQoF,IAAcF,EAAKC,EAAGnI,OAAQkI,IAAM,CACrE,IAAIG,EAAKF,EAAGD,GAAKlK,EAAUqK,EAAG,GAC9B,GADyCA,EAAG,IAChCN,EACR,MAEJD,EAAS9J,EAEb,OAAO8J,G,kDCNLQ,GAAiB,SAAC,GAAiC,IAA/BxK,EAA+B,EAA/BA,UAAWyK,EAAoB,EAApBA,IAAQnL,GAAY,aACvD,OACE,kBAAC,EAAAoL,YAAD,QACE1K,UAAW2K,IAAAA,CAAW3K,EAAW,CAC/B,sBAAuByK,EAAIvB,SAE7BuB,IAAKA,GACDnL,KAKVkL,GAAejK,UAAY,CACzBkK,IAAKjK,IAAAA,MAAgB,CACnB0I,OAAQ1I,IAAAA,OAEVR,UAAWQ,IAAAA,QAGb,Y,ykBCQA,IAAMoK,IAAgBC,EAAAA,EAAAA,OAAK,kBAAM,mCAE3BtG,GAAW,SAAC,GAAD,QAAGnB,YAAe8D,EAAlB,EAAkBA,MAAO9C,EAAzB,EAAyBA,UAAzB,MAA4C,CAC3D8C,MAAOA,EAAMnI,KACbqI,QAASF,EAAME,QACf0D,KAAM5D,EAAMN,WACZxC,UAAAA,IA0OF,SAvOc,WACZ,ICvCMiG,EAAqDnK,EAAiB6K,EACtEC,EDsCN,GAA8CC,EAAAA,EAAAA,YAAWC,GAAAA,GAAjDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,wBAClB,GAAwCzE,EAAAA,EAAAA,UAAS,IAAjD,eAAO0E,EAAP,KAAqBC,EAArB,KACM/L,GAAOC,EAAAA,EAAAA,KACPsD,GAAWC,EAAAA,EAAAA,eACXwI,GAAgBC,EAAAA,EAAAA,QAAO,MACvBC,GAAU9I,EAAAA,EAAAA,cACV+I,GC7CArB,GAAK,IAAA1D,WAAS,WAAc,OAAO,QAAkBzG,EAAUmK,EAAG,GAAIU,EAAaV,EAAG,GACtFW,GAAO,IAAAQ,QAAOtL,IAClB,IAAAsE,YAAU,WACN,SAASmH,IACL,IAAIC,EAAa,KACbA,IAAeZ,EAAKa,UACpBb,EAAKa,QAAUD,EACfb,EAAWa,IAInB,OADA1B,OAAO4B,iBAAiB,SAAUH,GAC3B,WAAc,OAAOzB,OAAO6B,oBAAoB,SAAUJ,MAClE,IACIzL,GDkCT,GAA4CgD,EAAAA,EAAAA,aAAYqB,GAAUN,EAAAA,cAA1DiD,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAAS0D,EAAxB,EAAwBA,KAAM1G,EAA9B,EAA8BA,UAExBuE,EAAU,CACd,CAAEvI,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,MAAgB6E,IAAK,eAAgB6G,WAAY,EAACC,EAAAA,EAAAA,WAAU,IAAKC,EAAAA,WAC7F,CAAE9L,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,cAC5B,CAAEF,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,aAAuB6L,eAAgB,CAACC,EAAAA,gBAAiBJ,WAAY,CAACK,EAAAA,SAClG,CAAEjM,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,QAAkB6L,eAAgB,CAACC,EAAAA,gBAAiBJ,WAAY,CAACK,EAAAA,SAC7F,CAAEjM,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,cAAwB6E,IAAK,WAAY6G,WAAY,CAACK,EAAAA,OAAQH,EAAAA,YAEtFpD,EAAY,SAACxH,GAAD,OAAawB,GAASwJ,EAAAA,EAAAA,IAAuB,SAAKhL,GAAN,IAAeiL,SAAS,OAEhFC,EAAerB,GAAYC,EACjC,GAAoCzE,EAAAA,EAAAA,UAAS,SAAMwE,EAAWsB,EAAAA,GAAuB5F,EAAAA,IAAqBiE,IAA1G,eAAOlE,EAAP,KAAmB8F,EAAnB,KACA,GAAsC/F,EAAAA,EAAAA,UAASS,EAAQe,cAAgB,IAAvE,eAAOU,EAAP,KAAoBG,GAApB,KACA,IAAsCrC,EAAAA,EAAAA,UAAS,CAAEgG,MAAOC,OAAOJ,GAAeK,UAAW,QAAzF,iBAAOC,GAAP,MAAoBC,GAApB,MACMC,GAAU,GAAH,OAAiC,UAA3BF,MAAAA,QAAA,EAAAA,GAAaD,WAAuB,IAAM,IAAhD,OAAqDlE,GAAQmE,MAAAA,QAAA,EAAAA,GAAaH,OAAQC,OAAOJ,IAAerH,KACrH,IAAgCwB,EAAAA,EAAAA,UAAS,IAAzC,iBAAOsG,GAAP,MAAiBC,GAAjB,OAEA1I,EAAAA,EAAAA,YAAU,WACR,IAAM2I,GAAmBC,EAAAA,EAAAA,IAA6B3B,EAAS7E,GAC/D8F,EAAcS,GACd,IAAQhF,GAAiBkF,EAAAA,GAAAA,IAA0B5B,EAAS,CAAC,gBAAiB,CAAEtD,aAAcU,IAAtFV,aACRa,GAAeb,GACfmF,SAASC,OAAOC,YAAY,CAAEC,GAAI,QAASC,cAAc,IACzD5E,EAAU,SAAKqE,GAAN,IAAwBH,QAAAA,GAAS5F,QAAS,CAAEe,aAAAA,QACpD,KAEH3D,EAAAA,EAAAA,YAAU,WACRwE,IAAe5B,MAAAA,OAAA,EAAAA,EAASe,eAAgB,IACxCuE,EAAc5B,KACb,CAAC1D,EAAS0D,KAEbtG,EAAAA,EAAAA,YAAU,WACRsG,EAAK6C,aAAcC,EAAAA,EAAAA,IAAqBnC,EAASX,EAAK/C,MAAO+C,EAAKhD,UACjE,CAACgD,EAAK6C,cAETnJ,EAAAA,EAAAA,YAAU,YACRqJ,EAAAA,EAAAA,IAAyBpC,KAAYmC,EAAAA,EAAAA,IAAqBnC,EAAS7E,EAAWmB,MAAOnB,EAAWkB,SAChGe,MAAAA,OAAA,EAAAA,EAAa3G,QAAS,KACnB4L,EAAAA,GAAAA,IAAuBrC,EAAS,CAAC,mBAClC4B,EAAAA,GAAAA,IAA0B5B,EAAS,CAAC,gBAAiB,CAAEtD,aAAcU,OAGzE,IAAMpB,GAAS,kBACb,kBAAC,EAAAsG,SAAD,CAAUC,SAAU,kBAAC,EAAAtG,SAAD,OAClB,kBAAC,EAAAC,MAAD,CAAOC,OAAK,EAAClD,KAAMnC,EAAAA,EAAAA,YAAAA,MACjB,kBAACqI,GAAD,CAAehE,WAAYA,EAAYoG,QAASA,GAAS5F,QAAS,CAAEe,aAAcU,MAEpF,kBAAC,EAAAlB,MAAD,CAAOC,OAAK,EAAClD,KAAMnC,EAAAA,EAAAA,eAAAA,OACf6B,GACA,kBAAC,IAAD,CACE/B,WAAYE,EAAAA,EAAAA,eAAAA,KACZ0L,YAAa,WACX3C,EAAgB,IAChBxC,EAAU,SAAKlC,GAAN,IAAkBkB,OAAQ,EAAGkF,QAAAA,GAAS5F,QAAS,CAAEe,aAAcU,OAE1EzG,aAAa8F,EAAAA,EAAAA,IAAa3F,EAAAA,EAAAA,MAAAA,KAAkBqE,EAAYQ,GACxD8G,aAAahG,EAAAA,EAAAA,IAAa3F,EAAAA,EAAAA,MAAAA,KAAD,GAAC,MAAuBqE,GAAxB,IAAoCkB,OAAQ,IAAKV,MAIhF,kBAAC,EAAAO,MAAD,CAAOC,OAAK,EAAClD,KAAMnC,EAAAA,EAAAA,aAAAA,OACf6B,GACA,kBAAC,IAAD,CACE6J,YAAa,kBAAMnF,EAAU,SAAKlC,GAAN,IAAkBkB,OAAQ,EAAGkF,QAAAA,GAAS5F,QAAS,CAAEe,aAAcU,OAC3FxG,WAAYE,EAAAA,EAAAA,aAAAA,KACZH,aAAa8F,EAAAA,EAAAA,IAAa3F,EAAAA,EAAAA,MAAAA,KAAkBqE,EAAYQ,GACxD8G,aAAahG,EAAAA,EAAAA,IAAa3F,EAAAA,EAAAA,MAAAA,KAAD,GAAC,MAAuBqE,GAAxB,IAAoCkB,OAAQ,IAAKV,QAO9E+G,GAAiB,SAAC1D,GAAD,OACrBA,EAAI2D,eACA,GACA,CACE,CACEhO,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,MAC1B+N,QAAS,SAACC,EAAQC,EAAQpL,GAAjB,OAA0BsI,EAAQ5I,KAAR,sBAA4BM,EAAKqL,SAEtE,CACEpO,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,QAC1B+N,QAAS,SAACC,EAAQC,EAAQpL,GAAjB,OAA0BsI,EAAQ5I,KAAR,wBAA8BM,EAAKqL,WAI1EvF,GAAiB,kBACrBkC,GAAYC,EAAZ,CAEM,kBAAC,EAAAjC,KAAD,CAAMlB,GAAI1F,EAAAA,EAAAA,YAAAA,KAAwB4C,IAAI,WAAWnF,UAAU,qBACzD,kBAAC,EAAAoJ,OAAD,CAAQqF,OAAO,qBAAqBvO,QAAQ,UAAU,aAAW,eAC9DX,EAAKc,cAAcC,EAAAA,EAAAA,eAJ9B,eE1IgB,SAAUoL,GAAc,OAAQpB,MAAAA,QAAiD,EAASA,GAAYoB,KAAgBpB,GAAYV,GFiJxI8E,CAAchD,GACd,CACE,CACEtG,MAAO7F,EAAKc,cAAcC,EAAAA,EAAAA,YAC1B+N,QAAS,WACP5C,EAAQ5I,KAAKN,EAAAA,EAAAA,YAAAA,SAInB,IAhBV,CAiBM,CACE6C,MAAO7F,EAAKc,cAAcC,EAAAA,EAAAA,MAC1BhB,MAAO,CACLqP,aAAsC,IAAxBtD,EAAanJ,SAE7BmM,QAAS,kBAAM5C,EAAQ5I,KAAR,sBAA4BwI,EAAa,GAAGmD,SAE7D,CACEpJ,MAAO7F,EAAKc,cAAcC,EAAAA,EAAAA,QAC1BhB,MAAO,CACLqP,YAAatD,EAAanJ,OAAS,GAErCmM,QAAS,WACP5C,EAAQ5I,KAAR,wBAA8BwI,EAAazH,KAAI,qBAAG4K,cAIxD,IAQAI,GAAkB,SAACC,GACvBvD,GAAgB,SAAC1C,GAAD,OACdiG,EAAajG,GACVnF,QAAO,gBAAqBqL,EAArB,EAAGC,iBAAoDC,EAAvD,EAAwCC,cAA+B/F,EAAvE,EAAuEA,OAAvE,QAAsF4F,GAAqBE,GAAkB9F,MACpItF,KAAI,kBAAqB,CAAE4K,KAAvB,EAAGA,KAA0BpJ,MAA7B,EAAS1D,aAIdwN,GAAW,SAACZ,EAAQa,EAAWC,EAAU5J,EAAQ6J,GAAtC,OACfnC,GAAY,SAAKD,IAAN,cAAiBoC,EAAQb,KAAOhJ,GAAU,EAAI4J,EAAWxC,QAAQJ,OAExE5D,GGxLkB,SAAC7J,EAAMsM,EAAc9L,EAAM0N,GAA3B,OACxBlO,EAAKC,QACH,SACEC,EADF,EAGEqQ,GAHF,MAEId,EAFJ,EAEIA,KAFJ,IAEUjL,OAAAA,OAFV,MAEmB,GAFnB,EAEuB4E,EAFvB,EAEuBA,aAAczG,EAFrC,EAEqCA,KAAMgF,EAF3C,EAE2CA,YAAawC,EAFxD,EAEwDA,OAAQqG,EAFhE,EAEgEA,YAA8BC,EAF9F,EAE6EC,gBAAyCC,EAFtH,EAE2GC,UAAmBC,EAF9H,EAE8HA,SAF9H,wBAKK3Q,GALL,CAME,CACEuP,KAAAA,EACAtF,OAAAA,EACA2G,mBAAoB3G,EACpB4G,SAAUC,QAAQ1E,MAAAA,GAAD,UAACA,EAAc1G,YAAf,aAAC,OAAA0G,GAAqB,SAACZ,GAAD,OAASA,EAAI+D,OAASA,MAC7DrP,MAAO,CACL,CAAEiB,MAAO,kBAAC,EAAA+I,KAAD,CAAMlB,GAAE,wBAAmBuG,IAASrG,GAAgBzG,IAC7D,CAAEtB,MAAOsG,GACT,CAAEtG,MAAOmP,EAAajQ,MAAO,CAAEkG,OAA2B,IAAnByH,EAASuB,KAChD,CAAEpO,MAAOoP,EAAalQ,MAAO,CAAEkG,OAA2B,IAAnByH,EAASuB,KAChD,CAAEpO,MAAO,kBAAC4P,EAAA,EAAD,CAAYC,KAAML,EAAU3O,MAAMiP,EAAAA,EAAAA,IAAcN,QAG7D,CACEpB,KAAM,GAAF,OAAKA,EAAL,gBACJ2B,OAAQ,EAAIb,EACZlB,eAAgB,EAChBgC,WAAW,EACXC,WAAW,EACXlR,MAAO,CACL,CACEG,MAAO,CAAEgR,QAAS,EAAGtQ,UAAW,mBAChCI,MACEmD,EAAOrB,OAAS,EACd,kBAAC,EAAAqO,MAAD,CACE9B,OAAO,8BACP,aAAW,eACXvO,QAASsQ,EAAAA,aAAAA,QACTrR,MAAO,CACLI,EAAKc,cAAcC,EAAAA,EAAAA,aACnBf,EAAKc,cAAcC,EAAAA,EAAAA,cACnBf,EAAKc,cAAcC,EAAAA,EAAAA,WACnBf,EAAKc,cAAcC,EAAAA,EAAAA,aAErBsI,KAAMrF,EAAOK,KAAI,SAACL,GAChB,MAAmCA,EAAOI,WAAWkB,MAAM,KAA3D,eAAO4L,EAAP,KACA,MAAO,CACLtR,MAAO,CACLsR,EAHJ,UAMI,kBAAC,EAAA/I,SAAD,CAAUvC,IAAG,UAAKsL,EAAL,cACX,kBAACT,EAAA,EAAD,CAAYC,KAAML,EAAU3O,MAAMiP,EAAAA,EAAAA,IAAcN,YAMxD,kBAAC,EAAAc,YAAD,MACA,kBAAC,EAAAC,UAAD,OAGF,kBAAC,EAAAlI,KAAD,CAAMzI,UAAU,yBAAyBT,EAAKc,cAAcC,EAAAA,EAAAA,mBAKtE,CACEkO,KAAM,GAAF,OAAKA,EAAL,WACJ2B,OAAQ,EAAIb,EACZlB,eAAgB,EAChBgC,WAAW,EACXC,WAAW,EACXlR,MAAO,CACL,CACEG,MAAO,CAAEgR,QAAS,EAAGtQ,UAAW,mBAChCI,MACEoP,EAAc,EACZ,kBAAC,EAAAe,MAAD,CACE,aAAW,eACX9B,OAAO,mCACPvO,QAASsQ,EAAAA,aAAAA,QACTrR,MAAO,CAACI,EAAKc,cAAcC,EAAAA,EAAAA,WAAqBf,EAAKc,cAAcC,EAAAA,EAAAA,cACnEsI,KAAM8G,EAAO9L,KAAI,SAACgN,GAAD,MAAY,CAAEzR,MAAO,CAACyR,EAAMlP,KAAMkP,EAAMlK,kBAEzD,kBAAC,EAAAgK,YAAD,MACA,kBAAC,EAAAC,UAAD,OAGF,kBAAC,EAAAlI,KAAD,CAAMzI,UAAU,yBAAyBT,EAAKc,cAAcC,EAAAA,EAAAA,kBAMxE,IH2FWxB,CAAWoI,EAAOmE,EAAc9L,EAAM0N,IAmEnD,OACE,kBAAC,EAAA4D,OAAD,KACE,kBAAC,IAAD,CAAiBC,WAAW,yBAAyBpM,KAAMnC,EAAAA,EAAAA,0BAAAA,MACzD,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAiBuO,WAAW,cAAcpM,KAAMnC,EAAAA,EAAAA,eAAAA,MAC9C,kBAAC,IAAD,CAAMwO,SAAU,kBAAM/H,GAAe,QAEvC,kBAAC,IAAD,CAAiB8H,WAAW,aAAapM,KAAMnC,EAAAA,EAAAA,MAAAA,KAAkByO,OAAQ,kBAzE3E,kBAAC,EAAAC,MAAD,CAAOjR,UAAU,gBACf,kBAAC,EAAAkR,UAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiB9Q,MAAOb,EAAKc,cAAcC,EAAAA,EAAAA,WAG/C,kBAAC,EAAA4Q,UAAD,KACE,kBAACC,EAAA,EAAD,CAASlQ,KAAK,UAAUwM,GAAI,aAC1B,kBAAC,IAAD,CACEjB,aAAcA,EACd4E,YAAa/F,EACbE,cAAeA,EACfqD,gBAAiBA,GACjBT,eAAgBA,GAChBxF,QAASA,EACT0I,mBAAoB,sBAAGnI,QACvBoI,WAAY9G,GACZ5B,KAAMA,GACN7J,KAAMmI,EACN2B,YAAaA,EACbC,UAAW,SAAChC,GACV,IAAQpF,EAAwCoF,EAAxCpF,KAAM2F,EAAkCP,EAAlCO,MAAOU,EAA2BjB,EAA3BiB,MAAOD,EAAoBhB,EAApBgB,OAAQkF,EAAYlG,EAAZkG,QAGpC,OAFAY,EAAAA,EAAAA,IAAqBnC,EAAS1D,EAAOD,IACrCyJ,EAAAA,GAAAA,IAAkB9F,EAAS,CAAEtD,aAAczG,IACpCoH,GAAU0I,EAAAA,EAAAA,IAAY,CAAEnK,MAAAA,EAAOU,MAAAA,EAAOD,OAAAA,EAAQkF,QAAAA,EAAS5F,QAAS,CAAEe,aAAczG,OAEzFsH,eAAgB,oBAAGtH,KAAH,OAAmBsH,QAAnB,MAAU,GAAV,IAChByI,cAAY,EACZvC,SAAUA,GACV9K,WAAYA,GAA+B,KAAlB8C,MAAAA,OAAA,EAAAA,EAAOhF,SAAwC,KAAxB2G,MAAAA,OAAA,EAAAA,EAAa3G,SAAsBkC,EACnFwC,WAAYA,EACZa,OAAQA,GACRgH,OAAO,cACPpF,YAAa9J,EAAKc,cAAcC,EAAAA,EAAAA,OAAgBgJ,cAChDC,cAAehK,EAAKc,cAAcC,EAAAA,EAAAA,MAAegJ,cACjDL,eAAgBA,GAChByI,kBAAmBnS,EAAKc,cAAcC,EAAAA,EAAAA,MAAegJ,cACrDG,QAAQ,QACRkI,OAAQ7E,GACR8E,OAAQ,SAACC,EAAGlF,EAAOE,GACjB,IAAMG,EAAU,GAAH,OAAoB,SAAdH,EAAuB,IAAM,IAAnC,OAAwClE,EAAQgE,EAAQC,OAAOJ,IAAerH,KAC3F4H,GAAe,CAAEJ,MAAAA,EAAOE,UAAAA,IA7Db,SAAC/F,GACtB,IAAQpF,EAAwCoF,EAAxCpF,KAAM2F,EAAkCP,EAAlCO,MAAOU,EAA2BjB,EAA3BiB,MAAOD,EAAoBhB,EAApBgB,OAAQkF,EAAYlG,EAAZkG,SACpCY,EAAAA,EAAAA,IAAqBnC,EAAS1D,EAAOD,IACrCyJ,EAAAA,GAAAA,IAAkB9F,EAAS,CAAEtD,aAAczG,IACpCoH,GAAU0I,EAAAA,EAAAA,IAAY,CAAEnK,MAAAA,EAAOU,MAAAA,EAAOD,OAAAA,EAAQkF,QAAAA,EAAS5F,QAAS,CAAEe,aAAczG,MA0D7EoQ,CAAe,SACVlL,GADS,IAEZkB,OAAQ,EACRkF,QAAAA,IACI5F,MAAAA,OAAA,EAAAA,EAASlF,QAAS,EAAlB,MAEKkF,EAAQpI,QACT,SAACC,EAAK8S,GAAN,UAAC,MACI9S,GADL,cAEG8S,EAAK5M,IAAM4M,EAAK7S,UAEnB,KAGJ,CAAEwC,KAAMmH","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_breakpoint_xs.js","webpack:///./src/smart-components/role/role-resource-definitions-table-helpers.js","webpack:///./src/smart-components/role/ResourceDefinitionsFormTemplate.js","webpack:///./src/smart-components/role/edit-resource-definitions-modal.js","webpack:///./src/smart-components/role/role-resource-definitions.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useScreenSize/breakpoints.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useScreenSize/getVariant.js","webpack:///./src/smart-components/role/role-row-wrapper.js","webpack:///./src/smart-components/role/roles.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useScreenSize/useScreenSize.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useScreenSize/isSmallScreen.js","webpack:///./src/smart-components/role/role-table-helpers.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.global_breakpoint_xs = {\n  \"name\": \"--pf-global--breakpoint--xs\",\n  \"value\": \"0\",\n  \"var\": \"var(--pf-global--breakpoint--xs)\"\n};\nexports[\"default\"] = exports.global_breakpoint_xs;","export const createRows = (data) =>\n  data.reduce(\n    (acc, value) => [\n      ...acc,\n      {\n        cells: [value],\n      },\n    ],\n    []\n  );\n","import React from 'react';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { Alert } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitionsFormTemplate = ({ ModalProps, ...props }) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  return (\n    <ModalFormTemplate\n      {...props}\n      ModalProps={{\n        ...ModalProps,\n        onClose: () => ModalProps.onClose(values),\n      }}\n      alert={\n        values['dual-list-select']\n          ? undefined\n          : () => (\n              <div className=\"rbac-m-resource-definitions\">\n                <Alert className=\"pf-c-modal__alert\" variant=\"danger\" isInline title={intl.formatMessage(messages.defineAtLeastOneResource)} />\n              </div>\n            )\n      }\n    />\n  );\n};\n\nResourceDefinitionsFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ResourceDefinitionsFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { updateRole, fetchRole } from '../../redux/actions/role-actions';\nimport paths from '../../utilities/pathnames';\nimport { getResource, getResourceDefinitions } from '../../redux/actions/cost-management-actions';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { WarningModal } from '../common/warningModal';\nimport { Spinner, Modal, ModalVariant, Bullseye } from '@patternfly/react-core';\nimport ResourceDefinitionsFormTemplate from './ResourceDefinitionsFormTemplate';\nimport flatten from 'lodash/flattenDeep';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst createOptions = (resources) =>\n  Object.entries(resources).reduce(\n    (acc, [key, value]) => [\n      ...acc,\n      ...value.map((r) => ({\n        value: r.value,\n        path: key,\n        label: r.value,\n      })),\n    ],\n    []\n  );\n\nconst initialState = {\n  changedResources: undefined,\n  cancelWarningVisible: false,\n  resourcesPath: undefined,\n  loadingStateVisible: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst createEditResourceDefinitionsSchema = (resources, resourcesPath, options) => {\n  const intl = useIntl();\n  return {\n    fields: [\n      {\n        component: componentTypes.DUAL_LIST_SELECT,\n        name: 'dual-list-select',\n        leftTitle: intl.formatMessage(messages.resourcesAvailable),\n        rightTitle: intl.formatMessage(messages.resourcesDefined),\n        filterOptionsTitle: intl.formatMessage(messages.filterByResource),\n        filterValueTitle: intl.formatMessage(messages.filterByResource),\n        options: [...(resourcesPath && resources ? options : [])],\n        validate: [{ type: 'validate-resources' }],\n        isSearchable: true,\n      },\n    ],\n  };\n};\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }, resourcesPath) => ({\n  resourceTypes: resourceTypes.data,\n  resources: resources[resourcesPath] ? { resourcesPath: resources[resourcesPath] } : resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst validatorMapper = {\n  'validate-resources': () => (value) => value && value.length > 0 ? undefined : 'At least one resource must be defined for this permission',\n};\n\nconst EditResourceDefinitionsModal = ({ cancelRoute }) => {\n  const intl = useIntl();\n  const routeMatch = useRouteMatch(paths['role-detail-permission-edit'].path);\n  const {\n    params: { permissionId, roleId },\n  } = useRouteMatch(routeMatch);\n  const { replace, push } = useHistory();\n\n  const dispatch = useDispatch();\n  const fetchResourceDefinitions = () => dispatch(getResourceDefinitions());\n\n  const [state, dispatchLocally] = useReducer(reducer, initialState);\n\n  const { definedResources, role } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      definedResources: state.roleReducer.selectedRole?.access\n        ? flatten(\n            state.roleReducer.selectedRole.access\n              .filter((a) => a.permission === permissionId)\n              .map((access) => access.resourceDefinitions.map((resource) => resource.attributeFilter.value))\n          )\n        : [],\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector((props) => selector(props, state.resourcesPath), shallowEqual);\n\n  useEffect(() => {\n    fetchResourceDefinitions();\n  }, [permissionId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let path = resourceTypes.find((r) => r.value === permissionId.split(':')?.[1])?.path;\n      if (path) {\n        dispatchLocally({ type: 'update', payload: { resourcesPath: path.split('/')[5] } });\n        dispatch(getResource(path));\n      }\n    }\n  }, [resourceTypes]);\n\n  const onCancel = () => replace(cancelRoute);\n\n  const handleCancel = (data) => {\n    if (data['dual-list-select'] === definedResources) {\n      onCancel();\n    } else {\n      dispatchLocally({\n        type: 'update',\n        payload: {\n          changedResources: data['dual-list-select'],\n          cancelWarningVisible: true,\n        },\n      });\n    }\n  };\n\n  const handleSubmit = (data) => {\n    dispatchLocally({ type: 'update', payload: { changedResources: data['dual-list-select'] } });\n    const newAccess = {\n      permission: permissionId,\n      resourceDefinitions: [\n        {\n          attributeFilter: {\n            key: `cost-management.${permissionId.split(':')?.[1]}`,\n            operation: data['dual-list-select'].length === 1 ? 'equal' : 'in',\n            value: data['dual-list-select'].length === 1 ? data['dual-list-select'][0] : data['dual-list-select'],\n          },\n        },\n      ],\n    };\n    dispatch(updateRole(roleId, { ...role, access: [...role.access.filter((item) => item.permission !== permissionId), newAccess] }), true).then(\n      () => {\n        dispatch(fetchRole(roleId));\n        push(cancelRoute);\n      }\n    );\n  };\n\n  const options = createOptions(resources);\n\n  return (\n    <React.Fragment>\n      <WarningModal\n        customTitle={intl.formatMessage(messages.exitEditResourceDefinitions)}\n        customDescription={intl.formatMessage(messages.changesWillBeLost)}\n        isOpen={state.cancelWarningVisible}\n        onModalCancel={() => dispatchLocally({ type: 'update', payload: { cancelWarningVisible: false } })}\n        onConfirmCancel={onCancel}\n      ></WarningModal>\n      {(isLoading || isLoadingResources) && state.loadingStateVisible ? (\n        <Modal\n          variant={ModalVariant.large}\n          className=\"rbac-m-resource-definitions\"\n          isOpen={true}\n          title={intl.formatMessage(messages.editResourceDefinitions)}\n          onClose={() => {\n            dispatchLocally({ type: 'update', payload: { loadingStateVisible: false } });\n            onCancel();\n          }}\n        >\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        </Modal>\n      ) : (\n        <FormRenderer\n          schema={createEditResourceDefinitionsSchema(resources, state.resourcesPath, options)}\n          componentMapper={componentMapper}\n          initialValues={{ 'dual-list-select': state.changedResources || definedResources || [] }}\n          onSubmit={handleSubmit}\n          onCancel={(data) => handleCancel(data)}\n          validatorMapper={validatorMapper}\n          FormTemplate={(props) => (\n            <ResourceDefinitionsFormTemplate\n              {...props}\n              ModalProps={{\n                onClose: handleCancel,\n                isOpen: !state.cancelWarningVisible,\n                variant: 'large',\n                title: intl.formatMessage(messages.editResourceDefinitions),\n                description: intl.formatMessage(messages.editPermissionsUsingArrows),\n              }}\n            />\n          )}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nEditResourceDefinitionsModal.propTypes = {\n  cancelRoute: PropTypes.string.isRequired,\n};\n\nexport default EditResourceDefinitionsModal;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants, Level, LevelItem, Button } from '@patternfly/react-core';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-resource-definitions-table-helpers';\nimport { useParams, Link, Route } from 'react-router-dom';\nimport { TopToolbar } from '../../presentational-components/shared/top-toolbar';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { ToolbarTitlePlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport paths from '../../utilities/pathnames';\nimport EditResourceDefinitionsModal from './edit-resource-definitions-modal';\nimport { getBackRoute } from '../../helpers/shared/helpers';\nimport flatten from 'lodash/flatten';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitions = () => {\n  const intl = useIntl();\n  const [config, setConfig] = useState({\n    pagination: {\n      ...defaultSettings,\n      filter: '',\n    },\n  });\n\n  const { pagination, filter } = config;\n\n  const dispatch = useDispatch();\n\n  const { roleId, permissionId } = useParams();\n\n  const { role, permission, isRecordLoading, rolesPagination, rolesFilters } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      permission: state.roleReducer.selectedRole.access\n        ? {\n            ...state.roleReducer.selectedRole?.access.find((a) => a.permission === permissionId),\n          }\n        : {},\n      isRecordLoading: state.roleReducer.isRecordLoading,\n      rolesPagination: state.roleReducer?.roles?.pagination || defaultSettings,\n      rolesFilters: state.roleReducer?.roles?.filters || {},\n    }),\n    shallowEqual\n  );\n\n  const fetchData = () => {\n    dispatch(fetchRole(roleId));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [roleId]);\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0,\n      },\n    });\n  }, [role]);\n\n  const filteredRows = permission.resourceDefinitions\n    ? flatten(permission.resourceDefinitions.map((definition) => definition.attributeFilter.value)).filter((value) =>\n        filter ? value.includes(filter) : true\n      )\n    : [];\n\n  const routes = () => (\n    <Fragment>\n      <Route exact path={paths['role-detail-permission-edit'].path}>\n        <EditResourceDefinitionsModal\n          cancelRoute={paths['role-detail-permission'].path.replace(':roleId', roleId).replace(':permissionId', permissionId)}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const toolbarButtons = () =>\n    !role.system\n      ? [\n          <Fragment key=\"edit-resource-definitions\">\n            <Link to={`/roles/detail/${roleId}/permission/${permissionId}/edit`}>\n              <Button variant=\"primary\" aria-label=\"Edit\">\n                {intl.formatMessage(messages.edit)}\n              </Button>\n            </Link>\n          </Fragment>,\n        ]\n      : [];\n  const data = filteredRows.slice(pagination.offset, pagination.offset + pagination.limit);\n\n  return (\n    <Fragment>\n      <TopToolbar\n        breadcrumbs={[\n          { title: intl.formatMessage(messages.roles), to: getBackRoute(routes.roles, rolesPagination, rolesFilters) },\n          { title: isRecordLoading ? undefined : role && (role.display_name || role.name), to: `/roles/detail/${roleId}` },\n          { title: permissionId, isActive: true },\n        ]}\n      >\n        <Level>\n          <LevelItem>\n            <PageHeaderTitle title={permissionId || <ToolbarTitlePlaceholder />} className=\"rbac-page-header__title\" />\n          </LevelItem>\n        </Level>\n      </TopToolbar>\n      <section className=\"pf-c-page__main-section rbac-c-role__permissions\">\n        <TextContent>\n          <Text component={TextVariants.h1}>{intl.formatMessage(messages.definedResources)}</Text>\n        </TextContent>\n        <TableToolbarView\n          columns={[{}]}\n          rows={createRows(data)}\n          data={data}\n          filterValue={filter}\n          fetchData={({ limit, offset, name }) =>\n            setConfig({\n              ...config,\n              filter: name,\n              pagination: {\n                ...config.pagination,\n                limit,\n                offset,\n              },\n            })\n          }\n          isCompact\n          routes={routes}\n          setFilterValue={({ name }) =>\n            setConfig({\n              ...config,\n              filter: name,\n            })\n          }\n          toolbarButtons={toolbarButtons}\n          isLoading={isRecordLoading}\n          pagination={{\n            ...pagination,\n            count: filteredRows.length,\n          }}\n          titlePlural={intl.formatMessage(messages.resources).toLowerCase()}\n          titleSingular={intl.formatMessage(messages.resource).toLowerCase()}\n          hideHeader\n          tableId=\"role-resource-definitions\"\n        />\n      </section>\n    </Fragment>\n  );\n};\n\nexport default ResourceDefinitions;\n","import xsBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_xs';\nimport smBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_sm';\nimport mdBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_md';\nimport lgBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_lg';\nimport xlBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_xl';\nimport xxlBreakpoint from '@patternfly/react-tokens/dist/js/global_breakpoint_2xl';\nvar breakPoints = {\n    xs: parseInt(xsBreakpoint.value.replace('px', '')),\n    sm: parseInt(smBreakpoint.value.replace('px', '')),\n    md: parseInt(mdBreakpoint.value.replace('px', '')),\n    lg: parseInt(lgBreakpoint.value.replace('px', '')),\n    xl: parseInt(xlBreakpoint.value.replace('px', '')),\n    '2xl': parseInt(xxlBreakpoint.value.replace('px', '')),\n};\nexport default breakPoints;\n//# sourceMappingURL=breakpoints.js.map","import breakpoints from './breakpoints';\nvar getVariant = function () {\n    var width = window.innerWidth;\n    var result;\n    for (var _i = 0, _a = Object.entries(breakpoints); _i < _a.length; _i++) {\n        var _b = _a[_i], variant = _b[0], size = _b[1];\n        if (size >= width) {\n            break;\n        }\n        result = variant;\n    }\n    return result;\n};\nexport default getVariant;\n//# sourceMappingURL=getVariant.js.map","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst RoleRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={classnames(className, {\n        'rbac-c-role-default': row.system,\n      })}\n      row={row}\n      {...props}\n    />\n  );\n};\n\nRoleRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    system: PropTypes.bool,\n  }),\n  className: PropTypes.string,\n};\n\nexport default RoleRowWrapper;\n","import React, { Fragment, Suspense, useState, useEffect, lazy, useContext, useRef } from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { cellWidth, compoundExpand, nowrap, sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport { createRows } from './role-table-helpers';\nimport { getBackRoute, mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport RemoveRole from './remove-role-modal';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport Role from './role';\nimport paths from '../../utilities/pathnames';\nimport EditRole from './edit-role-modal';\nimport PageActionRoute from '../common/page-action-route';\nimport ResourceDefinitions from './role-resource-definitions';\nimport PermissionsContext from '../../utilities/permissions-context';\nimport {\n  syncDefaultPaginationWithUrl,\n  applyPaginationToUrl,\n  isPaginationPresentInUrl,\n  defaultAdminSettings,\n  defaultSettings,\n} from '../../helpers/shared/pagination';\nimport { syncDefaultFiltersWithUrl, applyFiltersToUrl, areFiltersPresentInUrl } from '../../helpers/shared/filters';\nimport { useScreenSize, isSmallScreen } from '@redhat-cloud-services/frontend-components/useScreenSize';\nimport messages from '../../Messages';\nimport RoleRowWrapper from './role-row-wrapper';\nimport './roles.scss';\n\nconst AddRoleWizard = lazy(() => import(/* webpackChunkname: \"AddRoleWizard\" */ './add-role/add-role-wizard'));\n\nconst selector = ({ roleReducer: { roles, isLoading } }) => ({\n  roles: roles.data,\n  filters: roles.filters,\n  meta: roles.pagination,\n  isLoading,\n});\n\nconst Roles = () => {\n  const { orgAdmin, userAccessAdministrator } = useContext(PermissionsContext);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const textFilterRef = useRef(null);\n  const history = useHistory();\n  const screenSize = useScreenSize();\n\n  const { roles, filters, meta, isLoading } = useSelector(selector, shallowEqual);\n\n  const columns = [\n    { title: intl.formatMessage(messages.name), key: 'display_name', transforms: [cellWidth(20), sortable] },\n    { title: intl.formatMessage(messages.description) },\n    { title: intl.formatMessage(messages.permissions), cellTransforms: [compoundExpand], transforms: [nowrap] },\n    { title: intl.formatMessage(messages.groups), cellTransforms: [compoundExpand], transforms: [nowrap] },\n    { title: intl.formatMessage(messages.lastModified), key: 'modified', transforms: [nowrap, sortable] },\n  ];\n  const fetchData = (options) => dispatch(fetchRolesWithPolicies({ ...options, inModal: false }));\n\n  const isSelectable = orgAdmin || userAccessAdministrator;\n  const [pagination, setPagination] = useState({ ...(orgAdmin ? defaultAdminSettings : defaultSettings), ...meta });\n  const [filterValue, setFilterValue] = useState(filters.display_name || '');\n  const [sortByState, setSortByState] = useState({ index: Number(isSelectable), direction: 'asc' });\n  const orderBy = `${sortByState?.direction === 'desc' ? '-' : ''}${columns[sortByState?.index - Number(isSelectable)].key}`;\n  const [expanded, setExpanded] = useState({});\n\n  useEffect(() => {\n    const syncedPagination = syncDefaultPaginationWithUrl(history, pagination);\n    setPagination(syncedPagination);\n    const { display_name } = syncDefaultFiltersWithUrl(history, ['display_name'], { display_name: filterValue });\n    setFilterValue(display_name);\n    insights.chrome.appNavClick({ id: 'roles', secondaryNav: true });\n    fetchData({ ...syncedPagination, orderBy, filters: { display_name } });\n  }, []);\n\n  useEffect(() => {\n    setFilterValue(filters?.display_name || '');\n    setPagination(meta);\n  }, [filters, meta]);\n\n  useEffect(() => {\n    meta.redirected && applyPaginationToUrl(history, meta.limit, meta.offset);\n  }, [meta.redirected]);\n\n  useEffect(() => {\n    isPaginationPresentInUrl(history) || applyPaginationToUrl(history, pagination.limit, pagination.offset);\n    filterValue?.length > 0 &&\n      !areFiltersPresentInUrl(history, ['display_name']) &&\n      syncDefaultFiltersWithUrl(history, ['display_name'], { display_name: filterValue });\n  });\n\n  const routes = () => (\n    <Suspense fallback={<Fragment />}>\n      <Route exact path={paths['add-role'].path}>\n        <AddRoleWizard pagination={pagination} orderBy={orderBy} filters={{ display_name: filterValue }} />\n      </Route>\n      <Route exact path={paths['remove-role'].path}>\n        {!isLoading && (\n          <RemoveRole\n            routeMatch={paths['remove-role'].path}\n            afterSubmit={() => {\n              setSelectedRows([]);\n              fetchData({ ...pagination, offset: 0, orderBy, filters: { display_name: filterValue } }, true);\n            }}\n            cancelRoute={getBackRoute(paths.roles.path, pagination, filters)}\n            submitRoute={getBackRoute(paths.roles.path, { ...pagination, offset: 0 }, filters)}\n          />\n        )}\n      </Route>\n      <Route exact path={paths['edit-role'].path}>\n        {!isLoading && (\n          <EditRole\n            afterSubmit={() => fetchData({ ...pagination, offset: 0, orderBy, filters: { display_name: filterValue } }, true)}\n            routeMatch={paths['edit-role'].path}\n            cancelRoute={getBackRoute(paths.roles.path, pagination, filters)}\n            submitRoute={getBackRoute(paths.roles.path, { ...pagination, offset: 0 }, filters)}\n          />\n        )}\n      </Route>\n    </Suspense>\n  );\n\n  const actionResolver = (row) =>\n    row.compoundParent\n      ? []\n      : [\n          {\n            title: intl.formatMessage(messages.edit),\n            onClick: (_event, _rowId, role) => history.push(`/roles/edit/${role.uuid}`),\n          },\n          {\n            title: intl.formatMessage(messages.delete),\n            onClick: (_event, _rowId, role) => history.push(`/roles/remove/${role.uuid}`),\n          },\n        ];\n\n  const toolbarButtons = () =>\n    orgAdmin || userAccessAdministrator\n      ? [\n          <Link to={paths['add-role'].path} key=\"add-role\" className=\"rbac-m-hide-on-sm\">\n            <Button ouiaId=\"create-role-button\" variant=\"primary\" aria-label=\"Create role\">\n              {intl.formatMessage(messages.createRole)}\n            </Button>\n          </Link>,\n          ...(isSmallScreen(screenSize)\n            ? [\n                {\n                  label: intl.formatMessage(messages.createRole),\n                  onClick: () => {\n                    history.push(paths['add-role'].path);\n                  },\n                },\n              ]\n            : []),\n          {\n            label: intl.formatMessage(messages.edit),\n            props: {\n              isDisabled: !(selectedRows.length === 1),\n            },\n            onClick: () => history.push(`/roles/edit/${selectedRows[0].uuid}`),\n          },\n          {\n            label: intl.formatMessage(messages.delete),\n            props: {\n              isDisabled: !selectedRows.length > 0,\n            },\n            onClick: () => {\n              history.push(`/roles/remove/${selectedRows.map(({ uuid }) => uuid)}`);\n            },\n          },\n        ]\n      : [];\n  const fetchTableData = (config) => {\n    const { name, count, limit, offset, orderBy } = config;\n    applyPaginationToUrl(history, limit, offset);\n    applyFiltersToUrl(history, { display_name: name });\n    return fetchData(mappedProps({ count, limit, offset, orderBy, filters: { display_name: name } }));\n  };\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) =>\n      newSelection(rows)\n        .filter(({ platform_default: isPlatformDefault, admin_default: isAdminDefault, system }) => !(isPlatformDefault || isAdminDefault || system))\n        .map(({ uuid, name }) => ({ uuid, label: name }))\n    );\n  };\n\n  const onExpand = (_event, _rowIndex, colIndex, isOpen, rowData) =>\n    setExpanded({ ...expanded, [rowData.uuid]: isOpen ? -1 : colIndex + Number(!isSelectable) });\n\n  const rows = createRows(roles, selectedRows, intl, expanded);\n  const renderRolesList = () => (\n    <Stack className=\"rbac-c-roles\">\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title={intl.formatMessage(messages.roles)} />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={'tab-roles'}>\n          <TableToolbarView\n            isSelectable={isSelectable}\n            checkedRows={selectedRows}\n            textFilterRef={textFilterRef}\n            setCheckedItems={setCheckedItems}\n            actionResolver={actionResolver}\n            columns={columns}\n            areActionsDisabled={({ system }) => !!system}\n            rowWrapper={RoleRowWrapper}\n            rows={rows}\n            data={roles}\n            filterValue={filterValue}\n            fetchData={(config) => {\n              const { name, count, limit, offset, orderBy } = config;\n              applyPaginationToUrl(history, limit, offset);\n              applyFiltersToUrl(history, { display_name: name });\n              return fetchData(mappedProps({ count, limit, offset, orderBy, filters: { display_name: name } }));\n            }}\n            setFilterValue={({ name = '' }) => setFilterValue(name)}\n            isExpandable\n            onExpand={onExpand}\n            isLoading={!isLoading && roles?.length === 0 && filterValue?.length === 0 ? true : isLoading}\n            pagination={pagination}\n            routes={routes}\n            ouiaId=\"roles-table\"\n            titlePlural={intl.formatMessage(messages.roles).toLowerCase()}\n            titleSingular={intl.formatMessage(messages.role).toLowerCase()}\n            toolbarButtons={toolbarButtons}\n            filterPlaceholder={intl.formatMessage(messages.name).toLowerCase()}\n            tableId=\"roles\"\n            sortBy={sortByState}\n            onSort={(e, index, direction) => {\n              const orderBy = `${direction === 'desc' ? '-' : ''}${columns[index - Number(isSelectable)].key}`;\n              setSortByState({ index, direction });\n              fetchTableData({\n                ...pagination,\n                offset: 0,\n                orderBy,\n                ...(filters?.length > 0\n                  ? {\n                      ...filters.reduce(\n                        (acc, curr) => ({\n                          ...acc,\n                          [curr.key]: curr.value,\n                        }),\n                        {}\n                      ),\n                    }\n                  : { name: filterValue }),\n              });\n            }}\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n\n  return (\n    <Switch>\n      <PageActionRoute pageAction=\"role-detail-permission\" path={paths['role-detail-permission'].path}>\n        <ResourceDefinitions />\n      </PageActionRoute>\n      <PageActionRoute pageAction=\"role-detail\" path={paths['role-detail'].path}>\n        <Role onDelete={() => setFilterValue('')} />\n      </PageActionRoute>\n      <PageActionRoute pageAction=\"roles-list\" path={paths.roles.path} render={() => renderRolesList()} />\n    </Switch>\n  );\n};\n\nexport default Roles;\n","import { useEffect, useRef, useState } from 'react';\nimport getVariant from './getVariant';\nvar useScreen = function () {\n    var _a = useState(function () { return getVariant(); }), variant = _a[0], setVariant = _a[1];\n    var prev = useRef(variant);\n    useEffect(function () {\n        function handleResize() {\n            var newVariant = getVariant();\n            if (newVariant !== prev.current) {\n                prev.current = newVariant;\n                setVariant(newVariant);\n            }\n        }\n        window.addEventListener('resize', handleResize);\n        return function () { return window.removeEventListener('resize', handleResize); };\n    }, []);\n    return variant;\n};\nexport default useScreen;\n//# sourceMappingURL=useScreenSize.js.map","import breakpoints from './breakpoints';\nvar isSmallScreen = function (screenSize) { return (breakpoints === null || breakpoints === void 0 ? void 0 : breakpoints[screenSize]) <= breakpoints.sm; };\nexport default isSmallScreen;\n//# sourceMappingURL=isSmallScreen.js.map","import React, { Fragment } from 'react';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { getDateFormat } from '../../helpers/shared/helpers';\nimport { Text } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport messages from '../../Messages';\n\nexport const createRows = (data, selectedRows, intl, expanded) =>\n  data.reduce(\n    (\n      acc,\n      { uuid, access = [], display_name, name, description, system, accessCount, groups_in_count: groupsCount, groups_in: groups, modified },\n      i\n    ) => [\n      ...acc,\n      {\n        uuid,\n        system,\n        disableSelection: !!system,\n        selected: Boolean(selectedRows?.find?.((row) => row.uuid === uuid)),\n        cells: [\n          { title: <Link to={`/roles/detail/${uuid}`}>{display_name || name}</Link> },\n          { title: description },\n          { title: accessCount, props: { isOpen: expanded[uuid] === 3 } },\n          { title: groupsCount, props: { isOpen: expanded[uuid] === 4 } },\n          { title: <DateFormat date={modified} type={getDateFormat(modified)} /> },\n        ],\n      },\n      {\n        uuid: `${uuid}-permissions`,\n        parent: 3 * i,\n        compoundParent: 2,\n        fullWidth: true,\n        noPadding: true,\n        cells: [\n          {\n            props: { colSpan: 7, className: 'pf-m-no-padding' },\n            title:\n              access.length > 0 ? (\n                <Table\n                  ouiaId=\"groups-in-role-nested-table\"\n                  aria-label=\"Simple Table\"\n                  variant={TableVariant.compact}\n                  cells={[\n                    intl.formatMessage(messages.application),\n                    intl.formatMessage(messages.resourceType),\n                    intl.formatMessage(messages.operation),\n                    intl.formatMessage(messages.lastCommit),\n                  ]}\n                  rows={access.map((access) => {\n                    const [appName, type, operation] = access.permission.split(':');\n                    return {\n                      cells: [\n                        appName,\n                        type,\n                        operation,\n                        <Fragment key={`${appName}-modified`}>\n                          <DateFormat date={modified} type={getDateFormat(modified)} />\n                        </Fragment>,\n                      ],\n                    };\n                  })}\n                >\n                  <TableHeader />\n                  <TableBody />\n                </Table>\n              ) : (\n                <Text className=\"pf-u-mx-lg pf-u-my-sm\">{intl.formatMessage(messages.noPermissions)}</Text>\n              ),\n          },\n        ],\n      },\n      {\n        uuid: `${uuid}-groups`,\n        parent: 3 * i,\n        compoundParent: 3,\n        fullWidth: true,\n        noPadding: true,\n        cells: [\n          {\n            props: { colSpan: 7, className: 'pf-m-no-padding' },\n            title:\n              groupsCount > 0 ? (\n                <Table\n                  aria-label=\"Simple Table\"\n                  ouiaId=\"permissions-in-role-nested-table\"\n                  variant={TableVariant.compact}\n                  cells={[intl.formatMessage(messages.groupName), intl.formatMessage(messages.description)]}\n                  rows={groups.map((group) => ({ cells: [group.name, group.description] }))}\n                >\n                  <TableHeader />\n                  <TableBody />\n                </Table>\n              ) : (\n                <Text className=\"pf-u-mx-lg pf-u-my-sm\">{intl.formatMessage(messages.noGroups)}</Text>\n              ),\n          },\n        ],\n      },\n    ],\n    []\n  );\n"],"names":["exports","createRows","data","reduce","acc","value","cells","ResourceDefinitionsFormTemplate","ModalProps","props","intl","useIntl","values","useFormApi","getState","ModalFormTemplate","onClose","alert","undefined","className","Alert","variant","isInline","title","formatMessage","messages","propTypes","PropTypes","initialState","changedResources","cancelWarningVisible","resourcesPath","loadingStateVisible","reducer","state","action","type","payload","Error","createEditResourceDefinitionsSchema","resources","options","fields","component","componentTypes","name","leftTitle","rightTitle","filterOptionsTitle","filterValueTitle","validate","isSearchable","validatorMapper","length","EditResourceDefinitionsModal","cancelRoute","routeMatch","useRouteMatch","paths","params","permissionId","roleId","useHistory","replace","push","dispatch","useDispatch","useReducer","dispatchLocally","useSelector","role","roleReducer","selectedRole","definedResources","access","flatten","filter","a","permission","map","resourceDefinitions","resource","attributeFilter","isRecordLoading","shallowEqual","costReducer","resourceTypes","isLoading","loadingResources","isLoadingResources","selector","useEffect","getResourceDefinitions","path","find","r","split","getResource","onCancel","handleCancel","Object","entries","key","label","createOptions","customTitle","customDescription","isOpen","onModalCancel","onConfirmCancel","Modal","ModalVariant","Bullseye","Spinner","schema","componentMapper","initialValues","onSubmit","newAccess","operation","updateRole","item","then","fetchRole","FormTemplate","description","useState","pagination","defaultSettings","config","setConfig","useParams","rolesPagination","roles","rolesFilters","filters","count","filteredRows","definition","includes","routes","Fragment","Route","exact","slice","offset","limit","breadcrumbs","to","getBackRoute","display_name","isActive","Level","LevelItem","PageHeaderTitle","TextContent","Text","TextVariants","columns","rows","filterValue","fetchData","isCompact","setFilterValue","toolbarButtons","system","Link","Button","titlePlural","toLowerCase","titleSingular","hideHeader","tableId","xs","parseInt","sm","md","lg","xl","result","width","window","innerWidth","_i","_a","breakpoints","_b","RoleRowWrapper","row","RowWrapper","classnames","AddRoleWizard","lazy","meta","setVariant","prev","useContext","PermissionsContext","orgAdmin","userAccessAdministrator","selectedRows","setSelectedRows","textFilterRef","useRef","history","screenSize","handleResize","newVariant","current","addEventListener","removeEventListener","transforms","cellWidth","sortable","cellTransforms","compoundExpand","nowrap","fetchRolesWithPolicies","inModal","isSelectable","defaultAdminSettings","setPagination","index","Number","direction","sortByState","setSortByState","orderBy","expanded","setExpanded","syncedPagination","syncDefaultPaginationWithUrl","syncDefaultFiltersWithUrl","insights","chrome","appNavClick","id","secondaryNav","redirected","applyPaginationToUrl","isPaginationPresentInUrl","areFiltersPresentInUrl","Suspense","fallback","afterSubmit","submitRoute","actionResolver","compoundParent","onClick","_event","_rowId","uuid","ouiaId","isSmallScreen","isDisabled","setCheckedItems","newSelection","isPlatformDefault","platform_default","isAdminDefault","admin_default","onExpand","_rowIndex","colIndex","rowData","i","accessCount","groupsCount","groups_in_count","groups","groups_in","modified","disableSelection","selected","Boolean","DateFormat","date","getDateFormat","parent","fullWidth","noPadding","colSpan","Table","TableVariant","appName","TableHeader","TableBody","group","Switch","pageAction","onDelete","render","Stack","StackItem","Section","checkedRows","areActionsDisabled","rowWrapper","applyFiltersToUrl","mappedProps","isExpandable","filterPlaceholder","sortBy","onSort","e","fetchTableData","curr"],"sourceRoot":""}
{"version":3,"file":"js/345.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/WarningModal/WarningModal.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-success.js","webpack:///./src/smart-components/role/add-role-permissions/review-template.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permission-wizard.js","webpack:///./src/smart-components/role/add-role-permissions/add-role-permissions-summary-content.js","webpack:///./src/smart-components/role/add-role-permissions/schema.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalVariant, ButtonVariant, Checkbox } from '@patternfly/react-core';\nconst WarningModal = (_a) => {\n    var { isOpen, onConfirm, onClose, children, confirmButtonLabel = 'Confirm', cancelButtonLabel = 'Cancel', variant = ModalVariant.small, titleIconVariant = 'warning', withCheckbox = false, checkboxLabel = 'I understand that this action cannot be undone', confirmButtonVariant = ButtonVariant.primary, ouiaId = 'WarningModal' } = _a, props = __rest(_a, [\"isOpen\", \"onConfirm\", \"onClose\", \"children\", \"confirmButtonLabel\", \"cancelButtonLabel\", \"variant\", \"titleIconVariant\", \"withCheckbox\", \"checkboxLabel\", \"confirmButtonVariant\", \"ouiaId\"]);\n    const [checked, setChecked] = useState(false);\n    return (React.createElement(Modal, Object.assign({ variant: variant, isOpen: isOpen, onClose: onClose, onEscapePress: onClose, titleIconVariant: titleIconVariant, actions: [\n            React.createElement(Button, { ouiaId: `${ouiaId}-confirm-button`, key: \"confirm\", variant: confirmButtonVariant, onClick: () => {\n                    onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm();\n                    setChecked(false);\n                }, isDisabled: withCheckbox && !checked }, confirmButtonLabel),\n            React.createElement(Button, { ouiaId: `${ouiaId}-cancel-button`, key: \"cancel\", variant: ButtonVariant.link, onClick: onClose }, cancelButtonLabel),\n        ], ouiaId: ouiaId }, props),\n        children,\n        withCheckbox ? (React.createElement(Checkbox, { isChecked: checked, onChange: (_event, value) => setChecked(value), label: checkboxLabel, id: \"warning-modal-check\", className: \"pf-v5-u-mt-lg\", ouiaId: `${ouiaId}-confirm-checkbox` })) : null));\n};\nexport default WarningModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateHeader, EmptyStateFooter } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport { fetchRole } from '../../../redux/actions/role-actions.js';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames.js';\n\nconst AddRolePermissionSuccess = ({ currentRoleID }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <EmptyState>\n        <EmptyStateHeader\n          titleText={<>{intl.formatMessage(messages.permissionsAddedSuccessfully)}</>}\n          icon={<EmptyStateIcon color=\"green\" icon={CheckCircleIcon} />}\n          headingLevel=\"h4\"\n        />\n        <EmptyStateBody />\n        <EmptyStateFooter>\n          <AppLink to={pathnames['role-detail'].link.replace(':roleId', currentRoleID)}>\n            <Button onClick={() => dispatch(fetchRole(currentRoleID))}>{intl.formatMessage(messages.exit)}</Button>\n          </AppLink>\n        </EmptyStateFooter>\n      </EmptyState>\n    </>\n  );\n};\n\nexport default AddRolePermissionSuccess;\n\nAddRolePermissionSuccess.propTypes = {\n  currentRoleID: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { AddRolePermissionWizardContext } from './add-role-permission-wizard';\nimport '../add-role/review.scss';\n\nconst ReviewTemplate = ({ formFields }) => {\n  const { submitting } = useContext(AddRolePermissionWizardContext);\n\n  if (submitting) {\n    return (\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    );\n  }\n\n  return <div className=\"rbac\">{[[{ ...formFields?.[0]?.[0] }]]}</div>;\n};\n\nReviewTemplate.propTypes = {\n  formFields: PropTypes.array,\n};\n\nexport default ReviewTemplate;\n","import React, { useState, useEffect, useRef, createContext, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core/deprecated';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { updateRole } from '../../../redux/actions/role-actions.js';\nimport AddPermissionsTable from '../add-role/add-permissions';\nimport AddRolePermissionSummaryContent from './add-role-permissions-summary-content';\nimport AddRolePermissionSuccess from './add-role-permission-success';\nimport CostResources from '../add-role/cost-resources';\nimport InventoryGroupsRole from '../add-role/inventory-groups-role';\nimport { schemaBuilder } from './schema';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nexport const mapperExtension = {\n  'add-permissions-table': AddPermissionsTable,\n  'inventory-groups-role': InventoryGroupsRole,\n  'cost-resources': CostResources,\n  review: AddRolePermissionSummaryContent,\n};\n\nexport const AddRolePermissionWizardContext = createContext({\n  success: false,\n  submitting: false,\n  error: undefined,\n});\n\nconst AddRolePermissionWizard = ({ role }) => {\n  const intl = useIntl();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [currentRoleID, setCurrentRoleID] = useState('');\n  const navigate = useAppNavigate();\n  const dispatch = useDispatch();\n  const enableWorkspacesNameChange = useFlag('platform.rbac.groups-to-workspaces-rename');\n  const [wizardContextValue, setWizardContextValue] = useState({\n    success: false,\n    submitting: false,\n    error: undefined,\n    hideForm: false,\n  });\n  const container = useRef(document.createElement('div'));\n  const setWizardError = (error) => setWizardContextValue((prev) => ({ ...prev, error }));\n  const setWizardSuccess = (success) => setWizardContextValue((prev) => ({ ...prev, success }));\n  const setHideForm = (hideForm) => setWizardContextValue((prev) => ({ ...prev, hideForm }));\n  const schema = useMemo(() => schemaBuilder(container.current, enableWorkspacesNameChange), []);\n\n  useEffect(() => {\n    setCurrentRoleID(role.uuid);\n  });\n\n  useEffect(() => {\n    container.current.hidden = cancelWarningVisible;\n  }, [cancelWarningVisible]);\n\n  const handleWizardCancel = () => {\n    setCancelWarningVisible(true);\n  };\n\n  const handleConfirmCancel = () => {\n    navigate(pathnames['role-detail'].link.replace(':roleId', role.uuid));\n  };\n\n  const onSubmit = async (formData) => {\n    const {\n      'add-permissions-table': selectedPermissions,\n      'cost-resources': costResources = [],\n      'inventory-groups-role': invResources = [],\n    } = formData;\n\n    const selectedPermissionIds = [...role.access.map((record) => record.permission), ...selectedPermissions.map((record) => record.uuid)];\n    const roleData = {\n      ...role,\n      access: [\n        ...selectedPermissions.reduce(\n          (acc, { uuid: permission, requires }) => [\n            ...acc,\n            ...[permission, ...requires.filter((require) => !selectedPermissionIds.includes(require))].map((permission) => ({\n              permission,\n              resourceDefinitions: [...costResources, ...invResources]?.find((r) => r.permission === permission)\n                ? permission.includes('inventory')\n                  ? [\n                      {\n                        attributeFilter: {\n                          key: 'group.id',\n                          operation: 'in',\n                          value: invResources?.find((g) => g.permission === permission)?.groups?.map((group) => group?.id),\n                        },\n                      },\n                    ]\n                  : permission.includes('cost-management')\n                  ? [\n                      {\n                        attributeFilter: {\n                          key: `cost-management.${permission.split(':')[1]}`,\n                          operation: 'in',\n                          value: costResources?.find((r) => r.permission === permission).resources,\n                        },\n                      },\n                    ]\n                  : []\n                : [],\n            })),\n          ],\n          role.access\n        ),\n      ],\n      accessCount: role.accessCount + selectedPermissions.length,\n    };\n\n    setWizardContextValue((prev) => ({ ...prev, submitting: true }));\n    dispatch(updateRole(currentRoleID, roleData))\n      .then(() => setWizardContextValue((prev) => ({ ...prev, submitting: false, success: true, hideForm: true })))\n      .catch(() => {\n        setWizardContextValue((prev) => ({ ...prev, submitting: false, success: false, hideForm: true }));\n        navigate(pathnames['role-detail'].link.replace(':roleId', role.uuid));\n      });\n  };\n\n  return (\n    <AddRolePermissionWizardContext.Provider\n      value={{ ...wizardContextValue, setWizardError, setWizardSuccess, setHideForm, rolePermissions: role.access }}\n    >\n      <WarningModal\n        title={intl.formatMessage(messages.exitItemAdding, { item: intl.formatMessage(messages.permissions).toLocaleLowerCase() })}\n        isOpen={cancelWarningVisible}\n        onClose={() => setCancelWarningVisible(false)}\n        confirmButtonLabel={intl.formatMessage(messages.discard)}\n        onConfirm={handleConfirmCancel}\n      >\n        {intl.formatMessage(messages.discardedInputsWarning)}\n      </WarningModal>\n      {wizardContextValue.hideForm ? (\n        wizardContextValue.success ? (\n          <Wizard\n            title={intl.formatMessage(messages.addPermissions)}\n            isOpen\n            steps={[\n              {\n                name: 'success',\n                component: <AddRolePermissionSuccess currentRoleID={currentRoleID} />,\n                isFinishedStep: true,\n              },\n            ]}\n            onClose={handleConfirmCancel}\n          />\n        ) : null\n      ) : (\n        <FormRenderer\n          container={container}\n          schema={schema}\n          subscription={{ values: true }}\n          FormTemplate={FormTemplate}\n          initialValues={{\n            'role-uuid': role.uuid,\n            'role-type': 'create',\n            'role-name': role.display_name,\n            'role-description': role.description,\n          }}\n          componentMapper={{ ...componentMapper, ...mapperExtension }}\n          onSubmit={onSubmit}\n          onCancel={(values) => {\n            if (values && values['add-permissions-table']?.length > 0) {\n              handleWizardCancel();\n            } else {\n              handleConfirmCancel();\n            }\n          }}\n        />\n      )}\n    </AddRolePermissionWizardContext.Provider>\n  );\n};\n\nAddRolePermissionWizard.defaultProps = {\n  role: {},\n};\n\nAddRolePermissionWizard.propTypes = {\n  role: PropTypes.object,\n};\n\nexport default AddRolePermissionWizard;\n","import React from 'react';\nimport { Grid, GridItem, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst AddRolePermissionSummaryContent = () => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const {\n    'role-name': name,\n    'role-description': description,\n    'add-permissions-table': selectedPermissions,\n    'resource-definitions': resourceDefinitions,\n    'has-cost-resources': hasCostResources,\n  } = formOptions.getState().values;\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <TextContent>\n          <Title headingLevel=\"h1\" size=\"xl\" className=\"pf-v5-u-mb-sm\">\n            {intl.formatMessage(messages.reviewDetails)}\n          </Title>\n        </TextContent>\n      </StackItem>\n      <StackItem className=\"rbac-l-stack__item-summary\">\n        <Grid hasGutter>\n          <GridItem span={3}>\n            <Text className=\"pf-v5-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleName)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{name}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-v5-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.roleDescription)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <Text component={TextVariants.p}>{description}</Text>\n          </GridItem>\n          <GridItem span={3}>\n            <Text className=\"pf-v5-c-title\" component={TextVariants.h6}>\n              {intl.formatMessage(messages.addedPermissions)}\n            </Text>\n          </GridItem>\n          <GridItem span={9}>\n            <TextContent component={TextVariants.p}>\n              {selectedPermissions.map((permission, index) => (\n                <Text key={index}> {permission.uuid} </Text>\n              ))}\n            </TextContent>\n          </GridItem>\n          {hasCostResources && (\n            <React.Fragment>\n              <GridItem span={3}>\n                <Text className=\"pf-v5-c-title\" component={TextVariants.h6}>\n                  {intl.formatMessage(messages.resourceDefinitions)}\n                </Text>\n              </GridItem>\n              <GridItem span={9}>\n                <TextContent component={TextVariants.p}>\n                  {resourceDefinitions.map(({ resources }) => resources.map((resource, index) => <Text key={index}> {resource} </Text>))}\n                </TextContent>\n              </GridItem>\n            </React.Fragment>\n          )}\n        </Grid>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default AddRolePermissionSummaryContent;\n","import React from 'react';\nimport AddPermissionTemplate from '../add-role/add-permissions-template';\nimport ReviewTemplate from './review-template';\nimport { locale } from '../../../AppEntry';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\nimport providerMessages from '../../../locales/data.json';\nimport { validateNextAddRolePermissionStep } from '../permission-wizard-helper';\nimport InventoryGroupsRoleTemplate from '../add-role/inventory-groups-role-template';\n\nexport const schemaBuilder = (container, featureFlag) => {\n  const cache = createIntlCache();\n  const intl = createIntl({ locale, messages: providerMessages }, cache);\n\n  return {\n    fields: [\n      {\n        component: 'wizard',\n        name: 'wizard',\n        isDynamic: true,\n        inModal: true,\n        showTitles: true,\n        crossroads: ['role-type'],\n        title: intl.formatMessage(messages.addPermissions),\n        container,\n        fields: [\n          {\n            name: 'add-permissions',\n            title: intl.formatMessage(messages.addPermissions),\n            StepTemplate: AddPermissionTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('add-permissions', values),\n            fields: [\n              {\n                component: 'add-permissions-table',\n                name: 'add-permissions-table',\n              },\n            ],\n          },\n          {\n            name: 'inventory-groups-role',\n            title: intl.formatMessage(featureFlag ? messages.workspacesAccessTitle : messages.inventoryGroupsAccessTitle),\n            StepTemplate: InventoryGroupsRoleTemplate,\n            nextStep: ({ values }) => validateNextAddRolePermissionStep('inventory-groups-role', values),\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(featureFlag ? messages.workspacesAccessDescription : messages.inventoryGroupsAccessDescription)}</p>,\n              },\n              {\n                component: 'inventory-groups-role',\n                name: 'inventory-groups-role',\n                validate: [\n                  (value = []) =>\n                    value?.every(({ groups, permission }) => groups?.length > 0 && permission)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneInventoryGroup),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'cost-resources-definition',\n            title: intl.formatMessage(messages.defineCostResources),\n            nextStep: 'review',\n            fields: [\n              {\n                component: 'plain-text',\n                name: 'text-description',\n                label: <p>{intl.formatMessage(messages.applyCostPermissionText)}</p>,\n              },\n              {\n                component: 'cost-resources',\n                name: 'cost-resources',\n                validate: [\n                  (value = []) =>\n                    value.every(({ resources }) => resources && resources.length > 0)\n                      ? undefined\n                      : intl.formatMessage(messages.assignAtLeastOneResource),\n                ],\n              },\n            ],\n          },\n          {\n            name: 'review',\n            title: intl.formatMessage(messages.reviewDetails),\n            StepTemplate: ReviewTemplate,\n            fields: [\n              {\n                component: 'review',\n                name: 'review',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n};\n"],"names":["_a","isOpen","onConfirm","onClose","children","confirmButtonLabel","cancelButtonLabel","variant","Modal","small","titleIconVariant","withCheckbox","checkboxLabel","confirmButtonVariant","Button","primary","ouiaId","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","checked","setChecked","useState","assign","onEscapePress","actions","key","onClick","isDisabled","link","Checkbox","isChecked","onChange","_event","value","label","id","className","AddRolePermissionSuccess","currentRoleID","intl","dispatch","useDispatch","EmptyState","EmptyStateHeader","titleText","formatMessage","permissionsAddedSuccessfully","icon","EmptyStateIcon","color","headingLevel","EmptyStateBody","EmptyStateFooter","AppLink","to","pathnames","replace","exit","propTypes","isRequired","ReviewTemplate","formFields","submitting","useContext","AddRolePermissionWizardContext","Bullseye","Spinner","size","FormTemplate","showFormControls","mapperExtension","review","formOptions","name","description","selectedPermissions","resourceDefinitions","hasCostResources","getState","values","Stack","hasGutter","StackItem","TextContent","Title","reviewDetails","Grid","GridItem","span","Text","component","TextVariants","h6","roleName","roleDescription","addedPermissions","map","permission","index","uuid","resources","resource","createContext","success","error","undefined","AddRolePermissionWizard","role","cancelWarningVisible","setCancelWarningVisible","setCurrentRoleID","navigate","useAppNavigate","enableWorkspacesNameChange","useFlag","wizardContextValue","setWizardContextValue","hideForm","container","useRef","document","createElement","schema","useMemo","featureFlag","cache","locale","messages","fields","isDynamic","inModal","showTitles","crossroads","title","addPermissions","StepTemplate","nextStep","workspacesAccessTitle","inventoryGroupsAccessTitle","workspacesAccessDescription","inventoryGroupsAccessDescription","validate","every","groups","assignAtLeastOneInventoryGroup","defineCostResources","applyCostPermissionText","assignAtLeastOneResource","schemaBuilder","current","useEffect","hidden","handleConfirmCancel","Provider","setWizardError","prev","setWizardSuccess","setHideForm","rolePermissions","access","WarningModal","exitItemAdding","item","permissions","toLocaleLowerCase","discard","discardedInputsWarning","Wizard","steps","isFinishedStep","subscription","initialValues","display_name","componentMapper","onSubmit","async","formData","costResources","invResources","selectedPermissionIds","record","roleData","reduce","acc","requires","filter","require","includes","find","r","attributeFilter","operation","g","group","split","accessCount","then","catch","onCancel","defaultProps"],"sourceRoot":""}
{"version":3,"file":"js/4457.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/smart-components/access-management/UsersTable.tsx","webpack:///./src/smart-components/access-management/UserGroupsTable.tsx","webpack:///./src/smart-components/access-management/users-and-user-groups.tsx"],"sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useDataViewSelection, useDataViewPagination } from '@patternfly/react-data-view/dist/dynamic/Hooks';\nimport { BulkSelect, BulkSelectValue } from '@patternfly/react-component-groups/dist/dynamic/BulkSelect';\nimport { DataView } from '@patternfly/react-data-view/dist/dynamic/DataView';\nimport { DataViewToolbar } from '@patternfly/react-data-view/dist/dynamic/DataViewToolbar';\nimport { DataViewTable } from '@patternfly/react-data-view/dist/dynamic/DataViewTable';\nimport { Pagination } from '@patternfly/react-core';\nimport { ActionsColumn } from '@patternfly/react-table';\nimport { fetchUsers } from '../../redux/actions/user-actions';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { RBACStore } from '../../redux/store';\nimport { UserProps } from '../user/user-table-helpers';\nimport { useSearchParams } from 'react-router-dom';\n\nconst COLUMNS: string[] = ['Username', 'Email', 'First name', 'Last name', 'Status', 'Org admin'];\n\nconst ROW_ACTIONS = [\n  { title: 'Add to user group', onClick: () => console.log('ADD TO USER GROUP') },\n  { title: 'Remove from user group', onClick: () => console.log('REMOVE FROM USER GROUP') },\n];\n\nconst PER_PAGE_OPTIONS = [\n  { title: '5', value: 5 },\n  { title: '10', value: 10 },\n  { title: '20', value: 20 },\n  { title: '50', value: 50 },\n  { title: '100', value: 100 },\n];\n\nconst OUIA_ID = 'iam-users-table';\n\nconst UsersTable: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n\n  const { users, totalCount } = useSelector((state: RBACStore) => ({\n    users: state.userReducer.users.data || [],\n    totalCount: state.userReducer.users.meta.count,\n  }));\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const pagination = useDataViewPagination({ perPage: 20, searchParams, setSearchParams });\n  const { page, perPage, onSetPage, onPerPageSelect } = pagination;\n\n  const selection = useDataViewSelection({ matchOption: (a, b) => a[0] === b[0] });\n  const { selected, onSelect, isSelected } = selection;\n\n  const fetchData = useCallback(\n    (apiProps: { count: number; limit: number; offset: number; orderBy: string }) => {\n      const { count, limit, offset, orderBy } = apiProps;\n      dispatch(fetchUsers({ ...mappedProps({ count, limit, offset, orderBy }), usesMetaInURL: true }));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    fetchData({\n      limit: perPage,\n      offset: (page - 1) * perPage,\n      orderBy: 'username',\n      count: totalCount || 0,\n    });\n  }, [fetchData, page, perPage]);\n\n  const handleBulkSelect = (value: BulkSelectValue) => {\n    if (value === BulkSelectValue.none) {\n      onSelect(false);\n    } else if (value === BulkSelectValue.page) {\n      onSelect(true, rows);\n    } else if (value === BulkSelectValue.nonePage) {\n      onSelect(false, rows);\n    }\n  };\n\n  const rows = users.map((user: UserProps) => [\n    user.username,\n    user.email,\n    user.first_name,\n    user.last_name,\n    user.is_active ? 'Active' : 'Inactive',\n    user.is_org_admin ? 'Yes' : 'No',\n    {\n      cell: <ActionsColumn items={ROW_ACTIONS} />,\n      props: { isActionCell: true },\n    },\n  ]);\n\n  const pageSelected = rows.length > 0 && rows.every(isSelected);\n  const pagePartiallySelected = !pageSelected && rows.some(isSelected);\n\n  const paginationComponent = (\n    <Pagination\n      perPageOptions={PER_PAGE_OPTIONS}\n      itemCount={totalCount}\n      page={page}\n      perPage={perPage}\n      onSetPage={onSetPage}\n      onPerPageSelect={onPerPageSelect}\n    />\n  );\n\n  return (\n    <DataView ouiaId={OUIA_ID} selection={selection}>\n      <DataViewToolbar\n        ouiaId={`${OUIA_ID}-header-toolbar`}\n        bulkSelect={\n          <BulkSelect\n            isDataPaginated\n            pageCount={users.length}\n            selectedCount={selected.length}\n            totalCount={totalCount}\n            pageSelected={pageSelected}\n            pagePartiallySelected={pagePartiallySelected}\n            onSelect={handleBulkSelect}\n          />\n        }\n        pagination={React.cloneElement(paginationComponent, { isCompact: true })}\n      />\n      <DataViewTable variant=\"compact\" aria-label=\"Users Table\" ouiaId={`${OUIA_ID}-table`} columns={COLUMNS} rows={rows} />\n      <DataViewToolbar ouiaId={`${OUIA_ID}-footer-toolbar`} pagination={paginationComponent} />\n    </DataView>\n  );\n};\n\nexport default UsersTable;\n","import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useDataViewSelection, useDataViewPagination } from '@patternfly/react-data-view/dist/dynamic/Hooks';\nimport { BulkSelect, BulkSelectValue } from '@patternfly/react-component-groups/dist/dynamic/BulkSelect';\nimport { DataView } from '@patternfly/react-data-view/dist/dynamic/DataView';\nimport { DataViewToolbar } from '@patternfly/react-data-view/dist/dynamic/DataViewToolbar';\nimport { DataViewTable } from '@patternfly/react-data-view/dist/dynamic/DataViewTable';\nimport { Pagination, Tooltip } from '@patternfly/react-core';\nimport { ActionsColumn } from '@patternfly/react-table';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { RBACStore } from '../../redux/store';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport { formatDistanceToNow } from 'date-fns';\n\nconst COLUMNS: string[] = ['User group name', 'Description', 'Users', 'Service accounts', 'Roles', 'Workspaces', 'Last modified'];\n\nconst ROW_ACTIONS = [\n  { title: 'Edit user group', onClick: () => console.log('EDIT USER GROUP') },\n  { title: 'Delete user group', onClick: () => console.log('DELETE USER GROUP') },\n];\n\nconst PER_PAGE_OPTIONS = [\n  { title: '5', value: 5 },\n  { title: '10', value: 10 },\n  { title: '20', value: 20 },\n  { title: '50', value: 50 },\n  { title: '100', value: 100 },\n];\n\nconst OUIA_ID = 'iam-user-groups-table';\n\nconst UserGroupsTable: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n\n  const { groups, totalCount } = useSelector((state: RBACStore) => ({\n    groups: state.groupReducer?.groups?.data || [],\n    totalCount: state.groupReducer?.groups?.meta.count || 0,\n  }));\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const pagination = useDataViewPagination({ perPage: 20, searchParams, setSearchParams });\n  const { page, perPage, onSetPage, onPerPageSelect } = pagination;\n\n  const selection = useDataViewSelection({ matchOption: (a, b) => a[0] === b[0] });\n  const { selected, onSelect, isSelected } = selection;\n\n  const fetchData = useCallback(\n    (apiProps: { count: number; limit: number; offset: number; orderBy: string }) => {\n      const { count, limit, offset, orderBy } = apiProps;\n      dispatch(fetchGroups({ ...mappedProps({ count, limit, offset, orderBy }), usesMetaInURL: true }));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    fetchData({\n      limit: perPage,\n      offset: (page - 1) * perPage,\n      orderBy: 'name',\n      count: totalCount || 0,\n    });\n  }, [fetchData, page, perPage]);\n\n  const handleBulkSelect = (value: BulkSelectValue) => {\n    if (value === BulkSelectValue.none) {\n      onSelect(false);\n    } else if (value === BulkSelectValue.page) {\n      onSelect(true, rows);\n    } else if (value === BulkSelectValue.nonePage) {\n      onSelect(false, rows);\n    }\n  };\n\n  const rows = groups.map((group: any) => [\n    group.name,\n    group.description ? (\n      <Tooltip isContentLeftAligned content={group.description}>\n        <span>{group.description.length > 23 ? group.description.slice(0, 20) + '...' : group.description}</span>\n      </Tooltip>\n    ) : (\n      <div className=\"pf-v5-u-color-400\">No description</div>\n    ),\n    group.principalCount,\n    group.serviceAccounts || '?', // not currently in API\n    group.roleCount,\n    group.workspaces || '?', // not currently in API\n    formatDistanceToNow(new Date(group.modified), { addSuffix: true }),\n    {\n      cell: <ActionsColumn items={ROW_ACTIONS} />,\n      props: { isActionCell: true },\n    },\n  ]);\n\n  const pageSelected = rows.length > 0 && rows.every(isSelected);\n  const pagePartiallySelected = !pageSelected && rows.some(isSelected);\n\n  const paginationComponent = (\n    <Pagination\n      perPageOptions={PER_PAGE_OPTIONS}\n      itemCount={totalCount}\n      page={page}\n      perPage={perPage}\n      onSetPage={onSetPage}\n      onPerPageSelect={onPerPageSelect}\n    />\n  );\n\n  return (\n    <DataView ouiaId={OUIA_ID} selection={selection}>\n      <DataViewToolbar\n        ouiaId={`${OUIA_ID}-header-toolbar`}\n        bulkSelect={\n          <BulkSelect\n            isDataPaginated\n            pageCount={groups.length}\n            selectedCount={selected.length}\n            totalCount={totalCount}\n            pageSelected={pageSelected}\n            pagePartiallySelected={pagePartiallySelected}\n            onSelect={handleBulkSelect}\n          />\n        }\n        pagination={React.cloneElement(paginationComponent, { isCompact: true })}\n      />\n      <DataViewTable variant=\"compact\" aria-label=\"Users Table\" ouiaId={`${OUIA_ID}-table`} columns={COLUMNS} rows={rows} />\n      <DataViewToolbar ouiaId={`${OUIA_ID}-footer-toolbar`} pagination={paginationComponent} />\n    </DataView>\n  );\n};\n\nexport default UserGroupsTable;\n","import React, { useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { PageSection, PageSectionVariants, Tab, TabContent, Tabs } from '@patternfly/react-core';\nimport ContentHeader from '@patternfly/react-component-groups/dist/dynamic/ContentHeader';\nimport Messages from '../../Messages';\nimport UsersTable from './UsersTable';\nimport UserGroupsTable from './UserGroupsTable';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst UsersAndUserGroups: React.FunctionComponent = () => {\n  const intl = useIntl();\n  const [activeTabKey, setActiveTabKey] = React.useState<number>(0);\n\n  const usersRef = React.createRef<HTMLElement>();\n  const groupsRef = React.createRef<HTMLElement>();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const updateURL = (tabKey: number) => {\n    const params = new URLSearchParams(location.search);\n    params.set('activeTab', tabKey.toString());\n    navigate({ search: params.toString() });\n  };\n\n  const handleTabSelect = (_: React.MouseEvent<HTMLElement, MouseEvent>, key: string | number) => {\n    const activeTab = Number(key);\n    setActiveTabKey(activeTab);\n    updateURL(activeTab);\n  };\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const tabKey = params.get('activeTab');\n    tabKey && setActiveTabKey(Number(tabKey));\n  }, [location.search]);\n\n  return (\n    <React.Fragment>\n      <ContentHeader title={intl.formatMessage(Messages.usersAndUserGroups)} subtitle={intl.formatMessage(Messages.usersAndUserGroupsDescription)} />\n      <PageSection type=\"tabs\" variant={PageSectionVariants.light} isWidthLimited>\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabSelect}\n          inset={{\n            default: 'insetNone',\n            md: 'insetSm',\n            xl: 'insetLg',\n            '2xl': 'inset2xl',\n          }}\n          role=\"region\"\n        >\n          <Tab eventKey={0} title={intl.formatMessage(Messages.users)} tabContentId=\"usersTab\" tabContentRef={usersRef} ouiaId=\"users-tab-button\" />\n          <Tab\n            eventKey={1}\n            title={intl.formatMessage(Messages.userGroups)}\n            tabContentId=\"groupsTab\"\n            tabContentRef={groupsRef}\n            ouiaId=\"user-groups-tab-button\"\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection>\n        <TabContent eventKey={0} id=\"usersTab\" ref={usersRef} aria-label=\"Users tab\">\n          <UsersTable />\n        </TabContent>\n        <TabContent eventKey={1} id=\"groupsTab\" ref={groupsRef} aria-label=\"Groups tab\" hidden>\n          <UserGroupsTable />\n        </TabContent>\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default UsersAndUserGroups;\n"],"names":["COLUMNS","ROW_ACTIONS","title","onClick","console","log","PER_PAGE_OPTIONS","value","OUIA_ID","dispatch","useDispatch","users","totalCount","useSelector","state","userReducer","data","meta","count","searchParams","setSearchParams","useSearchParams","pagination","perPage","page","onSetPage","onPerPageSelect","selection","matchOption","a","b","selected","onSelect","isSelected","fetchData","useCallback","apiProps","limit","offset","orderBy","usesMetaInURL","useEffect","rows","map","user","username","email","first_name","last_name","is_active","is_org_admin","cell","ActionsColumn","items","props","isActionCell","pageSelected","length","every","pagePartiallySelected","some","paginationComponent","Pagination","perPageOptions","itemCount","DataView","ouiaId","DataViewToolbar","bulkSelect","BulkSelect","isDataPaginated","pageCount","selectedCount","none","nonePage","isCompact","DataViewTable","variant","columns","groups","groupReducer","group","name","description","Tooltip","isContentLeftAligned","content","slice","className","principalCount","serviceAccounts","roleCount","workspaces","formatDistanceToNow","Date","modified","addSuffix","intl","activeTabKey","setActiveTabKey","usersRef","groupsRef","navigate","useNavigate","location","useLocation","tabKey","URLSearchParams","search","get","Number","ContentHeader","formatMessage","Messages","usersAndUserGroups","subtitle","usersAndUserGroupsDescription","PageSection","type","PageSectionVariants","light","isWidthLimited","Tabs","activeKey","_","key","activeTab","params","set","toString","updateURL","inset","default","md","xl","role","Tab","eventKey","tabContentId","tabContentRef","userGroups","TabContent","id","ref","hidden"],"sourceRoot":""}
{"version":3,"file":"js/4124.1674205773617.90da316a2b42d8756b17.js","mappings":"qRAKMA,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,QAAYC,GAAzC,mBACtB,kBAAC,EAAAC,YAAD,QAAYC,QAASC,EAAAA,kBAAAA,OAA6BH,GAChD,kBAAC,EAAAI,eAAD,CAAgBP,KAAMA,GAAQQ,EAAAA,KAC9B,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BZ,GAEH,kBAAC,EAAAa,eAAD,CAAgBC,UAAU,cACvBZ,EAAYa,KAAI,SAACC,EAAMC,GAAP,OACf,kBAAC,aAAD,CAAgBA,IAAKA,GAClBD,EADH,IACS,kCAIZb,IAILJ,EAAgBmB,UAAY,CAC1BjB,KAAMkB,IAAAA,KACNnB,MAAOmB,IAAAA,KACPjB,YAAaiB,IAAAA,KACbhB,QAASgB,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,QAAkBA,IAAAA,QAChEL,UAAWK,IAAAA,QAGb,W,8xBChBO,IAAMC,EAAsB,SAAC,GA2C9B,IA1CJC,EA0CI,EA1CJA,UACAC,EAyCI,EAzCJA,WACAC,EAwCI,EAxCJA,QACAC,EAuCI,EAvCJA,QACAC,EAsCI,EAtCJA,eACAC,EAqCI,EArCJA,KACAC,EAoCI,EApCJA,eACAC,EAmCI,EAnCJA,mBACAC,EAkCI,EAlCJA,OACAC,EAiCI,EAjCJA,YACAC,EAgCI,EAhCJA,cACAC,EA+BI,EA/BJA,WACAC,EA8BI,EA9BJA,YACAC,EA6BI,EA7BJA,UACAC,EA4BI,EA5BJA,aACAC,EA2BI,EA3BJA,eACAC,EA0BI,EA1BJA,YACAC,EAyBI,EAzBJA,aACAC,EAwBI,EAxBJA,UACAC,EAuBI,EAvBJA,gBACAC,EAsBI,EAtBJA,cACAC,EAqBI,EArBJA,WACAC,EAoBI,EApBJA,kBACAC,EAmBI,EAnBJA,WACAC,EAkBI,EAlBJA,QACAC,EAiBI,EAjBJA,aACAC,EAgBI,EAhBJA,WACAC,EAeI,EAfJA,cACAC,EAcI,EAdJA,SACAC,EAaI,EAbJA,SACAC,EAYI,EAZJA,MACAC,EAWI,EAXJA,OACAC,EAUI,EAVJA,aACAC,EASI,EATJA,SACAC,EAQI,EARJA,gBACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,OACAC,GAKI,EALJA,kBACAC,GAII,EAJJA,OACAC,GAGI,EAHJA,QACAC,GAEI,EAFJA,aACAC,GACI,EADJA,cAEMC,IAAOC,EAAAA,EAAAA,KACb,IAA0BC,EAAAA,EAAAA,UAAS,IAAnC,iBAAOC,GAAP,MAAeC,GAAf,MACA,IAAsCF,EAAAA,EAAAA,UAAS,CAAEG,WAAOC,EAAWC,eAAWD,IAA9E,iBAAOE,GAAP,MAAoBC,GAApB,OACAC,EAAAA,EAAAA,YAAU,WACRD,GAAe,EAAD,KACTpB,QACuBiB,IAAtBE,GAAYH,OAAuBG,OAExC,CAACnB,IAEJ,IAAMsB,GAAOpD,EAAWI,EAAMwC,GAAQ7B,GAEhCsC,GAAa,SAACC,EAAQC,EAAQC,EAAjB,OAA2BC,EAA3B,EAA2BA,KAA3B,OACjBZ,IAAQ,SAACD,GAAD,cACHA,GADG,cAELa,EAAOD,QA2IZ,OACE,kBAAC,EAAAE,SAAD,KACGnD,KACCK,GAA6B,IAAhBwC,GAAKO,QAAuC,IAAvBhD,EAAYgD,QAAgBpC,EAAQqC,OAAM,qBAAG/B,SAC/E,kBAAC,KAAD,QACEnD,MAAO+D,GAAKoB,cAAcC,EAAAA,EAAAA,eAAyB,CAAEC,MAAOvD,IAC5D7B,KAAMqF,EAAAA,GACNpF,YAAa,CACX6D,GAAKoB,cAAcC,EAAAA,EAAAA,uBACnBrB,GAAKoB,cAAcC,EAAAA,EAAAA,qBAA+B,CAAEG,KAAMxD,KAE5D5B,QAASsB,IAAiB,IACtBiB,IA9GQ,WAClB,IAAM8C,EAAqBlD,IAAgBZ,MAAAA,OAAA,EAAAA,EAAMuD,QAAS,EACpDQ,EAAcC,KAAKC,MAAKpB,MAAAA,QAAA,EAAAA,GAAaH,QAASoB,GAAsBA,GAAoBhE,MAAAA,OAAA,EAAAA,EAASyD,QAAS,GAC1G7B,OACmBiB,IAAtBE,GAAYH,OACXqB,GAAe,GACfA,EAAcjE,EAAQyD,QAFvB,UAG8B,SAA1BV,GAAYD,UAAuB,IAAM,IAH7C,OAGkD9C,EAAQiE,GAAaxE,WACxEoD,EACF,OACE,kBAAC,EAAAW,SAAD,KACE,kBAAC,KAAD,CACE1C,aAAcA,EACdD,YAAaA,EACbG,gBAAiBA,EACjBN,UAAWA,GAAauB,EACxB/B,KAAMA,EACNK,cAAeA,EACfE,YAAaA,EACbG,eAAgBA,EAChBgB,OAAQA,EACRpB,WAAYA,EACZO,UAAWA,EACXd,eAAgBA,EAChBkB,kBAAmBA,EACnBE,QAASA,EACTC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,EACfC,SAAUA,EACVC,SAAUA,EACVC,MAAOA,EACPI,gBAAiBA,EACjBK,QAASA,GACTC,aAAcA,GACdC,cAAeA,KAEhB5B,EACC,kBAAC,KAAD,MAEA,kBAAC,EAAA0D,OAAD,QACEC,cAAc,EACd,uBAAe/D,EAAYgE,cAA3B,UACAxF,QAASe,EAAY0E,EAAAA,aAAAA,QAAuB,KAC5CxE,QAASA,GACJkB,GAAiB,CAAEkC,WAAAA,IACnBrC,GACHoC,GAAKO,OAAS,GAAK,CACjBe,SAAU,SAACC,EAAIC,EAAYC,EAAjB,OAAyBpB,EAAzB,EAAyBA,KAAcqB,GAAvC,SAA+BC,MAA/B,MAA8CC,EAA9C,EAA8CA,SAA9C,OACR9D,GAAgB+D,EAAAA,EAAAA,IAAa,CAAC,CAAExB,KAAAA,EAAMqB,KAAAA,EAAME,SAAAA,IAAaJ,MAE1D7C,GAAgB,CAAEC,SAAAA,GAXzB,CAYEoB,KAAMA,GAAKO,OAAS,EAAIP,GAAO,CAAC,CAAE8B,WAAW,EAAMH,MAAO,CA1FzC,CACzBrG,MACE,kBAAC,IAAD,CACEA,MAAO+D,GAAKoB,cAAcC,EAAAA,EAAAA,qBAA+B,CAAEC,MAAOvD,IAClE5B,YACEuD,GAAUC,GACNA,GACA,CAACK,GAAKoB,cAAcC,EAAAA,EAAAA,qBAA+B,CAAEC,MAAOvD,IAAgBiC,GAAKoB,cAAcC,EAAAA,EAAAA,qBAErGjF,QACEsD,GAAUC,QACNW,EACA,CACE,kBAAC,EAAAoC,kBAAD,CAAmBxF,IAAI,iBACrB,kBAAC,EAAAyF,OAAD,CACEpG,QAAQ,OACRqD,OAAO,uBACPgD,QAAS,WACPvE,EAAeD,GACfI,EAAU,EAAD,KACJP,GADI,IAEP4E,OAAQ,GACJzE,GAA8B,CAAEiE,KAAM,QAI7CrC,GAAKoB,cAAcC,EAAAA,EAAAA,sBAOpChF,MAAO,CACLyG,QAASrF,EAAQyD,OAAS6B,QAAQnC,SAyD5B0B,MAAO7E,GACFkD,GAAKO,OAAS,GAAK,CAAEtD,eAAAA,GAd5B,CAeEb,UAA0B,GAAf4D,GAAKO,OAAc,0BAA4B,GAC1DrD,mBAAoBA,EACpBgB,WAAYA,EACZQ,OAAQmB,GACRZ,OAAQA,GACRoD,OAAQ,SAACC,EAAG5C,EAAOE,GACjB,IAAMmB,EAAcC,KAAKC,KAAKvB,GAASoB,GAAsBA,GAAoBhE,MAAAA,OAAA,EAAAA,EAASyD,QAAS,GAC7FgC,EAAU,GAAH,OAAoB,SAAd3C,EAAuB,IAAM,IAAnC,OAAwC9C,EAAQiE,GAAaxE,KAC1EuD,GAAe,CAAEJ,MAAAA,EAAOE,UAAAA,IACxBzB,GAAWA,EAAQoC,OAAS,EACxB1C,EAAU,EAAD,OACJP,GADI,IAEP4E,OAAQ,GACL/D,EAAQqE,QACT,SAACC,EAAKC,GAAN,cACKD,GADL,cAEGC,EAAKnG,IAAMmG,EAAKjE,UAEnB,KARK,IAUP8D,QAAAA,KAEF1E,EAAU,EAAD,KACJP,GADI,IAEP4E,OAAQ,EACRR,KAAMnE,EACNgF,QAAAA,SAINzD,GAAc,kBAAC,EAAA6D,YAAD,MAChB,kBAAC,EAAAC,UAAD,QAGFtF,EAAWuF,UACX,kBAAC,IAAD,MACIrF,GAAa,kBAAC,EAAAsF,YAAD,WAAgBC,EAAAA,EAAAA,IAAkBzF,EAAYO,EAAWN,EAAamB,GAAtE,CAA+E9C,QAAQ,SAASoH,cAAc,UAsBjIC,KAMRvG,EAAoBF,UAApB,OACK0G,EAAAA,GAAAA,WADL,IAEExE,OAAQlC,IAAAA,MAAgB,CACtB2G,WAAY3G,IAAAA,OACZkD,MAAOlD,IAAAA,SAET0B,WAAY1B,IAAAA,IACZG,UAAWH,IAAAA,KACXK,QAASL,IAAAA,KACTiB,aAAcjB,IAAAA,OACdmB,YAAanB,IAAAA,MACbI,WAAYJ,IAAAA,KAAAA,WACZM,QAASN,IAAAA,MAAAA,WACTY,YAAaZ,IAAAA,OACbW,OAAQX,IAAAA,KACRS,eAAgBT,IAAAA,KAChBU,mBAAoBV,IAAAA,KACpBc,WAAYd,IAAAA,MAAgB,CAC1BqG,SAAUrG,IAAAA,OAEZmC,aAAcnC,IAAAA,KACdoC,SAAUpC,IAAAA,KACVqC,gBAAiBrC,IAAAA,KACjBsC,WAAYtC,IAAAA,KACZwC,kBAAmBxC,IAAAA,QAAkBA,IAAAA,MACrC2B,QAAS3B,IAAAA,MACT0C,QAAS1C,IAAAA,OAAAA,aAGXE,EAAoB0G,aAApB,OACKF,EAAAA,GAAAA,cADL,IAEEzF,aAAc,GACdd,WAAW,EACXE,SAAS,EACTM,OAAQ,kBAAM,MACd0B,iBAAiB,EACjBlB,YAAa,GACbmB,YAAY,K,kxBCrQP,IAAMiE,EAAoB,eAACzF,EAAD,uDAAc,GAAIO,EAAlB,uDAA8B,aAAiBN,EAA/C,uDAA6D,GAAImB,EAAjE,uDAA0E,GAA1E,cAC5BpB,GAD4B,IAE/B+F,UAAW/F,EAAWgG,MACtBC,QAASjG,EAAWkG,MACpBC,MAAMC,EAAAA,EAAAA,IAAcpG,EAAWkG,MAAOlG,EAAW4E,QACjDyB,UAAW,SAACzD,EAAQuD,GAClB5F,EAAU,EAAD,KACJP,GADI,IAEP4E,QAAQ0B,EAAAA,EAAAA,IAAgBH,EAAMnG,EAAWkG,OACzC9B,KAAMnE,EACNgF,QAAS7D,MAGbmF,eAAgB,CACd,CAAEvI,MAAO,IAAKmD,MAAO,GACrB,CAAEnD,MAAO,KAAMmD,MAAO,IACtB,CAAEnD,MAAO,KAAMmD,MAAO,IACtB,CAAEnD,MAAO,KAAMmD,MAAO,IACtB,CAAEnD,MAAO,MAAOmD,MAAO,MAEzBqF,gBAAiB,SAAC5D,EAAQqD,GACxB1F,EAAU,EAAD,KACJP,GADI,IAEP4E,OAAQ,EACRsB,MAAOD,EACP7B,KAAMnE,EACNgF,QAAS7D,SAKFqF,EAAoB,SAACvG,GAAuF,IAA5EG,EAA4E,uDAA9D,GAAIG,EAA0D,uDAAxC,aAAiBd,EAAuB,uDAAhB,GAAIkC,EAAY,uCACjHG,GAAOC,EAAAA,EAAAA,KACb,MAAO,CACLgE,MAAO3F,EAAY4C,OACnBI,MAAO,CACL,CACErF,MAAO+D,EAAKoB,cAAcC,EAAAA,EAAAA,YAC1BuB,QAAS,WACPnE,GAAgB,iBAAM,QAJrB,MAQEN,GAAaR,GAAQA,EAAKuD,OAAS,EACpC,CACEjF,MAAO+D,EAAKoB,cAAcC,EAAAA,EAAAA,WAAqB,CAC7CH,OAAQvD,EAAKgH,QAAO,SAACC,GAAD,QAAWA,EAAIC,kBAAoBD,EAAIE,eAAiBF,EAAIG,WAAS7D,SAE3F0B,QAAS,WACPnE,GAAgB+D,EAAAA,EAAAA,IAAa7E,GAAM,MAGvC,KAGRqH,SAASC,EAAAA,EAAAA,IAAiBtH,EAAMW,GAChC2D,SAAU,SAAC7C,IACRjB,GAAaM,GAAgB+D,EAAAA,EAAAA,IAAa7E,EAAMyB,KAEnD8F,GAAIrF,IAIKsF,EAAsB,SACjChH,GAiBG,IAhBHE,EAgBG,uDAhBc,aACjBG,EAeG,uDAfS,aACZN,EAcG,uDAdW,GACdD,EAaG,uDAbU,GACbD,EAYG,uDAZa,GAChBY,EAWG,uCAVHwG,EAUG,uCATHtG,EASG,uCARHC,EAQG,uCAPHC,EAOG,yCANHC,EAMG,yCALHC,EAKG,yCAJHC,EAIG,yCAHHC,EAGG,yCAFHC,EAEG,yCADHU,EACG,yCACGC,GAAOC,EAAAA,EAAAA,KACb,MAAO,CACLd,SAAAA,EACAC,MAAAA,EACAkC,MAAO,GAAF,eACCxC,GAAWA,EAAQoC,OAAS,EAC5BpC,EAAQ9B,KAAI,gBAAGE,EAAH,EAAGA,IAAKmI,EAAR,EAAQA,MAAOjG,EAAf,EAAeA,MAAOkG,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,YAAhC,IAA6CC,KAAAA,OAA7C,MAAoD,OAApD,EAA4DC,EAA5D,EAA4DA,OAAQnE,EAApE,EAAoEA,MAAOoE,EAA3E,EAA2EA,SAA3E,MAA2F,CACrGL,MAAOA,IAASM,EAAAA,EAAAA,IAAezI,GAC/BsI,KAAAA,EACAI,aAAc,EAAF,GACVF,SAAAA,EACAR,GAAI,aAAF,OAAehI,GACjBA,IAAK,aAAF,OAAeA,GAClBqI,YAAaA,GAA4BvF,EAAKoB,cAAcC,EAAAA,EAAAA,YAAsB,CAAEnE,IAAAA,IACpFkC,MAAAA,EACAkG,SAAAA,GACa,SAATE,EAAkB,CAAEzG,aAAAA,EAAcC,WAAAA,EAAYC,cAAAA,EAAeC,SAAAA,GAAa,IAPpE,IAQVuG,OAAAA,EACAnE,MAAAA,EACAnC,SAAU,SAAC+C,EAAI2D,GACb,IAAMC,EACgB,iBAAbD,GAA0BE,MAAMC,QAAQH,GAAkEA,EAAtDI,OAAOC,KAAK,IAAOL,EAAS,KAAK,SAACzG,GAAD,OAAWA,MACzGf,EAAe,EAAD,OACTH,GACAD,GAFS,YAGZ4E,OAAQ,GACP3F,EAAM4I,MAETK,EAAAA,EAAAA,KAAe,kBACb3H,EAAU,EAAD,OACJP,GADI,IAEP4E,OAAQ,EACRK,QAAS7D,GACNP,EAAQqE,QACT,SAACC,EAAKC,GAAN,cACKD,GADL,cAEGC,EAAKnG,IAAMmG,EAAKjE,UAEnB,KATK,cAWNlC,EAAM4I,QAETM,MAAK,SAACzI,GAAS,MAEf,OADA+H,MAAAA,GAAA,UAAAA,EAAUW,eAAV,SAAmBC,QACZ3I,MAGX4I,WAAYpI,QAGhB,CACE,CACEkH,OAAOM,EAAAA,EAAAA,IAAe/G,GAAqBZ,GAC3CwH,KAAM,OACNI,aAAc,CACZF,SAAU3F,EACVmF,GAAI,mBACJhI,IAAK,mBACLqI,YAAavF,EAAKoB,cAAcC,EAAAA,EAAAA,YAAsB,CAAEnE,IAAK0B,GAAqBZ,IAClFoB,MAAOlB,EACPiB,SAAU,SAAC+C,EAAI9C,GACbf,EAAe,EAAD,KACTJ,GADS,IAEZ4E,OAAQ,EACRR,KAAMjD,MAER+G,EAAAA,EAAAA,KAAe,kBACb3H,EAAU,EAAD,KACJP,GADI,IAEP4E,OAAQ,EACRR,KAAMjD,EACN8D,QAAS7D,QAEX+G,MAAK,SAACzI,GAAS,MAEf,OADAoC,MAAAA,GAAA,UAAAA,EAAesG,eAAf,SAAwBC,QACjB3I,MAGX4I,WAAYpI,OA1EnB,OA8ECiH,GAAe,OAKZoB,EAA6B,eACxCtI,EADwC,uDAC1B,GACdY,EAFwC,uCAGxCb,EAHwC,uDAG3B,GACbI,EAJwC,uDAIvB,aACjBG,EALwC,uDAK5B,aACZa,EANwC,6CAOpC,CACJP,QACEA,GAAWA,EAAQoC,OAAS,EACxBpC,EACG9B,KACC,gBAAQwI,EAAR,EAAGtI,IAAkBuJ,EAArB,EAAcrH,MAAd,OACEqH,GACmB,IAAnBA,EAAQvF,QAAgB,CACtBwF,UAAUf,EAAAA,EAAAA,IAAeH,GACzBA,KAAAA,EACAmB,MAAOZ,MAAMC,QAAQS,GAAWA,EAAQzJ,KAAI,SAAC2H,GAAD,MAAa,CAAEtC,KAAMsC,MAAa,CAAC,CAAEtC,KAAMoE,QAG5F9B,OAAO5B,SACV,CACE,CACEV,KAAMnE,IAGhB0I,SAAU,SAAC1E,EAAD,EAAgB2E,GAAU,IAApBC,GAAoB,eAiB5BC,EAAejI,EAAQqE,QAAO,SAACC,EAAD,OAAQlG,EAAR,EAAQA,IAAKkC,EAAb,EAAaA,MAAOoG,EAApB,EAAoBA,KAApB,cAAqCpC,GAArC,cAA2ClG,EAhB3D,SAACkC,EAAOoG,EAAMtI,GAChC,OAAI2J,EACc,UAATrB,GAA6B,aAATA,EAAsB,GAAK,GAGpDtI,IAAQ4J,EAAQtB,KACXpG,EAGI,aAAToG,GAAgC,UAATA,EAClBpG,EAAMuF,QAAO,SAACvF,GAAD,aAAWA,KAAK,UAAK0H,EAAQH,MAAM,UAAnB,aAAK,EAAkBtE,SAGtD0D,MAAMC,QAAQ5G,GAAS,GAAK,GAGgD4H,CAAY5H,EAAOoG,EAAMtI,OAAS,IACvHmB,EAAe,EAAD,KACTJ,GADS,IAEZ4E,OAAQ,EACRR,KAAM,IACH0E,IAELvI,EAAU,EAAD,KACJP,GADI,IAEP4E,OAAQ,EACRK,QAAS7D,EACTgD,KAAM,IACH0E,OAKHlD,EAAU,SAAC,GAAD,IACdtF,EADc,EACdA,aACAD,EAFc,EAEdA,YACAG,EAHc,EAGdA,gBACAN,EAJc,EAIdA,UACAR,EALc,EAKdA,KACAK,EANc,EAMdA,cACAE,EAPc,EAOdA,YACAG,EARc,EAQdA,eACAJ,EATc,EASdA,WACAO,EAVc,EAUdA,UACAa,EAXc,EAWdA,OACA3B,EAZc,EAYdA,eACAkB,EAbc,EAadA,kBACAwG,EAdc,EAcdA,YACAtG,EAfc,EAedA,QACAC,EAhBc,EAgBdA,aACAC,EAjBc,EAiBdA,WACAC,EAlBc,EAkBdA,cACAC,EAnBc,EAmBdA,SACAC,EApBc,EAoBdA,SACAC,EArBc,EAqBdA,MACAI,EAtBc,EAsBdA,gBACAK,EAvBc,EAuBdA,QACAE,EAxBc,EAwBdA,cAxBc,OA0Bd,kBAAC,KAAD,UACOxB,GAAgB,CACnB0I,WAAYvC,EAAkBvG,EAAWG,EAAaG,EAAiBd,EAAMkC,IAFjF,CAIEqH,aAAc/B,EACZhH,EACAE,EACAG,EACAN,EACAD,EACAD,EACAY,EACAwG,EACAtG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAU,GAEFoH,iBAAe,EACfC,cAAe,CACbhL,QAASsB,OAELS,GAAa,CACjBF,WAAYyF,EAAkBzF,EAAYO,EAAWN,EAAamB,KAE9DnB,EAAYgD,OAAS,GAAMpC,GAAWA,EAAQoC,OAAS,KAC1D1B,GAAmB,CAClB6H,oBAAqBb,EAA2BtI,EAAaY,EAASb,EAAYI,EAAgBG,EAAWa,OAKrHwE,EAAQ1G,UAAY,CAClBoB,aAAcnB,IAAAA,KACdkB,YAAalB,IAAAA,MACbqB,gBAAiBrB,IAAAA,KACjBe,UAAWf,IAAAA,KACXO,KAAMP,IAAAA,MACNY,cAAeZ,IAAAA,OACfc,YAAad,IAAAA,UAAoB,CAACA,IAAAA,MAAiBA,IAAAA,SACnDiB,eAAgBjB,IAAAA,KAChB0B,QAAS1B,IAAAA,QACPA,IAAAA,MAAgB,CACdgC,MAAOhC,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,OAAkBA,IAAAA,QAChEF,IAAKE,IAAAA,OACLmI,YAAanI,IAAAA,UAGjB2B,aAAc3B,IAAAA,KACd4B,WAAY5B,IAAAA,KACZ6B,cAAe7B,IAAAA,OACf8B,SAAU9B,IAAAA,KACV+B,SAAU/B,IAAAA,KACVgC,MAAOhC,IAAAA,IACPa,WAAYb,IAAAA,MAAgB,CAC1B+G,MAAO/G,IAAAA,OACPyF,OAAQzF,IAAAA,OACR6G,MAAO7G,IAAAA,SAETiC,OAAQjC,IAAAA,OACRgI,YAAahI,IAAAA,QAAkBA,IAAAA,QAC/BwB,kBAAmBxB,IAAAA,OACnBsB,cAAetB,IAAAA,KACfoB,UAAWpB,IAAAA,KACXM,eAAgBN,IAAAA,KAChBoC,gBAAiBpC,IAAAA,KACjByC,QAASzC,IAAAA,OACT2C,cAAe3C,IAAAA,QAGjByG,EAAQE,aAAe,CACrBrF,eAAe,EACfH,cAAc,EACdJ,WAAW,EACXR,KAAM,GACNK,cAAe,GACfE,YAAa,GACbD,WAAYqJ,EAAAA,GACZ7I,gBAAiB,aACjBJ,eAAgB,aAChBgB,YAAQiB,EACR9B,UAAW,aACXd,eAAgB,iBAAM,IACtB0H,YAAa,GACbtG,QAAS,GACTC,cAAc,EACdS,iBAAiB,GAGnB","sources":["webpack:///./src/presentational-components/shared/empty-state.js","webpack:///./src/presentational-components/shared/table-toolbar-view-old.js","webpack:///./src/presentational-components/shared/toolbar.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithAction = ({ title, icon, description, actions, ...props }) => (\n  <EmptyState variant={EmptyStateVariant.small} {...props}>\n    <EmptyStateIcon icon={icon || SearchIcon} />\n    <Title headingLevel=\"h4\" size=\"lg\">\n      {title}\n    </Title>\n    <EmptyStateBody className=\"pf-u-mb-md\">\n      {description.map((text, key) => (\n        <React.Fragment key={key}>\n          {text} <br />\n        </React.Fragment>\n      ))}\n    </EmptyStateBody>\n    {actions}\n  </EmptyState>\n);\n\nEmptyWithAction.propTypes = {\n  icon: PropTypes.func,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n  className: PropTypes.string,\n};\n\nexport default EmptyWithAction;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport propTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Button, Pagination, EmptyStatePrimary } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-state';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarViewOld = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  emptyFilters,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  isCollapsible,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  isExpandable,\n  onExpand,\n  hideFilterChips,\n  hideHeader,\n  noData,\n  noDataDescription,\n  ouiaId,\n  tableId,\n  containerRef,\n  textFilterRef,\n}) => {\n  const intl = useIntl();\n  const [opened, openRow] = useState({});\n  const [sortByState, setSortByState] = useState({ index: undefined, direction: undefined });\n  useEffect(() => {\n    setSortByState({\n      ...sortBy,\n      ...(sortByState.index !== undefined && sortByState),\n    });\n  }, [sortBy]);\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) =>\n    openRow((opened) => ({\n      ...opened,\n      [uuid]: isOpen,\n    }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={intl.formatMessage(messages.noMatchingItemsFound, { items: titlePlural })}\n        description={\n          noData && noDataDescription\n            ? noDataDescription\n            : [intl.formatMessage(messages.filterMatchesNoItems, { items: titlePlural }), intl.formatMessage(messages.tryChangingFilters)]\n        }\n        actions={\n          noData && noDataDescription\n            ? undefined\n            : [\n                <EmptyStatePrimary key=\"clear-filters\">\n                  <Button\n                    variant=\"link\"\n                    ouiaId=\"clear-filters-button\"\n                    onClick={() => {\n                      setFilterValue(emptyFilters);\n                      fetchData({\n                        ...pagination,\n                        offset: 0,\n                        ...(emptyFilters ? emptyFilters : { name: '' }),\n                      });\n                    }}\n                  >\n                    {intl.formatMessage(messages.clearAllFilters)}\n                  </Button>\n                </EmptyStatePrimary>,\n              ]\n        }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse),\n    },\n  });\n\n  const renderTable = () => {\n    const selectColumnOffset = isSelectable && data?.length > 0;\n    const sortByIndex = Math.min((sortByState?.index || selectColumnOffset) - selectColumnOffset, columns?.length - 1);\n    const sortBy =\n      (sortByState.index !== undefined &&\n        sortByIndex >= 0 &&\n        sortByIndex < columns.length &&\n        `${sortByState.direction === 'desc' ? '-' : ''}${columns[sortByIndex].key}`) ||\n      undefined;\n    return (\n      <Fragment>\n        <Toolbar\n          isSelectable={isSelectable}\n          checkedRows={checkedRows}\n          setCheckedItems={setCheckedItems}\n          isLoading={isLoading || noData}\n          data={data}\n          titleSingular={titleSingular}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n          sortBy={sortBy}\n          pagination={pagination}\n          fetchData={fetchData}\n          toolbarButtons={toolbarButtons}\n          filterPlaceholder={filterPlaceholder}\n          filters={filters}\n          isFilterable={isFilterable}\n          onShowMore={onShowMore}\n          showMoreTitle={showMoreTitle}\n          onFilter={onFilter}\n          onChange={onChange}\n          value={value}\n          hideFilterChips={hideFilterChips}\n          tableId={tableId}\n          containerRef={containerRef}\n          textFilterRef={textFilterRef}\n        />\n        {isLoading ? (\n          <ListLoader />\n        ) : (\n          <Table\n            canSelectAll={false}\n            aria-label={`${titlePlural.toLowerCase()} table`}\n            variant={isCompact ? TableVariant.compact : null}\n            borders={borders}\n            {...(isCollapsible && { onCollapse })}\n            {...(isSelectable &&\n              rows.length > 0 && {\n                onSelect: (_e, isSelected, _idx, { uuid, cells: [name], requires }) =>\n                  setCheckedItems(selectedRows([{ uuid, name, requires }], isSelected)),\n              })}\n            {...(isExpandable && { onExpand })}\n            rows={rows.length > 0 ? rows : [{ fullWidth: true, cells: [renderEmpty()] }]}\n            cells={columns}\n            {...(rows.length > 0 && { actionResolver })}\n            className={rows.length == 0 ? 'ins-c-table-empty-state' : ''}\n            areActionsDisabled={areActionsDisabled}\n            rowWrapper={rowWrapper}\n            sortBy={sortByState}\n            ouiaId={ouiaId}\n            onSort={(e, index, direction) => {\n              const sortByIndex = Math.min((index || selectColumnOffset) - selectColumnOffset, columns?.length - 1);\n              const orderBy = `${direction === 'desc' ? '-' : ''}${columns[sortByIndex].key}`;\n              setSortByState({ index, direction });\n              filters && filters.length > 0\n                ? fetchData({\n                    ...pagination,\n                    offset: 0,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    orderBy,\n                  })\n                : fetchData({\n                    ...pagination,\n                    offset: 0,\n                    name: filterValue,\n                    orderBy,\n                  });\n            }}\n          >\n            {!hideHeader && <TableHeader />}\n            <TableBody />\n          </Table>\n        )}\n        {!pagination.noBottom && (\n          <TableToolbar>\n            {!isLoading && <Pagination {...paginationBuilder(pagination, fetchData, filterValue, sortBy)} variant=\"bottom\" dropDirection=\"up\" />}\n          </TableToolbar>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      {routes()}\n      {!isLoading && rows.length === 0 && filterValue.length === 0 && filters.every(({ value }) => !value) ? (\n        <EmptyWithAction\n          title={intl.formatMessage(messages.configureItems, { items: titlePlural })}\n          icon={PlusCircleIcon}\n          description={[\n            intl.formatMessage(messages.toConfigureUserAccess),\n            intl.formatMessage(messages.createAtLeastOneItem, { item: titleSingular }),\n          ]}\n          actions={toolbarButtons()[0]}\n          {...emptyProps}\n        />\n      ) : (\n        renderTable()\n      )}\n    </Fragment>\n  );\n};\n\nTableToolbarViewOld.propTypes = {\n  ...Toolbar.propTypes,\n  sortBy: propTypes.shape({\n    directions: propTypes.string,\n    index: propTypes.number,\n  }),\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  emptyFilters: propTypes.object,\n  checkedRows: propTypes.array,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool,\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func,\n  hideFilterChips: propTypes.bool,\n  hideHeader: propTypes.bool,\n  noDataDescription: propTypes.arrayOf(propTypes.node),\n  filters: propTypes.array,\n  tableId: propTypes.string.isRequired,\n};\n\nTableToolbarViewOld.defaultProps = {\n  ...Toolbar.defaultProps,\n  emptyFilters: {},\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  hideFilterChips: false,\n  checkedRows: [],\n  hideHeader: false,\n};\n","import React from 'react';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { pickBy } from 'lodash';\nimport { selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { calculateOffset, calculatePage, defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '', sortBy = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: calculatePage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: calculateOffset(page, pagination.limit),\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 },\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy,\n    });\n  },\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = [], setCheckedItems = () => undefined, data = [], tableId) => {\n  const intl = useIntl();\n  return {\n    count: checkedRows.length,\n    items: [\n      {\n        title: intl.formatMessage(messages.selectNone),\n        onClick: () => {\n          setCheckedItems(() => []);\n        },\n      },\n      {\n        ...(!isLoading && data && data.length > 0\n          ? {\n              title: intl.formatMessage(messages.selectPage, {\n                length: data.filter((row) => !(row.platform_default || row.admin_default || row.system)).length,\n              }),\n              onClick: () => {\n                setCheckedItems(selectedRows(data, true));\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(data, checkedRows),\n    onSelect: (value) => {\n      !isLoading && setCheckedItems(selectedRows(data, value));\n    },\n    id: tableId,\n  };\n};\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  sortBy,\n  textFilterRef\n) => {\n  const intl = useIntl();\n  return {\n    onChange,\n    value,\n    items: [\n      ...(filters && filters.length > 0\n        ? filters.map(({ key, label, value, selected, placeholder, type = 'text', groups, items, innerRef }) => ({\n            label: label || firstUpperCase(key),\n            type,\n            filterValues: {\n              innerRef,\n              id: `filter-by-${key}`,\n              key: `filter-by-${key}`,\n              placeholder: placeholder ? placeholder : intl.formatMessage(messages.filterByKey, { key }),\n              value,\n              selected,\n              ...(type !== 'text' ? { isFilterable, onShowMore, showMoreTitle, onFilter } : {}),\n              groups,\n              items,\n              onChange: (_e, filterBy) => {\n                const newFilter =\n                  typeof filterBy !== 'string' && !Array.isArray(filterBy) ? Object.keys(pickBy(filterBy[''], (value) => value)) : filterBy;\n                setFilterValue({\n                  ...filterValue,\n                  ...pagination,\n                  offset: 0,\n                  [key]: newFilter,\n                });\n                debouncedFetch(() =>\n                  fetchData({\n                    ...pagination,\n                    offset: 0,\n                    orderBy: sortBy,\n                    ...filters.reduce(\n                      (acc, curr) => ({\n                        ...acc,\n                        [curr.key]: curr.value,\n                      }),\n                      {}\n                    ),\n                    [key]: newFilter,\n                  })\n                ).then((data) => {\n                  innerRef?.current?.focus();\n                  return data;\n                });\n              },\n              isDisabled: isLoading,\n            },\n          }))\n        : [\n            {\n              label: firstUpperCase(filterPlaceholder || titleSingular),\n              type: 'text',\n              filterValues: {\n                innerRef: textFilterRef,\n                id: 'filter-by-string',\n                key: 'filter-by-string',\n                placeholder: intl.formatMessage(messages.filterByKey, { key: filterPlaceholder || titleSingular }),\n                value: filterValue,\n                onChange: (_e, value) => {\n                  setFilterValue({\n                    ...pagination,\n                    offset: 0,\n                    name: value,\n                  });\n                  debouncedFetch(() =>\n                    fetchData({\n                      ...pagination,\n                      offset: 0,\n                      name: value,\n                      orderBy: sortBy,\n                    })\n                  ).then((data) => {\n                    textFilterRef?.current?.focus();\n                    return data;\n                  });\n                },\n                isDisabled: isLoading,\n              },\n            },\n          ]),\n      ...(filterItems || []),\n    ],\n  };\n};\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  filters,\n  pagination = {},\n  setFilterValue = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters:\n    filters && filters.length > 0\n      ? filters\n          .map(\n            ({ key: type, value: options }) =>\n              options &&\n              options.length !== 0 && {\n                category: firstUpperCase(type),\n                type,\n                chips: Array.isArray(options) ? options.map((filter) => ({ name: filter })) : [{ name: options }],\n              }\n          )\n          .filter(Boolean)\n      : [\n          {\n            name: filterValue,\n          },\n        ],\n  onDelete: (_e, [deleted], isAll) => {\n    const setKeyValue = (value, type, key) => {\n      if (isAll) {\n        return type === 'group' || type === 'checkbox' ? [] : '';\n      }\n\n      if (key !== deleted.type) {\n        return value;\n      }\n\n      if (type === 'checkbox' || type === 'group') {\n        return value.filter((value) => value !== deleted.chips[0]?.name);\n      }\n\n      return Array.isArray(value) ? [] : '';\n    };\n\n    const filtersValue = filters.reduce((acc, { key, value, type }) => ({ ...acc, [key]: setKeyValue(value, type, key) }), {});\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...filtersValue,\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      name: '',\n      ...filtersValue,\n    });\n  },\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  filters,\n  isFilterable,\n  onShowMore,\n  showMoreTitle,\n  onFilter,\n  onChange,\n  value,\n  hideFilterChips,\n  tableId,\n  textFilterRef,\n}) => (\n  <PrimaryToolbar\n    {...(isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data, tableId),\n    })}\n    filterConfig={filterConfigBuilder(\n      isLoading,\n      setFilterValue,\n      fetchData,\n      filterValue,\n      pagination,\n      titleSingular,\n      filterPlaceholder,\n      filterItems,\n      filters,\n      isFilterable,\n      onShowMore,\n      showMoreTitle,\n      onFilter,\n      onChange,\n      value,\n      sortBy,\n      textFilterRef\n    )}\n    useMobileLayout\n    actionsConfig={{\n      actions: toolbarButtons(),\n    }}\n    {...(!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy),\n    })}\n    {...((filterValue.length > 0 || (filters && filters.length > 0)) &&\n      !hideFilterChips && {\n        activeFiltersConfig: activeFiltersConfigBuilder(filterValue, filters, pagination, setFilterValue, fetchData, sortBy),\n      })}\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  setFilterValue: PropTypes.func,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n      key: PropTypes.string,\n      placeholder: PropTypes.string,\n    })\n  ),\n  isFilterable: PropTypes.bool,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  onFilter: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  sortBy: PropTypes.string,\n  filterItems: PropTypes.arrayOf(PropTypes.object),\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func,\n  hideFilterChips: PropTypes.bool,\n  tableId: PropTypes.string,\n  textFilterRef: PropTypes.object,\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  filters: [],\n  isFilterable: false,\n  hideFilterChips: false,\n};\n\nexport default Toolbar;\n"],"names":["EmptyWithAction","title","icon","description","actions","props","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","SearchIcon","Title","headingLevel","size","EmptyStateBody","className","map","text","key","propTypes","PropTypes","TableToolbarViewOld","isCompact","createRows","borders","columns","toolbarButtons","data","actionResolver","areActionsDisabled","routes","titlePlural","titleSingular","pagination","filterValue","isLoading","emptyFilters","setFilterValue","checkedRows","isSelectable","fetchData","setCheckedItems","isCollapsible","emptyProps","filterPlaceholder","rowWrapper","filters","isFilterable","onShowMore","showMoreTitle","onFilter","onChange","value","sortBy","isExpandable","onExpand","hideFilterChips","hideHeader","noData","noDataDescription","ouiaId","tableId","containerRef","textFilterRef","intl","useIntl","useState","opened","openRow","index","undefined","direction","sortByState","setSortByState","useEffect","rows","onCollapse","_event","_index","isOpen","uuid","Fragment","length","every","formatMessage","messages","items","PlusCircleIcon","item","selectColumnOffset","sortByIndex","Math","min","Table","canSelectAll","toLowerCase","TableVariant","onSelect","_e","isSelected","_idx","name","cells","requires","selectedRows","fullWidth","EmptyStatePrimary","Button","onClick","offset","colSpan","Boolean","onSort","e","orderBy","reduce","acc","curr","TableHeader","TableBody","noBottom","Pagination","paginationBuilder","dropDirection","renderTable","Toolbar","directions","defaultProps","itemCount","count","perPage","limit","page","calculatePage","onSetPage","calculateOffset","perPageOptions","onPerPageSelect","bulkSelectBuilder","filter","row","platform_default","admin_default","system","checked","calculateChecked","id","filterConfigBuilder","filterItems","label","selected","placeholder","type","groups","innerRef","firstUpperCase","filterValues","filterBy","newFilter","Array","isArray","Object","keys","debouncedFetch","then","current","focus","isDisabled","activeFiltersConfigBuilder","options","category","chips","onDelete","isAll","deleted","filtersValue","setKeyValue","bulkSelect","filterConfig","useMobileLayout","actionsConfig","activeFiltersConfig","defaultSettings"],"sourceRoot":""}
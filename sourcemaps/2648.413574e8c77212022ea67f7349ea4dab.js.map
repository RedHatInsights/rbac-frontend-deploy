{"version":3,"file":"js/2648.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@remix-run/router/dist/router.js","webpack:///./node_modules/react-router/dist/index.js","webpack:///./node_modules/react-router-dom/dist/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.18.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnMissImpl = init.unstable_patchRoutesOnMiss;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnMissImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnMiss implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && patchRoutesOnMissImpl && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    // We need to run patchRoutesOnMiss in initialize()\n    initialized = false;\n    initialMatches = [];\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = m => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (typeof m.route.loader === \"function\" && m.route.loader.hydrate === true) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return loaderData && loaderData[m.route.id] !== undefined || errors && errors[m.route.id] !== undefined;\n    };\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Map of pending patchRoutesOnMiss() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: opts.viewTransitionOpts,\n      unstable_flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let {\n          boundaryId,\n          error\n        } = handleDiscoverRouteError(location.pathname, discoverResult);\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches);\n      result = results[0];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let {\n          boundaryId,\n          error\n        } = handleDiscoverRouteError(location.pathname, discoverResult);\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(request, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors).filter(_ref2 => {\n        let [id] = _ref2;\n        return !matchesToLoad.some(m => m.route.id === id);\n      }).forEach(_ref3 => {\n        let [routeId, error] = _ref3;\n        errors = Object.assign(errors || {}, {\n          [routeId]: error\n        });\n      });\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let {\n          error\n        } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", fetchRequest, [match], requestMatches);\n    let actionResult = actionResults[0];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, {\n            fetcherSubmission: submission\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(revalidationRequest, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let {\n          error\n        } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", fetchRequest, [match], matches);\n    let result = results[0];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches) {\n    try {\n      let results = await callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, manifest, mapRouteProperties);\n      return await Promise.all(results.map((result, i) => {\n        if (isRedirectHandlerResult(result)) {\n          let response = result.result;\n          return {\n            type: ResultType.redirect,\n            response: normalizeRelativeRoutingRedirectResponse(response, request, matchesToLoad[i].route.id, matches, basename, future.v7_relativeSplatPath)\n          };\n        }\n        return convertHandlerResultToDataResult(result);\n      }));\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      return matchesToLoad.map(() => ({\n        type: ResultType.error,\n        error: e\n      }));\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    let [loaderResults, ...fetcherResults] = await Promise.all([matchesToLoad.length ? callDataStrategy(\"loader\", request, matchesToLoad, matches) : [], ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        let fetcherRequest = createClientSideRequest(init.history, f.path, f.controller.signal);\n        return callDataStrategy(\"loader\", fetcherRequest, [f.match], f.matches).then(r => r[0]);\n      } else {\n        return Promise.resolve({\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        });\n      }\n    })]);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref4) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref4;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function handleDiscoverRouteError(pathname, discoverResult) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message: discoverResult.error != null && \"message\" in discoverResult.error ? discoverResult.error : String(discoverResult.error)\n      })\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnMissImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        let leafRoute = matches[matches.length - 1].route;\n        if (leafRoute.path && (leafRoute.path === \"*\" || leafRoute.path.endsWith(\"/*\"))) {\n          // If we matched a splat, it might only be because we haven't yet fetched\n          // the children that would match with a higher score, so let's fetch\n          // around and find out\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    let partialMatches = matches;\n    let route = partialMatches.length > 0 ? partialMatches[partialMatches.length - 1].route : null;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(patchRoutesOnMissImpl, pathname, partialMatches, routesToUse, manifest, mapRouteProperties, pendingPatchRoutes, signal);\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      let matchedSplat = false;\n      if (newMatches) {\n        let leafRoute = newMatches[newMatches.length - 1].route;\n        if (leafRoute.index) {\n          // If we found an index route, we can stop\n          return {\n            type: \"success\",\n            matches: newMatches\n          };\n        }\n        if (leafRoute.path && leafRoute.path.length > 0) {\n          if (leafRoute.path === \"*\") {\n            // If we found a splat route, we can't be sure there's not a\n            // higher-scoring route down some partial matches trail so we need\n            // to check that out\n            matchedSplat = true;\n          } else {\n            // If we found a non-splat route, we can stop\n            return {\n              type: \"success\",\n              matches: newMatches\n            };\n          }\n        }\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // If we are no longer partially matching anything, this was either a\n      // legit splat match above, or it's a 404.  Also avoid loops if the\n      // second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.map(m => m.route.id).join(\"-\") === newPartialMatches.map(m => m.route.id).join(\"-\")) {\n        return {\n          type: \"success\",\n          matches: matchedSplat ? newMatches : null\n        };\n      }\n      partialMatches = newPartialMatches;\n      route = partialMatches[partialMatches.length - 1].route;\n      if (route.path === \"*\") {\n        // The splat is still our most accurate partial, so run with it\n        return {\n          type: \"success\",\n          matches: partialMatches\n        };\n      }\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      unstable_dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `HandlerResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isHandlerResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, unstable_dataStrategy);\n      result = results[0];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy) {\n    let results = await callDataStrategyImpl(unstable_dataStrategy || defaultDataStrategy, type, request, matchesToLoad, matches, manifest, mapRouteProperties, requestContext);\n    return await Promise.all(results.map((result, i) => {\n      if (isRedirectHandlerResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, matchesToLoad[i].route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      return convertHandlerResultToDataResult(result);\n    }));\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref5) => {\n        let [name, value] = _ref5;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[0] : undefined;\n  let boundaryMatches = boundaryId ? getLoaderMatchesUntilBoundary(matches, boundaryId) : matches;\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return state.loaderData[route.id] === undefined && (\n      // Don't re-run if the loader ran and threw an error\n      !state.errors || state.errors[route.id] === undefined);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (isInitialLoad || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Idempotent utility to execute patchRoutesOnMiss() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(patchRoutesOnMissImpl, path, matches, routes, manifest, mapRouteProperties, pendingRouteChildren, signal) {\n  let key = [path, ...matches.map(m => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnMissImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(routeId, children, routes, manifest, mapRouteProperties);\n          }\n        }\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n    if (pending && isPromise(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  if (routeId) {\n    var _route$children;\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    let dataChildren = convertRoutesToDataRoutes(children, mapRouteProperties, [routeId, \"patch\", String(((_route$children = route.children) == null ? void 0 : _route$children.length) || \"0\")], manifest);\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(children, mapRouteProperties, [\"patch\", String(routesToUse.length || \"0\")], manifest);\n    routesToUse.push(...dataChildren);\n  }\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nfunction defaultDataStrategy(opts) {\n  return Promise.all(opts.matches.map(m => m.resolve()));\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, manifest, mapRouteProperties, requestContext) {\n  let routeIdsToLoad = matchesToLoad.reduce((acc, m) => acc.add(m.route.id), new Set());\n  let loadedMatches = new Set();\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: matches.map(match => {\n      let shouldLoad = routeIdsToLoad.has(match.route.id);\n      // `resolve` encapsulates the route.lazy, executing the\n      // loader/action, and mapping return values/thrown errors to a\n      // HandlerResult.  Users can pass a callback to take fine-grained control\n      // over the execution of the loader/action\n      let resolve = handlerOverride => {\n        loadedMatches.add(match.route.id);\n        return shouldLoad ? callLoaderOrAction(type, request, match, manifest, mapRouteProperties, handlerOverride, requestContext) : Promise.resolve({\n          type: ResultType.data,\n          result: undefined\n        });\n      };\n      return _extends({}, match, {\n        shouldLoad,\n        resolve\n      });\n    }),\n    request,\n    params: matches[0].params,\n    context: requestContext\n  });\n  // Throw if any loadRoute implementations not called since they are what\n  // ensures a route is fully loaded\n  matches.forEach(m => invariant(loadedMatches.has(m.route.id), \"`match.resolve()` was not called for route id \\\"\" + m.route.id + \"\\\". \" + \"You must call `match.resolve()` on every match passed to \" + \"`dataStrategy` to ensure all routes are properly loaded.\"));\n  // Filter out any middleware-only matches for which we didn't need to run handlers\n  return results.filter((_, i) => routeIdsToLoad.has(matches[i].route.id));\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, manifest, mapRouteProperties, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<HandlerResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise;\n    if (handlerOverride) {\n      handlerPromise = handlerOverride(ctx => actualHandler(ctx));\n    } else {\n      handlerPromise = (async () => {\n        try {\n          let val = await actualHandler();\n          return {\n            type: \"data\",\n            result: val\n          };\n        } catch (e) {\n          return {\n            type: \"error\",\n            result: e\n          };\n        }\n      })();\n    }\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // HandlerResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertHandlerResultToDataResult(handlerResult) {\n  let {\n    result,\n    type,\n    status\n  } = handlerResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : status\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result,\n    statusCode: status\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage = \"Unable to match URL \\\"\" + pathname + \"\\\" - the `unstable_patchRoutesOnMiss()` \" + (\"function threw the following error:\\n\" + message);\n    } else if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isPromise(val) {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\nfunction isHandlerResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectHandlerResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.25.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts == null ? void 0 : opts.unstable_patchRoutesOnMiss\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.25.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts == null ? void 0 : opts.unstable_patchRoutesOnMiss,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts == null ? void 0 : opts.unstable_patchRoutesOnMiss,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_flushSync: flushSync,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n"],"names":["Action","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","PopStateEventType","createMemoryHistory","options","entries","initialEntries","initialIndex","v5Compat","map","entry","index","createMemoryLocation","state","undefined","clampIndex","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","getUrlBasedHistory","window","globalHistory","usr","createHashHistory","substr","startsWith","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","invariant","value","message","Error","cond","console","warn","e","getHistoryState","idx","current","random","toString","_ref","parsedPath","searchIndex","getLocation","validateLocation","defaultView","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","DOMException","name","ResultType","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","String","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","a","b","score","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","flattenRoute","relativePath","caseSensitive","joinPaths","concat","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","generatePath","originalPath","prefix","p","array","keyMatch","optional","param","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","v","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","DeferredData","constructor","reject","pendingKeysSet","subscribers","deferredKeys","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref2","trackPromise","done","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","undefinedError","emit","settledKey","subscriber","subscribe","cancel","abort","k","resolveData","resolve","size","unwrappedData","_ref3","unwrapTrackedPromise","pendingKeys","_tracked","isTrackedPromise","_error","_data","defer","redirect","redirectDocument","response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","initialized","router","dataRoutes","dataStrategyImpl","unstable_dataStrategy","defaultDataStrategy","patchRoutesOnMissImpl","unstable_patchRoutesOnMiss","future","v7_fetcherPersist","v7_normalizeFormMethod","v7_partialHydration","v7_prependBasename","v7_skipActionErrorRevalidation","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","checkFogOfWar","active","m","lazy","loader","errors","isRouteInitialized","hydrate","findIndex","pendingNavigationController","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","pendingPatchRoutes","ignoreNextHistoryUpdate","updateState","newState","opts","completedFetchers","deletedFetchersKeys","fetcher","unstable_viewTransitionOpts","viewTransitionOpts","unstable_flushSync","flushSync","deleteFetcher","completeNavigation","_temp","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","priorPaths","currentLocation","toPaths","getSavedScrollPosition","async","startNavigation","startUninterruptedRevalidation","getScrollKey","saveScrollPosition","enableViewTransition","routesToUse","loadingNavigation","overrideNavigation","fogOfWar","notFoundMatches","handleNavigational404","submission","pendingActionResult","request","createClientSideRequest","pendingError","findNearestBoundary","type","actionResult","isFogOfWar","interruptActiveLoads","getSubmittingNavigation","discoverResult","discoverRoutes","shortCircuited","boundaryId","handleDiscoverRouteError","partialMatches","actionMatch","getTargetMatch","callDataStrategy","method","routeId","isRedirectResult","normalizeRedirectLocation","startRedirectNavigation","isDeferredResult","isErrorResult","boundaryMatch","handleAction","getLoadingNavigation","updatedMatches","fetcherSubmission","initialHydration","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","matchesToLoad","revalidatingFetchers","getMatchesToLoad","cancelActiveDeferreds","updatedFetchers","markFetchRedirectsDone","getActionDataForCommit","updates","rf","revalidatingFetcher","getLoadingFetcher","getUpdatedRevalidatingFetchers","abortFetcher","abortPendingFetchRevalidations","f","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","fetcherKey","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","handleLoaders","_temp2","redirectLocation","isDocumentReload","redirectHistoryAction","results","requestContext","routeIdsToLoad","loadedMatches","shouldLoad","handlerOverride","staticContext","onReject","runHandler","handler","handlerPromise","actualHandler","ctx","context","handlerError","all","loadLazyRouteModule","callLoaderOrAction","callDataStrategyImpl","isResponse","isRedirectHandlerResult","normalizeRelativeRoutingRedirectResponse","handlerResult","contentType","body","statusCode","deferred","isDeferredData","_result$init","_result$init2","convertHandlerResultToDataResult","currentMatches","fetchersToLoad","resolveDeferredResults","updateFetcherState","setFetcherError","getFetcher","markFetchersDone","doneFetcher","getDoneFetcher","doneKeys","landedId","yeetedKeys","deleteBlocker","updateBlocker","newBlocker","blocker","shouldBlockNavigation","_ref4","blockerKey","blockerFunction","predicate","cancelledRouteIds","dfd","y","leafRoute","isNonHMR","loadLazyRouteChildren","newMatches","matchedSplat","newPartialMatches","initialize","_window","transitions","sessionPositions","sessionStorage","getItem","parse","restoreAppliedTransitions","_saveAppliedTransitions","setItem","persistAppliedTransitions","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizedPath","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","userReplace","unstable_viewTransition","fetch","requestMatches","detectAndHandle405Error","existingFetcher","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","revalidationRequest","loadId","loadFetcher","staleKey","handleFetcherAction","resolveDeferredData","handleFetcherLoader","revalidate","count","dispose","clear","getBlocker","patchRoutes","patchRoutesImpl","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","isSubmissionNavigation","searchParams","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","_ref5","convertFormDataToSearchParams","convertSearchParamsToFormData","append","isInitialLoad","skipActionErrorRevalidation","currentUrl","nextUrl","boundaryMatches","getLoaderMatchesUntilBoundary","actionStatus","shouldSkipRevalidation","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentPath","loaderMatch","arg","routeChoice","pendingRouteChildren","pending","patch","val","_route$children","dataChildren","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","trimmedMatches","normalizedLocation","protocol","isSameBasename","Request","skipLoaderErrorBubbling","foundError","loaderHeaders","processRouteLoaderData","newLoaderData","mergedLoaderData","reverse","find","_temp5","errorMessage","signals","isRevalidatingLoader","unwrap","getAll","Symbol","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","navigator","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","routePathnamesJson","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","super","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","needsToRunLoader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","Component","element","hookName","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","UseBlocker","setBlockerKey","startTransitionImpl","MemoryRouter","historyRef","setStateImpl","v7_startTransition","setState","Router","Navigate","isStatic","jsonPath","Outlet","Route","_props","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","renderError","success","_ref8","toRender","renderMatches","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","_excluded","_excluded2","_excluded3","__reactRouterVersion","createBrowserRouter","parseHydrationData","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","__type","__subType","ErrorConstructor","ViewTransitionContext","isTransitioning","FetchersContext","flushSyncImpl","useIdImpl","flushSyncSafe","Deferred","reason","fallbackElement","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","optInStartTransition","startTransitionSafe","isViewTransitionUnavailable","startViewTransition","skipTransition","t","finished","finally","renderPromise","routerFuture","MemoizedDataRoutes","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","reloadDocument","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","ariaCurrentProp","className","classNameProp","styleProp","routerState","useViewTransitionState","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Form","_ref9","forwardedRef","onSubmit","submit","useSubmit","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","storageKey","useScrollRestoration","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","fetcherId","getUniqueFetcherId","UseSubmit","currentRouteId","validateClientSideSubmission","attr","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","getFormSubmissionInfo","useFetcher","_temp3","_route$matches","UseFetcher","defaultKey","setFetcherKey","load","submitImpl","FetcherForm","useFetchers","UseFetchers","_ref11","SCROLL_RESTORATION_STORAGE_KEY","_temp4","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","getKeyWithoutBasename","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","_ref12","when","confirm","setTimeout","nextPath"],"sourceRoot":""}
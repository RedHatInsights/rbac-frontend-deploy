{"version":3,"file":"js/9110.c1f43bed01428f0e2b68.js","mappings":"qQAQA,MAAMA,EAAc,EAAGC,QAAOC,OAAMC,UAASC,WAAUC,SAAQC,qBAAoBC,mBACjF,MAAMC,GAAO,WACNC,EAASC,IAAc,IAAAC,WAAS,GAEvC,OACE,kBAAC,EAAAC,MAAK,CACJC,UAAU,OACVZ,MACE,6BACE,kBAAC,IAAuB,CAACY,UAAU,oC,IAAsCZ,GAG7EI,OAAQA,EACRS,QAAS,EAAAC,aAAaC,MACtBb,QAASA,EACTc,QAAS,CACP,kBAAC,EAAAC,OAAM,CAACC,IAAI,UAAUC,OAAO,yBAAyBC,WAAYd,IAAiBE,EAASK,QAAQ,SAASQ,QAASlB,GACnHE,GAEH,kBAAC,EAAAY,OAAM,CAACC,IAAI,SAASC,OAAO,0BAA0BN,QAAQ,OAAOQ,QAASnB,GAC3EK,EAAKe,cAAc,IAASC,WAIjC,kBAAC,EAAAC,MAAK,CAACC,WAAS,GACd,kBAAC,EAAAC,UAAS,CAACC,UAAQ,GACjB,kBAAC,EAAAC,MAAK,CAACH,WAAS,GACd,kBAAC,EAAAI,YAAW,KAAE5B,MAInBK,EACC,kBAAC,EAAAwB,SAAQ,CACPC,UAAWvB,EACXwB,SAAU,IAAMvB,GAAYD,GAC5ByB,MAAO1B,EAAKe,cAAc,IAASY,qBACnCC,GAAG,qBACHvB,UAAU,kBAEV,KAEP,EAGHb,EAAYqC,UAAY,CACtBnC,KAAM,QACND,MAAO,WACPK,mBAAoB,WACpBF,SAAU,SACVD,QAAS,SACTE,OAAQ,SACRE,aAAc,UAGhBP,EAAYsC,aAAe,CACzB/B,cAAc,GAGhB,S,yICxCA,MAkCA,EAlC6F,EAAGgC,iBAC9F,MAAMC,GAAQ,IAAAC,cAAuD,EAAGC,cAAgBC,oBAAsBA,KACvGC,IAAU,IAAAC,mBACXC,GAA0B,IAAAL,cAA2C,EAAGC,cAAgBC,qBAC3FA,GAAeI,iBAAiBC,MAAQ,IAAIC,QAAO,EAAGC,UAAWN,EAAOO,OAAO,QAAQC,SAASF,OAE7FG,GAAW,IAAAC,eACjB,OACE,kBAAC,IAAW,CACVrD,MAAO,qCAAqCuC,EAAMU,OAClDhD,KACE,kBAAC,KAAgB,IACX,IAASqD,0BACbC,OAAQ,CACNC,EAAIvD,GAAS,2BAAIA,GACjBwD,MAAOd,EAAOO,OAAO,QAAQQ,OAC7BT,KAAMJ,EAAwB,GAAGI,KACjCV,MAAOA,EAAMU,QAInB5C,mBAAmB,SACnBC,cAAY,EACZJ,QAAS,IAAMoC,IACfnC,SAAU,KACR,MAAMwD,GAAS,QAA8BpB,EAAMqB,KAAMf,GACzDO,EAASO,GACTrB,EAAWqB,EAAOE,QAAQ,EAE5BzD,QAAQ,GAEX,C","sources":["webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/service-account/remove-group-service-accounts.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Button, Checkbox, Modal, ModalVariant, Split, SplitItem, Stack, TextContent } from '@patternfly/react-core';\nimport './RemoveModal.scss';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, withCheckbox }) => {\n  const intl = useIntl();\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <Modal\n      className=\"rbac\"\n      title={\n        <div>\n          <ExclamationTriangleIcon className=\"ins-m-alert rbac-c__delete-icon\" /> {title}\n        </div>\n      }\n      isOpen={isOpen}\n      variant={ModalVariant.small}\n      onClose={onClose}\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={withCheckbox && !checked} variant=\"danger\" onClick={onSubmit}>\n          {confirmButtonLabel}\n        </Button>,\n        <Button key=\"cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onClose}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <Stack hasGutter>\n            <TextContent>{text}</TextContent>\n          </Stack>\n        </SplitItem>\n      </Split>\n      {withCheckbox ? (\n        <Checkbox\n          isChecked={checked}\n          onChange={() => setChecked(!checked)}\n          label={intl.formatMessage(messages.confirmCheckMessage)}\n          id=\"remove-modal-check\"\n          className=\"pf-v5-u-mt-lg\"\n        />\n      ) : null}\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.any,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  withCheckbox: PropTypes.bool,\n};\n\nRemoveModal.defaultProps = {\n  withCheckbox: false,\n};\n\nexport default RemoveModal;\n","import React from 'react';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../Messages';\nimport { useSearchParams } from 'react-router-dom';\nimport { removeServiceAccountFromGroup } from '../../../redux/actions/group-actions';\n\ntype AddGroupServiceAccountsProps = {\n  cancelRoute: string;\n  submitRoute: string;\n  postMethod: (promise?: Promise<unknown>) => void;\n};\n\ntype RBACStore = {\n  groupReducer: {\n    selectedGroup: {\n      uuid: string;\n      name: string;\n      serviceAccounts?: {\n        data: { name: string }[];\n      };\n    };\n  };\n};\n\nconst RemoveServiceAccountFromGroup: React.FunctionComponent<AddGroupServiceAccountsProps> = ({ postMethod }: AddGroupServiceAccountsProps) => {\n  const group = useSelector<RBACStore, { name: string; uuid: string }>(({ groupReducer: { selectedGroup } }) => selectedGroup);\n  const [params] = useSearchParams();\n  const selectedServiceAccounts = useSelector<RBACStore, { name: string }[]>(({ groupReducer: { selectedGroup } }) =>\n    (selectedGroup?.serviceAccounts?.data || []).filter(({ name }) => params.getAll('name').includes(name))\n  );\n  const dispatch = useDispatch();\n  return (\n    <RemoveModal\n      title={`Remove service account from group ${group.name}`}\n      text={\n        <FormattedMessage\n          {...messages.removeServiceAccountsText}\n          values={{\n            b: (text) => <b>{text}</b>,\n            count: params.getAll('name').length,\n            name: selectedServiceAccounts[0].name,\n            group: group.name,\n          }}\n        />\n      }\n      confirmButtonLabel=\"Remove\"\n      withCheckbox\n      onClose={() => postMethod()}\n      onSubmit={() => {\n        const action = removeServiceAccountFromGroup(group.uuid, selectedServiceAccounts);\n        dispatch(action);\n        postMethod(action.payload);\n      }}\n      isOpen={true}\n    />\n  );\n};\n\nexport default RemoveServiceAccountFromGroup;\n"],"names":["RemoveModal","title","text","onClose","onSubmit","isOpen","confirmButtonLabel","withCheckbox","intl","checked","setChecked","useState","Modal","className","variant","ModalVariant","small","actions","Button","key","ouiaId","isDisabled","onClick","formatMessage","cancel","Split","hasGutter","SplitItem","isFilled","Stack","TextContent","Checkbox","isChecked","onChange","label","confirmCheckMessage","id","propTypes","defaultProps","postMethod","group","useSelector","groupReducer","selectedGroup","params","useSearchParams","selectedServiceAccounts","serviceAccounts","data","filter","name","getAll","includes","dispatch","useDispatch","removeServiceAccountsText","values","b","count","length","action","uuid","payload"],"sourceRoot":""}
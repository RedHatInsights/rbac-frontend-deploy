{"version":3,"file":"js/9490.4862a0149173f32a1350.js","mappings":"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","sources":["webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/helpers/cost-management/cost-management-helper.js","webpack:///./src/redux/actions/cost-management-actions.js","webpack:///./src/smart-components/common/ModalFormTemplate.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/FormButtons.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/role/ResourceDefinitionsFormTemplate.js","webpack:///./src/smart-components/role/edit-resource-definitions-modal.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import { getCostApi } from '../shared/user-login';\n\nconst costApi = getCostApi();\n\nexport async function getResourceDefinitions(apiProps) {\n  return await costApi.getResourceTypes(apiProps);\n}\n\nexport async function getResource(apiProps) {\n  return await costApi.getResource(apiProps);\n}\n","import * as ActionTypes from '../action-types';\nimport * as CostHelper from '../../helpers/cost-management/cost-management-helper';\n\nexport const getResourceDefinitions = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE_DEFINITIONS,\n  payload: CostHelper.getResourceDefinitions(apiProps),\n});\n\nexport const getResource = (apiProps) => ({\n  type: ActionTypes.GET_RESOURCE,\n  payload: CostHelper.getResource(apiProps),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\n/**\n * This id is requried to submit form by a button outside of the form element\n */\nconst MODAL_FORM_IDENTIFIER = 'modal-form';\nconst CustomFormWrapper = (props) => <Form {...props} id={MODAL_FORM_IDENTIFIER} />;\n\nconst CustomButtons = ({ saveLabel, cancelLabel }) => {\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy>\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-c-form\">\n          <ActionGroup className=\"pf-u-mt-0\">\n            <Button\n              ouiaId=\"primary-save-button\"\n              variant=\"primary\"\n              form={MODAL_FORM_IDENTIFIER}\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {saveLabel}\n            </Button>\n            <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {cancelLabel}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  saveLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n};\n\nCustomButtons.defaultProps = {\n  saveLabel: 'Save',\n  cancelLabel: 'Cancel',\n};\n\nconst ModalFormTemplate = ({ ModalProps, saveLabel, cancelLabel, alert, ...props }) => (\n  <Modal {...ModalProps} footer={<CustomButtons saveLabel={saveLabel} cancelLabel={cancelLabel} />}>\n    {alert?.()}\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n  ...CustomButtons.propTypes,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  const intl = useIntl();\n\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [...selectOptions]\n    : [{ label: intl.formatMessage(messages[isRequired ? 'pleaseChoose' : 'none']) }, ...selectOptions];\n};\n\nconst Select = ({ input, options, isReadOnly, isDisabled, isRequired, ...rest }) => (\n  <FormSelect {...input} {...rest} isDisabled={isDisabled || isReadOnly}>\n    {createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={props.value || props.label} {...props} label={props.label.toString()} /> // eslint-disable-line react/prop-types\n    ))}\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.any,\n      label: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any,\n};\n\nconst Pf4SelectWrapper = ({ label, isRequired, helperText, meta, description, hideLabel, ...rest }) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={rest.id}\n      isValid={!showError}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select label={label} isValid={!showError} isRequired={isRequired} {...rest} />\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool,\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst FormButtons = ({ dirtyFieldsSinceLastSubmit, submitSucceeded, pristine }) => {\n  const { onCancel } = useFormApi();\n  const noChanges = isEmpty(dirtyFieldsSinceLastSubmit) || (!submitSucceeded && pristine);\n  const intl = useIntl();\n  return (\n    <ActionGroup className=\"pf-u-mt-0\">\n      <Button ouiaId=\"primary-submit-button\" type=\"submit\" isDisabled={noChanges} variant=\"primary\">\n        {intl.formatMessage(messages.save)}\n      </Button>\n      <Button ouiaId=\"secondary-cancel-button\" variant=\"link\" onClick={() => onCancel()}>\n        {intl.formatMessage(messages.cancel)}\n      </Button>\n    </ActionGroup>\n  );\n};\n\nFormButtons.propTypes = {\n  dirtyFieldsSinceLastSubmit: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  }),\n  submitSucceeded: PropTypes.bool,\n  pristine: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nconst FormButtonWithSpies = (formProps) => (\n  <FormSpy\n    subscription={{\n      pristine: true,\n      submitSucceeded: true,\n      dirtyFieldsSinceLastSubmit: true,\n    }}\n  >\n    {(props) => <FormButtons {...props} {...formProps} />}\n  </FormSpy>\n);\n\nexport default FormButtonWithSpies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport FormButtons from './FormButtons';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nconst FormRenderer = ({ formTemplateProps, ...props }) => (\n  <ReactFormRender\n    componentMapper={{\n      [componentTypes.TEXT_FIELD]: TextField,\n      [componentTypes.TEXTAREA]: Textarea,\n      [componentTypes.SELECT]: Pf4SelectWrapper,\n    }}\n    FormTemplate={(props) => <FormTemplate {...formTemplateProps} {...props} FormButtons={FormButtons} />}\n    {...props}\n  />\n);\n\nFormRenderer.propTypes = {\n  formTemplateProps: PropTypes.object,\n};\n\nexport default FormRenderer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './warningModal.scss';\n\nexport const WarningModal = ({\n  type,\n  isOpen,\n  onModalCancel,\n  onConfirmCancel,\n  customTitle,\n  customDescription,\n  customPrimaryButtonTitle,\n  customSecondaryButtonTitle,\n}) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      title={\n        <span className=\"rbac-c-wizard__cancel-warning-header\">\n          <ExclamationTriangleIcon size=\"md\" className=\"rbac-c-wizard__cancel-warning-header--icon\" />\n          {customTitle || intl.formatMessage(messages.exitItemCreation, { item: type })}\n        </span>\n      }\n      variant={ModalVariant.small}\n      className=\"rbac rbac-c-wizard__cancel-warning\"\n      isOpen={isOpen}\n      onClose={onModalCancel}\n      actions={[\n        <Button ouiaId=\"primary-exit-button\" key=\"confirm\" variant=\"primary\" onClick={onConfirmCancel}>\n          {customPrimaryButtonTitle ?? intl.formatMessage(messages.exit)}\n        </Button>,\n        <Button ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onModalCancel}>\n          {customSecondaryButtonTitle ?? intl.formatMessage(messages.stay)}\n        </Button>,\n      ]}\n    >\n      <span>{customDescription || intl.formatMessage(messages.discardedInputsWarning)} </span>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  customTitle: PropTypes.node,\n  customDescription: PropTypes.node,\n  customPrimaryButtonTitle: PropTypes.string,\n  customSecondaryButtonTitle: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onConfirmCancel: PropTypes.func,\n};\n","import React from 'react';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { Alert } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst ResourceDefinitionsFormTemplate = ({ ModalProps, ...props }) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  return (\n    <ModalFormTemplate\n      {...props}\n      ModalProps={{\n        ...ModalProps,\n        onClose: () => ModalProps.onClose(values),\n      }}\n      alert={\n        values['dual-list-select']\n          ? undefined\n          : () => (\n              <div className=\"rbac-m-resource-definitions\">\n                <Alert className=\"pf-c-modal__alert\" variant=\"danger\" isInline title={intl.formatMessage(messages.defineAtLeastOneResource)} />\n              </div>\n            )\n      }\n    />\n  );\n};\n\nResourceDefinitionsFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ResourceDefinitionsFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { updateRole, fetchRole } from '../../redux/actions/role-actions';\nimport { getResource, getResourceDefinitions } from '../../redux/actions/cost-management-actions';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { WarningModal } from '../common/warningModal';\nimport { Spinner, Modal, ModalVariant, Bullseye } from '@patternfly/react-core';\nimport useAppNavigate from '../../hooks/useAppNavigate';\nimport ResourceDefinitionsFormTemplate from './ResourceDefinitionsFormTemplate';\nimport flatten from 'lodash/flattenDeep';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport './role-permissions.scss';\n\nconst createOptions = (resources) =>\n  Object.entries(resources).reduce(\n    (acc, [key, value]) => [\n      ...acc,\n      ...value.map((r) => ({\n        value: r.value,\n        path: key,\n        label: r.value,\n      })),\n    ],\n    []\n  );\n\nconst initialState = {\n  changedResources: undefined,\n  cancelWarningVisible: false,\n  resourcesPath: undefined,\n  loadingStateVisible: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst createEditResourceDefinitionsSchema = (resources, resourcesPath, options) => {\n  const intl = useIntl();\n  return {\n    fields: [\n      {\n        component: componentTypes.DUAL_LIST_SELECT,\n        name: 'dual-list-select',\n        leftTitle: intl.formatMessage(messages.resourcesAvailable),\n        rightTitle: intl.formatMessage(messages.resourcesDefined),\n        filterOptionsTitle: intl.formatMessage(messages.filterByResource),\n        filterValueTitle: intl.formatMessage(messages.filterByResource),\n        options: [...(resourcesPath && resources ? options : [])],\n        validate: [{ type: 'validate-resources' }],\n        isSearchable: true,\n      },\n    ],\n  };\n};\n\nconst selector = ({ costReducer: { resourceTypes, isLoading, loadingResources, resources } }, resourcesPath) => ({\n  resourceTypes: resourceTypes.data,\n  resources: resources[resourcesPath] ? { resourcesPath: resources[resourcesPath] } : resources,\n  isLoading,\n  isLoadingResources: loadingResources > 0,\n});\n\nconst validatorMapper = {\n  'validate-resources': () => (value) => value && value.length > 0 ? undefined : 'At least one resource must be defined for this permission',\n};\n\nconst EditResourceDefinitionsModal = ({ cancelRoute }) => {\n  const intl = useIntl();\n  const { roleId, permissionId } = useParams();\n  const navigate = useAppNavigate();\n\n  const dispatch = useDispatch();\n  const fetchResourceDefinitions = () => dispatch(getResourceDefinitions());\n\n  const [state, dispatchLocally] = useReducer(reducer, initialState);\n\n  const { definedResources, role } = useSelector(\n    (state) => ({\n      role: state.roleReducer.selectedRole,\n      definedResources: state.roleReducer.selectedRole?.access\n        ? flatten(\n            state.roleReducer.selectedRole.access\n              .filter((a) => a.permission === permissionId)\n              .map((access) => access.resourceDefinitions.map((resource) => resource.attributeFilter.value))\n          )\n        : [],\n      isRecordLoading: state.roleReducer.isRecordLoading,\n    }),\n    shallowEqual\n  );\n\n  const { resourceTypes, isLoading, isLoadingResources, resources } = useSelector((props) => selector(props, state.resourcesPath), shallowEqual);\n\n  useEffect(() => {\n    fetchResourceDefinitions();\n  }, [permissionId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let path = resourceTypes.find((r) => r.value === permissionId.split(':')?.[1])?.path;\n      if (path) {\n        dispatchLocally({ type: 'update', payload: { resourcesPath: path.split('/')[5] } });\n        dispatch(getResource(path));\n      }\n    }\n  }, [resourceTypes]);\n\n  const onCancel = () => navigate(cancelRoute, { replace: true });\n\n  const handleCancel = (data) => {\n    if (data['dual-list-select'] === definedResources) {\n      onCancel();\n    } else {\n      dispatchLocally({\n        type: 'update',\n        payload: {\n          changedResources: data['dual-list-select'],\n          cancelWarningVisible: true,\n        },\n      });\n    }\n  };\n\n  const handleSubmit = (data) => {\n    dispatchLocally({ type: 'update', payload: { changedResources: data['dual-list-select'] } });\n    const newAccess = {\n      permission: permissionId,\n      resourceDefinitions: [\n        {\n          attributeFilter: {\n            key: `cost-management.${permissionId.split(':')?.[1]}`,\n            operation: data['dual-list-select'].length === 1 ? 'equal' : 'in',\n            value: data['dual-list-select'].length === 1 ? data['dual-list-select'][0] : data['dual-list-select'],\n          },\n        },\n      ],\n    };\n    dispatch(updateRole(roleId, { ...role, access: [...role.access.filter((item) => item.permission !== permissionId), newAccess] }), true).then(\n      () => {\n        dispatch(fetchRole(roleId));\n        navigate(cancelRoute);\n      }\n    );\n  };\n\n  const options = createOptions(resources);\n\n  return (\n    <React.Fragment>\n      <WarningModal\n        customTitle={intl.formatMessage(messages.exitEditResourceDefinitions)}\n        customDescription={intl.formatMessage(messages.changesWillBeLost)}\n        isOpen={state.cancelWarningVisible}\n        onModalCancel={() => dispatchLocally({ type: 'update', payload: { cancelWarningVisible: false } })}\n        onConfirmCancel={onCancel}\n      ></WarningModal>\n      {(isLoading || isLoadingResources) && state.loadingStateVisible ? (\n        <Modal\n          variant={ModalVariant.large}\n          className=\"rbac-m-resource-definitions\"\n          isOpen={true}\n          title={intl.formatMessage(messages.editResourceDefinitions)}\n          onClose={() => {\n            dispatchLocally({ type: 'update', payload: { loadingStateVisible: false } });\n            onCancel();\n          }}\n        >\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        </Modal>\n      ) : (\n        <FormRenderer\n          schema={createEditResourceDefinitionsSchema(resources, state.resourcesPath, options)}\n          componentMapper={componentMapper}\n          initialValues={{ 'dual-list-select': state.changedResources || definedResources || [] }}\n          onSubmit={handleSubmit}\n          onCancel={(data) => handleCancel(data)}\n          validatorMapper={validatorMapper}\n          FormTemplate={(props) => (\n            <ResourceDefinitionsFormTemplate\n              {...props}\n              ModalProps={{\n                onClose: handleCancel,\n                isOpen: !state.cancelWarningVisible,\n                variant: 'large',\n                title: intl.formatMessage(messages.editResourceDefinitions),\n                description: intl.formatMessage(messages.editPermissionsUsingArrows),\n              }}\n            />\n          )}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nEditResourceDefinitionsModal.propTypes = {\n  cancelRoute: PropTypes.string.isRequired,\n};\n\nexport default EditResourceDefinitionsModal;\n"],"names":["linkBasename","navigate","useNavigate","to","options","mergeToBasename","costApi","getCostApi","getResourceDefinitions","apiProps","getResourceTypes","getResource","type","ActionTypes","payload","CostHelper","MODAL_FORM_IDENTIFIER","CustomFormWrapper","props","id","CustomButtons","saveLabel","cancelLabel","onCancel","useFormApi","pristine","invalid","validating","submitting","className","Button","ouiaId","variant","form","isDisabled","onClick","propTypes","PropTypes","defaultProps","ModalFormTemplate","ModalProps","alert","Modal","footer","showFormControls","FormWrapper","Select","input","isReadOnly","isRequired","rest","FormSelect","inputValue","intl","useIntl","selectOptions","find","undefined","value","label","formatMessage","messages","createOptions","map","FormSelectOption","key","toString","FieldProvider","Pf4SelectWrapper","helperText","meta","description","hideLabel","error","showError","touched","FormGroup","fieldId","isValid","helperTextInvalid","TextContent","Text","component","TextVariants","componentType","FormButtons","dirtyFieldsSinceLastSubmit","submitSucceeded","noChanges","ActionGroup","formProps","subscription","FormRenderer","formTemplateProps","componentMapper","componentTypes","TextField","Textarea","FormTemplate","WarningModal","isOpen","onModalCancel","onConfirmCancel","customTitle","customDescription","customPrimaryButtonTitle","customSecondaryButtonTitle","title","size","item","ModalVariant","onClose","actions","ResourceDefinitionsFormTemplate","values","getState","Alert","isInline","initialState","changedResources","cancelWarningVisible","resourcesPath","loadingStateVisible","reducer","state","action","Error","createEditResourceDefinitionsSchema","resources","fields","name","leftTitle","rightTitle","filterOptionsTitle","filterValueTitle","validate","isSearchable","validatorMapper","length","EditResourceDefinitionsModal","cancelRoute","useParams","roleId","permissionId","useAppNavigate","dispatch","useDispatch","useReducer","dispatchLocally","useSelector","role","roleReducer","selectedRole","definedResources","access","flatten","filter","a","permission","resourceDefinitions","resource","attributeFilter","isRecordLoading","shallowEqual","costReducer","resourceTypes","isLoading","loadingResources","data","isLoadingResources","selector","useEffect","path","r","split","replace","handleCancel","Object","entries","reduce","acc","Bullseye","Spinner","schema","initialValues","onSubmit","newAccess","operation","updateRole","then","fetchRole"],"sourceRoot":""}
{"version":3,"file":"js/1908.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/WarningModal/WarningModal.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/dropdownConstants.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Backdrop/backdrop.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/ModalBox/modal-box.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./src/hooks/useAppNavigate.js","webpack:///./src/smart-components/group/role/default-group-change-modal.js","webpack:///./src/smart-components/group/role/remove-role-modal.js","webpack:///./src/smart-components/group/role/group-roles.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalVariant, ButtonVariant, Checkbox } from '@patternfly/react-core';\nconst WarningModal = (_a) => {\n    var { isOpen, onConfirm, onClose, children, confirmButtonLabel = 'Confirm', cancelButtonLabel = 'Cancel', variant = ModalVariant.small, titleIconVariant = 'warning', withCheckbox = false, checkboxLabel = 'I understand that this action cannot be undone', confirmButtonVariant = ButtonVariant.primary, ouiaId = 'WarningModal' } = _a, props = __rest(_a, [\"isOpen\", \"onConfirm\", \"onClose\", \"children\", \"confirmButtonLabel\", \"cancelButtonLabel\", \"variant\", \"titleIconVariant\", \"withCheckbox\", \"checkboxLabel\", \"confirmButtonVariant\", \"ouiaId\"]);\n    const [checked, setChecked] = useState(false);\n    return (React.createElement(Modal, Object.assign({ variant: variant, isOpen: isOpen, onClose: onClose, onEscapePress: onClose, titleIconVariant: titleIconVariant, actions: [\n            React.createElement(Button, { ouiaId: `${ouiaId}-confirm-button`, key: \"confirm\", variant: confirmButtonVariant, onClick: () => {\n                    onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm();\n                    setChecked(false);\n                }, isDisabled: withCheckbox && !checked }, confirmButtonLabel),\n            React.createElement(Button, { ouiaId: `${ouiaId}-cancel-button`, key: \"cancel\", variant: ButtonVariant.link, onClick: onClose }, cancelButtonLabel),\n        ], ouiaId: ouiaId }, props),\n        children,\n        withCheckbox ? (React.createElement(Checkbox, { isChecked: checked, onChange: (_event, value) => setChecked(value), label: checkboxLabel, id: \"warning-modal-check\", className: \"pf-v5-u-mt-lg\", ouiaId: `${ouiaId}-confirm-checkbox` })) : null));\n};\nexport default WarningModal;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const TextContent = (_a) => {\n    var { children, className = '', isVisited = false } = _a, props = __rest(_a, [\"children\", \"className\", \"isVisited\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.content, isVisited && styles.modifiers.visited, className) }), children));\n};\nTextContent.displayName = 'TextContent';\n//# sourceMappingURL=TextContent.js.map","import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import './backdrop.css';\nexport default {\n  \"backdrop\": \"pf-v5-c-backdrop\",\n  \"backdropOpen\": \"pf-v5-c-backdrop__open\"\n};","import './modal-box.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"modalBox\": \"pf-v5-c-modal-box\",\n  \"modalBoxBody\": \"pf-v5-c-modal-box__body\",\n  \"modalBoxClose\": \"pf-v5-c-modal-box__close\",\n  \"modalBoxDescription\": \"pf-v5-c-modal-box__description\",\n  \"modalBoxFooter\": \"pf-v5-c-modal-box__footer\",\n  \"modalBoxHeader\": \"pf-v5-c-modal-box__header\",\n  \"modalBoxHeaderMain\": \"pf-v5-c-modal-box__header-main\",\n  \"modalBoxTitle\": \"pf-v5-c-modal-box__title\",\n  \"modalBoxTitleIcon\": \"pf-v5-c-modal-box__title-icon\",\n  \"modalBoxTitleText\": \"pf-v5-c-modal-box__title-text\",\n  \"modifiers\": {\n    \"sm\": \"pf-m-sm\",\n    \"md\": \"pf-m-md\",\n    \"lg\": \"pf-m-lg\",\n    \"alignTop\": \"pf-m-align-top\",\n    \"danger\": \"pf-m-danger\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"custom\": \"pf-m-custom\",\n    \"info\": \"pf-m-info\",\n    \"help\": \"pf-m-help\",\n    \"icon\": \"pf-m-icon\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../Section/section.css';\nvar Section = function (_a) {\n    var _b;\n    var type = _a.type, children = _a.children, className = _a.className, props = __rest(_a, [\"type\", \"children\", \"className\"]);\n    var sectionClasses = classNames(className, (_b = {}, _b[\"ins-l-\".concat(type)] = type !== undefined, _b));\n    return (_jsxs(\"section\", __assign({}, props, { className: sectionClasses, children: [' ', children, ' '] })));\n};\nexport default Section;\n//# sourceMappingURL=Section.js.map","import { useNavigate } from 'react-router-dom';\nimport { mergeToBasename } from '../presentational-components/shared/AppLink';\n\nconst useAppNavigate = (linkBasename) => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n\nexport default useAppNavigate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  const intl = useIntl();\n  return (\n    <WarningModal\n      withCheckbox\n      isOpen={isOpen}\n      title={intl.formatMessage(messages.warning)}\n      checkboxLabel={intl.formatMessage(messages.confirmCheckMessage)}\n      confirmButtonLabel={intl.formatMessage(messages.continue)}\n      onClose={onClose}\n      onConfirm={onSubmit}\n    >\n      <TextContent>\n        <Text>\n          <FormattedMessage\n            {...messages.defaultAccessGroupEditWarning}\n            values={{\n              b: (text) => <b>{text}</b>,\n            }}\n          />\n        </Text>\n      </TextContent>\n    </WarningModal>\n  );\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DefaultGroupChange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';\nimport DefaultGroupChange from './default-group-change-modal';\nimport { ButtonVariant } from '@patternfly/react-core';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange\n      isOpen={showConfirmModal && isOpen}\n      onClose={() => {\n        onClose();\n        setShowConfirmModal(false);\n      }}\n      onSubmit={onSubmit}\n    />\n  ) : (\n    <WarningModal\n      title={title}\n      isOpen={isOpen}\n      confirmButtonLabel={confirmButtonLabel}\n      confirmButtonVariant={ButtonVariant.danger}\n      onClose={onClose}\n      onConfirm={() => {\n        setShowConfirmModal(true);\n        (!isDefault || isChanged) && onSubmit();\n      }}\n    >\n      {text}\n    </WarningModal>\n  );\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.node,\n  title: PropTypes.node,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false,\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment, useContext, useRef, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport Section from '@redhat-cloud-services/frontend-components/Section';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport {\n  removeRolesFromGroup,\n  addRolesToGroup,\n  fetchRolesForGroup,\n  fetchAddRolesForGroup,\n  fetchSystemGroup,\n  fetchGroup,\n  fetchGroups,\n} from '../../../redux/actions/group-actions';\nimport RemoveRole from './remove-role-modal';\nimport { getBackRoute, getDateFormat } from '../../../helpers/shared/helpers';\nimport PermissionsContext from '../../../utilities/permissions-context';\nimport AppLink from '../../../presentational-components/shared/AppLink';\nimport useAppNavigate from '../../../hooks/useAppNavigate';\nimport { DEFAULT_ACCESS_GROUP_ID } from '../../../utilities/constants';\nimport messages from '../../../Messages';\nimport pathnames from '../../../utilities/pathnames';\nimport './group-roles.scss';\n\nconst createRows = (groupId, roles, checkedRows = []) =>\n  roles?.reduce(\n    (acc, { uuid, display_name, name, description, modified }) => [\n      ...acc,\n      {\n        uuid,\n        title: display_name || name,\n        cells: [\n          <Fragment key={`${uuid}-name`}>\n            <AppLink to={pathnames['group-detail-role-detail'].link.replace(':groupId', groupId).replace(':roleId', uuid)}>\n              {display_name || name}\n            </AppLink>\n          </Fragment>,\n          description,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type={getDateFormat(modified)} />\n          </Fragment>,\n        ],\n        selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  ) || [];\n\nconst generateOuiaID = (name) => {\n  // given a group name, generate an OUIA ID for the 'Add role' button\n  return name.toLowerCase().includes('default access') ? 'dag-add-role-button' : 'add-role-button';\n};\n\nconst addRoleButton = (isDisabled, ouiaId, customTooltipText) => {\n  const intl = useIntl();\n  const addRoleButtonContent = (\n    <Button ouiaId={ouiaId} variant=\"primary\" className=\"rbac-m-hide-on-sm\" aria-label=\"Add role\" isAriaDisabled={isDisabled}>\n      {intl.formatMessage(messages.addRole)}\n    </Button>\n  );\n\n  return isDisabled ? (\n    <Tooltip content={customTooltipText || intl.formatMessage(messages.allRolesAdded)}>{addRoleButtonContent}</Tooltip>\n  ) : (\n    addRoleButtonContent\n  );\n};\n\nconst reducer = ({ groupReducer: { selectedGroup, systemGroup, groups } }) => ({\n  roles: selectedGroup.roles?.data || [],\n  pagination: { ...defaultSettings, ...(selectedGroup.roles?.meta || {}) },\n  groupsPagination: groups.pagination || groups.meta,\n  groupsFilters: groups.filters,\n  isLoading: selectedGroup.roles?.isLoading,\n  isPlatformDefault: selectedGroup.platform_default,\n  isAdminDefault: selectedGroup.admin_default,\n  isChanged: !selectedGroup.system,\n  disableAddRoles:\n    /**\n     * First validate if the pagination object exists and is not empty.\n     * If empty or undefined, the disable condition will be always true\n     */\n    Object.keys(selectedGroup.addRoles.pagination || {}).length > 0\n      ? !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0) || !!selectedGroup.admin_default\n      : !!selectedGroup.admin_default,\n  systemGroupUuid: systemGroup?.uuid,\n  group: selectedGroup,\n});\n\nconst GroupRoles = ({ onDefaultGroupChanged }) => {\n  const intl = useIntl();\n  const chrome = useChrome();\n  const dispatch = useDispatch();\n  const navigate = useAppNavigate();\n  const { groupId } = useParams();\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [selectedAddRoles, setSelectedAddRoles] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n  const { userAccessAdministrator, orgAdmin } = useContext(PermissionsContext);\n  const hasPermissions = useRef(orgAdmin || userAccessAdministrator);\n  const {\n    roles,\n    pagination,\n    groupsPagination,\n    groupsFilters,\n    isLoading,\n    group,\n    isPlatformDefault,\n    isAdminDefault,\n    isChanged,\n    disableAddRoles,\n    systemGroupUuid,\n  } = useSelector(reducer);\n\n  const reloadWrapper = (event, callback) => {\n    event.payload.then(callback);\n    return event;\n  };\n\n  const fetchAddGroupRoles = (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {}));\n  const fetchGroupData = (customId) => dispatch(fetchGroup(customId ?? groupId));\n  const fetchSystGroup = () => dispatch(fetchSystemGroup({ chrome }));\n  const removeRoles = (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback));\n  const fetchGroupRoles = (pagination) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, pagination, options));\n\n  const columns = [\n    { title: intl.formatMessage(messages.name), orderBy: 'name' },\n    { title: intl.formatMessage(messages.description) },\n    { title: intl.formatMessage(messages.lastModified) },\n  ];\n\n  useEffect(() => {\n    if (groupId !== DEFAULT_ACCESS_GROUP_ID) {\n      fetchGroupRoles({ ...pagination, offset: 0 })(groupId);\n    } else {\n      systemGroupUuid && fetchGroupRoles({ ...pagination, offset: 0 })(systemGroupUuid);\n    }\n  }, [systemGroupUuid]);\n\n  useEffect(() => {\n    if (roles.length > 0) {\n      if (groupId !== DEFAULT_ACCESS_GROUP_ID) {\n        fetchAddGroupRoles(groupId);\n      } else {\n        systemGroupUuid && fetchAddGroupRoles(systemGroupUuid);\n      }\n    }\n  }, [roles]);\n\n  useEffect(() => {\n    hasPermissions.current = orgAdmin || userAccessAdministrator;\n  }, [orgAdmin, userAccessAdministrator]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name })));\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      <FormattedMessage\n        {...(plural ? messages.removeRolesModalText : messages.removeRoleModalText)}\n        values={{\n          b: (text) => <b>{text}</b>,\n          name,\n          ...(plural ? { roles: role } : { role }),\n        }}\n      />\n    </p>\n  );\n\n  const fetchUuid = groupId !== DEFAULT_ACCESS_GROUP_ID ? groupId : systemGroupUuid;\n\n  const removeRolesCallback = () => {\n    if (isPlatformDefault) {\n      fetchSystGroup().then(({ value: { data } }) => {\n        fetchGroupRoles({ ...pagination, offset: 0 })(data[0].uuid);\n      });\n    } else {\n      fetchGroupRoles({ ...pagination, offset: 0 })(groupId);\n    }\n  };\n\n  const actionResolver = () => [\n    ...(hasPermissions.current && !isAdminDefault\n      ? [\n          {\n            title: intl.formatMessage(messages.remove),\n            onClick: (_event, _rowId, role) => {\n              setConfirmDelete(() => () => removeRoles(fetchUuid, [role.uuid], removeRolesCallback));\n              setDeleteInfo({\n                title: intl.formatMessage(messages.removeRoleQuestion),\n                confirmButtonLabel: intl.formatMessage(messages.removeRole),\n                text: removeModalText(name, role.title, false),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const toolbarButtons = () => [\n    ...(hasPermissions.current && !isAdminDefault\n      ? [\n          <AppLink\n            className={`rbac-m-hide-on-sm rbac-c-button__add-role${disableAddRoles && '-disabled'}`}\n            to={pathnames['group-add-roles'].link.replace(':groupId', groupId)}\n            key=\"add-to-group\"\n          >\n            {addRoleButton(disableAddRoles, generateOuiaID(name || ''), isAdminDefault && intl.formatMessage(messages.defaultGroupNotManually))}\n          </AppLink>,\n          {\n            label: intl.formatMessage(messages.addRole),\n            props: {\n              isDisabled: disableAddRoles,\n              className: 'rbac-m-hide-on-md',\n            },\n            onClick: () => navigate(pathnames['group-add-roles'].link.replace(':groupId', groupId)),\n          },\n          {\n            label: intl.formatMessage(messages.remove),\n            props: {\n              isDisabled: !selectedRoles || !selectedRoles.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleRolesSelected = selectedRoles.length > 1;\n              setConfirmDelete(\n                () => () =>\n                  removeRoles(\n                    fetchUuid,\n                    selectedRoles.map((role) => role.uuid),\n                    removeRolesCallback\n                  )\n              );\n              setDeleteInfo({\n                title: intl.formatMessage(multipleRolesSelected ? messages.removeRolesQuestion : messages.removeRoleQuestion),\n                confirmButtonLabel: intl.formatMessage(multipleRolesSelected ? messages.removeRoles : messages.removeRole),\n                text: removeModalText(\n                  name,\n                  multipleRolesSelected ? selectedRoles.length : roles.find((role) => role.uuid === selectedRoles[0].uuid).name,\n                  multipleRolesSelected\n                ),\n              });\n\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        isOpen={showRemoveModal}\n        isChanged={isChanged}\n        isDefault={isPlatformDefault || isAdminDefault}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isPlatformDefault && !isChanged);\n        }}\n      />\n\n      <Section type=\"content\" id=\"tab-roles\">\n        <TableToolbarView\n          columns={columns}\n          isSelectable={hasPermissions.current && !isAdminDefault}\n          rows={createRows(groupId, roles, selectedRoles)}\n          data={roles}\n          filterValue={filterValue}\n          fetchData={(config) => {\n            fetchGroupRoles(config)(fetchUuid);\n          }}\n          emptyFilters={{ name: '', description: '' }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedRoles}\n          setCheckedItems={setCheckedItems}\n          titlePlural={intl.formatMessage(messages.roles).toLowerCase()}\n          titleSingular={intl.formatMessage(messages.role)}\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          ouiaId=\"roles-table\"\n          emptyProps={{\n            title: intl.formatMessage(messages.noGroupRoles),\n            description: [intl.formatMessage(isAdminDefault ? messages.contactServiceTeamForRoles : messages.addRoleToConfigureAccess), ''],\n          }}\n          filters={[\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue },\n          ]}\n          tableId=\"group-roles\"\n        />\n      </Section>\n      <Suspense>\n        <Outlet\n          context={{\n            [pathnames['group-roles-edit-group'].path]: {\n              group,\n              cancelRoute: pathnames['group-detail-roles'].link.replace(':groupId', groupId),\n              postMethod: () => dispatch(fetchGroup(fetchUuid)),\n            },\n            [pathnames['group-roles-remove-group'].path]: {\n              postMethod: () => dispatch(fetchGroups({ ...groupsPagination, offset: 0, filters: groupsFilters, usesMetaInURL: true, chrome })),\n              cancelRoute: pathnames['group-detail-roles'].link.replace(':groupId', groupId),\n              submitRoute: getBackRoute(pathnames.groups.link, { ...groupsPagination, offset: 0 }, groupsFilters),\n              groupsUuid: [group],\n            },\n            [pathnames['group-add-roles'].path]: {\n              afterSubmit: () => {\n                if (isPlatformDefault || isAdminDefault) {\n                  fetchSystGroup().then(({ value: { data } }) => {\n                    fetchGroupRoles(pagination)(data[0].uuid);\n                    fetchGroupData(data[0].uuid);\n                  });\n                } else {\n                  fetchGroupRoles(pagination)(groupId);\n                  fetchGroupData();\n                }\n              },\n              fetchUuid: systemGroupUuid,\n              selectedRoles: selectedAddRoles,\n              setSelectedRoles: setSelectedAddRoles,\n              closeUrl: pathnames['group-detail'].link.replace(':groupId', isPlatformDefault ? DEFAULT_ACCESS_GROUP_ID : groupId),\n              addRolesToGroup: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n              groupName: group.name,\n              isDefault: isPlatformDefault || isAdminDefault,\n              isChanged,\n              onDefaultGroupChanged,\n            },\n          }}\n        />\n      </Suspense>\n    </React.Fragment>\n  );\n};\n\nGroupRoles.propTypes = {\n  searchFilter: PropTypes.string,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  onDefaultGroupChanged: PropTypes.func,\n};\n\nGroupRoles.defaultProps = {\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n};\n\nexport default GroupRoles;\n"],"names":["_a","isOpen","onConfirm","onClose","children","confirmButtonLabel","cancelButtonLabel","variant","Modal","small","titleIconVariant","withCheckbox","checkboxLabel","confirmButtonVariant","Button","primary","ouiaId","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","checked","setChecked","useState","assign","onEscapePress","actions","key","onClick","isDisabled","link","Checkbox","isChecked","onChange","_event","value","label","id","className","TextContent","isVisited","css","content","modifiers","visited","displayName","DropdownPosition","DropdownDirection","DropdownContext","onSelect","event","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","menuComponent","DropdownArrowContext","keyHandler","sendRef","__assign","n","arguments","apply","this","_b","type","sectionClasses","concat","undefined","linkBasename","navigate","useNavigate","to","options","DefaultGroupChange","onSubmit","intl","title","formatMessage","warning","confirmCheckMessage","continue","defaultAccessGroupEditWarning","values","b","text","propTypes","RemoveRoles","isDefault","isChanged","showConfirmModal","setShowConfirmModal","WarningModal","danger","defaultProps","createRows","groupId","roles","checkedRows","reduce","acc","uuid","display_name","name","description","modified","cells","Fragment","AppLink","pathnames","replace","DateFormat","date","selected","Boolean","find","row","generateOuiaID","toLowerCase","includes","addRoleButton","customTooltipText","addRoleButtonContent","isAriaDisabled","addRole","Tooltip","allRolesAdded","reducer","groupReducer","selectedGroup","systemGroup","groups","data","pagination","meta","groupsPagination","groupsFilters","filters","isLoading","isPlatformDefault","platform_default","isAdminDefault","admin_default","system","disableAddRoles","keys","addRoles","count","systemGroupUuid","group","GroupRoles","onDefaultGroupChanged","chrome","useChrome","dispatch","useDispatch","useAppNavigate","useParams","descriptionValue","setDescriptionValue","filterValue","setFilterValue","selectedRoles","setSelectedRoles","selectedAddRoles","setSelectedAddRoles","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","userAccessAdministrator","orgAdmin","useContext","hasPermissions","useRef","useSelector","reloadWrapper","callback","payload","then","fetchAddGroupRoles","fetchGroupData","customId","fetchSystGroup","removeRoles","fetchGroupRoles","columns","orderBy","lastModified","useEffect","offset","current","removeModalText","role","plural","removeRolesModalText","removeRoleModalText","fetchUuid","removeRolesCallback","Section","isSelectable","rows","fetchData","config","emptyFilters","setCheckedItems","newSelection","map","titlePlural","titleSingular","toolbarButtons","defaultGroupNotManually","remove","multipleRolesSelected","removeRolesQuestion","removeRoleQuestion","removeRole","actionResolver","_rowId","emptyProps","noGroupRoles","contactServiceTeamForRoles","addRoleToConfigureAccess","tableId","Suspense","Outlet","context","path","cancelRoute","postMethod","usesMetaInURL","submitRoute","groupsUuid","afterSubmit","closeUrl","addRolesToGroup","groupName","searchFilter","limit","isRequired"],"sourceRoot":""}
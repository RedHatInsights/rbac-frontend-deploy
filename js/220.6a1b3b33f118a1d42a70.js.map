{"version":3,"sources":["webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.scss","webpack://insights-rbac-frontend/./src/smart-components/group/group.scss","webpack://insights-rbac-frontend/./src/smart-components/group/groups.scss","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.scss","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.scss","webpack://insights-rbac-frontend/./src/smart-components/group/validators.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/schema.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/roles-list.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/set-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/set-users.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/summary-content.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/add-group-wizard.js","webpack://insights-rbac-frontend/./src/smart-components/group/edit-group-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/group-table-helpers.js","webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/principal-table-helpers.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/add-group-members.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/principals.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/default-group-change-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/add-group-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/remove-role-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/group.js","webpack://insights-rbac-frontend/./src/smart-components/group/group-row-wrapper.js","webpack://insights-rbac-frontend/./src/smart-components/group/groups.js","webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.scss?da09","webpack://insights-rbac-frontend/./src/smart-components/group/group.scss?d836","webpack://insights-rbac-frontend/./src/smart-components/group/groups.scss?a8fb","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.scss?f800","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.scss?b25f"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","asyncValidator","groupName","undefined","length","fetchGroups","limit","offset","name","nameMatch","error","console","response","data","debouncedAsyncValidator","asyncDebounce","fields","component","isDynamic","inModal","showTitles","title","nextStep","componentTypes","type","label","validate","validatorTypes","threshold","createRows","expanded","checkedRows","reduce","acc","uuid","display_name","description","cells","selected","Boolean","find","row","RolesList","roles","fetchRoles","isLoading","pagination","selectedRoles","canSort","setSelectedRoles","useState","filterValue","setFilterValue","columns","useRef","key","transforms","sortable","orderBy","current","useEffect","isSelectable","isCompact","borders","fetchData","config","mappedProps","ouiaId","setCheckedItems","newSelection","map","titlePlural","titleSingular","propTypes","history","PropTypes","goBack","searchFilter","count","defaultProps","defaultCompactSettings","connect","roleReducer","meta","dispatch","apiProps","fetchRolesWithPolicies","addNotification","ExcludedRolesList","selectedGroup","groupReducer","addRoles","defaultSettings","loaded","groupId","fetchAddRolesForGroup","propsFromState","propsFromDispatch","ownProps","SetRoles","props","input","useFieldApi","formOptions","useFormApi","getState","values","onChange","change","Fragment","Stack","hasGutter","StackItem","TextContent","Text","FormGroup","fieldId","SetUsers","selectedUsers","setSelectedUsers","Form","Card","SummaryContent","className","Grid","GridItem","md","TextVariants","role","index","groups","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","onCancel","emptyCallback","nonEmptyCallback","setGroupData","formData","Object","keys","AddGroupWizard","postMethod","useDispatch","useHistory","cancelWarningVisible","setCancelWarningVisible","groupData","redirectToGroups","variant","dismissDelay","dismissable","isOpen","onModalCancel","onConfirmCancel","schema","subscription","componentMapper","onSubmit","user_list","user","username","roles_list","addGroup","then","initialValues","EditGroupModal","updateGroup","closeUrl","group","onClose","setSelectedGroup","match","useRouteMatch","fetchGroup","params","payload","Modal","ModalVariant","schemaType","user_data","formContainer","Skeleton","inputValue","bindActionCreators","RemoveGroupModal","removeGroups","groupsUuid","isModalOpen","checked","setChecked","multipleGroups","actions","Button","isDisabled","onClick","uuids","Checkbox","isChecked","DefaultPlatformPopover","isPopoverVisible","setPopoverVisible","popoverRootRef","ref","Popover","zIndex","position","isVisible","shouldClose","hideOnOutsideClick","bodyContent","appendTo","classNames","opened","selectedRows","roleCount","principalCount","modified","isPlatformDefault","platform_default","Link","to","DateFormat","date","AppTabs","pathname","location","tabItems","isHeader","activeTab","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","item","Tab","withRouter","_opened","isActive","is_active","email","firstName","first_name","lastName","last_name","Label","color","AddGroupMembers","addMembersToGroup","fetchMembersForGroup","userList","users","isRequired","nowrap","selector","principals","members","userIdentity","identity","removeModalText","plural","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","useParams","useSelector","shallowEqual","usernames","options","removeMembers","userNames","removeMembersFromGroup","RemoveModal","text","confirmButtonLabel","Section","CardBody","Bullseye","is_org_admin","routes","Route","path","paths","render","args","actionResolver","_rowId","principal","filterPlaceholder","rowWrapper","UsersRow","toolbarButtons","aria-label","multipleMembersSelected","removeText","emptyProps","DefaultGroupChange","withCheckbox","AddGroupRoles","addRolesToGroup","isDefault","isChanged","onDefaultGroupChanged","fetchRolesForGroup","showConfirmModal","setShowConfirmModal","rolesList","Title","headingLevel","size","RemoveRoles","log","groupUuid","GroupRoles","removeRoles","disableAddRoles","descriptionValue","setDescriptionValue","selectedAddRoles","setSelectedAddRoles","addRoleButtonContent","isAriaDisabled","Tooltip","content","multipleRolesSelected","filters","value","reloadWrapper","event","callback","system","removeRolesFromGroup","Group","isFetching","onDelete","isDropdownOpen","setDropdownOpen","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","useLocation","insights","chrome","appObjectId","dropdownItems","DropdownItem","replace","breadcrumbs","Split","SplitItem","isFilled","style","display","Dropdown","toggle","KebabToggle","onToggle","isPlain","Alert","isInline","action","AlertActionCloseButton","GroupPrincipals","Redirect","isRecordLoading","isRecordRolesLoading","GroupRowWrapper","RowWrapper","classnames","setSelectedRows","removeGroupsList","setRemoveGroupsList","systemGroup","RegExp","filter","appNavClick","secondaryNav","fetchSystemGroup","rows","exact","ids","Switch","pageAction","paddingBottom","api","__esModule","default","update","locals","hot","invalidate","oldLocals","accept","a","b","p","isEqualLocals","dispose"],"mappings":"oHAEAA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,iKAAkK,KAE3LD,EAAOH,QAAUA,G,iBCJjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,kFAAmF,KAE5GD,EAAOH,QAAUA,G,iBCJjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,qVAAsV,KAE/WD,EAAOH,QAAUA,G,iBCJjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,2EAA4E,KAErGD,EAAOH,QAAUA,G,iBCJjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,iEAAkE,KAE3FD,EAAOH,QAAUA,G,qZCHJK,EAAc,+BAAG,WAAOC,GAAP,4EACvBA,EADuB,8CAEnBC,GAFmB,YAKxBD,EAAUE,OAAS,KALK,qBAMpB,sCANoB,wBASLC,QAAY,CAAEC,MAAO,GAAIC,OAAQ,EAAGC,KAAMN,EAAWO,UAAW,UAAhE,OAAiF,SAACC,GACvGC,QAAQD,MAAMA,MAVY,aAcxBE,OALEA,EATsB,SAcxB,UAAAA,EAAUC,YAAV,eAAgBT,QAAS,GAdD,qBAepB,8BAfoB,qCAkBrBD,GAlBqB,4CAAH,sDAqBdW,GAA0BC,OAAcd,GCpBrD,SACEe,OAAQ,CACN,CACEC,UAAW,SACXT,KAAM,UACNU,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,MAAO,cACPL,OAAQ,CACN,CACER,KAAM,uBACNa,MAAO,uBACPC,SAAU,YACVN,OAAQ,CACN,CACEC,UAAWM,eACXf,KAAM,aACNgB,KAAM,OACNC,MAAO,aACPC,SAAU,CACRZ,EACA,CACEU,KAAMG,gBAIZ,CACEV,UAAWM,aACXf,KAAM,oBACNgB,KAAM,OACNC,MAAO,oBACPC,SAAU,CACR,CACEF,KAAMG,eACNC,UAAW,SAMrB,CACEpB,KAAM,YACNc,SAAU,YACVD,MAAO,YACPL,OAAQ,CACN,CACEC,UAAW,YACXT,KAAM,gBAIZ,CACEA,KAAM,YACNc,SAAU,SACVD,MAAO,cACPL,OAAQ,CACN,CACEC,UAAW,YACXT,KAAM,gBAIZ,CACEA,KAAM,SACNa,MAAO,iBACPL,OAAQ,CACN,CACEC,UAAW,kBACXT,KAAM,yB,krBC9DpB,IAAMqB,EAAa,SAAChB,EAAMiB,GAA+B,IAArBC,EAAqB,uDAAP,GAChD,OAAOlB,EACHA,EAAKmB,QACH,SAACC,EAAD,OAAQC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAc3B,EAA5B,EAA4BA,KAAM4B,EAAlC,EAAkCA,YAAlC,oBACKH,GADL,CAEE,CACEC,OACAG,MAAO,CAACF,GAAgB3B,EAAM4B,GAC9BE,SAAUC,QAAQR,GAAeA,EAAYS,MAAK,SAACC,GAAD,OAASA,EAAIP,OAASA,WAG5E,IAEF,IAGAQ,EAAY,SAAC,GAA2F,IAAzFC,EAAyF,EAAzFA,MAAOC,EAAkF,EAAlFA,WAAYC,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAAuB,GACtEC,cAAS,IAD6D,WACrGC,EADqG,KACxFC,EADwF,KAE3FC,GAAYC,YAAO,CAAC,EAAD,CAChCjC,MAAO,OAAQkC,IAAK,gBAAoBP,EAAU,CAAEQ,WAAY,CAACC,aAAc,CAAEC,QAAS,SAC5F,CAAErC,MAAO,iBAFHsC,QAeR,OAVAC,gBAAU,WACRhB,EAAW,CAAEc,QAAS,mBACrB,IASD,kBAAC,IAAD,CACEL,QAASA,EACTQ,cAAY,EACZC,WAAS,EACTC,SAAS,EACTlC,WAAYA,EACZhB,KAAM8B,EACNQ,YAAaA,EACba,UAAW,SAACC,GAAD,OAAYrB,GAAWsB,QAAYD,KAC9Cb,eAAgB,gBAAG5C,EAAH,EAAGA,KAAH,OAAc4C,EAAe5C,IAC7CqC,UAAWA,EACXsB,OAAO,cACPrB,WAAYA,EACZf,YAAagB,EACbqB,gBArBoB,SAACC,GACvBpB,GAAiB,SAACN,GAChB,OAAO0B,EAAa1B,GAAO2B,KAAI,gBAAGpC,EAAH,EAAGA,KAAM1B,EAAT,EAASA,KAAT,MAA4B,CAAE0B,OAAMT,MAApC,EAAeA,OAAqCjB,UAoBnF+D,YAAY,QACZC,cAAc,UAoBpB9B,EAAU+B,UAAY,CACpBC,QAASC,UAAgB,CACvBC,OAAQD,oBACR7E,KAAM6E,sBAERhC,MAAOgC,UACP9B,UAAW8B,SACXE,aAAcF,WACd/B,WAAY+B,oBACZ1B,iBAAkB0B,oBAClB5B,cAAe4B,UACf7B,WAAY6B,UAAgB,CAC1BrE,MAAOqE,sBACPpE,OAAQoE,sBACRG,MAAOH,aAET3B,QAAS2B,UAGXjC,EAAUqC,aAAe,CACvBpC,MAAO,GACPG,WAAYkC,KACZhC,SAAS,GAiCX,SAAeiC,cAtES,SAAC,GAAD,QAAGC,YAAevC,EAAlB,EAAkBA,MAAOE,EAAzB,EAAyBA,UAAzB,MAA4C,CAClEF,MAAOA,EAAM9B,KACbiC,WAAYH,EAAMwC,KAClBtC,gBAGyB,SAACuC,GAC1B,MAAO,CACLxC,WAAY,SAACyC,GACXD,GAASE,SAAuBpB,QAAYmB,MAE9CE,gBAAiB,kBAAcH,EAASG,gBAAA,kBA2D5C,CAA4D7C,GACrD,IAAM8C,IAAoBP,cA/BJ,SAAC,GAAwC,IAAtBQ,EAAsB,EAAtCC,aAAgBD,cACxC9C,EAAQ8C,EAAcE,SAAShD,MAErC,MAAO,CACLA,QACAG,WAAY2C,EAAcE,SAAS7C,YAAvB,OAA0C8C,MAA1C,IAA2Dd,MAAOnC,GAASA,EAAMvC,SAC7FyC,WAAY4C,EAAcE,SAASE,OACnCC,QAASL,EAAcvD,SAIK,SAACkD,GAC/B,MAAO,CACLxC,WAAY,SAACkD,EAAST,GACpBD,GAASW,QAAsBD,EAAST,KAE1CE,gBAAiB,kBAAcH,EAASG,gBAAA,mBAIzB,SAACS,EAAgBC,EAAmBC,GACrD,kBACKA,GACAF,GACAC,GAHL,IAIEjD,SAAS,EACTJ,WAAY,SAACyC,GAAD,OAAcY,EAAkBrD,WAAWoD,EAAeF,QAAST,QAKlDJ,CAAmEvC,GCjI9FyD,I,SAAW,SAACC,GAAU,OACgBlD,cAAS,IADzB,WACnBH,EADmB,KACJE,EADI,KAElBoD,GAAUC,OAAYF,GAAtBC,MACFE,GAAcC,SAWpB,OATA5C,gBAAU,WACRX,EAAiBsD,EAAYE,WAAWC,OAAO,eAAiB,MAC/D,KAEH9C,gBAAU,WACRyC,EAAMM,SAAS5D,GACfwD,EAAYK,OAAO,aAAc7D,KAChC,CAACA,IAGF,kBAAC,EAAA8D,SAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yDAGJ,kBAACF,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAWC,QAAQ,eACjB,kBAAC,EAAD,CAAWrE,cAAeA,EAAeE,iBAAkBA,UAQvEkD,GAAS1B,UAAY,CACnB1B,cAAe4B,UACf1B,iBAAkB0B,SAClBtD,MAAOsD,WACPvC,YAAauC,YAGf,Y,oDCtCM0C,GAAW,SAACjB,GAAU,OACgBlD,cAAS,IADzB,WACnBoE,EADmB,KACJC,EADI,KAElBlB,GAAUC,OAAYF,GAAtBC,MACFE,GAAcC,SAWpB,OATA5C,gBAAU,WACR2D,EAAiBhB,EAAYE,WAAWC,OAAO,eAAiB,MAC/D,KAEH9C,gBAAU,WACRyC,EAAMM,SAASW,GACff,EAAYK,OAAO,aAAcU,KAChC,CAACA,IAGF,kBAAC,EAAAT,SAAD,KACE,kBAACW,GAAA,EAAD,KACE,kBAACV,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CAAY7E,YAAa,2FAG7B,kBAAC4E,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAWC,QAAQ,eACjB,kBAACK,GAAA,EAAD,KACE,kBAAC,KAAD,CAAkBH,cAAeA,EAAeC,iBAAkBA,WAUlFF,GAAS5C,UAAY,CACnB6C,cAAe3C,UACf4C,iBAAkB5C,SAClBtD,MAAOsD,WACPvC,YAAauC,YAGf,Y,4BC/CM+C,GAAiB,WACrB,IAD2B,GACPlB,SAMJC,WAAWC,OAJXlG,EAHW,EAGzB,cACqB4B,EAJI,EAIzB,qBACckF,EALW,EAKzB,cACcvE,EANW,EAMzB,cAGF,OACE,kBAAC,EAAA8D,SAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,CAAWW,UAAU,uBACnB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMjG,UAAW8G,OAAiBJ,UAAU,yBAA5C,eAIF,kBAACE,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMjG,UAAW8G,OAAiBvH,KAGtC,kBAACoH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMjG,UAAW8G,OAAiBJ,UAAU,yBAA5C,sBAIF,kBAACE,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMjG,UAAW8G,OAAiB3F,KAGtC,kBAACwF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMjG,UAAW8G,OAAiBJ,UAAU,yBAA5C,UAIF,kBAACE,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMjG,UAAW8G,OACdhF,EAAcuB,KAAI,SAAC0D,EAAMC,GAAP,OACjB,kBAACf,EAAA,EAAD,CAAMS,UAAU,YAAYpE,IAAK0E,GAC9BD,EAAKvG,aAMhB,kBAACmG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMjG,UAAW8G,OAAiBJ,UAAU,yBAA5C,YAIF,kBAACE,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMjG,UAAW8G,OACdT,EAAchD,KAAI,SAAC0D,EAAMC,GAAP,OACjB,kBAACf,EAAA,EAAD,CAAMS,UAAU,YAAYpE,IAAK0E,GAC9BD,EAAKvG,mBAc9BiG,GAAejD,UAAY,CACzBjE,KAAMmE,WACNvC,YAAauC,WACbuD,OAAQvD,WAGV,Y,qkBCvEA,IAAMwD,GAAe,SAAC/B,GAAD,OAAW,kBAAC,KAAD,OAAqBA,EAArB,CAA4BgC,kBAAkB,MAExEC,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAYC,EAAf,0BAA0B,kBAACD,EAAYC,IAC3DF,GAAY5D,UAAY,CACtB6D,QAAS3D,4BAGJ,IAAM6D,GAAkB,CAC7BpG,YAAaiG,GACb,YAAalC,GACb,YAAakB,GACb,kBAAmBK,IAGRe,GAAW,SAACC,EAAeC,EAAkBC,GAAlC,OAAmD,SAACC,GAC1ED,EAAaC,GACTC,OAAOC,KAAKF,GAAUzI,OAAS,EACjCuI,GAAiB,GAEjBD,MAIEM,GAAiB,SAAC,GAAmB,IAAjBC,EAAiB,EAAjBA,WAClB7D,GAAW8D,mBACXxE,GAAUyE,kBAFyB,GAGejG,eAAS,GAHxB,WAGlCkG,EAHkC,KAGZC,EAHY,QAIPnG,cAAS,IAJF,WAIlCoG,EAJkC,KAIvBV,EAJuB,KAMnCW,EAAmB,WACvBnE,GACEG,QAAgB,CACdiE,QAAS,UACTnI,MAAO,eACPoI,aAAc,IACdC,aAAa,EACbtH,YAAa,4CAGjBsC,EAAQ5E,KAAK,YA0Bf,OAAOsJ,EACL,kBAAC,IAAD,CACE5H,KAAK,QACLmI,OAAQP,EACRQ,cAAe,kBAAMP,GAAwB,IAC7CQ,gBAAiBN,IAGnB,kBAAC,IAAD,CACEO,OAAQA,EACRC,aAAc,CAAErD,QAAQ,GACxByB,aAAcA,GACd6B,gBAAe,SAAOA,MAAoBxB,IAC1CyB,SApCa,SAACpB,GAChB,IAAMS,EAAY,CAChB9I,KAAMqI,EAAS,cACfzG,YAAayG,EAAS,qBACtBqB,UAAWrB,EAAS,cAAcvE,KAAI,SAAC6F,GAAD,MAAW,CAAEC,SAAUD,EAAK1I,UAClE4I,WAAYxB,EAAS,cAAcvE,KAAI,SAAC0D,GAAD,OAAUA,EAAK9F,SAExDwC,EAAQ5E,KAAK,WACbsF,GAASkF,QAAShB,IACfiB,MAAK,kBAAMtB,OACXsB,MAAK,WACJnF,GACEG,QAAgB,CACdiE,QAAS,UACTnI,MAAO,uBACPoI,aAAc,IACdC,aAAa,EACbtH,YAAa,2CAoBnBoI,cAAelB,EACfb,SAAUA,GAASc,EAAkBF,EAAyBT,MAKpEI,GAAevE,UAAY,CACzBwE,WAAYtE,UAGd,Y,ynBC1FA,IAAM8F,GAAiB,SAAC,GAAmF,IAAjFlF,EAAiF,EAAjFA,gBAAiBmF,EAAgE,EAAhEA,YAAazB,EAAmD,EAAnDA,WAAY0B,EAAuC,EAAvCA,SAAUhB,EAA6B,EAA7BA,OAAQiB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,GAC/D3H,mBAAS/C,GADsD,WAClGsF,EADkG,KACnFqF,EADmF,KAGnGpG,GAAUyE,kBACV4B,GAAQC,mBAAc,oBAEtBpC,EAAe,SAACU,GACpBwB,EAAiBxB,KAUnB1F,gBAAU,WANRmH,IACEE,QAAWF,EAAMG,OAAOlL,IACrBmL,QAAQZ,MAAK,SAAC1J,GAAD,OAAU+H,EAAa/H,MADvC,OAES,kBAAM+H,OAAazI,QAK7B,KAEHyD,gBAAU,WACRkH,EAAiBF,KAChB,CAACA,IAEJ,IASMnC,EAAW,WACflD,EAAgB,CACdiE,QAAS,UACTC,aAAc,IACdC,aAAa,EACbrI,MAAOoE,EAAgB,gBAAkB,eACzCrD,YAAaqD,EAAgB,uCAAyC,2CAExEoF,IACAnG,EAAQ5E,KAAK6K,IAGTb,EAAS,CACb9I,OAAQ,CACN,CACER,KAAM,OACNiB,MAAO,OACPR,UAAWM,eACXG,SAAU,CACRZ,EACA,CACEU,KAAMG,gBAIZ,CACEnB,KAAM,cACNiB,MAAO,cACPR,UAAWM,aACXG,SAAU,CACR,CACEF,KAAMG,eACNC,UAAW,SAOrB,OACE,kBAACwJ,GAAA,EAAD,CAAO5B,QAAS6B,YAAqBhK,MAAM,2BAA2BsI,OAAQA,EAAQkB,QAASpC,GAC5FhD,EACC,kBAAC,KAAD,CACEqE,OAAQA,EACRwB,WAAW,UACX7C,SAAUA,EACVwB,SAvDS,SAACpJ,GAChB,IAAM0K,EAAY,MAAK1K,GACvBoI,EACIyB,EAAYa,GACThB,MAAK,kBAAMtB,OACXsB,KAAK7F,EAAQ5E,KAAK6K,IACrBD,EAAYa,GAAWhB,MAAK,kBAAM7F,EAAQ5E,KAAK6K,OAkD7Ca,cAAc,QACdhB,cAAa,MAAO/E,KAGtB,kBAACgG,GAAA,EAAD,QAMRhB,GAAe1F,aAAe,CAC5B4F,SAAU,UACVE,QAAS,kBAAM,MACfZ,SAAU,kBAAM,OAGlBQ,GAAehG,UAAY,CACzBc,gBAAiBZ,oBACjBsG,WAAYtG,oBACZ+G,WAAY/G,WACZ+F,YAAa/F,oBACbsE,WAAYtE,SACZgG,SAAUhG,WACVgF,OAAQhF,SACRiG,MAAOjG,WACPkG,QAASlG,UAiBX,UAAeM,cAdS,SAAC,GAAD,MAAsC,CAC5DpC,UADsB,EAAG6C,aAAgB7C,cAIhB,SAACuC,GAAD,OACzBuG,SACE,CACEpG,qBACAmF,iBACAO,iBAEF7F,KAGJ,CAA4DqF,I,wCC9HtDmB,I,SAAmB,SAAC,GAAkG,IAAhGC,EAAgG,EAAhGA,aAAcjB,EAAkF,EAAlFA,MAAO/H,EAA2E,EAA3EA,UAAWoI,EAAgE,EAAhEA,WAAYa,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,YAAa9C,EAA2B,EAA3BA,WAAY0B,EAAe,EAAfA,UAC3G/G,gBAAU,WACkB,IAAtBkI,EAAW1L,QACb6K,EAAWa,EAAW,GAAG5J,QAE1B,IAEH,IAAMwC,GAAUyE,kBAP0G,GAS5FjG,eAAS,GATmF,WASnH8I,EATmH,KAS1GC,EAT0G,KAWpHC,EAAiBJ,EAAW1L,OAAS,EASrCqI,EAAW,kBAAM/D,EAAQE,UAE/B,OACE,kBAACwG,GAAA,EAAD,CACEzB,OAAQoC,EACRvC,QAAS6B,WACThK,MACE,kBAAC6F,EAAA,EAAD,KACE,kBAAC,MAAD,CAAyBS,UAAU,8BADrC,KAEUuE,EAAiB,iBAAmB,iBAGhDrB,QAASpC,EACT0D,QAAS,CACP,kBAACC,EAAA,GAAD,CAAQ7I,IAAI,SAAS8I,YAAaL,EAASxC,QAAQ,SAAShI,KAAK,SAAS8K,QArB/D,WACf,IAAMC,EAAQT,EAAWxH,KAAI,SAACsG,GAAD,OAAWA,EAAM1I,QAC9C2J,EAAaU,GACVhC,MAAK,kBAAMtB,EAAWsD,MACtBhC,KAAK7F,EAAQ5E,KAAK6K,MAkBduB,EAAiB,gBAAkB,gBAEtC,kBAACE,EAAA,GAAD,CAAQ7I,IAAI,SAASiG,QAAQ,OAAOhI,KAAK,SAAS8K,QAAS7D,GAA3D,YAKF,kBAACxB,EAAA,EAAD,KACGiF,EACC,kBAAChF,EAAA,EAAD,uBACiB,2BAAI4E,EAAW1L,QADhC,gEAGEyC,EACF,kBAAC,MAAD,MAEA,kBAACqE,EAAA,EAAD,qBACe,2BAAI0D,EAAMpK,MADzB,gEA3BN,IAiCE,kBAACgM,GAAA,EAAD,CACEC,UAAWT,EACXrF,SAAU,kBAAMsF,GAAYD,IAC5BvK,MAAM,kDACNzB,GAAG,0BAMX4L,GAAiB7G,aAAe,CAC9BgH,aAAa,EACbnB,MAAO,GACPkB,WAAY,GACZjJ,WAAW,EACX8H,SAAU,WAGZiB,GAAiBnH,UAAY,CAC3BsH,YAAapH,SACbkH,aAAclH,oBACdsG,WAAYtG,oBACZsE,WAAYtE,SACZ9B,UAAW8B,SACXiG,MAAOjG,WACPmH,WAAYnH,UACZgG,SAAUhG,YAiBZ,UAAeM,cAdS,SAAC,GAAD,IAAmBQ,EAAnB,EAAGC,aAAgBD,cAAnB,MAA0C,CAChEmF,MAAOnF,EACP5C,WAAY4C,EAAcI,WAGD,SAACT,GAAD,OACzBuG,SACE,CACEV,gBACAY,mBAEFzG,KAGJ,CAA4DwG,I,+DCtGtDc,GAAyB,SAAC,GAAa,IAAXxK,EAAW,EAAXA,KAAW,GACGgB,eAAS,GADZ,WACpCyJ,EADoC,KAClBC,EADkB,KAErCC,GAAiBvJ,YAAO,MAE9B,OACE,0BAAMwJ,IAAKD,EAAgBtJ,IAAG,UAAKrB,EAAL,YAAqBlC,GAAG,yBACpD,kBAAC+M,GAAA,EAAD,CACEC,OAAO,MACPC,SAAS,QACTC,UAAWP,EACXQ,YAAa,kBAAMP,GAAkB,IACrCQ,oBAAkB,EAClBC,YAAY,wFACZC,SAAUT,EAAelJ,SAEzB,kBAAC,MAAD,CACE2I,QAAS,kBAAMM,GAAmBD,IAClChF,UAAW4F,KAAW,4BAA6B,CAAE,cAAeZ,SAO9ED,GAAuBjI,UAAY,CACjCvC,KAAMyC,uBAGD,IAAM9C,GAAa,SAAChB,EAAM2M,GAA8B,IAAtBC,EAAsB,uDAAP,GACtD,OAAO5M,EAAKmB,QACV,SAACC,EAAD,OAAQC,EAAR,EAAQA,KAAM1B,EAAd,EAAcA,KAAMkN,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,eAAgBC,EAA/C,EAA+CA,SAA4BC,EAA3E,EAAyDC,iBAAzD,oBACK7L,GADL,CAEE,CACEC,OACA2L,oBACAxL,MAAO,CACL,kBAAC,EAAAwE,SAAD,CAAUtD,IAAKrB,GACb,yBAAKyF,UAAU,oBACb,kBAAC,EAAAoG,KAAD,CAAMxK,IAAG,UAAKrB,EAAL,SAAkB8L,GAAE,yBAAoB9L,IAC9C1B,GAEFqN,GAAqB,kBAACnB,GAAD,CAAwBxK,KAAMA,MAGxDwL,EACAC,EACA,kBAAC,EAAA9G,SAAD,CAAUtD,IAAG,UAAKrB,EAAL,cACX,kBAAC+L,GAAA,EAAD,CAAYC,KAAMN,EAAUpM,KAAK,eAGrCc,SAAUC,QAAQkL,GAAgBA,EAAajL,MAAK,SAACC,GAAD,OAASA,EAAIP,OAASA,WAG9E,K,wBCvDEiM,I,SAAU,SAAC,GAAsE,IAAzDrO,EAAyD,EAApE4E,QAAW5E,KAAoBsO,EAAqC,EAAjDC,SAAYD,SAAYE,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChEC,EAAYF,EAAS9L,MAAK,gBAAGhC,EAAH,EAAGA,KAAH,OAAc4N,EAASK,SAASjO,MAGhE,OACE,kBAACkO,GAAA,EAAD,CAAM/G,UAAW4G,EAAW,6BAA+B,GAAII,UAAWH,EAAYA,EAAUI,SAAW,EAAGC,SAHzF,SAACC,EAAQC,GAAT,OAAsBjP,EAAKwO,EAASS,GAAUvO,QAIhE8N,EAAShK,KAAI,SAAC0K,GAAD,OACZ,kBAACC,GAAA,EAAD,CAAK5N,MAAO2N,EAAK3N,MAAOkC,IAAKyL,EAAKJ,SAAUA,SAAUI,EAAKJ,SAAUpO,KAAMwO,EAAKxO,aAMxF2N,GAAQ1J,UAAY,CAClB4J,SAAU1J,UAAgB,CACxByJ,SAAUzJ,wBAEZD,QAASC,UAAgB,CACvB7E,KAAM6E,sBAER2J,SAAU3J,qBACV4J,SAAU5J,UAGZ,UAAeuK,gBAAWf,I,4BC3BbtM,GAAa,SAAChB,EAAMsO,GAA8B,IAArBpN,EAAqB,uDAAP,GACtD,OAAOlB,EAAKmB,QACV,SAACC,EAAD,OAAmBmN,EAAnB,EAAQC,UAAqBjF,EAA7B,EAA6BA,SAAUkF,EAAvC,EAAuCA,MAAmBC,EAA1D,EAA8CC,WAAkCC,EAAhF,EAAqEC,UAArE,oBACKzN,GADL,CAEE,CACEC,KAAMkI,EACNA,WACA/H,MAAO,CACL,CACEhB,MAAO,kBAACsO,GAAA,EAAD,CAAOC,MAAOR,GAAY,SAAUA,EAAW,SAAW,YACjEhJ,MAAO,CACLvF,KAAM,CAAEuO,cAGZhF,EACAkF,EACAG,EACAF,GAEFjN,SAAUP,EAAYS,MAAK,SAACC,GAAD,OAASA,EAAIP,OAASkI,UAGrD,K,wBCdEyF,GAAkB,SAAC,GASnB,IARO/P,EAQP,EARJ4E,QAAW5E,KAECoC,EAMR,EAPJ6I,MACEG,OAAUhJ,KAEZqD,EAII,EAJJA,gBACAoF,EAGI,EAHJA,SACAmF,EAEI,EAFJA,kBACAC,EACI,EADJA,qBACI,GACsC7M,cAAS,IAD/C,WACGoE,EADH,KACkBC,EADlB,KAkBEkB,EAAW,WACflD,EAAgB,CACdiE,QAAS,UACTnI,MAAO,gBAAF,OAAkBiG,EAAclH,OAAS,EAAI,IAAM,GAAnD,aACLqJ,aAAc,IACdC,aAAa,EACbtH,YAAa,gBAAF,OAAkBkF,EAAclH,OAAS,EAAI,IAAM,GAAnD,yCAEbN,EAAK6K,IAGP,OACE,kBAACS,GAAA,EAAD,CACE/J,MAAM,cACNmI,QAAS6B,YACT1B,QAAM,EACNwC,QAAS,CACP,kBAACC,EAAA,GAAD,CAAQ7I,IAAI,UAAUY,OAAO,yBAAyBkI,WAAqC,IAAzB/E,EAAclH,OAAcoJ,QAAQ,UAAU8C,QAjCrG,WACf,IAAM0D,EAAW1I,EAAchD,KAAI,SAAC6F,GAAD,MAAW,CAAEC,SAAUD,EAAK1I,UAC3DuO,EAAS5P,OAAS,IACpBmF,EAAgB,CACdiE,QAAS,OACTnI,MAAO,gBAAF,OAAkB2O,EAAS5P,OAAS,EAAI,IAAM,GAA9C,aACLqJ,aAAc,IACdC,aAAa,EACbtH,YAAa,gBAAF,OAAkB4N,EAAS5P,OAAS,EAAI,IAAM,GAA9C,0BAEb0P,EAAkB5N,EAAM8N,GAAUzF,MAAK,kBAAMwF,EAAqB7N,OAGpEpC,EAAK6K,KAoBD,gBAGA,kBAACyB,EAAA,GAAD,CAAQpM,GAAG,oBAAoBmE,OAAO,0BAA0BZ,IAAI,SAASiG,QAAQ,OAAO8C,QAAS7D,GAArG,WAIFoC,QAASpC,GAET,kBAAC3B,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CAAY7E,YAAY,2FAG5B,kBAAC4E,EAAA,EAAD,KACE,kBAAC,KAAD,CAAkBM,cAAeA,EAAeC,iBAAkBA,QAO5EsI,GAAgB9K,aAAe,CAC7BkL,MAAO,GACPvE,WAAY,GACZf,SAAU,UACVrD,cAAe,IAGjBuI,GAAgBpL,UAAY,CAC1BC,QAASC,UAAgB,CACvBC,OAAQD,oBACR7E,KAAM6E,WACLuL,WACH5F,SAAU3F,oBACVY,gBAAiBZ,oBACjBX,UAAWW,oBACXoL,qBAAsBpL,oBACtB+G,WAAY/G,WACZsL,MAAOtL,UACP2C,cAAe3C,UACfoG,MAAOpG,WACPgG,SAAUhG,WACVmL,kBAAmBnL,qBAkBrB,UAAeuK,iBAAWjK,cAfF,SAAC,GAAD,MAAsC,CAC5DpC,UADsB,EAAG6C,aAAgB7C,cAIhB,SAACuC,GAAD,OACzBuG,SACE,CACEpG,qBACA+E,cACAwF,uBACAC,2BAEF3K,KAGsBH,CAA6C4K,K,ynBCtGvE,IAAMxM,GAAU,CACd,CAAEhC,MAAO,SAAUmC,WAAY,CAAC2M,WAChC,CAAE9O,MAAO,YACT,CAAEA,MAAO,SACT,CAAEA,MAAO,aACT,CAAEA,MAAO,eAGL+O,GAAW,SAAC,GAAD,QAAG1K,aAAgBwC,EAAnB,EAAmBA,OAAQzC,EAA3B,EAA2BA,cAA3B,MAAkD,CACjE4K,WAAY5K,EAAc6K,QAAQzP,KAClCiC,WAAY2C,EAAc6K,QAAQnL,KAClCoL,aAAcrI,EAAOsI,SACrBtQ,UAAWuF,EAAcjF,KACzBsN,iBAAkBrI,EAAcqI,iBAChCjL,UAAW4C,EAAc6K,QAAQzN,YAG7B4N,GAAkB,SAACjQ,EAAMoK,EAAO8F,GAAd,OACtBA,EACE,oCACQ,yCAAQlQ,IADhB,wDACgF,qCAAOoK,IADvF,WAIA,2BACE,qCAAOpK,IADT,gDACiE,yCAAQoK,IADzE,YAiKJ,SA5JwB,WAAM,OACU1H,cAAS,IADnB,WACrBC,EADqB,KACRC,EADQ,QAEwBF,cAAS,IAFjC,WAErByN,EAFqB,KAEDC,EAFC,QAGkB1N,eAAS,GAH3B,WAGrB2N,EAHqB,KAGJC,EAHI,QAIc5N,eAAS,kBAAM,QAJ7B,WAIrB6N,EAJqB,KAINC,EAJM,QAKQ9N,cAAS,IALjB,WAKrB+N,EALqB,KAKTC,EALS,KAOpBhP,GAASiP,iBAATjP,KAPoB,GAQ6DkP,iBAAYhB,GAAUiB,gBAAvGhB,EARoB,EAQpBA,WAAYvN,EARQ,EAQRA,WAAY5C,EARJ,EAQIA,UAAWqQ,EARf,EAQeA,aAAc1N,EAR7B,EAQ6BA,UAAWiL,EARxC,EAQwCA,iBAE9D1I,GAAW8D,mBAEXlF,EAAY,SAACsN,GAAoC,IAAzBC,EAAyB,uDAAfzO,EACtCsC,GAAS2K,QAAqB7N,EAAMoP,EAAWC,MAGjD3N,gBAAU,WACRI,MACC,IAEH,IAIMwN,EAAgB,SAACC,GACrB,OAAOrM,GAASsM,QAAuBxP,EAAMuP,IAAYlH,MAAK,WAC5DqG,EAAsB,IACtB5M,OAAU7D,EAAD,GAAC,MAAgB2C,GAAjB,IAA6BvC,OAAQ,SA+B5CmE,GAAUyE,kBA6ChB,OACE,kBAAC,EAAAtC,SAAD,KACE,kBAAC8K,GAAA,EAAD,CACEC,KAAMX,EAAWW,KACjBvQ,MAAO4P,EAAW5P,MAClBwQ,mBAAoBZ,EAAWY,mBAC/BlI,OAAQkH,EACRhG,QAAS,kBAAMiG,GAAmB,IAClC7G,SAAU,WACR6G,GAAmB,GACnBC,OAGJ,kBAACe,GAAA,EAAD,CAAStQ,KAAK,UAAUxB,GAAI,kBACzB8N,EACC,kBAACrG,GAAA,EAAD,KACE,kBAACsK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC/K,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMjG,UAAW8G,QAAjB,iEAMR,kBAAC,IAAD,CACElH,MAAOwP,GAAc,IAAI/L,KAAI,SAAC6F,GAAD,UAAC,MAAeA,GAAhB,IAAsBjI,KAAMiI,EAAKC,cAC9DvG,aAAc0M,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACrEpQ,WAAYA,GACZwB,QAASA,GACT6O,OApFK,kBACb,kBAAC,EAAArL,SAAD,KACE,kBAAC,EAAAsL,MAAD,CACEC,KAAMC,SACNC,OAAQ,SAACC,GAAD,OAAU,kBAAC,GAAD,KAAiBvO,UAAWA,EAAW2G,SAAQ,yBAAoBzI,EAApB,aAAwCqQ,SAiFrGC,eAvGa,kBACnBjC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aAErD,CACE,CACE5Q,MAAO,SACPiL,QAAS,SAACwC,EAAQ2D,EAAQC,GACxB1B,GAAiB,kBAAM,kBAAMQ,EAAc,CAACkB,EAAUtI,SAAS/I,YAC/D6P,EAAc,CACZ7P,MAAO,iBACPuQ,KAAMnB,GAAgBiC,EAAUtI,SAAS/I,MAAOnB,GAAW,GAC3D2R,mBAAoB,kBAEtBf,GAAmB,MAXzB,MAsGI6B,kBAAkB,WAClBpO,YAAY,UACZC,cAAc,SACdL,OAAO,gBACPrB,WAAYA,EACZK,YAAaA,EACba,UAAW,gBAAG1D,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,KAAlB,OAA6BwD,EAAUxD,EAAM,CAAEF,QAAOC,YACjE6C,eAAgB,gBAAG5C,EAAH,EAAGA,KAAH,OAAc4C,EAAe5C,IAC7CuB,YAAa4O,EACb9N,UAAWA,EACX+P,WAAYC,KACZzO,gBA9HmB,SAACC,GAC5BuM,GAAsB,SAACP,GAAD,OAAgBhM,EAAagM,OA8H3CyC,eAvFa,sBACjBvC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACvD,CACE,kBAAC,EAAAlE,KAAD,CAAMC,GAAE,yBAAoB9L,EAApB,wBAAgDqB,IAAI,oBAAoBoE,UAAU,sBACxF,kBAACyE,EAAA,GAAD,CAAQ5C,QAAQ,UAAUuJ,aAAW,cAArC,eAIF,CACEtR,MAAO,aACP2E,MAAO,CACLuB,UAAW,qBAEb2E,QAAS,WACP5H,EAAQ5E,KAAR,yBAA+BoC,EAA/B,2BAGJ,CACET,MAAO,SACP2E,MAAO,CACLiG,YAAasE,IAAuBA,EAAmBvQ,OAAS,EAChEoJ,QAAS,UAEX8C,QAAS,WACP,IAAM0G,EAA0BrC,EAAmBvQ,OAAS,EACtD6S,EAAaD,EAA0B,kBAAoB,iBACjEhC,GAAiB,kBAAM,kBAAMQ,EAAcb,EAAmBrM,KAAI,SAAC6F,GAAD,OAAUA,EAAKjI,aACjFgP,EAAc,CACZ7P,MAAO4R,EACPpB,mBAAoBoB,EACpBrB,KAAMnB,GACJuC,EAA0BrC,EAAmBvQ,OAASuQ,EAAmB,GAAGzO,KAC5EhC,EACA8S,KAGJlC,GAAmB,MAIzB,KAgDIoC,WAAY,CAAE7R,MAAO,qCAAsCe,YAAa,CAAC,uCAAwC,U,4BC1LvH+Q,GAAqB,SAAC,GAAkC,IAAhCxJ,EAAgC,EAAhCA,OAAQkB,EAAwB,EAAxBA,QAASZ,EAAe,EAAfA,SAC7C,OACE,kBAAC0H,GAAA,EAAD,CACEC,KACE,kBAAC3K,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,0BACoB,6CADpB,4GAEY,oDAFZ,MAMJ7F,MAAO,UACP+R,cAAY,EACZzJ,OAAQA,EACRkI,mBAAoB,WACpBhH,QAASA,EACTZ,SAAUA,KAKhBkJ,GAAmB1O,UAAY,CAC7BwF,SAAUtF,SACVkG,QAASlG,SACTgF,OAAQhF,UAGV,YCzBA,IAAM0O,GAAgB,SAAC,GAgBjB,IAfOvT,EAeP,EAfJ4E,QAAW5E,KAECoC,EAaR,EAdJ6I,MACEG,OAAUhJ,KAEZa,EAWI,EAXJA,cACAE,EAUI,EAVJA,iBACA5B,EASI,EATJA,MACAsJ,EAQI,EARJA,SACA2I,EAOI,EAPJA,gBACA9S,EAMI,EANJA,KACA+S,EAKI,EALJA,UACAC,EAII,EAJJA,UACAjO,EAGI,EAHJA,gBACAkO,EAEI,EAFJA,sBACAC,EACI,EADJA,mBACI,GAC4CxQ,eAAS,GADrD,WACGyQ,EADH,KACqBC,EADrB,KAGEnL,EAAW,WACflD,EAAgB,CACdiE,QAAS,UACTnI,MAAO,wBACPoI,aAAc,IACdC,aAAa,EACbtH,YAAa,oDAEftC,EAAK6K,IAGDV,EAAW,WACf,IAAM4J,EAAY9Q,EAAcuB,KAAI,SAAC0D,GAAD,OAAUA,EAAK9F,QAMnD,OALAoR,EAAgBpR,EAAM2R,EAAWH,GAC7BH,IAAcC,GAChBC,GAAsB,GAGjB3T,EAAK6K,IAGd,OAAO4I,IAAcC,GAAaG,EAChC,kBAAC,GAAD,CAAoBhK,OAAQgK,EAAkB9I,QAASpC,EAAUwB,SAAUA,IAE3E,kBAACmB,GAAA,EAAD,CACE/J,MAAM,qBACNmI,QAAS6B,YACT1B,QAAM,EACNkB,QAAS,WACPpC,IACAmL,GAAoB,IAEtBzH,QAAS,CACP,kBAACC,EAAA,GAAD,CACE2G,aAAW,OACX5O,OAAO,sBACPqF,QAAQ,UACRjG,IAAI,UACJ8I,WAAqC,IAAzBtJ,EAAc3C,OAC1BkM,QAAS,WACPsH,GAAoB,KAClBL,GAAaC,IAAcvJ,MARjC,gBAaA,kBAACmC,EAAA,GAAD,CAAQ2G,aAAW,SAAS5O,OAAO,0BAA0BqF,QAAQ,OAAOjG,IAAI,SAAS+I,QAAS7D,GAAlG,YAKF,kBAAC3B,EAAA,EAAD,CAAOC,WAAS,GACb1F,GACC,kBAAC2F,EAAA,EAAD,KACE,kBAAC8M,GAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3B3S,IAIP,kBAAC2F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMjG,UAAW8G,OAAjB,iFACgF,+BAAKvH,GADrF,OAKJ,kBAACwG,EAAA,EAAD,KACE,kBAACS,GAAA,EAAD,KACE,kBAACjC,GAAD,CAAmBzC,cAAeA,EAAeE,iBAAkBA,SAQ/EoQ,GAAc5O,UAAY,CACxBC,QAASC,UAAgB,CACvB7E,KAAM6E,QACNC,OAAQD,sBACPuL,WACHnF,MAAOpG,UAAgB,CACrBuG,OAAQvG,wBACPuL,WACHnN,cAAe4B,UACf1B,iBAAkB0B,SAClB2O,gBAAiB3O,SACjBgG,SAAUhG,WACVtD,MAAOsD,WACPnE,KAAMmE,WACN4O,UAAW5O,SACX6O,UAAW7O,SACXY,gBAAiBZ,SACjB8O,sBAAuB9O,SACvB+O,mBAAoB/O,UAGtB,YCtHA,IAAMsP,GAAc,SAAC,GAAyF,IAAvF5S,EAAuF,EAAvFA,MAAOuQ,EAAgF,EAAhFA,KAAM/G,EAA0E,EAA1EA,QAASZ,EAAiE,EAAjEA,SAAUN,EAAuD,EAAvDA,OAAQkI,EAA+C,EAA/CA,mBAAoB0B,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAAgB,GAC5DtQ,eAAS,GADmD,WACrGyQ,EADqG,KACnFC,EADmF,KAI5G,OAFAjT,QAAQuT,IAAIX,EAAWC,EAAWG,GAE3BJ,IAAcC,GAAaG,EAChC,kBAAC,GAAD,CACEhK,OAAQgK,GAAoBhK,EAC5BkB,QAAS,WACPA,IACA+I,GAAoB,IAEtB3J,SAAU,WACRA,OAIJ,kBAAC0H,GAAA,EAAD,CACEC,KAAMA,EACNvQ,MAAOA,EACPsI,OAAQA,EACRkI,mBAAoBA,EACpBhH,QAAS,WACPA,KAEFZ,SAAU,WACR2J,GAAoB,KAClBL,GAAaC,IAAcvJ,QAMrCgK,GAAYxP,UAAY,CACtBmN,KAAMjN,SACNtD,MAAOsD,SACPkN,mBAAoBlN,WACpBsF,SAAUtF,SACVkG,QAASlG,SACTgF,OAAQhF,SACR4O,UAAW5O,SACX6O,UAAW7O,UAGbsP,GAAYlP,aAAe,CACzBwO,WAAW,EACXC,WAAW,GAGb,Y,8kBCpCA,IAAMnQ,GAAU,CAAC,CAAEhC,MAAO,OAAQqC,QAAS,QAAU,CAAErC,MAAO,eAAiB,CAAEA,MAAO,kBAElFQ,GAAa,SAACsS,EAAWtT,EAAMiB,GAA+B,IAArBC,EAAqB,uDAAP,GAC3D,OAAOlB,EACHA,EAAKmB,QACH,SAACC,EAAD,OAAQC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAc3B,EAA5B,EAA4BA,KAAM4B,EAAlC,EAAkCA,YAAawL,EAA/C,EAA+CA,SAA/C,oBACK3L,GADL,CAEE,CACEC,OACAb,MAAOc,GAAgB3B,EACvB6B,MAAO,CACL,kBAAC,EAAAwE,SAAD,CAAUtD,IAAG,UAAKrB,EAAL,UACX,kBAAC,EAAA6L,KAAD,CAAMC,GAAE,yBAAoBmG,EAApB,yBAA8CjS,IAASC,GAAgB3B,IAEjF4B,EACA,kBAAC,EAAAyE,SAAD,CAAUtD,IAAG,UAAKrB,EAAL,cACX,kBAAC+L,GAAA,EAAD,CAAYC,KAAMN,EAAUpM,KAAK,eAGrCc,SAAUC,QAAQR,GAAeA,EAAYS,MAAK,SAACC,GAAD,OAASA,EAAIP,OAASA,WAG5E,IAEF,IAiBAkS,GAAa,SAAC,GAmBd,IAlBJzR,EAkBI,EAlBJA,MACAC,EAiBI,EAjBJA,WACAyR,EAgBI,EAhBJA,YACA1O,EAeI,EAfJA,SACA+N,EAcI,EAdJA,mBACA7Q,EAaI,EAbJA,UACAC,EAYI,EAZJA,WAEYZ,EAUR,EAXJ6I,MACEG,OAAUhJ,KAEZqO,EAQI,EARJA,aACA/P,EAOI,EAPJA,KACA+S,EAMI,EANJA,UACAC,EAKI,EALJA,UACAC,EAII,EAJJA,sBACA1N,EAGI,EAHJA,sBACAuO,EAEI,EAFJA,gBACA/O,EACI,EADJA,gBACI,GAC4CrC,cAAS,IADrD,WACGqR,EADH,KACqBC,EADrB,QAEkCtR,cAAS,IAF3C,WAEGC,EAFH,KAEgBC,EAFhB,QAGsCF,cAAS,IAH/C,WAGGH,EAHH,KAGkBE,EAHlB,QAI4CC,cAAS,IAJrD,WAIGuR,EAJH,KAIqBC,EAJrB,QAK0CxR,eAAS,GALnD,WAKG2N,EALH,KAKoBC,EALpB,QAMsC5N,eAAS,kBAAM,QANrD,WAMG6N,EANH,KAMkBC,EANlB,QAOgC9N,cAAS,IAPzC,WAOG+N,EAPH,KAOeC,EAPf,MASJtN,gBAAU,WACR8P,EAAmB5Q,EAAnB4Q,CAA+BxR,KAC9B,KAEH0B,gBAAU,WACRmC,EAAsB7D,KACrB,CAACS,IAEJ,IAMM8N,EAAkB,SAACjQ,EAAMwH,EAAM0I,GAAb,OACtB,6CACiB,2BAAIlQ,GADrB,uCACmEkQ,EAAS,QAAU,MACpF,+BAAK1I,GAFP,QAEsB0I,EAAS,IAAM,GAFrC,MAiDIhM,IAAUyE,kBAsDhB,OACE,kBAAC,aAAD,KACE,kBAAC,GAAD,CACEyI,KAAMX,EAAWW,KACjBvQ,MAAO4P,EAAW5P,MAClBsI,OAAQkH,EACR2C,UAAWA,EACXD,UAAWA,EACX1B,mBAAoBZ,EAAWY,mBAC/BhH,QAAS,kBAAMiG,GAAmB,IAClC7G,SAAU,WACR6G,GAAmB,GACnBC,IACA9N,EAAiB,IACjBwQ,EAAsBF,IAAcC,MAIxC,kBAAC1B,GAAA,EAAD,CAAStQ,KAAK,UAAUxB,GAAI,aAC1B,kBAAC,IAAD,CACEqD,QAASA,GACTQ,aAAc0M,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACrEpQ,WAAY,sCAAIuE,EAAJ,yBAAIA,EAAJ,uBAAcvE,GAAU,WAAV,GAAWK,GAAX,OAAoBkE,KAC9CvF,KAAM8B,EACNQ,YAAaA,EACba,UAAW,SAACC,GACVyP,EAAmBzP,EAAnByP,CAA2BxR,IAE7BkB,eAAgB,YAA2B,IAAxB5C,EAAwB,EAAxBA,KAAM4B,EAAkB,EAAlBA,iBACP,IAAT5B,GAAwB4C,EAAe5C,QACvB,IAAhB4B,GAA+BoS,EAAoBpS,IAE5DS,UAAWA,EACXC,WAAYA,EACZf,YAAagB,EACbqB,gBAjJgB,SAACC,GACvBpB,GAAiB,SAACN,GAChB,OAAO0B,EAAa1B,GAAO2B,KAAI,gBAAGpC,EAAH,EAAGA,KAAM1B,EAAT,EAASA,KAAT,MAA4B,CAAE0B,OAAMT,MAApC,EAAeA,OAAqCjB,UAgJ/E+D,YAAY,QACZC,cAAc,OACdsO,eA1Fe,sBACjBvC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACvD,CACE,kBAAC,EAAAlE,KAAD,CACEpG,UAAS,mDAA8C2M,GAAmB,aAC1EtG,GAAE,yBAAoB9L,EAApB,oBACFqB,IAAI,iBAlHO8I,EAoHIiI,EAnHnBK,EACJ,kBAACvI,EAAA,GAAD,CAAQ5C,QAAQ,UAAUuJ,aAAW,WAAW6B,eAAgBvI,GAAhE,YAKKA,EACL,kBAACwI,GAAA,EAAD,CAASC,QAAQ,4DAA4DH,GAE7EA,IA4GM,CACElT,MAAO,WACP2E,MAAO,CACLiG,WAAYiI,EACZ3M,UAAW,qBAEb2E,QAAS,WACP5H,GAAQ5E,KAAR,yBAA+BoC,EAA/B,uBAGJ,CACET,MAAO,SACP2E,MAAO,CACLiG,YAAatJ,IAAkBA,EAAc3C,OAAS,EACtDoJ,QAAS,UAEX8C,QAAS,WACP,IAAMyI,EAAwBhS,EAAc3C,OAAS,EACrD4Q,GAAiB,kBAAM,kBACrBqD,EACEnS,EACAa,EAAcuB,KAAI,SAAC0D,GAAD,OAAUA,EAAK9F,SACjC,kBAAMwR,EAAmB,SAAK5Q,GAAN,IAAkBvC,OAAQ,IAA5CmT,CAAiDxR,UAG3DgP,EAAc,CACZ7P,MAAO0T,EAAwB,gBAAkB,eACjDlD,mBAAoB9O,EAAc3C,OAAS,EAAI,eAAiB,cAChEwR,KAAMnB,EACJjQ,EACAuU,EAAwBhS,EAAc3C,OAASuC,EAAMH,MAAK,SAACwF,GAAD,OAAUA,EAAK9F,OAASa,EAAc,GAAGb,QAAM1B,KACzGuU,KAIJjE,GAAmB,MAIzB,IA7Jc,IAACzE,EACfsI,GAsMEnC,eAxIe,sBACjBjC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACvD,CACE,CACE5Q,MAAO,SACPiL,QAAS,SAACwC,EAAQ2D,EAAQzK,GACxBgJ,GAAiB,kBAAM,kBAAMqD,EAAYnS,EAAM,CAAC8F,EAAK9F,OAAO,kBAAMwR,EAAmB,SAAK5Q,GAAN,IAAkBvC,OAAQ,IAA5CmT,CAAiDxR,UACnHgP,EAAc,CACZ7P,MAAO,eACPwQ,mBAAoB,cACpBD,KAAMnB,EAAgBjQ,EAAMwH,EAAK3G,OAAO,KAE1CyP,GAAmB,MAIzB,KAyHEoB,OAtHO,kBACb,kBAAC,EAAArL,SAAD,KACE,kBAAC,EAAAsL,MAAD,CACEC,KAAMC,SACNC,OAAQ,SAACC,GAAD,OACN,kBAAC,GAAD,KACEvO,UAAWpB,EACX8Q,mBAAoB,kBAAMA,EAAmB,SAAK5Q,GAAN,IAAkBvC,OAAQ,IAA5CmT,CAAiDxR,IAC3Ea,cAAe0R,EACfxR,iBAAkByR,EAClB/J,SAAQ,yBAAoBzI,EAApB,UACRoR,gBAAiB3N,EACjBnF,KAAMA,EACN+S,UAAWA,EACXC,UAAWA,EACXjO,gBAAiBA,EACjBkO,sBAAuBA,GACnBlB,SAsGNpO,OAAO,cACP+O,WAAY,CAAE7R,MAAO,mCAAoCe,YAAa,CAAC,uCAAwC,KAC/G4S,QAAS,CACP,CAAEzR,IAAK,OAAQ0R,MAAO9R,GACtB,CAAEI,IAAK,cAAe0R,MAAOV,SAQnCW,GAAgB,SAACC,EAAOC,GAE5B,OADAD,EAAMhK,QAAQZ,KAAK6K,GACZD,GAgCTf,GAAW3P,UAAY,CACrBC,QAASC,UAAgB,CACvBC,OAAQD,oBACR7E,KAAM6E,sBAERhC,MAAOgC,UACP9B,UAAW8B,SACXE,aAAcF,WACd/B,WAAY+B,oBACZ+O,mBAAoB/O,oBACpBoB,sBAAuBpB,oBACvB5B,cAAe4B,UACfgB,SAAUhB,SACVnE,KAAMmE,WACN0P,YAAa1P,SACb7B,WAAY6B,UAAgB,CAC1BrE,MAAOqE,sBACPpE,OAAQoE,sBACRG,MAAOH,aAEToG,MAAOpG,UAAgB,CACrBuG,OAAQvG,wBACPuL,WACHK,aAAc5L,UAAgB,CAC5BwF,KAAMxF,UAAgB,CACpBsN,aAActN,aAGlB4O,UAAW5O,SACX6O,UAAW7O,SACX8O,sBAAuB9O,SACvB2P,gBAAiB3P,oBACjBY,gBAAiBZ,UAGnByP,GAAWrP,aAAe,CACxBpC,MAAO,GACPG,WAAYkC,KACZjC,cAAe,GACfwN,aAAc,IAGhB,UAAetL,cAvES,SAAC,GAAgD,QAA9CS,aAAgBD,EAA8B,EAA9BA,cAAeyC,EAAe,EAAfA,OAClDvF,EAAQ8C,EAAc9C,MAE5B,MAAO,CACLA,QACAG,WAAY2C,EAAc3C,YAAd,SAAiC8C,MAAjC,IAAkDd,MAAOnC,GAASA,EAAMvC,SACpFyC,WAAY4C,EAAcI,OAC1B0K,aAAcrI,EAAOsI,SACrBhQ,KAAMiF,EAAcjF,KACpB+S,UAAW9N,EAAcqI,iBACzB0F,WAAY/N,EAAc4P,OAC1Bf,kBAAmB7O,EAAcE,SAAS7C,YAAc2C,EAAcE,SAAS7C,WAAWgC,MAAQ,OAI3E,SAACM,GAC1B,MAAO,CACLxC,WAAY,SAACyC,GACXD,GAASxC,SAAWsB,QAAYmB,MAElCM,SAAU,SAACG,EAASnD,EAAOyS,GAAjB,OAA8BhQ,EAAS8P,IAAc5B,QAAgBxN,EAASnD,GAAQyS,KAChGf,YAAa,SAACvO,EAASnD,EAAOyS,GAAjB,OAA8BhQ,EAAS8P,IAAcI,QAAqBxP,EAASnD,GAAQyS,KACxG1B,mBAAoB,SAACzP,GAAD,OAAY,SAAC6B,EAASyL,GAAV,OAAsBnM,GAASsO,QAAmB5N,EAAS7B,EAAQsN,MACnGxL,sBAAuB,SAACD,GAAD,OAAaV,GAASW,QAAsBD,EAAS,GAAI,MAChFP,gBAAiB,kBAAcH,EAASG,gBAAA,eACxC0F,WAAY,SAAC5F,GAAD,OAAcD,GAAS6F,QAAW5F,QA8ClD,CAA4D+O,I,oGC3TtDmB,I,SAAQ,SAAC,GAQT,IANQrT,EAMR,EAPJ6I,MACEG,OAAUhJ,KAEZ0I,EAII,EAJJA,MACAK,EAGI,EAHJA,WACAuK,EAEI,EAFJA,WACAC,EACI,EADJA,SAOMnH,EAAW,CACf,CAAEM,SAAU,EAAGvN,MAAO,QAASb,KAAM,kBAAF,OAAoB0B,EAApB,WACnC,CAAE0M,SAAU,EAAGvN,MAAO,UAAWb,KAAM,kBAAF,OAAoB0B,EAApB,cARnC,GAWsCgB,eAAS,GAX/C,WAWGwS,EAXH,KAWmBC,EAXnB,QAYkEzS,eAAS,GAZ3E,WAYG0S,EAZH,KAYgCC,EAZhC,KAcE7R,EAAY,SAACqB,GACjB4F,EAAW5F,IAGPD,GAAW8D,mBACXmF,GAAWyH,oBAEjBlS,gBAAU,WAGR,OAFAI,EAAU9B,GACV6T,SAASC,OAAOC,YAAY/T,GACrB,kBAAM6T,SAASC,OAAOC,iBAAY9V,MACxC,IAEH,IAAiCK,EAmB3B0V,EAAgB,CACpB,kBAACC,GAAA,EAAD,CACElV,UACE,kBAAC,EAAA8M,KAAD,CACEC,IAAKK,EAASD,SAASK,SAAS,WAAayD,SAAsCA,UAAmCkE,QACpH,QACAlU,IAHJ,QASFqB,IAAI,eAEN,kBAAC4S,GAAA,EAAD,CACElV,UACE,kBAAC,EAAA8M,KAAD,CACEzB,QAASmJ,EACTzH,GAAI,kBACDK,EAASD,SAASK,SAAS,WAAayD,SAAwCA,UAAqCkE,QACpH,QACAlU,KALN,UAYFyF,UAAU,sBACVpE,IAAI,kBAIR,OACE,kBAAC,EAAAsD,SAAD,KACE,kBAAC,KAAD,CAAYwP,YAhFc,CAC5B,CAAEhV,MAAO,SAAU2M,GAAI,WACvB,CAAE3M,MAAOmU,OAAarV,EAAYyK,EAAMpK,KAAM4O,UAAU,KA+EpD,kBAACkH,GAAA,EAAD,CAAOvP,WAAS,GACd,kBAACwP,GAAA,EAAD,CAAWC,UAAQ,GACjB,kBAAC,KAAD,CACEnV,OACGmU,GAAc5K,EACb,kBAAC,EAAA/D,SAAD,KAAW+D,EAAMkD,mBAAqBlD,EAAMyK,QA5D3B7U,EA4D4DoK,EAAMpK,KA3DjG,yBAAKiW,MAAO,CAAEC,QAAS,gBACpBlW,EACD,yBAAKmH,UAAU,cACb,kBAACoF,GAAA,EAAD,CACEgG,aAAW,qBACX1F,YACE,6DAC+B,6CAD/B,4GAEsB,oDAFtB,MAMF,kBAAC,MAAD,CAAgB1F,UAAU,4CA+CyEiD,EAAMpK,WAC/FL,EAENiC,aAAcoT,GAAc5K,EAAQA,EAAMxI,iBAAcjC,KAG5D,kBAACoW,GAAA,EAAD,KACG3L,EAAMkD,iBAAmB,KACxB,kBAAC6I,GAAA,EAAD,CACExS,OAAO,+BACPyS,OAAQ,kBAACC,GAAA,EAAD,CAAaC,SAAU,SAACnN,GAAD,OAAYgM,EAAgBhM,IAAS3J,GAAG,2BACvE2J,OAAQ+L,EACRqB,SAAO,EACP9J,SAAS,QACTiJ,cAAeA,MAKtBN,EACC,kBAACoB,GAAA,EAAD,CACExN,QAAQ,OACRyN,UAAQ,EACR5V,MAAM,mCACN6V,OAAQ,kBAACC,GAAA,EAAD,CAAwBtM,QAAS,kBAAMgL,GAA+B,MAC9ElO,UAAU,yBALZ,gCAO+B,6CAP/B,4GAQsB,oDARtB,KAUE,MAEN,kBAAC,GAAD,CAAS4G,UAAQ,EAACD,SAAUA,IAC5B,kBAAC,EAAA6D,MAAD,CACEC,KAAM,CAACF,SAAqCA,UAC5CI,OAAQ,SAAClM,GAAD,OACN,kBAAC,GAAD,OACMA,EADN,CAEE6C,WAAY,WACV7D,GAAS/E,YAEX0L,aAAW,EACXD,WAAY,CAAClB,SAInB,kBAAC,EAAAuH,MAAD,CACEC,KAAM,CAACF,SAAmCA,UAC1CI,OAAQ,SAAClM,GAAD,OACN,kBAAC,GAAD,OACMA,EADN,CAEEuD,QAAM,EACNiB,MAAOA,EACPD,SAAQ,uBAAkBzI,GAC1B+G,WAAY,WACVjF,EAAU9B,UAKlB,kBAAC,EAAAiQ,MAAD,CACEC,KAAMF,SACNI,OAAQ,SAAClM,GAAD,OAAW,kBAAC,GAAD,OAAgBA,EAAhB,CAAuBqN,sBAAuBoC,QAEnE,kBAAC,EAAA1D,MAAD,CAAOC,KAAMF,SAAgCjR,UAAWmW,KACxD,kBAAC,EAAAjF,MAAD,CAAOG,OAAQ,kBAAM,kBAAC,EAAA+E,SAAD,CAAUrJ,GAAE,yBAAoB9L,EAApB,gBAC/B0I,GAAS,kBAAC,MAAD,SAkBjB2K,GAAM9Q,UAAY,CAChB4J,SAAU1J,UAAgB,CACxByJ,SAAUzJ,wBAEZD,QAASC,UAAgB,CACvB7E,KAAM6E,sBAERoG,MAAOpG,WACPiG,MAAOjG,UAAgB,CACrBzC,KAAMyC,WACNnE,KAAMmE,WACNvC,YAAauC,WACbmJ,iBAAkBnJ,SAClB0Q,OAAQ1Q,WAEV6Q,WAAY7Q,SACZsG,WAAYtG,SACZ8Q,SAAU9Q,UAGZ4Q,GAAMxQ,aAAe,CACnByQ,YAAY,GAGd,UAAevQ,cArCS,SAAC,GAAD,QAAGS,aAAgBD,EAAnB,EAAmBA,cAAe6R,EAAlC,EAAkCA,gBAAiBC,EAAnD,EAAmDA,qBAAnD,MAAiF,CACvG3M,MAAOnF,EACP+P,WAAY8B,GAAmBC,MAGN,SAACnS,GAAD,OACzBuG,SACE,CACEV,iBAEF7F,KA2BJ,CAA4DmQ,I,gBCxNtDiC,GAAkB,SAAC,GAAiC,IAA/B7P,EAA+B,EAA/BA,UAAWlF,EAAoB,EAApBA,IAAQ2D,EAAY,2BACxD,OACE,kBAAC,EAAAqR,WAAD,KACE9P,UAAW+P,KAAW/P,EAAW,CAC/B,4BAA6BlF,EAAIoL,oBAEnCpL,IAAKA,GACD2D,KAKVoR,GAAgB/S,UAAY,CAC1BhC,IAAKkC,UAAgB,CACnBkJ,kBAAmBlJ,WAErBgD,UAAWhD,YAGb,Y,6lBCJA,IAAMtB,GAAU,CACd,CAAEhC,MAAO,OAAQkC,IAAK,OAAQC,WAAY,CAACC,aAC3C,CAAEpC,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,gBAAiBkC,IAAK,WAAYC,WAAY,CAACC,cAiL1D,SA9Ke,WAAM,OACmBP,cAAS,IAD5B,WACZC,EADY,KACCC,EADD,QAEqBF,cAAS,IAF9B,WAEZuK,EAFY,KAEEkK,EAFF,QAG6BzU,cAAS,IAHtC,WAGZ0U,EAHY,KAGMC,EAHN,KAKbzS,GAAW8D,mBALE,GAMqCkI,kBACtD,wBAAG1L,aAAgBwC,EAAnB,EAAmBA,OAAQrF,EAA3B,EAA2BA,UAAWiV,EAAtC,EAAsCA,YAAtC,MAA2D,CACzD5P,OAAQ,GAAF,YACA4P,SAAA,UAAAA,EAAatX,YAAb,eAAmBuK,MAAM,IAAIgN,OAAO5U,EAAa,OAAQ,CAAC2U,GAAe,IADzE,KAEA5P,SAAA,UAAAA,EAAQrH,YAAR,eAAcmX,QAAO,wEAAwB,GAArBlK,EAAH,EAAGA,iBAAH,OAAgCA,OAAqB,KAEhFhL,WAAYoF,EAAO/C,KACnBoL,aAAcrI,EAAOsI,SACrB3N,YACAiV,iBAEFzG,gBAXMnJ,EANW,EAMXA,OAAQpF,EANG,EAMHA,WAAYyN,EANT,EAMSA,aAAc1N,EANvB,EAMuBA,WAc1Ce,gBAAU,WACRmS,SAASC,OAAOiC,YAAY,CAAEjY,GAAI,SAAUkY,cAAc,IAC1D9S,GAAS/E,QAAY,SAAKyC,GAAN,IAAkBtC,KAAM2C,MAC5CiC,GAAS+S,QAAiBhV,MACzB,IAEH,IAAMuB,GAAUyE,kBAEV/E,EAAkB,SAACC,GACvBsT,GAAgB,SAACS,GAAD,OACd/T,EAAa+T,GACVJ,QAAO,qBAAGlK,oBACVxJ,KAAI,kBAAqB,CAAEpC,KAAvB,EAAGA,KAA0BT,MAA7B,EAASjB,aAId0R,EAAS,kBACb,kBAAC,EAAArL,SAAD,KACE,kBAAC,EAAAsL,MAAD,CAAOkG,OAAK,EAACjG,KAAMC,UACjB,kBAAC,GAAD,CACEpJ,WAAY,SAAChF,GACXmB,GAAS/E,QAAY4D,IACrBb,EAAe,QAIrB,kBAAC,EAAA+O,MAAD,CAAOkG,OAAK,EAACjG,KAAMC,YACjB,kBAAC,GAAD,CACEpJ,WAAY,SAAChF,GACXmB,GAAS/E,QAAY4D,IACrBb,EAAe,KAEjBuG,QAAM,KAGV,kBAAC,EAAAwI,MAAD,CAAOkG,OAAK,EAACjG,KAAMC,UACjB,kBAAC,GAAD,CACEpJ,WAAY,SAACqP,GACXlT,GAAS/E,WACTsX,EAAgBlK,EAAauK,QAAO,SAACvV,GAAD,OAAU6V,EAAI7J,SAAShM,EAAIP,UAC/DkB,EAAe,KAEjB2I,aAAW,EACXD,WAAY8L,OAMdpF,EAAiB,SAAC,GAAD,SAAG3E,qBACD0C,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,cAC1E,KACA,CACE,CACE5Q,MAAO,OACPiL,QAAS,SAACwC,EAAQ2D,EAAQ7H,GACxBlG,EAAQ5E,KAAR,uBAA6B8K,EAAM1I,SAGvC,CACEb,MAAO,SACPiL,QAAS,SAACwC,EAAQ2D,EAAQ7H,GACxBiN,EAAoB,CAACjN,IACrBlG,EAAQ5E,KAAKuS,cAMnBS,EAAiB,sBACjBvC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACvD,CACE,kBAAC,EAAAlE,KAAD,CAAMC,GAAIqE,SAAoB9O,IAAI,YAAYoE,UAAU,sBACtD,kBAACyE,EAAA,GAAD,CAAQjI,OAAO,sBAAsBqF,QAAQ,UAAUuJ,aAAW,gBAAlE,iBAIF,CACEtR,MAAO,eACP2E,MAAO,CACLuB,UAAW,qBAEb2E,QAAS,WACP5H,EAAQ5E,KAAKuS,YAGjB,CACE5Q,MAAO,OACP2E,MAAO,CACLiG,aAAsC,IAAxBoB,EAAarN,SAE7BkM,QAAS,kBAAM5H,EAAQ5E,KAAR,uBAA6B2N,EAAa,GAAGvL,SAE9D,CACET,MAAO,SACP2E,MAAO,CACLiG,YAAaoB,EAAarN,OAAS,GAErCkM,QAAS,WACPuL,EAAoBpK,GACpB/I,EAAQ5E,KAAKuS,aAInB,KAqCN,OACE,kBAAC,EAAAkG,OAAD,KACE,kBAAC,KAAD,CAAiBC,WAAW,cAAcpG,KAAMC,SAAmCC,OAAQ,SAAClM,GAAD,OAAW,kBAAC,KAASA,MAChH,kBAAC,KAAD,CACEoS,WAAW,eACXpG,KAAMC,SACNC,OAAQ,SAAClM,GAAD,OAAW,kBAAC,GAAD,OAAWA,EAAX,CAAkBqP,SAAU,kBAAMrS,EAAe,WAEtE,kBAAC,KAAD,CAAiBoV,WAAW,aAAapG,KAAMC,SAAcC,OAAQ,kBAzCvE,kBAACxL,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAAC,KAAD,CAAYyR,eAAa,GACvB,kBAAC,KAAD,CAAiBpX,MAAM,aAG3B,kBAAC2F,EAAA,EAAD,KACE,kBAAC8K,GAAA,EAAD,CAAStQ,KAAK,UAAUxB,GAAI,cAC1B,kBAAC,IAAD,CACEa,KAAMqH,EAAO5D,KAAI,SAACsG,GAAD,OAAYA,EAAMkD,iBAAN,SAA8BlD,GAA9B,IAAqC+C,eAAgB,QAAU/C,KAC5F/I,WAAYA,GACZwB,QAASA,GACTQ,aAAc0M,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACrElQ,YAAa0L,EACbrJ,gBAAiBA,EACjB8N,OAAQA,EACRM,eAAgBA,EAChBjO,YAAY,SACZC,cAAc,QACdL,OAAO,eACPrB,WAAYA,EACZK,YAAaA,EACba,UAAW,SAACC,GAAD,OAAYmB,GAAS/E,QAAY4D,KAC5Cb,eAAgB,gBAAG5C,EAAH,EAAGA,KAAH,OAAc4C,EAAe5C,IAC7CsS,eAAgBA,EAChBjQ,UAAWA,EACX8P,kBAAkB,OAClBC,WAAY4E,c,gBCtLxB,IAAIkB,EAAM,EAAQ,OACF5D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MAG9C,IAKI+D,EAASH,EAAI5D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQgE,QAAU/Y,EAAOgZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYnE,EAAQgE,OAExB/Y,EAAOgZ,IAAIG,OACT,OACA,WAK+B,iBAFvBpE,GAFNA,EAAU,EAAQ,QAEM6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MA/BxB,SAAuBqE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWnE,EAAQgE,SAMtCG,EAAYnE,EAAQgE,OAEpBD,EAAO/D,IAPL/U,EAAOgZ,IAAIC,gBAYzBjZ,EAAOgZ,IAAIQ,SAAQ,WACjBV,OAIJ9Y,EAAOH,QAAUkV,EAAQgE,QAAU,I,gBCvEnC,IAAIJ,EAAM,EAAQ,OACF5D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MAG9C,IAKI+D,EAASH,EAAI5D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQgE,QAAU/Y,EAAOgZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYnE,EAAQgE,OAExB/Y,EAAOgZ,IAAIG,OACT,OACA,WAK+B,iBAFvBpE,GAFNA,EAAU,EAAQ,QAEM6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MA/BxB,SAAuBqE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWnE,EAAQgE,SAMtCG,EAAYnE,EAAQgE,OAEpBD,EAAO/D,IAPL/U,EAAOgZ,IAAIC,gBAYzBjZ,EAAOgZ,IAAIQ,SAAQ,WACjBV,OAIJ9Y,EAAOH,QAAUkV,EAAQgE,QAAU,I,gBCvEnC,IAAIJ,EAAM,EAAQ,OACF5D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MAG9C,IAKI+D,EAASH,EAAI5D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQgE,QAAU/Y,EAAOgZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYnE,EAAQgE,OAExB/Y,EAAOgZ,IAAIG,OACT,OACA,WAK+B,iBAFvBpE,GAFNA,EAAU,EAAQ,QAEM6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MA/BxB,SAAuBqE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWnE,EAAQgE,SAMtCG,EAAYnE,EAAQgE,OAEpBD,EAAO/D,IAPL/U,EAAOgZ,IAAIC,gBAYzBjZ,EAAOgZ,IAAIQ,SAAQ,WACjBV,OAIJ9Y,EAAOH,QAAUkV,EAAQgE,QAAU,I,gBCvEnC,IAAIJ,EAAM,EAAQ,OACF5D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MAG9C,IAKI+D,EAASH,EAAI5D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQgE,QAAU/Y,EAAOgZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYnE,EAAQgE,OAExB/Y,EAAOgZ,IAAIG,OACT,OACA,WAK+B,iBAFvBpE,GAFNA,EAAU,EAAQ,QAEM6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MA/BxB,SAAuBqE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWnE,EAAQgE,SAMtCG,EAAYnE,EAAQgE,OAEpBD,EAAO/D,IAPL/U,EAAOgZ,IAAIC,gBAYzBjZ,EAAOgZ,IAAIQ,SAAQ,WACjBV,OAIJ9Y,EAAOH,QAAUkV,EAAQgE,QAAU,I,gBCvEnC,IAAIJ,EAAM,EAAQ,OACF5D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MAG9C,IAKI+D,EAASH,EAAI5D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQgE,QAAU/Y,EAAOgZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYnE,EAAQgE,OAExB/Y,EAAOgZ,IAAIG,OACT,OACA,WAK+B,iBAFvBpE,GAFNA,EAAU,EAAQ,QAEM6D,WAAa7D,EAAQ8D,QAAU9D,KAG/CA,EAAU,CAAC,CAAC/U,EAAOC,GAAI8U,EAAS,MA/BxB,SAAuBqE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWnE,EAAQgE,SAMtCG,EAAYnE,EAAQgE,OAEpBD,EAAO/D,IAPL/U,EAAOgZ,IAAIC,gBAYzBjZ,EAAOgZ,IAAIQ,SAAQ,WACjBV,OAIJ9Y,EAAOH,QAAUkV,EAAQgE,QAAU","file":"js/220.6a1b3b33f118a1d42a70.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-tabs.ins-rbac-page-header__tabs{padding:0 var(--pf-c-page__main-section--PaddingRight) 0 var(--pf-c-page__main-section--PaddingLeft);background:white}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-rbac__default-group-info-icon{color:var(--pf-global--info-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-table tbody tr.ins-c-rbac__group-default .pf-c-table__check:first-of-type input{display:none}.pf-c-question-circle-icon{color:var(--pf-global--palette--black-600);margin-left:var(--pf-global--spacer--sm);cursor:pointer}.pf-c-question-circle-icon.icon-active{color:var(--pf-global--palette--blue-400)}.pf-c-popover{min-width:350px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".delete-group-warning-icon{color:var(--pf-global--warning-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-button__add-role-disabled:hover{text-decoration:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { fetchGroups } from '../../helpers/group/group-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\n\nexport const asyncValidator = async (groupName) => {\n  if (!groupName) {\n    return undefined;\n  }\n\n  if (groupName.length > 150) {\n    throw 'Can have maximum of 150 characters.';\n  }\n\n  const response = await fetchGroups({ limit: 10, offset: 0, name: groupName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (response?.data?.length > 0) {\n    throw 'Name has already been taken';\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce(asyncValidator);\n","import validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport { debouncedAsyncValidator } from '../validators';\n\nexport default {\n  fields: [\n    {\n      component: 'wizard',\n      name: 'wizzard',\n      isDynamic: true,\n      inModal: true,\n      showTitles: true,\n      title: 'Create role',\n      fields: [\n        {\n          name: 'name-and-description',\n          title: 'Name and Description',\n          nextStep: 'add-roles',\n          fields: [\n            {\n              component: componentTypes.TEXT_FIELD,\n              name: 'group-name',\n              type: 'text',\n              label: 'Group name',\n              validate: [\n                debouncedAsyncValidator,\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n              ],\n            },\n            {\n              component: componentTypes.TEXTAREA,\n              name: 'group-description',\n              type: 'text',\n              label: 'Group description',\n              validate: [\n                {\n                  type: validatorTypes.MAX_LENGTH,\n                  threshold: 150,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'add-roles',\n          nextStep: 'add-users',\n          title: 'Add roles',\n          fields: [\n            {\n              component: 'set-roles',\n              name: 'roles-list',\n            },\n          ],\n        },\n        {\n          name: 'add-users',\n          nextStep: 'review',\n          title: 'Add members',\n          fields: [\n            {\n              component: 'set-users',\n              name: 'users-list',\n            },\n          ],\n        },\n        {\n          name: 'review',\n          title: 'Review details',\n          fields: [\n            {\n              component: 'summary-content',\n              name: 'summary-content',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { sortable } from '@patternfly/react-table';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description }) => [\n          ...acc,\n          {\n            uuid,\n            cells: [display_name || name, description],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, canSort, setSelectedRoles }) => {\n  const [filterValue, setFilterValue] = useState('');\n  const { current: columns } = useRef([\n    { title: 'Name', key: 'display_name', ...(canSort ? { transforms: [sortable] } : { orderBy: 'name' }) },\n    { title: 'Description' },\n  ]);\n\n  useEffect(() => {\n    fetchRoles({ orderBy: 'display_name' });\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact\n      borders={false}\n      createRows={createRows}\n      data={roles}\n      filterValue={filterValue}\n      fetchData={(config) => fetchRoles(mappedProps(config))}\n      setFilterValue={({ name }) => setFilterValue(name)}\n      isLoading={isLoading}\n      ouiaId=\"roles-table\"\n      pagination={pagination}\n      checkedRows={selectedRoles}\n      setCheckedItems={setCheckedItems}\n      titlePlural=\"roles\"\n      titleSingular=\"role\"\n    />\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading } }) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  canSort: PropTypes.bool,\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  canSort: true,\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup } }) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid,\n  };\n};\n\nconst mapDispatchToPropsGroup = (dispatch) => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    canSort: false,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { FormGroup, Stack, StackItem, Text, TextContent } from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = (props) => {\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedRoles(formOptions.getState().values['roles-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedRoles);\n    formOptions.change('roles-list', selectedRoles);\n  }, [selectedRoles]);\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text>Select one or more roles to add to this group.</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <FormGroup fieldId=\"select-role\">\n            <RolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </FormGroup>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetRoles;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Form, FormGroup, Stack, StackItem, TextContent } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { CompactUsersList } from './users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport '../../../App.scss';\n\nconst SetUsers = (props) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedUsers(formOptions.getState().values['users-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedUsers);\n    formOptions.change('users-list', selectedUsers);\n  }, [selectedUsers]);\n\n  return (\n    <Fragment>\n      <Form>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <ActiveUser description={'These are all of the users in your Red Hat organization. To manage users, go to your'} />\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup fieldId=\"select-user\">\n              <Card>\n                <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetUsers;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst SummaryContent = () => {\n  const formOptions = useFormApi();\n  const {\n    'group-name': name,\n    'group-description': description,\n    'users-list': selectedUsers,\n    'roles-list': selectedRoles,\n  } = formOptions.getState().values;\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <Stack hasGutter>\n            <StackItem className=\"ins-c-rbac__summary\">\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Group name\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{name}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Group description\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{description}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Roles\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedRoles.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Members\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedUsers.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SummaryContent;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useHistory } from 'react-router-dom';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/esm/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/esm/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\nimport { WarningModal } from '../../common/warningModal';\nimport schema from './schema';\nimport { addGroup } from '../../../redux/actions/group-actions';\nimport SetRoles from './set-roles';\nimport SetUsers from './set-users';\nimport SummaryContent from './summary-content';\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  description: Description,\n  'set-roles': SetRoles,\n  'set-users': SetUsers,\n  'summary-content': SummaryContent,\n};\n\nexport const onCancel = (emptyCallback, nonEmptyCallback, setGroupData) => (formData) => {\n  setGroupData(formData);\n  if (Object.keys(formData).length > 0) {\n    nonEmptyCallback(true);\n  } else {\n    emptyCallback();\n  }\n};\n\nconst AddGroupWizard = ({ postMethod }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [groupData, setGroupData] = useState({});\n\n  const redirectToGroups = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        title: 'Adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'Adding group was canceled by the user.',\n      })\n    );\n    history.push('/groups');\n  };\n\n  const onSubmit = (formData) => {\n    const groupData = {\n      name: formData['group-name'],\n      description: formData['group-description'],\n      user_list: formData['users-list'].map((user) => ({ username: user.label })),\n      roles_list: formData['roles-list'].map((role) => role.uuid),\n    };\n    history.push('/groups');\n    dispatch(addGroup(groupData))\n      .then(() => postMethod())\n      .then(() => {\n        dispatch(\n          addNotification({\n            variant: 'success',\n            title: 'Success adding group',\n            dismissDelay: 8000,\n            dismissable: false,\n            description: 'The group was added successfully.',\n          })\n        );\n      });\n  };\n\n  return cancelWarningVisible ? (\n    <WarningModal\n      type=\"group\"\n      isOpen={cancelWarningVisible}\n      onModalCancel={() => setCancelWarningVisible(false)}\n      onConfirmCancel={redirectToGroups}\n    />\n  ) : (\n    <FormRenderer\n      schema={schema}\n      subscription={{ values: true }}\n      FormTemplate={FormTemplate}\n      componentMapper={{ ...componentMapper, ...mapperExtension }}\n      onSubmit={onSubmit}\n      initialValues={groupData}\n      onCancel={onCancel(redirectToGroups, setCancelWarningVisible, setGroupData)}\n    />\n  );\n};\n\nAddGroupWizard.propTypes = {\n  postMethod: PropTypes.func,\n};\n\nexport default AddGroupWizard;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components';\nimport { Modal, ModalVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nimport { debouncedAsyncValidator } from './validators';\n\nconst EditGroupModal = ({ addNotification, updateGroup, postMethod, closeUrl, isOpen, group, onClose }) => {\n  const [selectedGroup, setSelectedGroup] = useState(undefined);\n\n  const history = useHistory();\n  const match = useRouteMatch('/groups/edit/:id');\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    match &&\n      fetchGroup(match.params.id)\n        .payload.then((data) => setGroupData(data))\n        .catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [group]);\n\n  const onSubmit = (data) => {\n    const user_data = { ...data };\n    postMethod\n      ? updateGroup(user_data)\n          .then(() => postMethod())\n          .then(history.push(closeUrl))\n      : updateGroup(user_data).then(() => history.push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      dismissable: false,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was canceled by the user.' : 'Adding group was canceled by the user.',\n    });\n    onClose();\n    history.push(closeUrl);\n  };\n\n  const schema = {\n    fields: [\n      {\n        name: 'name',\n        label: 'Name',\n        component: componentTypes.TEXT_FIELD,\n        validate: [\n          debouncedAsyncValidator,\n          {\n            type: validatorTypes.REQUIRED,\n          },\n        ],\n      },\n      {\n        name: 'description',\n        label: 'Description',\n        component: componentTypes.TEXTAREA,\n        validate: [\n          {\n            type: validatorTypes.MAX_LENGTH,\n            threshold: 150,\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Modal variant={ModalVariant.medium} title=\"Edit group's information\" isOpen={isOpen} onClose={onCancel}>\n      {selectedGroup ? (\n        <FormRenderer\n          schema={schema}\n          schemaType=\"mozilla\"\n          onCancel={onCancel}\n          onSubmit={onSubmit}\n          formContainer=\"modal\"\n          initialValues={{ ...selectedGroup }}\n        />\n      ) : (\n        <Skeleton />\n      )}\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null,\n};\n\nEditGroupModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n  isOpen: PropTypes.bool,\n  group: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      updateGroup,\n      fetchGroup,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button, Checkbox, Modal, ModalVariant, Text, TextContent } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\nimport './remove-group-modal.scss';\n\nconst RemoveGroupModal = ({ removeGroups, group, isLoading, fetchGroup, groupsUuid, isModalOpen, postMethod, closeUrl }) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const history = useHistory();\n\n  const [checked, setChecked] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids)\n      .then(() => postMethod(uuids))\n      .then(history.push(closeUrl));\n  };\n\n  const onCancel = () => history.goBack();\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      variant={ModalVariant.small}\n      title={\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n          &nbsp; {multipleGroups ? 'Delete groups?' : 'Delete group?'}\n        </Text>\n      }\n      onClose={onCancel}\n      actions={[\n        <Button key=\"submit\" isDisabled={!checked} variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {multipleGroups ? 'Delete groups' : 'Delete group'}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        {multipleGroups ? (\n          <Text>\n            Deleting these <b>{groupsUuid.length}</b> groups removes all roles from the members inside the group.\n          </Text>\n        ) : isLoading ? (\n          <FormItemLoader />\n        ) : (\n          <Text>\n            Deleting the <b>{group.name}</b> group removes all roles from the members inside the group.\n          </Text>\n        )}\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={checked}\n        onChange={() => setChecked(!checked)}\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  closeUrl: '/groups',\n};\n\nRemoveGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  closeUrl: PropTypes.string,\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup } }) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n      removeGroups,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal);\n","import React, { Fragment, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Popover } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst DefaultPlatformPopover = ({ uuid }) => {\n  const [isPopoverVisible, setPopoverVisible] = useState(false);\n  const popoverRootRef = useRef(null);\n\n  return (\n    <span ref={popoverRootRef} key={`${uuid}-popover`} id=\"default-group-popover\">\n      <Popover\n        zIndex=\"110\"\n        position=\"right\"\n        isVisible={isPopoverVisible}\n        shouldClose={() => setPopoverVisible(false)}\n        hideOnOutsideClick\n        bodyContent=\"This group contains the roles that all users in your organization inherit by default.\"\n        appendTo={popoverRootRef.current}\n      >\n        <OutlinedQuestionCircleIcon\n          onClick={() => setPopoverVisible(!isPopoverVisible)}\n          className={classNames('pf-c-question-circle-icon', { 'icon-active': isPopoverVisible })}\n        />\n      </Popover>\n    </span>\n  );\n};\n\nDefaultPlatformPopover.propTypes = {\n  uuid: PropTypes.string.isRequired,\n};\n\nexport const createRows = (data, opened, selectedRows = []) => {\n  return data.reduce(\n    (acc, { uuid, name, roleCount, principalCount, modified, platform_default: isPlatformDefault }) => [\n      ...acc,\n      {\n        uuid,\n        isPlatformDefault,\n        cells: [\n          <Fragment key={uuid}>\n            <div className=\"pf-m-inline-flex\">\n              <Link key={`${uuid}-link`} to={`/groups/detail/${uuid}`}>\n                {name}\n              </Link>\n              {isPlatformDefault && <DefaultPlatformPopover uuid={uuid} />}\n            </div>\n          </Fragment>,\n          roleCount,\n          principalCount,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type=\"relative\" />\n          </Fragment>,\n        ],\n        selected: Boolean(selectedRows && selectedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems, isHeader }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className={isHeader ? `ins-rbac-page-header__tabs` : ''} activeKey={activeTab ? activeTab.eventKey : 0} onSelect={handleTabClick}>\n      {tabItems.map((item) => (\n        <Tab title={item.title} key={item.eventKey} eventKey={item.eventKey} name={item.name} />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool,\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\n\nexport const createRows = (data, _opened, checkedRows = []) => {\n  return data.reduce(\n    (acc, { is_active: isActive, username, email, first_name: firstName, last_name: lastName }) => [\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [\n          {\n            title: <Label color={isActive && 'green'}>{isActive ? 'Active' : 'Inactive'}</Label>,\n            props: {\n              data: { isActive },\n            },\n          },\n          username,\n          email,\n          lastName,\n          firstName,\n        ],\n        selected: checkedRows.find((row) => row.uuid === username),\n      },\n    ],\n    []\n  );\n};\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant, StackItem, Stack, TextContent } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, addMembersToGroup, fetchMembersForGroup } from '../../../redux/actions/group-actions';\nimport { CompactUsersList } from '../add-group/users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchMembersForGroup,\n}) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const onSubmit = () => {\n    const userList = selectedUsers.map((user) => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        dismissDelay: 8000,\n        dismissable: false,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`,\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchMembersForGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      dismissable: false,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was canceled by the user.`,\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members\"\n      variant={ModalVariant.medium}\n      isOpen\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={selectedUsers.length === 0} variant=\"primary\" onClick={onSubmit}>\n          Add to group\n        </Button>,\n        <Button id=\"add-groups-cancel\" ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <ActiveUser description=\"These are all of the users in your Red Hat organization. To manage users, go to your\" />\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} />\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: [],\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func,\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchMembersForGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      addGroup,\n      addMembersToGroup,\n      fetchMembersForGroup,\n    },\n    dispatch\n  );\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","/* eslint-disable camelcase */\nimport { nowrap } from '@patternfly/react-table';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, Route, useHistory, useParams } from 'react-router-dom';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchMembersForGroup, removeMembersFromGroup } from '../../../redux/actions/group-actions';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport { routes as paths } from '../../../../package.json';\n\nconst columns = [\n  { title: 'Status', transforms: [nowrap] },\n  { title: 'Username' },\n  { title: 'Email' },\n  { title: 'Last name' },\n  { title: 'First name' },\n];\n\nconst selector = ({ groupReducer: { groups, selectedGroup } }) => ({\n  principals: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  userIdentity: groups.identity,\n  groupName: selectedGroup.name,\n  platform_default: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading,\n});\n\nconst removeModalText = (name, group, plural) =>\n  plural ? (\n    <p>\n      These <b> {`${name}`}</b> members will lose all the roles associated with the <b>{`${group}`}</b> group.\n    </p>\n  ) : (\n    <p>\n      <b>{`${name}`}</b> will lose all the roles associated with the <b> {`${group}`}</b> group.\n    </p>\n  );\n\nconst GroupPrincipals = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedPrincipals, setSelectedPrincipals] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  const { uuid } = useParams();\n  const { principals, pagination, groupName, userIdentity, isLoading, platform_default } = useSelector(selector, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options = pagination) => {\n    dispatch(fetchMembersForGroup(uuid, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(uuid, userNames)).then(() => {\n      setSelectedPrincipals([]);\n      fetchData(undefined, { ...pagination, offset: 0 });\n    });\n  };\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin)\n      ? null\n      : [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, principal) => {\n              setConfirmDelete(() => () => removeMembers([principal.username.title]));\n              setDeleteInfo({\n                title: 'Remove member?',\n                text: removeModalText(principal.username.title, groupName, false),\n                confirmButtonLabel: 'Remove member',\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-members']}\n        render={(args) => <AddGroupMembers fetchData={fetchData} closeUrl={`/groups/detail/${uuid}/members`} {...args} />}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link to={`/groups/detail/${uuid}/members/add_members`} key=\"remove-from-group\" className=\"pf-m-visible-on-md\">\n            <Button variant=\"primary\" aria-label=\"Add member\">\n              Add member\n            </Button>\n          </Link>,\n          {\n            label: 'Add member',\n            props: {\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/members/add_members`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleMembersSelected = selectedPrincipals.length > 1;\n              const removeText = multipleMembersSelected ? 'Remove members?' : 'Remove member?';\n              setConfirmDelete(() => () => removeMembers(selectedPrincipals.map((user) => user.uuid)));\n              setDeleteInfo({\n                title: removeText,\n                confirmButtonLabel: removeText,\n                text: removeModalText(\n                  multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].uuid,\n                  groupName,\n                  multipleMembersSelected\n                ),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        isOpen={showRemoveModal}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        }}\n      />\n      <Section type=\"content\" id={'tab-principals'}>\n        {platform_default ? (\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={TextVariants.h1}>All users in this organization are members of this group.</Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card>\n        ) : (\n          <TableToolbarView\n            data={(principals || []).map((user) => ({ ...user, uuid: user.username }))}\n            isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n            createRows={createRows}\n            columns={columns}\n            routes={routes}\n            actionResolver={actionResolver}\n            filterPlaceholder=\"username\"\n            titlePlural=\"members\"\n            titleSingular=\"member\"\n            ouiaId=\"members-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={({ limit, offset, name }) => fetchData(name, { limit, offset })}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            checkedRows={selectedPrincipals}\n            isLoading={isLoading}\n            rowWrapper={UsersRow}\n            setCheckedItems={setCheckedPrincipals}\n            toolbarButtons={toolbarButtons}\n            emptyProps={{ title: 'There are no members in this group', description: ['Add a user to configure user access.', ''] }}\n          />\n        )}\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default GroupPrincipals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  return (\n    <RemoveModal\n      text={\n        <TextContent>\n          <Text>\n            Once you edit the <b>Default access</b> group, the system will no longer update it with new default access roles. The group name will\n            change to <b>Custom default access</b>.\n          </Text>\n        </TextContent>\n      }\n      title={'Warning'}\n      withCheckbox\n      isOpen={isOpen}\n      confirmButtonLabel={'Continue'}\n      onClose={onClose}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DefaultGroupChange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Modal, ModalVariant, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport DefaultGroupChange from './default-group-change-modal';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  name,\n  isDefault,\n  isChanged,\n  addNotification,\n  onDefaultGroupChanged,\n  fetchRolesForGroup,\n}) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding roles to group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding roles to group was canceled by the user.',\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map((role) => role.uuid);\n    addRolesToGroup(uuid, rolesList, fetchRolesForGroup);\n    if (isDefault && !isChanged) {\n      onDefaultGroupChanged(true);\n    }\n\n    return push(closeUrl);\n  };\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange isOpen={showConfirmModal} onClose={onCancel} onSubmit={onSubmit} />\n  ) : (\n    <Modal\n      title=\"Add roles to group\"\n      variant={ModalVariant.medium}\n      isOpen\n      onClose={() => {\n        onCancel();\n        setShowConfirmModal(true);\n      }}\n      actions={[\n        <Button\n          aria-label=\"Save\"\n          ouiaId=\"primary-save-button\"\n          variant=\"primary\"\n          key=\"confirm\"\n          isDisabled={selectedRoles.length === 0}\n          onClick={() => {\n            setShowConfirmModal(true);\n            (!isDefault || isChanged) && onSubmit();\n          }}\n        >\n          Add to group\n        </Button>,\n        <Button aria-label=\"Cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" key=\"cancel\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        {title && (\n          <StackItem>\n            <Title headingLevel=\"h4\" size=\"xl\">\n              {title}\n            </Title>\n          </StackItem>\n        )}\n        <StackItem>\n          <TextContent>\n            <Text component={TextVariants.p}>\n              This role list has been filtered to only show roles that are not currently in <b> {name}</b>.\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </Card>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.any,\n    goBack: PropTypes.func.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  addNotification: PropTypes.func,\n  onDefaultGroupChanged: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n};\n\nexport default AddGroupRoles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  console.log(isDefault, isChanged, showConfirmModal);\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange\n      isOpen={showConfirmModal && isOpen}\n      onClose={() => {\n        onClose();\n        setShowConfirmModal(false);\n      }}\n      onSubmit={() => {\n        onSubmit();\n      }}\n    />\n  ) : (\n    <RemoveModal\n      text={text}\n      title={title}\n      isOpen={isOpen}\n      confirmButtonLabel={confirmButtonLabel}\n      onClose={() => {\n        onClose();\n      }}\n      onSubmit={() => {\n        setShowConfirmModal(true);\n        (!isDefault || isChanged) && onSubmit();\n      }}\n    />\n  );\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.node,\n  title: PropTypes.node,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false,\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup, fetchAddRolesForGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport RemoveRole from './remove-role-modal';\nimport { routes as paths } from '../../../../package.json';\nimport './group-roles.scss';\n\nconst columns = [{ title: 'Name', orderBy: 'name' }, { title: 'Description' }, { title: 'Last modified' }];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description, modified }) => [\n          ...acc,\n          {\n            uuid,\n            title: display_name || name,\n            cells: [\n              <Fragment key={`${uuid}-name`}>\n                <Link to={`/groups/detail/${groupUuid}/roles/detail/${uuid}`}>{display_name || name}</Link>\n              </Fragment>,\n              description,\n              <Fragment key={`${uuid}-modified`}>\n                <DateFormat date={modified} type=\"relative\" />\n              </Fragment>,\n            ],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst addRoleButton = (isDisabled) => {\n  const addRoleButtonContent = (\n    <Button variant=\"primary\" aria-label=\"Add role\" isAriaDisabled={isDisabled}>\n      Add role\n    </Button>\n  );\n\n  return isDisabled ? (\n    <Tooltip content=\"All available roles have already been added to the group\">{addRoleButtonContent}</Tooltip>\n  ) : (\n    addRoleButtonContent\n  );\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: {\n    params: { uuid },\n  },\n  userIdentity,\n  name,\n  isDefault,\n  isChanged,\n  onDefaultGroupChanged,\n  fetchAddRolesForGroup,\n  disableAddRoles,\n  addNotification,\n}) => {\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [selectedAddRoles, setSelectedAddRoles] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n\n  useEffect(() => {\n    fetchAddRolesForGroup(uuid);\n  }, [roles]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{name}</b> group will lose the permissions in {plural ? 'these' : 'the'}\n      <b> {role}</b> role{plural ? `s` : ''}.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, role) => {\n              setConfirmDelete(() => () => removeRoles(uuid, [role.uuid], () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)));\n              setDeleteInfo({\n                title: 'Remove role?',\n                confirmButtonLabel: 'Remove role',\n                text: removeModalText(name, role.title, false),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-roles']}\n        render={(args) => (\n          <AddGroupRoles\n            fetchData={fetchRoles}\n            fetchRolesForGroup={() => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)}\n            selectedRoles={selectedAddRoles}\n            setSelectedRoles={setSelectedAddRoles}\n            closeUrl={`/groups/detail/${uuid}/roles`}\n            addRolesToGroup={addRoles}\n            name={name}\n            isDefault={isDefault}\n            isChanged={isChanged}\n            addNotification={addNotification}\n            onDefaultGroupChanged={onDefaultGroupChanged}\n            {...args}\n          />\n        )}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link\n            className={`pf-m-visible-on-md ins-c-button__add-role${disableAddRoles && '-disabled'}`}\n            to={`/groups/detail/${uuid}/roles/add_roles`}\n            key=\"add-to-group\"\n          >\n            {addRoleButton(disableAddRoles)}\n          </Link>,\n          {\n            label: 'Add role',\n            props: {\n              isDisabled: disableAddRoles,\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/roles/add_roles`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedRoles || !selectedRoles.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleRolesSelected = selectedRoles.length > 1;\n              setConfirmDelete(() => () =>\n                removeRoles(\n                  uuid,\n                  selectedRoles.map((role) => role.uuid),\n                  () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)\n                )\n              );\n              setDeleteInfo({\n                title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n                confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n                text: removeModalText(\n                  name,\n                  multipleRolesSelected ? selectedRoles.length : roles.find((role) => role.uuid === selectedRoles[0].uuid).name,\n                  multipleRolesSelected\n                ),\n              });\n\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        isOpen={showRemoveModal}\n        isChanged={isChanged}\n        isDefault={isDefault}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isDefault && !isChanged);\n        }}\n      />\n\n      <Section type=\"content\" id={'tab-roles'}>\n        <TableToolbarView\n          columns={columns}\n          isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n          createRows={(...props) => createRows(uuid, ...props)}\n          data={roles}\n          filterValue={filterValue}\n          fetchData={(config) => {\n            fetchRolesForGroup(config)(uuid);\n          }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedRoles}\n          setCheckedItems={setCheckedItems}\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          routes={routes}\n          ouiaId=\"roles-table\"\n          emptyProps={{ title: 'There are no roles in this group', description: ['Add a role to configure user access.', ''] }}\n          filters={[\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue },\n          ]}\n        />\n      </Section>\n    </React.Fragment>\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups } }) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name,\n    isDefault: selectedGroup.platform_default,\n    isChanged: !selectedGroup.system,\n    disableAddRoles: !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options)),\n    fetchAddRolesForGroup: (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {})),\n    addNotification: (...props) => dispatch(addNotification(...props)),\n    fetchGroup: (apiProps) => dispatch(fetchGroup(apiProps)),\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  fetchAddRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool,\n    }),\n  }),\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  onDefaultGroupChanged: PropTypes.func,\n  disableAddRoles: PropTypes.bool.isRequired,\n  addNotification: PropTypes.func,\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, Link, useLocation } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup, fetchGroups } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Alert, AlertActionCloseButton, Popover, Split, SplitItem, DropdownItem, Dropdown, KebabToggle } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { routes } from '../../../package.json';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport './group.scss';\n\nconst Group = ({\n  match: {\n    params: { uuid },\n  },\n  group,\n  fetchGroup,\n  isFetching,\n  onDelete,\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'Groups', to: '/groups' },\n    { title: isFetching ? undefined : group.name, isActive: true },\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` },\n  ];\n\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo] = useState(false);\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchData(uuid);\n    insights.chrome.appObjectId(uuid);\n    return () => insights.chrome.appObjectId(undefined);\n  }, []);\n\n  const defaultGroupChangedIcon = (name) => (\n    <div style={{ display: 'inline-flex' }}>\n      {name}\n      <div className=\"pf-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={\n            <div>\n              Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n              name has changed to <b>Custom default access</b>.\n            </div>\n          }\n        >\n          <InfoCircleIcon className=\"ins-c-rbac__default-group-info-icon\" />\n        </Popover>\n      </div>\n    </div>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <Link\n          to={(location.pathname.includes('members') ? routes['group-detail-members-edit'] : routes['group-detail-roles-edit']).replace(\n            ':uuid',\n            uuid\n          )}\n        >\n          Edit\n        </Link>\n      }\n      key=\"edit-group\"\n    />,\n    <DropdownItem\n      component={\n        <Link\n          onClick={onDelete}\n          to={() =>\n            (location.pathname.includes('members') ? routes['group-detail-members-remove'] : routes['group-detail-roles-remove']).replace(\n              ':uuid',\n              uuid\n            )\n          }\n        >\n          Delete\n        </Link>\n      }\n      className=\"ins-c-group__action\"\n      key=\"delete-group\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={breadcrumbsList()}>\n        <Split hasGutter>\n          <SplitItem isFilled>\n            <TopToolbarTitle\n              title={\n                !isFetching && group ? (\n                  <Fragment>{group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name}</Fragment>\n                ) : undefined\n              }\n              description={!isFetching && group ? group.description : undefined}\n            />\n          </SplitItem>\n          <SplitItem>\n            {group.platform_default ? null : (\n              <Dropdown\n                ouiaId=\"group-title-actions-dropdown\"\n                toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"group-actions-dropdown\" />}\n                isOpen={isDropdownOpen}\n                isPlain\n                position=\"right\"\n                dropdownItems={dropdownItems}\n              />\n            )}\n          </SplitItem>\n        </Split>\n        {showDefaultGroupChangedInfo ? (\n          <Alert\n            variant=\"info\"\n            isInline\n            title=\"Default access group has changed\"\n            action={<AlertActionCloseButton onClose={() => setShowDefaultGroupChangedInfo(false)} />}\n            className=\"pf-u-mb-lg pf-u-mt-sm\"\n          >\n            Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n            name has changed to <b>Custom default access</b>.\n          </Alert>\n        ) : null}\n      </TopToolbar>\n      <AppTabs isHeader tabItems={tabItems} />\n      <Route\n        path={[routes['group-detail-roles-remove'], routes['group-detail-members-remove']]}\n        render={(props) => (\n          <RemoveGroup\n            {...props}\n            postMethod={() => {\n              dispatch(fetchGroups());\n            }}\n            isModalOpen\n            groupsUuid={[group]}\n          />\n        )}\n      />\n      <Route\n        path={[routes['group-detail-roles-edit'], routes['group-detail-members-edit']]}\n        render={(props) => (\n          <EditGroup\n            {...props}\n            isOpen\n            group={group}\n            closeUrl={`group/detail/${uuid}`}\n            postMethod={() => {\n              fetchData(uuid);\n            }}\n          />\n        )}\n      />\n      <Route\n        path={routes['group-detail-roles']}\n        render={(props) => <GroupRoles {...props} onDefaultGroupChanged={setShowDefaultGroupChangedInfo} />}\n      />\n      <Route path={routes['group-detail-members']} component={GroupPrincipals} />\n      <Route render={() => <Redirect to={`/groups/detail/${uuid}/roles`} />} />\n      {!group && <ListLoader />}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isRecordLoading, isRecordRolesLoading } }) => ({\n  group: selectedGroup,\n  isFetching: isRecordLoading || isRecordRolesLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n    },\n    dispatch\n  );\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    platform_default: PropTypes.bool,\n    system: PropTypes.bool,\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nGroup.defaultProps = {\n  isFetching: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst GroupRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={classnames(className, {\n        'ins-c-rbac__group-default': row.isPlatformDefault,\n      })}\n      row={row}\n      {...props}\n    />\n  );\n};\n\nGroupRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    isPlatformDefault: PropTypes.bool,\n  }),\n  className: PropTypes.string,\n};\n\nexport default GroupRowWrapper;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups, fetchSystemGroup } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\nimport GroupRowWrapper from './group-row-wrapper';\nimport { routes as paths } from '../../../package.json';\nimport './groups.scss';\nimport PageActionRoute from '../common/page-action-route';\n\nconst columns = [\n  { title: 'Name', key: 'name', transforms: [sortable] },\n  { title: 'Roles' },\n  { title: 'Members' },\n  { title: 'Last modified', key: 'modified', transforms: [sortable] },\n];\n\nconst Groups = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [removeGroupsList, setRemoveGroupsList] = useState([]);\n\n  const dispatch = useDispatch();\n  const { groups, pagination, userIdentity, isLoading } = useSelector(\n    ({ groupReducer: { groups, isLoading, systemGroup } }) => ({\n      groups: [\n        ...(systemGroup?.name?.match(new RegExp(filterValue, 'i')) ? [systemGroup] : []),\n        ...(groups?.data?.filter(({ platform_default } = {}) => !platform_default) || []),\n      ],\n      pagination: groups.meta,\n      userIdentity: groups.identity,\n      isLoading,\n      systemGroup,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'groups', secondaryNav: true });\n    dispatch(fetchGroups({ ...pagination, name: filterValue }));\n    dispatch(fetchSystemGroup(filterValue));\n  }, []);\n\n  const history = useHistory();\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) =>\n      newSelection(rows)\n        .filter(({ platform_default: isPlatformDefault }) => !isPlatformDefault)\n        .map(({ uuid, name }) => ({ uuid, label: name }))\n    );\n  };\n\n  const routes = () => (\n    <Fragment>\n      <Route exact path={paths['add-group']}>\n        <AddGroupWizard\n          postMethod={(config) => {\n            dispatch(fetchGroups(config));\n            setFilterValue('');\n          }}\n        />\n      </Route>\n      <Route exact path={paths['group-edit'].path}>\n        <EditGroup\n          postMethod={(config) => {\n            dispatch(fetchGroups(config));\n            setFilterValue('');\n          }}\n          isOpen\n        />\n      </Route>\n      <Route exact path={paths['remove-group']}>\n        <RemoveGroup\n          postMethod={(ids) => {\n            dispatch(fetchGroups());\n            setSelectedRows(selectedRows.filter((row) => !ids.includes(row.uuid)));\n            setFilterValue('');\n          }}\n          isModalOpen\n          groupsUuid={removeGroupsList}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const actionResolver = ({ isPlatformDefault }) =>\n    isPlatformDefault || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin)\n      ? null\n      : [\n          {\n            title: 'Edit',\n            onClick: (_event, _rowId, group) => {\n              history.push(`/groups/edit/${group.uuid}`);\n            },\n          },\n          {\n            title: 'Delete',\n            onClick: (_event, _rowId, group) => {\n              setRemoveGroupsList([group]);\n              history.push(paths['remove-group']);\n            },\n          },\n        ];\n\n  // TODO check this later\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link to={paths['add-group']} key=\"add-group\" className=\"pf-m-visible-on-md\">\n            <Button ouiaId=\"create-group-button\" variant=\"primary\" aria-label=\"Create group\">\n              Create group\n            </Button>\n          </Link>,\n          {\n            label: 'Create group',\n            props: {\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(paths['add-group']);\n            },\n          },\n          {\n            label: 'Edit',\n            props: {\n              isDisabled: !(selectedRows.length === 1),\n            },\n            onClick: () => history.push(`/groups/edit/${selectedRows[0].uuid}`),\n          },\n          {\n            label: 'Delete',\n            props: {\n              isDisabled: !selectedRows.length > 0,\n            },\n            onClick: () => {\n              setRemoveGroupsList(selectedRows);\n              history.push(paths['remove-group']);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const renderGroupsList = () => (\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottom>\n          <TopToolbarTitle title=\"Groups\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={'tab-groups'}>\n          <TableToolbarView\n            data={groups.map((group) => (group.platform_default ? { ...group, principalCount: 'All' } : group))}\n            createRows={createRows}\n            columns={columns}\n            isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n            checkedRows={selectedRows}\n            setCheckedItems={setCheckedItems}\n            routes={routes}\n            actionResolver={actionResolver}\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            ouiaId=\"groups-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={(config) => dispatch(fetchGroups(config))}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            toolbarButtons={toolbarButtons}\n            isLoading={isLoading}\n            filterPlaceholder=\"name\"\n            rowWrapper={GroupRowWrapper}\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n  return (\n    <Switch>\n      <PageActionRoute pageAction=\"role-detail\" path={paths['group-detail-role-detail']} render={(props) => <Role {...props} />} />\n      <PageActionRoute\n        pageAction=\"group-detail\"\n        path={paths['group-detail']}\n        render={(props) => <Group {...props} onDelete={() => setFilterValue('')} />}\n      />\n      <PageActionRoute pageAction=\"group-list\" path={paths.groups} render={() => renderGroupsList()} />\n    </Switch>\n  );\n};\n\nexport default Groups;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};"],"sourceRoot":""}
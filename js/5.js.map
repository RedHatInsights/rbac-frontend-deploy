{"version":3,"sources":["webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/user/users.js"],"names":["columns","title","orderBy","createRows","data","expanded","checkedRows","reduce","acc","username","email","first_name","last_name","uuid","cells","selected","Boolean","find","row","UsersList","users","fetchUsers","isLoading","pagination","selectedUsers","setSelectedUsers","props","useState","filterValue","setFilterValue","useEffect","isSelectable","isCompact","borders","fetchData","config","mappedProps","name","noBottom","toggleTemplate","firstIndex","lastIndex","setCheckedItems","newSelection","map","label","filterPlaceholder","titlePlural","titleSingular","propTypes","history","PropTypes","shape","goBack","func","isRequired","push","array","bool","searchFilter","string","limit","number","offset","count","object","defaultProps","defaultCompactSettings","connect","userReducer","isUserDataLoading","meta","dispatch","apiProps","addNotification","principalApi","getPrincipalApi","type","ActionTypes","payload","listPrincipals","then","isLast","length","currData","slice","Infinity","Users","isProd","window","insights","chrome","description","component","TextVariants","a","href","paddingBottm","id"],"mappings":"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","file":"js/5.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst columns = [\n  { title: 'Username', orderBy: 'name' },\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, email, first_name, last_name }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [ username, email, first_name, last_name ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers, props }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, name, username, label }) => ({ uuid, label: label || name || username }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchUsers(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ {\n      ...pagination,\n      noBottom: true,\n      // eslint-disable-next-line react/display-name, react/prop-types\n      toggleTemplate: ({ firstIndex, lastIndex }) => <b>{ `${firstIndex} - ${lastIndex}` }</b>\n    } }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    filterPlaceholder=\"username\"\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n    { ...props }\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = { limit: 10, offset: 0 }) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  props: PropTypes.object\n};\n\nUsersList.defaultProps = {\n  users: [],\n  pagination: defaultCompactSettings,\n  selectedUsers: [],\n  setSelectedUsers: () => undefined\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, name }) {\n  return principalApi.listPrincipals(limit + 1, offset, name).then(({ data, meta }) => {\n    const isLast = !data || data.length <= limit;\n    const currData = data.slice(0, limit);\n    return {\n      data: currData,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n        count: meta.count === null ? (!isLast ? Infinity : ((offset || 0) + currData.length)) : meta.count\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import React from 'react';\nimport { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport UsersList from '../group/add-group/users-list';\n\nconst Users = () => {\n  const isProd = window.insights.chrome.isProd;\n  const description = (<TextContent>\n    <Text>\n    These are the users in your organization. To add new users to your organization, go to{ ' ' }\n      <Text\n        component={ TextVariants.a }\n        href={ `https://www.${isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html` }>\n      user management list.\n      </Text>\n    </Text>\n  </TextContent>);\n\n  return (\n    <Stack >\n      <StackItem>\n        <TopToolbar paddingBottm={ false }>\n          <TopToolbarTitle\n            title=\"Users\"\n            description={ description }\n          />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'users' }>\n          <UsersList\n            props={ {\n              isSelectable: false,\n              isCompact: false\n            } }\n          />\n        </Section>\n      </StackItem>\n    </Stack >\n  );\n};\n\nUsers.propTypes = {\n\n};\n\nUsers.defaultProps = {\n\n};\n\nexport default Users;\n"],"sourceRoot":""}
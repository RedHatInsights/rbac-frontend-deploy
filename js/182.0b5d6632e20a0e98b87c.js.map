{"version":3,"sources":["webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.scss","webpack://insights-rbac-frontend/./src/smart-components/common/hideWizard.scss","webpack://insights-rbac-frontend/./src/smart-components/group/group.scss","webpack://insights-rbac-frontend/./src/smart-components/group/groups.scss","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.scss","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.scss","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/summary-content.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/validators.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/group-information.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/set-users.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/roles-list.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/set-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/group-name-error-state.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/add-group-wizard.js","webpack://insights-rbac-frontend/./src/smart-components/group/edit-group-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/group-table-helpers.js","webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/principal-table-helpers.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/add-group-members.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/principals.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/default-group-change-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/add-group-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/remove-role-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/group.js","webpack://insights-rbac-frontend/./src/smart-components/group/group-row-wrapper.js","webpack://insights-rbac-frontend/./src/smart-components/group/groups.js","webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.scss?da09","webpack://insights-rbac-frontend/./src/smart-components/common/hideWizard.scss?aea2","webpack://insights-rbac-frontend/./src/smart-components/group/group.scss?d836","webpack://insights-rbac-frontend/./src/smart-components/group/groups.scss?a8fb","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.scss?f800","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.scss?b25f"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","SummaryContent","formData","values","name","description","selectedUsers","selectedRoles","Fragment","Stack","hasGutter","StackItem","TextContent","Title","headingLevel","size","className","Grid","GridItem","md","Text","component","TextVariants","map","role","index","key","label","propTypes","PropTypes","groups","asyncValidator","groupName","fetchGroups","limit","offset","nameMatch","error","console","response","data","length","debouncedAsyncValidator","asyncDebounce","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","isGroupInfoValid","isValidating","setIsValidating","Form","FormGroup","isRequired","fieldId","helperTextInvalid","trim","validated","undefined","TextInput","type","aria-describedby","value","onChange","_","event","currentTarget","isUnique","TextArea","SetUsers","setSelectedUsers","title","Card","createRows","expanded","checkedRows","reduce","acc","uuid","display_name","cells","selected","Boolean","find","row","RolesList","roles","fetchRoles","isLoading","pagination","canSort","setSelectedRoles","useState","filterValue","setFilterValue","columns","useRef","transforms","sortable","orderBy","current","useEffect","isSelectable","isCompact","borders","fetchData","config","mappedProps","ouiaId","setCheckedItems","newSelection","titlePlural","titleSingular","history","goBack","searchFilter","count","defaultProps","defaultCompactSettings","connect","roleReducer","meta","dispatch","apiProps","fetchRolesWithPolicies","addNotification","ExcludedRolesList","selectedGroup","groupReducer","addRoles","defaultSettings","loaded","groupId","fetchAddRolesForGroup","propsFromState","propsFromDispatch","ownProps","SetRoles","GroupNameErrorState","setHideFooter","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","color","global_palette_red_100","icon","ExclamationCircleIcon","EmptyStateBody","Button","onClick","document","getElementsByClassName","click","AddGroupWizard","addGroup","postMethod","closeUrl","setValues","hideFooter","useHistory","steps","enableNext","canJumpTo","nextButtonText","onSubmit","user_data","user_list","user","username","roles_list","dismissDelay","dismissable","onCancel","cancelWarningVisible","setCancelWarningVisible","Wizard","isOpen","onClose","Object","filter","onSave","footer","onModalCancel","onConfirmCancel","users","inputValue","fetchGroup","match","bindActionCreators","fetchUsers","EditGroupModal","updateGroup","group","setSelectedGroup","useRouteMatch","setGroupData","groupData","params","payload","then","schema","fields","componentTypes","validate","validatorTypes","Modal","ModalVariant","schemaType","formContainer","initialValues","Skeleton","RemoveGroupModal","removeGroups","groupsUuid","isModalOpen","checked","setChecked","multipleGroups","actions","isDisabled","uuids","Checkbox","isChecked","DefaultPlatformPopover","isPopoverVisible","setPopoverVisible","popoverRootRef","ref","Popover","zIndex","position","isVisible","shouldClose","hideOnOutsideClick","bodyContent","appendTo","classNames","opened","selectedRows","roleCount","principalCount","modified","isPlatformDefault","platform_default","Link","to","DateFormat","date","AppTabs","pathname","location","tabItems","isHeader","activeTab","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","item","Tab","withRouter","_opened","isActive","is_active","email","firstName","first_name","lastName","last_name","Label","props","AddGroupMembers","addMembersToGroup","fetchMembersForGroup","userList","nowrap","selector","principals","members","userIdentity","identity","removeModalText","plural","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","useParams","useSelector","shallowEqual","useDispatch","usernames","options","removeMembers","userNames","removeMembersFromGroup","RemoveModal","text","confirmButtonLabel","Section","CardBody","Bullseye","is_org_admin","routes","Route","path","paths","render","args","actionResolver","_rowId","principal","filterPlaceholder","rowWrapper","UsersRow","toolbarButtons","aria-label","multipleMembersSelected","removeText","emptyProps","DefaultGroupChange","withCheckbox","AddGroupRoles","addRolesToGroup","isDefault","isChanged","onDefaultGroupChanged","fetchRolesForGroup","showConfirmModal","setShowConfirmModal","rolesList","RemoveRoles","groupUuid","GroupRoles","removeRoles","disableAddRoles","descriptionValue","setDescriptionValue","selectedAddRoles","setSelectedAddRoles","addRoleButtonContent","isAriaDisabled","Tooltip","content","multipleRolesSelected","filters","reloadWrapper","callback","system","removeRolesFromGroup","Group","isFetching","onDelete","isDropdownOpen","setDropdownOpen","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","useLocation","insights","chrome","appObjectId","dropdownItems","DropdownItem","replace","breadcrumbs","Split","SplitItem","isFilled","style","display","Dropdown","toggle","KebabToggle","onToggle","isPlain","Alert","isInline","action","AlertActionCloseButton","GroupPrincipals","Redirect","isRecordLoading","isRecordRolesLoading","GroupRowWrapper","RowWrapper","classnames","setSelectedRows","removeGroupsList","setRemoveGroupsList","systemGroup","RegExp","appNavClick","secondaryNav","fetchSystemGroup","rows","exact","ids","Switch","pageAction","paddingBottom","api","__esModule","default","update","locals","hot","invalidate","oldLocals","accept","a","b","p","isEqualLocals","dispose"],"mappings":"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","file":"js/182.0b5d6632e20a0e98b87c.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-tabs.ins-rbac-page-header__tabs{padding:0 var(--pf-c-page__main-section--PaddingRight) 0 var(--pf-c-page__main-section--PaddingLeft);background:white}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-m-wizard__hidden{display:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-rbac__default-group-info-icon{color:var(--pf-global--info-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-table tbody tr.ins-c-rbac__group-default .pf-c-table__check:first-of-type input{display:none}.pf-c-question-circle-icon{color:var(--pf-global--palette--black-600);margin-left:var(--pf-global--spacer--sm);cursor:pointer}.pf-c-question-circle-icon.icon-active{color:var(--pf-global--palette--blue-400)}.pf-c-popover{min-width:350px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".delete-group-warning-icon{color:var(--pf-global--warning-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-button__add-role-disabled:hover{text-decoration:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } = formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <Stack hasGutter>\n            <StackItem>\n              <TextContent>\n                <Title headingLevel=\"h4\" size=\"xl\">\n                  Review details\n                </Title>\n              </TextContent>\n            </StackItem>\n            <StackItem className=\"ins-c-rbac__summary\">\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Group name\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{name}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Group description\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{description}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Roles\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedRoles.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Members\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedUsers.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SummaryContent;\n","import { fetchGroups } from '../../../helpers/group/group-helper';\nimport asyncDebounce from '../../../utilities/async-debounce';\n\nconst asyncValidator = async (groupName) => {\n  if (!groupName) {\n    return false;\n  }\n\n  const response = await fetchGroups({ limit: 10, offset: 0, name: groupName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return;\n  });\n\n  return response?.data?.length <= 0;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce(asyncValidator);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, Stack, StackItem, TextInput, TextArea, Title } from '@patternfly/react-core';\nimport { debouncedAsyncValidator } from './validators';\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid, isGroupInfoValid, isValidating, setIsValidating) => (\n  <Fragment>\n    <Stack hasGutter>\n      <StackItem>\n        <Title headingLevel=\"h4\" size=\"xl\">\n          Name and description\n        </Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Group name\"\n            isRequired\n            fieldId=\"group-name\"\n            helperTextInvalid={\n              formValue.name?.trim().length > 0 && !isValidating\n                ? 'This group name already exists. Please input a unique group name.'\n                : 'Required value'\n            }\n            validated={isGroupInfoValid || formValue.name === undefined ? 'success' : 'error'}\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"group-name\"\n              name=\"group-name\"\n              aria-describedby=\"group-name\"\n              value={formValue.name}\n              validated={isGroupInfoValid || formValue.name === undefined ? 'default' : 'error'}\n              onChange={(_, event) => {\n                const { value } = event.currentTarget;\n                onHandleChange({ name: value });\n                setIsValidating(true);\n                (async () => {\n                  const isUnique = formValue.name !== undefined && (await debouncedAsyncValidator(value));\n                  setIsGroupInfoValid(value.trim().length > 0 && isUnique);\n                  setIsValidating(false);\n                })();\n              }}\n            />\n          </FormGroup>\n          <FormGroup label=\"Group description\" fieldId=\"group-description\">\n            <TextArea\n              type=\"text\"\n              id=\"group-description\"\n              name=\"group-description\"\n              value={formValue.description}\n              onChange={(_, event) => onHandleChange({ description: event.currentTarget.value })}\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  </Fragment>\n);\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default GroupInformation;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Form, FormGroup, Stack, StackItem, TextContent, Title } from '@patternfly/react-core';\nimport { CompactUsersList } from './users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport '../../../App.scss';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack hasGutter>\n          {title && (\n            <StackItem>\n              <Title headingLevel=\"h4\" size=\"xl\">\n                {title}\n              </Title>\n            </StackItem>\n          )}\n          <StackItem>\n            <TextContent>\n              <Title headingLevel=\"h4\" size=\"xl\">\n                Add members\n              </Title>\n              <ActiveUser description={description || 'These are all of the users in your Red Hat organization. To manage users, go to your'} />\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup fieldId=\"select-user\">\n              <Card>\n                <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetUsers;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { sortable } from '@patternfly/react-table';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description }) => [\n          ...acc,\n          {\n            uuid,\n            cells: [display_name || name, description],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, canSort, setSelectedRoles }) => {\n  const [filterValue, setFilterValue] = useState('');\n  const { current: columns } = useRef([\n    { title: 'Name', key: 'display_name', ...(canSort ? { transforms: [sortable] } : { orderBy: 'name' }) },\n    { title: 'Description' },\n  ]);\n\n  useEffect(() => {\n    fetchRoles({ orderBy: 'display_name' });\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact\n      borders={false}\n      createRows={createRows}\n      data={roles}\n      filterValue={filterValue}\n      fetchData={(config) => fetchRoles(mappedProps(config))}\n      setFilterValue={({ name }) => setFilterValue(name)}\n      isLoading={isLoading}\n      ouiaId=\"roles-table\"\n      pagination={pagination}\n      checkedRows={selectedRoles}\n      setCheckedItems={setCheckedItems}\n      titlePlural=\"roles\"\n      titleSingular=\"role\"\n    />\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading } }) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  canSort: PropTypes.bool,\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  canSort: true,\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup } }) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid,\n  };\n};\n\nconst mapDispatchToPropsGroup = (dispatch) => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    canSort: false,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Form, FormGroup, Stack, StackItem, Text, TextContent, Title } from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack hasGutter>\n          {title && (\n            <StackItem>\n              <Title headingLevel=\"h4\" size=\"xl\">\n                {title}\n              </Title>\n            </StackItem>\n          )}\n          <StackItem>\n            <TextContent>\n              <Title headingLevel=\"h4\" size=\"xl\">\n                Add roles\n              </Title>\n              <Text>{description || 'Select one or more roles to add to this group.'}</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup fieldId=\"select-role\">\n              <Card>\n                <RolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetRoles;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport global_palette_red_100 from '@patternfly/react-tokens/dist/js/global_palette_red_100';\n\nconst GroupNameErrorState = ({ setHideFooter }) => {\n  useEffect(() => {\n    setHideFooter(true);\n    return () => {\n      setHideFooter(false);\n    };\n  });\n\n  return (\n    <EmptyState variant={EmptyStateVariant.small}>\n      <EmptyStateIcon color={global_palette_red_100.value} icon={ExclamationCircleIcon} />\n      <Title headingLevel=\"h4\">Group name already taken</Title>\n      <EmptyStateBody>Please return to Step 1: Group information and choose a&nbsp;unique name for your group.</EmptyStateBody>\n      <Button variant=\"primary\" onClick={() => document.getElementsByClassName('pf-c-wizard__nav-link')[0].click()}>\n        Return to Step 1\n      </Button>\n    </EmptyState>\n  );\n};\n\nGroupNameErrorState.propTypes = {\n  setHideFooter: PropTypes.func,\n};\n\nexport default GroupNameErrorState;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\nimport { WarningModal } from '../../common/warningModal';\nimport GroupNameErrorState from './group-name-error-state';\nimport '../../common/hideWizard.scss';\n\nconst AddGroupWizard = ({ addNotification, addGroup, postMethod, closeUrl }) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [formData, setValues] = useState({});\n  const [isGroupInfoValid, setIsGroupInfoValid] = useState(false);\n  const [hideFooter, setHideFooter] = useState(false);\n  const [isValidating, setIsValidating] = useState(false);\n\n  const history = useHistory();\n\n  const handleChange = (data) => {\n    setValues({ ...formData, ...data });\n  };\n\n  const steps = [\n    {\n      name: 'Name and description',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid, isGroupInfoValid, isValidating, setIsValidating),\n      enableNext: isGroupInfoValid && !isValidating,\n    },\n    {\n      name: 'Add roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles }),\n      canJumpTo: isGroupInfoValid && !isValidating,\n    },\n    { name: 'Add members', component: new SetUsers({ formData, selectedUsers, setSelectedUsers }), canJumpTo: isGroupInfoValid && !isValidating },\n    {\n      name: 'Review details',\n      component: isGroupInfoValid ? (\n        new SummaryContent({ values: formData, selectedUsers, selectedRoles, setHideFooter })\n      ) : (\n        <GroupNameErrorState setHideFooter={setHideFooter} />\n      ),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid && !isValidating,\n      canJumpTo: isGroupInfoValid && !isValidating,\n    },\n  ];\n\n  const onSubmit = async () => {\n    const user_data = {\n      ...formData,\n      user_list: selectedUsers ? selectedUsers.map((user) => ({ username: user.label })) : undefined,\n      roles_list: selectedRoles ? selectedRoles.map((role) => role.uuid) : undefined,\n    };\n    const response = await addGroup(user_data);\n    if (response?.value?.error === true) {\n      setIsGroupInfoValid(false);\n    } else {\n      postMethod();\n      addNotification({\n        variant: 'success',\n        title: 'Success adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was added successfully.',\n      });\n      history.push(closeUrl);\n    }\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding group was canceled by the user.',\n    });\n    history.push('/groups');\n  };\n\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Wizard\n        className={cancelWarningVisible && 'ins-m-wizard__hidden'}\n        title=\"Create group\"\n        description=\"To give users access permissions, create a group and add roles and members to it.\"\n        isOpen\n        onClose={() => {\n          if (Object.values(formData).filter(Boolean).length > 0 || selectedRoles.length > 0 || selectedUsers.length > 0) {\n            setCancelWarningVisible(true);\n          } else {\n            onCancel();\n          }\n        }}\n        onSave={onSubmit}\n        steps={steps}\n        footer={hideFooter ? <div /> : undefined}\n      />\n      <WarningModal type=\"group\" isOpen={cancelWarningVisible} onModalCancel={() => setCancelWarningVisible(false)} onConfirmCancel={onCancel} />\n    </React.Fragment>\n  );\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined,\n};\n\nAddGroupWizard.propTypes = {\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n};\n\nconst mapStateToProps = ({\n  roleReducer: {\n    roles: { meta },\n    filterValue,\n    isLoading,\n  },\n}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      addGroup,\n      fetchGroup,\n      fetchRoles,\n      fetchUsers,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard);\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components';\nimport { Modal, ModalVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nconst EditGroupModal = ({ addNotification, updateGroup, postMethod, closeUrl, isOpen, group, onClose }) => {\n  const [selectedGroup, setSelectedGroup] = useState(undefined);\n\n  const history = useHistory();\n  const match = useRouteMatch('/groups/edit/:id');\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    match &&\n      fetchGroup(match.params.id)\n        .payload.then((data) => setGroupData(data))\n        .catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [group]);\n\n  const onSubmit = (data) => {\n    const user_data = { ...data };\n    postMethod\n      ? updateGroup(user_data)\n          .then(() => postMethod())\n          .then(history.push(closeUrl))\n      : updateGroup(user_data).then(() => history.push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      dismissable: false,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was canceled by the user.' : 'Adding group was canceled by the user.',\n    });\n    onClose();\n    history.push(closeUrl);\n  };\n\n  const schema = {\n    fields: [\n      {\n        name: 'name',\n        label: 'Name',\n        component: componentTypes.TEXT_FIELD,\n        validate: [\n          {\n            type: validatorTypes.REQUIRED,\n          },\n        ],\n      },\n      {\n        name: 'description',\n        label: 'Description',\n        component: componentTypes.TEXTAREA,\n      },\n    ],\n  };\n\n  return (\n    <Modal variant={ModalVariant.medium} title=\"Edit group's information\" isOpen={isOpen} onClose={onCancel}>\n      {selectedGroup ? (\n        <FormRenderer\n          schema={schema}\n          schemaType=\"mozilla\"\n          onCancel={onCancel}\n          onSubmit={onSubmit}\n          formContainer=\"modal\"\n          initialValues={{ ...selectedGroup }}\n        />\n      ) : (\n        <Skeleton />\n      )}\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null,\n};\n\nEditGroupModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n  isOpen: PropTypes.bool,\n  group: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      updateGroup,\n      fetchGroup,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button, Checkbox, Modal, ModalVariant, Text, TextContent } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\nimport './remove-group-modal.scss';\n\nconst RemoveGroupModal = ({ removeGroups, group, isLoading, fetchGroup, groupsUuid, isModalOpen, postMethod, closeUrl }) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const history = useHistory();\n\n  const [checked, setChecked] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids)\n      .then(() => postMethod(uuids))\n      .then(history.push(closeUrl));\n  };\n\n  const onCancel = () => history.goBack();\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      variant={ModalVariant.small}\n      title={\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n          &nbsp; {multipleGroups ? 'Delete groups?' : 'Delete group?'}\n        </Text>\n      }\n      onClose={onCancel}\n      actions={[\n        <Button key=\"submit\" isDisabled={!checked} variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {multipleGroups ? 'Delete groups' : 'Delete group'}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        {multipleGroups ? (\n          <Text>\n            Deleting these <b>{groupsUuid.length}</b> groups removes all roles from the members inside the group.\n          </Text>\n        ) : isLoading ? (\n          <FormItemLoader />\n        ) : (\n          <Text>\n            Deleting the <b>{group.name}</b> group removes all roles from the members inside the group.\n          </Text>\n        )}\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={checked}\n        onChange={() => setChecked(!checked)}\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  closeUrl: '/groups',\n};\n\nRemoveGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  closeUrl: PropTypes.string,\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup } }) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n      removeGroups,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal);\n","import React, { Fragment, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Popover } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst DefaultPlatformPopover = ({ uuid }) => {\n  const [isPopoverVisible, setPopoverVisible] = useState(false);\n  const popoverRootRef = useRef(null);\n\n  return (\n    <span ref={popoverRootRef} key={`${uuid}-popover`} id=\"default-group-popover\">\n      <Popover\n        zIndex=\"110\"\n        position=\"right\"\n        isVisible={isPopoverVisible}\n        shouldClose={() => setPopoverVisible(false)}\n        hideOnOutsideClick\n        bodyContent=\"This group contains the roles that all users in your organization inherit by default.\"\n        appendTo={popoverRootRef.current}\n      >\n        <OutlinedQuestionCircleIcon\n          onClick={() => setPopoverVisible(!isPopoverVisible)}\n          className={classNames('pf-c-question-circle-icon', { 'icon-active': isPopoverVisible })}\n        />\n      </Popover>\n    </span>\n  );\n};\n\nDefaultPlatformPopover.propTypes = {\n  uuid: PropTypes.string.isRequired,\n};\n\nexport const createRows = (data, opened, selectedRows = []) => {\n  return data.reduce(\n    (acc, { uuid, name, roleCount, principalCount, modified, platform_default: isPlatformDefault }) => [\n      ...acc,\n      {\n        uuid,\n        isPlatformDefault,\n        cells: [\n          <Fragment key={uuid}>\n            <div className=\"pf-m-inline-flex\">\n              <Link key={`${uuid}-link`} to={`/groups/detail/${uuid}`}>\n                {name}\n              </Link>\n              {isPlatformDefault && <DefaultPlatformPopover uuid={uuid} />}\n            </div>\n          </Fragment>,\n          roleCount,\n          principalCount,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type=\"relative\" />\n          </Fragment>,\n        ],\n        selected: Boolean(selectedRows && selectedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems, isHeader }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className={isHeader ? `ins-rbac-page-header__tabs` : ''} activeKey={activeTab ? activeTab.eventKey : 0} onSelect={handleTabClick}>\n      {tabItems.map((item) => (\n        <Tab title={item.title} key={item.eventKey} eventKey={item.eventKey} name={item.name} />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool,\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\n\nexport const createRows = (data, _opened, checkedRows = []) => {\n  return data.reduce(\n    (acc, { is_active: isActive, username, email, first_name: firstName, last_name: lastName }) => [\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [\n          {\n            title: <Label color={isActive && 'green'}>{isActive ? 'Active' : 'Inactive'}</Label>,\n            props: {\n              data: { isActive },\n            },\n          },\n          username,\n          email,\n          lastName,\n          firstName,\n        ],\n        selected: checkedRows.find((row) => row.uuid === username),\n      },\n    ],\n    []\n  );\n};\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant, StackItem, Stack, TextContent } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, addMembersToGroup, fetchMembersForGroup } from '../../../redux/actions/group-actions';\nimport { CompactUsersList } from '../add-group/users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchMembersForGroup,\n}) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const onSubmit = () => {\n    const userList = selectedUsers.map((user) => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        dismissDelay: 8000,\n        dismissable: false,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`,\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchMembersForGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      dismissable: false,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was canceled by the user.`,\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members\"\n      variant={ModalVariant.medium}\n      isOpen\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={selectedUsers.length === 0} variant=\"primary\" onClick={onSubmit}>\n          Add to group\n        </Button>,\n        <Button id=\"add-groups-cancel\" ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <ActiveUser description=\"These are all of the users in your Red Hat organization. To manage users, go to your\" />\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} />\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: [],\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func,\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchMembersForGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      addGroup,\n      addMembersToGroup,\n      fetchMembersForGroup,\n    },\n    dispatch\n  );\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","/* eslint-disable camelcase */\nimport { nowrap } from '@patternfly/react-table';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, Route, useHistory, useParams } from 'react-router-dom';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchMembersForGroup, removeMembersFromGroup } from '../../../redux/actions/group-actions';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport { routes as paths } from '../../../../package.json';\n\nconst columns = [\n  { title: 'Status', transforms: [nowrap] },\n  { title: 'Username' },\n  { title: 'Email' },\n  { title: 'Last name' },\n  { title: 'First name' },\n];\n\nconst selector = ({ groupReducer: { groups, selectedGroup } }) => ({\n  principals: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  userIdentity: groups.identity,\n  groupName: selectedGroup.name,\n  platform_default: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading,\n});\n\nconst removeModalText = (name, group, plural) =>\n  plural ? (\n    <p>\n      These <b> {`${name}`}</b> members will lose all the roles associated with the <b>{`${group}`}</b> group.\n    </p>\n  ) : (\n    <p>\n      <b>{`${name}`}</b> will lose all the roles associated with the <b> {`${group}`}</b> group.\n    </p>\n  );\n\nconst GroupPrincipals = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedPrincipals, setSelectedPrincipals] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  const { uuid } = useParams();\n  const { principals, pagination, groupName, userIdentity, isLoading, platform_default } = useSelector(selector, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options = pagination) => {\n    dispatch(fetchMembersForGroup(uuid, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(uuid, userNames)).then(() => {\n      setSelectedPrincipals([]);\n      fetchData(undefined, { ...pagination, offset: 0 });\n    });\n  };\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin)\n      ? null\n      : [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, principal) => {\n              setConfirmDelete(() => () => removeMembers([principal.username.title]));\n              setDeleteInfo({\n                title: 'Remove member?',\n                text: removeModalText(principal.username.title, groupName, false),\n                confirmButtonLabel: 'Remove member',\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-members']}\n        render={(args) => <AddGroupMembers fetchData={fetchData} closeUrl={`/groups/detail/${uuid}/members`} {...args} />}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link to={`/groups/detail/${uuid}/members/add_members`} key=\"remove-from-group\" className=\"pf-m-visible-on-md\">\n            <Button variant=\"primary\" aria-label=\"Add member\">\n              Add member\n            </Button>\n          </Link>,\n          {\n            label: 'Add member',\n            props: {\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/members/add_members`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleMembersSelected = selectedPrincipals.length > 1;\n              const removeText = multipleMembersSelected ? 'Remove members?' : 'Remove member?';\n              setConfirmDelete(() => () => removeMembers(selectedPrincipals.map((user) => user.uuid)));\n              setDeleteInfo({\n                title: removeText,\n                confirmButtonLabel: removeText,\n                text: removeModalText(\n                  multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].uuid,\n                  groupName,\n                  multipleMembersSelected\n                ),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        isOpen={showRemoveModal}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        }}\n      />\n      <Section type=\"content\" id={'tab-principals'}>\n        {platform_default ? (\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={TextVariants.h1}>All users in this organization are members of this group.</Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card>\n        ) : (\n          <TableToolbarView\n            data={(principals || []).map((user) => ({ ...user, uuid: user.username }))}\n            isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n            createRows={createRows}\n            columns={columns}\n            routes={routes}\n            actionResolver={actionResolver}\n            filterPlaceholder=\"username\"\n            titlePlural=\"members\"\n            titleSingular=\"member\"\n            ouiaId=\"members-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={({ limit, offset, name }) => fetchData(name, { limit, offset })}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            checkedRows={selectedPrincipals}\n            isLoading={isLoading}\n            rowWrapper={UsersRow}\n            setCheckedItems={setCheckedPrincipals}\n            toolbarButtons={toolbarButtons}\n            emptyProps={{ title: 'There are no members in this group', description: ['Add a user to configure user access.', ''] }}\n          />\n        )}\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default GroupPrincipals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  return (\n    <RemoveModal\n      text={\n        <TextContent>\n          <Text>\n            Once you edit the <b>Default access</b> group, the system will no longer update it with new default access roles. The group name will\n            change to <b>Custom default access</b>.\n          </Text>\n        </TextContent>\n      }\n      title={'Warning'}\n      withCheckbox\n      isOpen={isOpen}\n      confirmButtonLabel={'Continue'}\n      onClose={onClose}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DefaultGroupChange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Modal, ModalVariant, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport DefaultGroupChange from './default-group-change-modal';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  name,\n  isDefault,\n  isChanged,\n  addNotification,\n  onDefaultGroupChanged,\n  fetchRolesForGroup,\n}) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(true);\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding roles to group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding roles to group was canceled by the user.',\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map((role) => role.uuid);\n    addRolesToGroup(uuid, rolesList, fetchRolesForGroup);\n    if (isDefault && !isChanged) {\n      onDefaultGroupChanged(true);\n    }\n\n    return push(closeUrl);\n  };\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange isOpen={showConfirmModal} onClose={onCancel} onSubmit={() => setShowConfirmModal(false)} />\n  ) : (\n    <Modal\n      title=\"Add roles to group\"\n      variant={ModalVariant.medium}\n      isOpen\n      onClose={() => {\n        onCancel();\n        setShowConfirmModal(true);\n      }}\n      actions={[\n        <Button\n          aria-label=\"Save\"\n          ouiaId=\"primary-save-button\"\n          variant=\"primary\"\n          key=\"confirm\"\n          isDisabled={selectedRoles.length === 0}\n          onClick={onSubmit}\n        >\n          Add to group\n        </Button>,\n        <Button aria-label=\"Cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" key=\"cancel\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        {title && (\n          <StackItem>\n            <Title headingLevel=\"h4\" size=\"xl\">\n              {title}\n            </Title>\n          </StackItem>\n        )}\n        <StackItem>\n          <TextContent>\n            <Text component={TextVariants.p}>\n              This role list has been filtered to only show roles that are not currently in <b> {name}</b>.\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </Card>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.any,\n    goBack: PropTypes.func.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  addNotification: PropTypes.func,\n  onDefaultGroupChanged: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n};\n\nexport default AddGroupRoles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(true);\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange\n      isOpen={showConfirmModal && isOpen}\n      onClose={() => {\n        onClose();\n      }}\n      onSubmit={() => {\n        setShowConfirmModal(false);\n      }}\n    />\n  ) : (\n    <RemoveModal\n      text={text}\n      title={title}\n      isOpen={isOpen}\n      confirmButtonLabel={confirmButtonLabel}\n      onClose={() => {\n        onClose();\n        setShowConfirmModal(true);\n      }}\n      onSubmit={() => {\n        onSubmit();\n      }}\n    />\n  );\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.node,\n  title: PropTypes.node,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false,\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup, fetchAddRolesForGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport RemoveRole from './remove-role-modal';\nimport { routes as paths } from '../../../../package.json';\nimport './group-roles.scss';\n\nconst columns = [{ title: 'Name', orderBy: 'name' }, { title: 'Description' }, { title: 'Last modified' }];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description, modified }) => [\n          ...acc,\n          {\n            uuid,\n            title: display_name || name,\n            cells: [\n              <Fragment key={`${uuid}-name`}>\n                <Link to={`/groups/detail/${groupUuid}/roles/detail/${uuid}`}>{display_name || name}</Link>\n              </Fragment>,\n              description,\n              <Fragment key={`${uuid}-modified`}>\n                <DateFormat date={modified} type=\"relative\" />\n              </Fragment>,\n            ],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst addRoleButton = (isDisabled) => {\n  const addRoleButtonContent = (\n    <Button variant=\"primary\" aria-label=\"Add role\" isAriaDisabled={isDisabled}>\n      Add role\n    </Button>\n  );\n\n  return isDisabled ? (\n    <Tooltip content=\"All available roles have already been added to the group\">{addRoleButtonContent}</Tooltip>\n  ) : (\n    addRoleButtonContent\n  );\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: {\n    params: { uuid },\n  },\n  userIdentity,\n  name,\n  isDefault,\n  isChanged,\n  onDefaultGroupChanged,\n  fetchAddRolesForGroup,\n  disableAddRoles,\n  addNotification,\n}) => {\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [selectedAddRoles, setSelectedAddRoles] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n\n  useEffect(() => {\n    fetchAddRolesForGroup(uuid);\n  }, [roles]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{name}</b> group will lose the permissions in {plural ? 'these' : 'the'}\n      <b> {role}</b> role{plural ? `s` : ''}.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, role) => {\n              setConfirmDelete(() => () => removeRoles(uuid, [role.uuid], () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)));\n              setDeleteInfo({\n                title: 'Remove role?',\n                confirmButtonLabel: 'Remove role',\n                text: removeModalText(name, role.title, false),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-roles']}\n        render={(args) => (\n          <AddGroupRoles\n            fetchData={fetchRoles}\n            fetchRolesForGroup={() => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)}\n            selectedRoles={selectedAddRoles}\n            setSelectedRoles={setSelectedAddRoles}\n            closeUrl={`/groups/detail/${uuid}/roles`}\n            addRolesToGroup={addRoles}\n            name={name}\n            isDefault={isDefault}\n            isChanged={isChanged}\n            addNotification={addNotification}\n            onDefaultGroupChanged={onDefaultGroupChanged}\n            {...args}\n          />\n        )}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link\n            className={`pf-m-visible-on-md ins-c-button__add-role${disableAddRoles && '-disabled'}`}\n            to={`/groups/detail/${uuid}/roles/add_roles`}\n            key=\"add-to-group\"\n          >\n            {addRoleButton(disableAddRoles)}\n          </Link>,\n          {\n            label: 'Add role',\n            props: {\n              isDisabled: disableAddRoles,\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/roles/add_roles`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedRoles || !selectedRoles.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleRolesSelected = selectedRoles.length > 1;\n              setConfirmDelete(() => () =>\n                removeRoles(\n                  uuid,\n                  selectedRoles.map((role) => role.uuid),\n                  () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)\n                )\n              );\n              setDeleteInfo({\n                title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n                confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n                text: removeModalText(\n                  name,\n                  multipleRolesSelected ? selectedRoles.length : roles.find((role) => role.uuid === selectedRoles[0].uuid).name,\n                  multipleRolesSelected\n                ),\n              });\n\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        isOpen={showRemoveModal}\n        isChanged={isChanged}\n        isDefault={isDefault}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isDefault && !isChanged);\n        }}\n      />\n\n      <Section type=\"content\" id={'tab-roles'}>\n        <TableToolbarView\n          columns={columns}\n          isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n          createRows={(...props) => createRows(uuid, ...props)}\n          data={roles}\n          filterValue={filterValue}\n          fetchData={(config) => {\n            fetchRolesForGroup(config)(uuid);\n          }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedRoles}\n          setCheckedItems={setCheckedItems}\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          routes={routes}\n          ouiaId=\"roles-table\"\n          emptyProps={{ title: 'There are no roles in this group', description: ['Add a role to configure user access.', ''] }}\n          filters={[\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue },\n          ]}\n        />\n      </Section>\n    </React.Fragment>\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups } }) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name,\n    isDefault: selectedGroup.platform_default,\n    isChanged: !selectedGroup.system,\n    disableAddRoles: !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options)),\n    fetchAddRolesForGroup: (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {})),\n    addNotification: (...props) => dispatch(addNotification(...props)),\n    fetchGroup: (apiProps) => dispatch(fetchGroup(apiProps)),\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  fetchAddRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool,\n    }),\n  }),\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  onDefaultGroupChanged: PropTypes.func,\n  disableAddRoles: PropTypes.bool.isRequired,\n  addNotification: PropTypes.func,\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, Link, useLocation } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup, fetchGroups } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Alert, AlertActionCloseButton, Popover, Split, SplitItem, DropdownItem, Dropdown, KebabToggle } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { routes } from '../../../package.json';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport './group.scss';\n\nconst Group = ({\n  match: {\n    params: { uuid },\n  },\n  group,\n  fetchGroup,\n  isFetching,\n  onDelete,\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'Groups', to: '/groups' },\n    { title: isFetching ? undefined : group.name, isActive: true },\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` },\n  ];\n\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo] = useState(false);\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchData(uuid);\n    insights.chrome.appObjectId(uuid);\n    return () => insights.chrome.appObjectId(undefined);\n  }, []);\n\n  const defaultGroupChangedIcon = (name) => (\n    <div style={{ display: 'inline-flex' }}>\n      {name}\n      <div className=\"pf-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={\n            <div>\n              Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n              name has changed to <b>Custom default access</b>.\n            </div>\n          }\n        >\n          <InfoCircleIcon className=\"ins-c-rbac__default-group-info-icon\" />\n        </Popover>\n      </div>\n    </div>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <Link\n          to={(location.pathname.includes('members') ? routes['group-detail-members-edit'] : routes['group-detail-roles-edit']).replace(\n            ':uuid',\n            uuid\n          )}\n        >\n          Edit\n        </Link>\n      }\n      key=\"edit-group\"\n    />,\n    <DropdownItem\n      component={\n        <Link\n          onClick={onDelete}\n          to={() =>\n            (location.pathname.includes('members') ? routes['group-detail-members-remove'] : routes['group-detail-roles-remove']).replace(\n              ':uuid',\n              uuid\n            )\n          }\n        >\n          Delete\n        </Link>\n      }\n      className=\"ins-c-group__action\"\n      key=\"delete-group\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={breadcrumbsList()}>\n        <Split hasGutter>\n          <SplitItem isFilled>\n            <TopToolbarTitle\n              title={\n                !isFetching && group ? (\n                  <Fragment>{group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name}</Fragment>\n                ) : undefined\n              }\n              description={!isFetching && group ? group.description : undefined}\n            />\n          </SplitItem>\n          <SplitItem>\n            {group.platform_default ? null : (\n              <Dropdown\n                ouiaId=\"group-title-actions-dropdown\"\n                toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"group-actions-dropdown\" />}\n                isOpen={isDropdownOpen}\n                isPlain\n                position=\"right\"\n                dropdownItems={dropdownItems}\n              />\n            )}\n          </SplitItem>\n        </Split>\n        {showDefaultGroupChangedInfo ? (\n          <Alert\n            variant=\"info\"\n            isInline\n            title=\"Default access group has changed\"\n            action={<AlertActionCloseButton onClose={() => setShowDefaultGroupChangedInfo(false)} />}\n            className=\"pf-u-mb-lg pf-u-mt-sm\"\n          >\n            Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n            name has changed to <b>Custom default access</b>.\n          </Alert>\n        ) : null}\n      </TopToolbar>\n      <AppTabs isHeader tabItems={tabItems} />\n      <Route\n        path={[routes['group-detail-roles-remove'], routes['group-detail-members-remove']]}\n        render={(props) => (\n          <RemoveGroup\n            {...props}\n            postMethod={() => {\n              dispatch(fetchGroups());\n            }}\n            isModalOpen\n            groupsUuid={[group]}\n          />\n        )}\n      />\n      <Route\n        path={[routes['group-detail-roles-edit'], routes['group-detail-members-edit']]}\n        render={(props) => (\n          <EditGroup\n            {...props}\n            isOpen\n            group={group}\n            closeUrl={`group/detail/${uuid}`}\n            postMethod={() => {\n              fetchData(uuid);\n            }}\n          />\n        )}\n      />\n      <Route\n        path={routes['group-detail-roles']}\n        render={(props) => <GroupRoles {...props} onDefaultGroupChanged={setShowDefaultGroupChangedInfo} />}\n      />\n      <Route path={routes['group-detail-members']} component={GroupPrincipals} />\n      <Route render={() => <Redirect to={`/groups/detail/${uuid}/roles`} />} />\n      {!group && <ListLoader />}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isRecordLoading, isRecordRolesLoading } }) => ({\n  group: selectedGroup,\n  isFetching: isRecordLoading || isRecordRolesLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n    },\n    dispatch\n  );\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    platform_default: PropTypes.bool,\n    system: PropTypes.bool,\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nGroup.defaultProps = {\n  isFetching: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst GroupRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={classnames(className, {\n        'ins-c-rbac__group-default': row.isPlatformDefault,\n      })}\n      row={row}\n      {...props}\n    />\n  );\n};\n\nGroupRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    isPlatformDefault: PropTypes.bool,\n  }),\n  className: PropTypes.string,\n};\n\nexport default GroupRowWrapper;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups, fetchSystemGroup } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\nimport GroupRowWrapper from './group-row-wrapper';\nimport { routes as paths } from '../../../package.json';\nimport './groups.scss';\nimport PageActionRoute from '../common/page-action-route';\n\nconst columns = [\n  { title: 'Name', key: 'name', transforms: [sortable] },\n  { title: 'Roles' },\n  { title: 'Members' },\n  { title: 'Last modified', key: 'modified', transforms: [sortable] },\n];\n\nconst Groups = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [removeGroupsList, setRemoveGroupsList] = useState([]);\n\n  const dispatch = useDispatch();\n  const { groups, pagination, userIdentity, isLoading } = useSelector(\n    ({ groupReducer: { groups, isLoading, systemGroup } }) => ({\n      groups: [\n        ...(systemGroup?.name?.match(new RegExp(filterValue, 'i')) ? [systemGroup] : []),\n        ...(groups?.data?.filter(({ platform_default } = {}) => !platform_default) || []),\n      ],\n      pagination: groups.meta,\n      userIdentity: groups.identity,\n      isLoading,\n      systemGroup,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'groups', secondaryNav: true });\n    dispatch(fetchGroups({ ...pagination, name: filterValue }));\n    dispatch(fetchSystemGroup(filterValue));\n  }, []);\n\n  const history = useHistory();\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) =>\n      newSelection(rows)\n        .filter(({ platform_default: isPlatformDefault }) => !isPlatformDefault)\n        .map(({ uuid, name }) => ({ uuid, label: name }))\n    );\n  };\n\n  const routes = () => (\n    <Fragment>\n      <Route exact path={paths['add-group']}>\n        <AddGroupWizard\n          postMethod={(config) => {\n            dispatch(fetchGroups(config));\n            setFilterValue('');\n          }}\n        />\n      </Route>\n      <Route exact path={paths['group-edit'].path}>\n        <EditGroup\n          postMethod={(config) => {\n            dispatch(fetchGroups(config));\n            setFilterValue('');\n          }}\n          isOpen\n        />\n      </Route>\n      <Route exact path={paths['remove-group']}>\n        <RemoveGroup\n          postMethod={(ids) => {\n            dispatch(fetchGroups());\n            setSelectedRows(selectedRows.filter((row) => !ids.includes(row.uuid)));\n            setFilterValue('');\n          }}\n          isModalOpen\n          groupsUuid={removeGroupsList}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const actionResolver = ({ isPlatformDefault }) =>\n    isPlatformDefault || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin)\n      ? null\n      : [\n          {\n            title: 'Edit',\n            onClick: (_event, _rowId, group) => {\n              history.push(`/groups/edit/${group.uuid}`);\n            },\n          },\n          {\n            title: 'Delete',\n            onClick: (_event, _rowId, group) => {\n              setRemoveGroupsList([group]);\n              history.push(paths['remove-group']);\n            },\n          },\n        ];\n\n  // TODO check this later\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link to={paths['add-group']} key=\"add-group\" className=\"pf-m-visible-on-md\">\n            <Button ouiaId=\"create-group-button\" variant=\"primary\" aria-label=\"Create group\">\n              Create group\n            </Button>\n          </Link>,\n          {\n            label: 'Create group',\n            props: {\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(paths['add-group']);\n            },\n          },\n          {\n            label: 'Edit',\n            props: {\n              isDisabled: !(selectedRows.length === 1),\n            },\n            onClick: () => history.push(`/groups/edit/${selectedRows[0].uuid}`),\n          },\n          {\n            label: 'Delete',\n            props: {\n              isDisabled: !selectedRows.length > 0,\n            },\n            onClick: () => {\n              setRemoveGroupsList(selectedRows);\n              history.push(paths['remove-group']);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const renderGroupsList = () => (\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottom>\n          <TopToolbarTitle title=\"Groups\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={'tab-groups'}>\n          <TableToolbarView\n            data={groups.map((group) => (group.platform_default ? { ...group, principalCount: 'All' } : group))}\n            createRows={createRows}\n            columns={columns}\n            isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n            checkedRows={selectedRows}\n            setCheckedItems={setCheckedItems}\n            routes={routes}\n            actionResolver={actionResolver}\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            ouiaId=\"groups-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={(config) => dispatch(fetchGroups(config))}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            toolbarButtons={toolbarButtons}\n            isLoading={isLoading}\n            filterPlaceholder=\"name\"\n            rowWrapper={GroupRowWrapper}\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n  return (\n    <Switch>\n      <PageActionRoute pageAction=\"role-detail\" path={paths['group-detail-role-detail']} render={(props) => <Role {...props} />} />\n      <PageActionRoute\n        pageAction=\"group-detail\"\n        path={paths['group-detail']}\n        render={(props) => <Group {...props} onDelete={() => setFilterValue('')} />}\n      />\n      <PageActionRoute pageAction=\"group-list\" path={paths.groups} render={() => renderGroupsList()} />\n    </Switch>\n  );\n};\n\nexport default Groups;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./hideWizard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./hideWizard.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./hideWizard.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};"],"sourceRoot":""}
{"version":3,"sources":["webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.scss","webpack://insights-rbac-frontend/./src/smart-components/group/group.scss","webpack://insights-rbac-frontend/./src/smart-components/group/groups.scss","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.scss","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.scss","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/schema.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/roles-list.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/set-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/set-users.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/summary-content.js","webpack://insights-rbac-frontend/./src/smart-components/group/validators.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/add-group-wizard.js","webpack://insights-rbac-frontend/./src/smart-components/group/edit-group-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/group-table-helpers.js","webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/principal-table-helpers.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/add-group-members.js","webpack://insights-rbac-frontend/./src/smart-components/group/principal/principals.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/default-group-change-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/add-group-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/remove-role-modal.js","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.js","webpack://insights-rbac-frontend/./src/smart-components/group/group.js","webpack://insights-rbac-frontend/./src/smart-components/group/group-row-wrapper.js","webpack://insights-rbac-frontend/./src/smart-components/group/groups.js","webpack://insights-rbac-frontend/./src/smart-components/app-tabs/app-tabs.scss?033b","webpack://insights-rbac-frontend/./src/smart-components/group/group.scss?f07a","webpack://insights-rbac-frontend/./src/smart-components/group/groups.scss?9046","webpack://insights-rbac-frontend/./src/smart-components/group/remove-group-modal.scss?c04a","webpack://insights-rbac-frontend/./src/smart-components/group/role/group-roles.scss?7352"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","fields","component","name","isDynamic","inModal","showTitles","title","nextStep","componentTypes","label","isRequired","validate","type","validatorTypes","threshold","createRows","data","expanded","checkedRows","reduce","acc","uuid","display_name","description","cells","selected","Boolean","find","row","RolesList","roles","fetchRoles","isLoading","pagination","selectedRoles","canSort","setSelectedRoles","useState","filterValue","setFilterValue","columns","useRef","key","transforms","sortable","orderBy","current","useEffect","isSelectable","isCompact","borders","fetchData","config","mappedProps","ouiaId","setCheckedItems","newSelection","map","titlePlural","titleSingular","tableId","propTypes","history","PropTypes","goBack","searchFilter","limit","offset","count","defaultProps","defaultCompactSettings","connect","roleReducer","meta","dispatch","apiProps","fetchRolesWithPolicies","addNotification","ExcludedRolesList","selectedGroup","groupReducer","addRoles","defaultSettings","length","loaded","groupId","fetchAddRolesForGroup","propsFromState","propsFromDispatch","ownProps","SetRoles","props","input","useFieldApi","formOptions","useFormApi","getState","values","onChange","change","Fragment","Stack","hasGutter","StackItem","TextContent","Text","FormGroup","fieldId","SetUsers","selectedUsers","setSelectedUsers","Form","Card","SummaryContent","className","Grid","GridItem","md","TextVariants","role","index","groups","asyncValidator","groupName","idKey","undefined","fetchGroups","nameMatch","error","console","response","some","item","debouncedAsyncValidator","asyncDebounce","value","FormTemplate","showFormControls","Description","Content","rest","mapperExtension","onCancel","emptyCallback","nonEmptyCallback","setGroupData","formData","Object","keys","AddGroupWizard","postMethod","useDispatch","useHistory","cancelWarningVisible","setCancelWarningVisible","groupData","redirectToGroups","variant","dismissDelay","dismissable","validatorMapper","isOpen","onModalCancel","onConfirmCancel","schema","subscription","componentMapper","onSubmit","user_list","user","username","roles_list","addGroup","then","initialValues","EditGroupModal","updateGroup","closeUrl","group","onClose","setSelectedGroup","match","useRouteMatch","fetchGroup","params","payload","validateOnMount","skeleton","Skeleton","user_data","ModalFormTemplate","ModalProps","inputValue","bindActionCreators","RemoveGroupModal","removeGroups","groupsUuid","isModalOpen","checked","setChecked","multipleGroups","Modal","ModalVariant","actions","Button","isDisabled","onClick","uuids","Checkbox","isChecked","DefaultPlatformPopover","isPopoverVisible","setPopoverVisible","popoverRootRef","ref","Popover","zIndex","position","isVisible","shouldClose","hideOnOutsideClick","bodyContent","appendTo","classNames","opened","selectedRows","roleCount","principalCount","modified","isPlatformDefault","platform_default","Link","to","DateFormat","date","AppTabs","pathname","location","tabItems","isHeader","activeTab","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","Tab","withRouter","_opened","isActive","is_active","email","firstName","first_name","lastName","last_name","Label","color","AddGroupMembers","addMembersToGroup","fetchMembersForGroup","userList","users","nowrap","selector","principals","members","userIdentity","identity","removeModalText","plural","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","useParams","useSelector","shallowEqual","usernames","options","removeMembers","userNames","removeMembersFromGroup","RemoveModal","text","confirmButtonLabel","Section","CardBody","Bullseye","is_org_admin","routes","Route","path","paths","render","args","actionResolver","_rowId","principal","filterPlaceholder","rowWrapper","UsersRow","toolbarButtons","aria-label","multipleMembersSelected","removeText","emptyProps","DefaultGroupChange","withCheckbox","AddGroupRoles","addRolesToGroup","isDefault","isChanged","onDefaultGroupChanged","fetchRolesForGroup","showConfirmModal","setShowConfirmModal","rolesList","Title","headingLevel","size","RemoveRoles","groupUuid","GroupRoles","removeRoles","disableAddRoles","descriptionValue","setDescriptionValue","selectedAddRoles","setSelectedAddRoles","addRoleButtonContent","isAriaDisabled","Tooltip","content","multipleRolesSelected","filters","reloadWrapper","event","callback","system","removeRolesFromGroup","Group","isFetching","onDelete","isDropdownOpen","setDropdownOpen","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","useLocation","insights","chrome","appObjectId","dropdownItems","DropdownItem","replace","breadcrumbs","Split","SplitItem","isFilled","style","display","Dropdown","toggle","KebabToggle","onToggle","isPlain","Alert","isInline","action","AlertActionCloseButton","GroupPrincipals","Redirect","isRecordLoading","isRecordRolesLoading","GroupRowWrapper","RowWrapper","classnames","setSelectedRows","removeGroupsList","setRemoveGroupsList","systemGroup","RegExp","filter","appNavClick","secondaryNav","fetchSystemGroup","rows","exact","ids","Switch","pageAction","paddingBottom","api","__esModule","default","update","locals","hot","invalidate","oldLocals","accept","a","b","p","isEqualLocals","dispose"],"mappings":"qHAEAA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,6NAA8N,KAEvPD,EAAOH,QAAUA,G,iBCJjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,6IAA8I,KAEvKD,EAAOH,QAAUA,G,iBCJjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,mlBAAolB,KAE7mBD,EAAOH,QAAUA,G,iBCJjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,4HAA6H,KAEtJD,EAAOH,QAAUA,G,gBCJjBA,EADkC,EAAQ,MAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,GAAI,8HAA+H,KAExJD,EAAOH,QAAUA,G,uVCHjB,SACEK,OAAQ,CACN,CACEC,UAAW,SACXC,KAAM,SACNC,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,MAAO,eACPN,OAAQ,CACN,CACEE,KAAM,uBACNI,MAAO,uBACPC,SAAU,YACVP,OAAQ,CACN,CACEC,UAAWO,eACXN,KAAM,aACNO,MAAO,aACPC,YAAY,EACZC,SAAU,CACR,CAAEC,KAAM,uBACR,CACEA,KAAMC,gBAIZ,CACEZ,UAAWO,aACXN,KAAM,oBACNU,KAAM,OACNH,MAAO,oBACPE,SAAU,CACR,CACEC,KAAMC,eACNC,UAAW,SAMrB,CACEZ,KAAM,YACNK,SAAU,YACVD,MAAO,YACPN,OAAQ,CACN,CACEC,UAAW,YACXC,KAAM,gBAIZ,CACEA,KAAM,YACNK,SAAU,SACVD,MAAO,cACPN,OAAQ,CACN,CACEC,UAAW,YACXC,KAAM,gBAIZ,CACEA,KAAM,SACNI,MAAO,iBACPN,OAAQ,CACN,CACEC,UAAW,kBACXC,KAAM,yB,krBC7DpB,IAAMa,EAAa,SAACC,EAAMC,GAA+B,IAArBC,EAAqB,uDAAP,GAChD,OAAOF,EACHA,EAAKG,QACH,SAACC,EAAD,OAAQC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcpB,EAA5B,EAA4BA,KAAMqB,EAAlC,EAAkCA,YAAlC,oBACKH,GADL,CAEE,CACEC,OACAG,MAAO,CAACF,GAAgBpB,EAAMqB,GAC9BE,SAAUC,QAAQR,GAAeA,EAAYS,MAAK,SAACC,GAAD,OAASA,EAAIP,OAASA,WAG5E,IAEF,IAGAQ,EAAY,SAAC,GAA2F,IAAzFC,EAAyF,EAAzFA,MAAOC,EAAkF,EAAlFA,WAAYC,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAAuB,GACtEC,cAAS,IAD6D,WACrGC,EADqG,KACxFC,EADwF,KAE3FC,GAAYC,YAAO,CAAC,EAAD,CAChCnC,MAAO,OAAQoC,IAAK,gBAAoBP,EAAU,CAAEQ,WAAY,CAACC,aAAc,CAAEC,QAAS,SAC5F,CAAEvC,MAAO,iBAFHwC,QAeR,OAVAC,gBAAU,WACRhB,EAAW,CAAEc,QAAS,mBACrB,IASD,kBAAC,IAAD,CACEL,QAASA,EACTQ,cAAY,EACZC,WAAS,EACTC,SAAS,EACTnC,WAAYA,EACZC,KAAMc,EACNQ,YAAaA,EACba,UAAW,SAACC,GAAD,OAAYrB,GAAWsB,QAAYD,KAC9Cb,eAAgB,gBAAGrC,EAAH,EAAGA,KAAH,OAAcqC,EAAerC,IAC7C8B,UAAWA,EACXsB,OAAO,cACPrB,WAAYA,EACZf,YAAagB,EACbqB,gBArBoB,SAACC,GACvBpB,GAAiB,SAACN,GAChB,OAAO0B,EAAa1B,GAAO2B,KAAI,gBAAGpC,EAAH,EAAGA,KAAMnB,EAAT,EAASA,KAAT,MAA4B,CAAEmB,OAAMZ,MAApC,EAAeA,OAAqCP,UAoBnFwD,YAAY,QACZC,cAAc,OACdC,QAAQ,gBAoBd/B,EAAUgC,UAAY,CACpBC,QAASC,UAAgB,CACvBC,OAAQD,oBACRlE,KAAMkE,sBAERjC,MAAOiC,UACP/B,UAAW+B,SACXE,aAAcF,WACdhC,WAAYgC,oBACZ3B,iBAAkB2B,oBAClB7B,cAAe6B,UACf9B,WAAY8B,UAAgB,CAC1BG,MAAOH,sBACPI,OAAQJ,sBACRK,MAAOL,aAET5B,QAAS4B,UAGXlC,EAAUwC,aAAe,CACvBvC,MAAO,GACPG,WAAYqC,KACZnC,SAAS,GAiCX,SAAeoC,cAtES,SAAC,GAAD,QAAGC,YAAe1C,EAAlB,EAAkBA,MAAOE,EAAzB,EAAyBA,UAAzB,MAA4C,CAClEF,MAAOA,EAAMd,KACbiB,WAAYH,EAAM2C,KAClBzC,gBAGyB,SAAC0C,GAC1B,MAAO,CACL3C,WAAY,SAAC4C,GACXD,GAASE,SAAuBvB,QAAYsB,MAE9CE,gBAAiB,kBAAcH,EAASG,gBAAA,kBA2D5C,CAA4DhD,GACrD,IAAMiD,GAAoBP,cA/BJ,SAAC,GAAwC,IAAtBQ,EAAsB,EAAtCC,aAAgBD,cACxCjD,EAAQiD,EAAcE,SAASnD,MAErC,MAAO,CACLA,QACAG,WAAY8C,EAAcE,SAAShD,YAAvB,OAA0CiD,MAA1C,IAA2Dd,MAAOtC,GAASA,EAAMqD,SAC7FnD,WAAY+C,EAAcE,SAASG,OACnCC,QAASN,EAAc1D,SAIK,SAACqD,GAC/B,MAAO,CACL3C,WAAY,SAACsD,EAASV,GACpBD,GAASY,QAAsBD,EAASV,KAE1CE,gBAAiB,kBAAcH,EAASG,gBAAA,mBAIzB,SAACU,EAAgBC,EAAmBC,GACrD,kBACKA,GACAF,GACAC,GAHL,IAIErD,SAAS,EACTJ,WAAY,SAAC4C,GAAD,OAAca,EAAkBzD,WAAWwD,EAAeF,QAASV,QAKlDJ,CAAmE1C,GClI9F6D,G,SAAW,SAACC,GAAU,OACgBtD,cAAS,IADzB,WACnBH,EADmB,KACJE,EADI,KAElBwD,GAAUC,OAAYF,GAAtBC,MACFE,GAAcC,SAWpB,OATAhD,gBAAU,WACRX,EAAiB0D,EAAYE,WAAWC,OAAO,eAAiB,MAC/D,KAEHlD,gBAAU,WACR6C,EAAMM,SAAShE,GACf4D,EAAYK,OAAO,aAAcjE,KAChC,CAACA,IAGF,kBAAC,EAAAkE,SAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yDAGJ,kBAACF,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAWC,QAAQ,eACjB,kBAAC,EAAD,CAAWzE,cAAeA,EAAeE,iBAAkBA,UAQvEsD,EAAS7B,UAAY,CACnB3B,cAAe6B,UACf3B,iBAAkB2B,SAClBzD,MAAOyD,WACPxC,YAAawC,YAGf,U,gDCtCM6C,EAAW,SAACjB,GAAU,OACgBtD,cAAS,IADzB,WACnBwE,EADmB,KACJC,EADI,KAElBlB,GAAUC,OAAYF,GAAtBC,MACFE,GAAcC,SAWpB,OATAhD,gBAAU,WACR+D,EAAiBhB,EAAYE,WAAWC,OAAO,eAAiB,MAC/D,KAEHlD,gBAAU,WACR6C,EAAMM,SAASW,GACff,EAAYK,OAAO,aAAcU,KAChC,CAACA,IAGF,kBAAC,EAAAT,SAAD,KACE,kBAACW,EAAA,EAAD,KACE,kBAACV,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAYjF,YAAa,2FAG7B,kBAACgF,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAWC,QAAQ,eACjB,kBAACK,EAAA,EAAD,KACE,kBAAC,IAAD,CAAkBH,cAAeA,EAAeC,iBAAkBA,WAUlFF,EAAS/C,UAAY,CACnBgD,cAAe9C,UACf+C,iBAAkB/C,SAClBzD,MAAOyD,WACPxC,YAAawC,YAGf,W,4BC/CMkD,GAAiB,WACrB,IAD2B,GACPlB,SAMJC,WAAWC,OAJX/F,EAHW,EAGzB,cACqBqB,EAJI,EAIzB,qBACcsF,EALW,EAKzB,cACc3E,EANW,EAMzB,cAGF,OACE,kBAAC,EAAAkE,SAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,CAAWW,UAAU,uBACnB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMxG,UAAWqH,OAAiBJ,UAAU,yBAA5C,eAIF,kBAACE,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMxG,UAAWqH,OAAiBpH,KAGtC,kBAACiH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMxG,UAAWqH,OAAiBJ,UAAU,yBAA5C,sBAIF,kBAACE,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMxG,UAAWqH,OAAiB/F,KAGtC,kBAAC4F,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMxG,UAAWqH,OAAiBJ,UAAU,yBAA5C,UAIF,kBAACE,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMxG,UAAWqH,OACdpF,EAAcuB,KAAI,SAAC8D,EAAMC,GAAP,OACjB,kBAACf,EAAA,EAAD,CAAMS,UAAU,YAAYxE,IAAK8E,GAC9BD,EAAK9G,aAMhB,kBAAC0G,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMxG,UAAWqH,OAAiBJ,UAAU,yBAA5C,YAIF,kBAACE,GAAA,EAAD,CAAUC,GAAI,GACZ,kBAACZ,EAAA,EAAD,CAAMxG,UAAWqH,OACdT,EAAcpD,KAAI,SAAC8D,EAAMC,GAAP,OACjB,kBAACf,EAAA,EAAD,CAAMS,UAAU,YAAYxE,IAAK8E,GAC9BD,EAAK9G,mBAc9BwG,GAAepD,UAAY,CACzB3D,KAAM6D,WACNxC,YAAawC,WACb0D,OAAQ1D,WAGV,Y,0ECnFM2D,GAAc,iCAAG,WAAOC,EAAWC,EAAO7H,GAAzB,+EAChB4H,EADgB,8CAEZE,GAFY,YAKjBF,EAAUxC,OAAS,KALF,qBAMb,sCANa,wBASE2C,SAAY,CAAE5D,MAAO,GAAIC,OAAQ,EAAGjE,KAAMyH,EAAWI,UAAW,UAAhE,OAAiF,SAACC,GACvGC,QAAQD,MAAMA,MAVK,UASfE,EATe,SAcjBnI,EAAKmI,SAAH,UAAGA,EAAUlH,YAAb,aAAG,EAAgBmH,MAAK,SAACC,GAAD,OAAUA,EAAKR,KAAW7H,MAAMmI,SAAA,UAAAA,EAAUlH,YAAV,eAAgBmE,QAAS,GAdlE,qBAeb,+BAfa,qCAkBd0C,GAlBc,4CAAH,0DAqBPQ,IAA0BC,SAAc,SAACC,EAAOX,EAAO7H,GAAf,OAAsB2H,GAAea,EAAOX,EAAO7H,M,qkBCRxG,IAAMyI,GAAe,SAAC7C,GAAD,OAAW,kBAAC,KAAD,OAAqBA,EAArB,CAA4B8C,kBAAkB,MAExEC,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAYC,EAAf,0BAA0B,kBAACD,EAAYC,IAC3DF,GAAY7E,UAAY,CACtB8E,QAAS5E,4BAGJ,IAAM8E,GAAkB,CAC7BtH,YAAamH,GACb,YAAahD,EACb,YAAakB,GACb,kBAAmBK,IAGR6B,GAAW,SAACC,EAAeC,EAAkBC,GAAlC,OAAmD,SAACC,GAC1ED,EAAaC,GACTC,OAAOC,KAAKF,GAAU/D,OAAS,EACjC6D,GAAiB,GAEjBD,MAIEM,GAAiB,SAAC,GAAmB,IAAjBC,EAAiB,EAAjBA,WAClB5E,GAAW6E,mBACXzF,GAAU0F,kBAFyB,GAGenH,eAAS,GAHxB,WAGlCoH,EAHkC,KAGZC,EAHY,QAIPrH,cAAS,IAJF,WAIlCsH,EAJkC,KAIvBV,EAJuB,KAMnCW,EAAmB,WACvBlF,GACEG,QAAgB,CACdgF,QAAS,UACTvJ,MAAO,eACPwJ,aAAc,IACdC,aAAa,EACbxI,YAAa,4CAGjBuC,EAAQjE,KAAK,YA0BTmK,EAAkB,CACtB,sBAAuB,gBAAGpC,EAAH,EAAGA,MAAO7H,EAAV,EAAUA,GAAV,OAAmB,SAACwI,GAAD,OAAWF,GAAwBE,EAAOX,EAAO7H,MAG7F,OAAO0J,EACL,kBAAC,IAAD,CACE7I,KAAK,QACLqJ,OAAQR,EACRS,cAAe,kBAAMR,GAAwB,IAC7CS,gBAAiBP,IAGnB,kBAAC,IAAD,CACEQ,OAAQA,EACRC,aAAc,CAAEpE,QAAQ,GACxBuC,aAAcA,GACdwB,gBAAiBA,EACjBM,gBAAe,SAAOA,MAAoBzB,IAC1C0B,SAzCa,SAACrB,GAChB,IAAMS,EAAY,CAChBzJ,KAAMgJ,EAAS,cACf3H,YAAa2H,EAAS,qBACtBsB,UAAWtB,EAAS,cAAczF,KAAI,SAACgH,GAAD,MAAW,CAAEC,SAAUD,EAAKhK,UAClEkK,WAAYzB,EAAS,cAAczF,KAAI,SAAC8D,GAAD,OAAUA,EAAKlG,SAExDyC,EAAQjE,KAAK,WACb6E,GAASkG,QAASjB,IACfkB,MAAK,kBAAMvB,OACXuB,MAAK,WACJnG,GACEG,QAAgB,CACdgF,QAAS,UACTvJ,MAAO,uBACPwJ,aAAc,IACdC,aAAa,EACbxI,YAAa,2CAyBnBuJ,cAAenB,EACfb,SAAUA,GAASc,EAAkBF,EAAyBT,MAKpEI,GAAexF,UAAY,CACzByF,WAAYvF,UAGd,Y,ynBC/FA,IAAMgH,GAAiB,SAAC,GAA2E,IAAzElG,EAAyE,EAAzEA,gBAAiBmG,EAAwD,EAAxDA,YAAa1B,EAA2C,EAA3CA,WAAY2B,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,GACvD9I,mBAASwF,GAD8C,WAC1F9C,EAD0F,KAC3EqG,EAD2E,KAG3FtH,GAAU0F,kBACV6B,GAAQC,mBAAc,oBAEtBrC,EAAe,SAACU,GACpByB,EAAiBzB,KAUnB5G,gBAAU,WANRsI,IACEE,QAAWF,EAAMG,OAAOzL,IACrB0L,QAAQZ,MAAK,SAAC7J,GAAD,OAAUiI,EAAajI,MADvC,OAES,kBAAMiI,OAAapB,QAK7B,KAEH9E,gBAAU,WACRqI,EAAiBF,KAChB,CAACA,IAEJ,IASMpC,EAAW,WACfjE,EAAgB,CACdgF,QAAS,UACTC,aAAc,IACdC,aAAa,EACbzJ,MAAOyE,EAAgB,gBAAkB,eACzCxD,YAAawD,EAAgB,uCAAyC,2CAExEoG,IACArH,EAAQjE,KAAKoL,IAGTb,EAAS,CACbpK,OAAQ,CAAC,OAELE,KAAM,OACNO,MAAO,OACPR,UAAW8E,EAAgBvE,eAA4B,YACnDuE,EAAgB,CAAE2G,iBAAiB,GAAS,IAL5C,IAMJ/K,SAAU,CACR,CAAEC,KAAM,sBAAuBb,GAAIsL,EAAQA,EAAMG,OAAOzL,GAAKmL,EAAMnL,GAAI6H,MAAO,QAC9E,CACEhH,KAAMC,iBAIZ,CACEX,KAAM,cACNO,MAAO,cACPR,UAAW8E,EAAgBvE,aAA0B,WACrDG,SAAU,CACR,CACEC,KAAMC,eACNC,UAAW,SAOfkJ,EAAkB,CACtB,sBAAuB,gBAAGpC,EAAH,EAAGA,MAAO7H,EAAV,EAAUA,GAAV,OAAmB,SAACwI,GAAD,OAAWF,GAAwBE,EAAOX,EAAO7H,MAG7F,OACE,kBAAC,KAAD,CACEqK,OAAQA,EACRE,gBAAe,SACVA,MADU,IAEbqB,SAAUC,OAEZ9C,SAAUA,EACVyB,SA7Da,SAACvJ,GAChB,IAAM6K,EAAY,MAAK7K,GACvBsI,EACI0B,EAAYa,GACThB,MAAK,kBAAMvB,OACXuB,KAAK/G,EAAQjE,KAAKoL,IACrBD,EAAYa,GAAWhB,MAAK,kBAAM/G,EAAQjE,KAAKoL,OAwDjDjB,gBAAiBA,EACjBc,cAAa,MAAO/F,GACpByD,aAAc,SAAC7C,GAAD,OACZ,kBAACmG,GAAA,EAAD,OAAuBnG,EAAvB,CAA8BoG,WAAY,CAAEZ,QAASrC,EAAUmB,QAAQ,EAAMJ,QAAS,SAAUvJ,MAAO,mCAM/GyK,GAAe1G,aAAe,CAC5B4G,SAAU,UACVE,QAAS,kBAAM,MACfZ,SAAU,kBAAM,OAGlBQ,GAAelH,UAAY,CACzBgB,gBAAiBd,oBACjBwH,WAAYxH,oBACZiI,WAAYjI,WACZiH,YAAajH,oBACbuF,WAAYvF,SACZkH,SAAUlH,WACVmH,MAAOnH,WACPoH,QAASpH,UAiBX,UAAeQ,cAdS,SAAC,GAAD,MAAsC,CAC5DvC,UADsB,EAAGgD,aAAgBhD,cAIhB,SAAC0C,GAAD,OACzBuH,yBACE,CACEpH,qBACAmG,iBACAO,iBAEF7G,KAGJ,CAA4DqG,I,oDCnItDmB,I,SAAmB,SAAC,GAAkG,IAAhGC,EAAgG,EAAhGA,aAAcjB,EAAkF,EAAlFA,MAAOlJ,EAA2E,EAA3EA,UAAWuJ,EAAgE,EAAhEA,WAAYa,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,YAAa/C,EAA2B,EAA3BA,WAAY2B,EAAe,EAAfA,UAC3GlI,gBAAU,WACkB,IAAtBqJ,EAAWjH,QACboG,EAAWa,EAAW,GAAG/K,QAE1B,IAEH,IAAMyC,GAAU0F,kBAP0G,GAS5FnH,eAAS,GATmF,WASnHiK,EATmH,KAS1GC,EAT0G,KAWpHC,EAAiBJ,EAAWjH,OAAS,EASrC2D,EAAW,kBAAMhF,EAAQE,UAE/B,OACE,kBAACyI,GAAA,EAAD,CACExC,OAAQoC,EACRxC,QAAS6C,WACTpM,MACE,kBAACmG,EAAA,EAAD,KACE,kBAAC,MAAD,CAAyBS,UAAU,8BADrC,KAEUsF,EAAiB,iBAAmB,iBAGhDrB,QAASrC,EACT6D,QAAS,CACP,kBAACC,EAAA,GAAD,CAAQlK,IAAI,SAASmK,YAAaP,EAASzC,QAAQ,SAASjJ,KAAK,SAASkM,QArB/D,WACf,IAAMC,EAAQX,EAAW3I,KAAI,SAACyH,GAAD,OAAWA,EAAM7J,QAC9C8K,EAAaY,GACVlC,MAAK,kBAAMvB,EAAWyD,MACtBlC,KAAK/G,EAAQjE,KAAKoL,MAkBduB,EAAiB,gBAAkB,gBAEtC,kBAACI,EAAA,GAAD,CAAQlK,IAAI,SAASmH,QAAQ,OAAOjJ,KAAK,SAASkM,QAAShE,GAA3D,YAKF,kBAACtC,EAAA,EAAD,KACGgG,EACC,kBAAC/F,EAAA,EAAD,uBACiB,2BAAI2F,EAAWjH,QADhC,gEAGEnD,EACF,kBAAC,MAAD,MAEA,kBAACyE,EAAA,EAAD,qBACe,2BAAIyE,EAAMhL,MADzB,gEA3BN,IAiCE,kBAAC8M,GAAA,EAAD,CACEC,UAAWX,EACXpG,SAAU,kBAAMqG,GAAYD,IAC5B7L,MAAM,kDACNV,GAAG,0BAMXmM,GAAiB7H,aAAe,CAC9BgI,aAAa,EACbnB,MAAO,GACPkB,WAAY,GACZpK,WAAW,EACXiJ,SAAU,WAGZiB,GAAiBrI,UAAY,CAC3BwI,YAAatI,SACboI,aAAcpI,oBACdwH,WAAYxH,oBACZuF,WAAYvF,SACZ/B,UAAW+B,SACXmH,MAAOnH,WACPqI,WAAYrI,UACZkH,SAAUlH,YAiBZ,UAAeQ,cAdS,SAAC,GAAD,IAAmBQ,EAAnB,EAAGC,aAAgBD,cAAnB,MAA0C,CAChEmG,MAAOnG,EACP/C,WAAY+C,EAAcK,WAGD,SAACV,GAAD,OACzBuH,yBACE,CACEV,gBACAY,mBAEFzH,KAGJ,CAA4DwH,I,+DCtGtDgB,GAAyB,SAAC,GAAa,IAAX7L,EAAW,EAAXA,KAAW,GACGgB,eAAS,GADZ,WACpC8K,EADoC,KAClBC,EADkB,KAErCC,GAAiB5K,YAAO,MAE9B,OACE,0BAAM6K,IAAKD,EAAgB3K,IAAG,UAAKrB,EAAL,YAAqBtB,GAAG,yBACpD,kBAACwN,GAAA,EAAD,CACEC,OAAO,MACPC,SAAS,QACTC,UAAWP,EACXQ,YAAa,kBAAMP,GAAkB,IACrCQ,oBAAkB,EAClBC,YAAY,wFACZC,SAAUT,EAAevK,SAEzB,kBAAC,MAAD,CACEgK,QAAS,kBAAMM,GAAmBD,IAClCjG,UAAW6G,KAAW,4BAA6B,CAAE,cAAeZ,SAO9ED,GAAuBrJ,UAAY,CACjCxC,KAAM0C,uBAGD,IAAMhD,GAAa,SAACC,EAAMgN,GAA8B,IAAtBC,EAAsB,uDAAP,GACtD,OAAOjN,EAAKG,QACV,SAACC,EAAD,OAAQC,EAAR,EAAQA,KAAMnB,EAAd,EAAcA,KAAMgO,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,eAAgBC,EAA/C,EAA+CA,SAA4BC,EAA3E,EAAyDC,iBAAzD,oBACKlN,GADL,CAEE,CACEC,OACAgN,oBACA7M,MAAO,CACL,kBAAC,EAAA4E,SAAD,CAAU1D,IAAKrB,GACb,yBAAK6F,UAAU,oBACb,kBAAC,EAAAqH,KAAD,CAAM7L,IAAG,UAAKrB,EAAL,SAAkBmN,GAAE,yBAAoBnN,IAC9CnB,GAEFmO,GAAqB,kBAACnB,GAAD,CAAwB7L,KAAMA,MAGxD6M,EACAC,EACA,kBAAC,EAAA/H,SAAD,CAAU1D,IAAG,UAAKrB,EAAL,cACX,kBAACoN,GAAA,EAAD,CAAYC,KAAMN,EAAUxN,KAAK,eAGrCa,SAAUC,QAAQuM,GAAgBA,EAAatM,MAAK,SAACC,GAAD,OAASA,EAAIP,OAASA,WAG9E,K,wBCvDEsN,I,SAAU,SAAC,GAAsE,IAAzD9O,EAAyD,EAApEiE,QAAWjE,KAAoB+O,EAAqC,EAAjDC,SAAYD,SAAYE,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChEC,EAAYF,EAASnN,MAAK,gBAAGzB,EAAH,EAAGA,KAAH,OAAc0O,EAASK,SAAS/O,MAGhE,OACE,kBAACgP,GAAA,EAAD,CAAMhI,UAAW6H,EAAW,6BAA+B,GAAII,UAAWH,EAAYA,EAAUI,SAAW,EAAGC,SAHzF,SAACC,EAAQC,GAAT,OAAsB1P,EAAKiP,EAASS,GAAUrP,QAIhE4O,EAASrL,KAAI,SAAC2E,GAAD,OACZ,kBAACoH,GAAA,EAAD,CAAKlP,MAAO8H,EAAK9H,MAAOoC,IAAK0F,EAAKgH,SAAUA,SAAUhH,EAAKgH,SAAUlP,KAAMkI,EAAKlI,aAMxFyO,GAAQ9K,UAAY,CAClBgL,SAAU9K,UAAgB,CACxB6K,SAAU7K,wBAEZD,QAASC,UAAgB,CACvBlE,KAAMkE,sBAER+K,SAAU/K,qBACVgL,SAAUhL,UAGZ,UAAe0L,gBAAWd,I,4BC3Bb5N,GAAa,SAACC,EAAM0O,GAA8B,IAArBxO,EAAqB,uDAAP,GACtD,OAAOF,EAAKG,QACV,SAACC,EAAD,OAAmBuO,EAAnB,EAAQC,UAAqBlF,EAA7B,EAA6BA,SAAUmF,EAAvC,EAAuCA,MAAmBC,EAA1D,EAA8CC,WAAkCC,EAAhF,EAAqEC,UAArE,oBACK7O,GADL,CAEE,CACEC,KAAMqJ,EACNA,WACAlJ,MAAO,CACL,CACElB,MAAO,kBAAC4P,GAAA,EAAD,CAAOC,MAAOR,GAAY,SAAUA,EAAW,SAAW,YACjEhK,MAAO,CACL3E,KAAM,CAAE2O,cAGZjF,EACAmF,EACAG,EACAF,GAEFrO,SAAUP,EAAYS,MAAK,SAACC,GAAD,OAASA,EAAIP,OAASqJ,UAGrD,K,wBCdE0F,GAAkB,SAAC,GASnB,IAROvQ,EAQP,EARJiE,QAAWjE,KAECwB,EAMR,EAPJgK,MACEG,OAAUnK,KAEZwD,EAII,EAJJA,gBACAoG,EAGI,EAHJA,SACAoF,EAEI,EAFJA,kBACAC,EACI,EADJA,qBACI,GACsCjO,cAAS,IAD/C,WACGwE,EADH,KACkBC,EADlB,KAkBEgC,EAAW,WACfjE,EAAgB,CACdgF,QAAS,UACTvJ,MAAO,gBAAF,OAAkBuG,EAAc1B,OAAS,EAAI,IAAM,GAAnD,aACL2E,aAAc,IACdC,aAAa,EACbxI,YAAa,gBAAF,OAAkBsF,EAAc1B,OAAS,EAAI,IAAM,GAAnD,yCAEbtF,EAAKoL,IAGP,OACE,kBAACwB,GAAA,EAAD,CACEnM,MAAM,cACNuJ,QAAS6C,YACTzC,QAAM,EACN0C,QAAS,CACP,kBAACC,EAAA,GAAD,CAAQlK,IAAI,UAAUY,OAAO,yBAAyBuJ,WAAqC,IAAzBhG,EAAc1B,OAAc0E,QAAQ,UAAUiD,QAjCrG,WACf,IAAMyD,EAAW1J,EAAcpD,KAAI,SAACgH,GAAD,MAAW,CAAEC,SAAUD,EAAKhK,UAC3D8P,EAASpL,OAAS,IACpBN,EAAgB,CACdgF,QAAS,OACTvJ,MAAO,gBAAF,OAAkBiQ,EAASpL,OAAS,EAAI,IAAM,GAA9C,aACL2E,aAAc,IACdC,aAAa,EACbxI,YAAa,gBAAF,OAAkBgP,EAASpL,OAAS,EAAI,IAAM,GAA9C,0BAEbkL,EAAkBhP,EAAMkP,GAAU1F,MAAK,kBAAMyF,EAAqBjP,OAGpExB,EAAKoL,KAoBD,gBAGA,kBAAC2B,EAAA,GAAD,CAAQ7M,GAAG,oBAAoBuD,OAAO,0BAA0BZ,IAAI,SAASmH,QAAQ,OAAOiD,QAAShE,GAArG,WAIFqC,QAASrC,GAET,kBAACzC,EAAA,EAAD,CAAOC,WAAS,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAYjF,YAAY,2FAG5B,kBAACgF,EAAA,EAAD,KACE,kBAAC,IAAD,CAAkBM,cAAeA,EAAeC,iBAAkBA,QAO5EsJ,GAAgB/L,aAAe,CAC7BmM,MAAO,GACPxE,WAAY,GACZf,SAAU,UACVpE,cAAe,IAGjBuJ,GAAgBvM,UAAY,CAC1BC,QAASC,UAAgB,CACvBC,OAAQD,oBACRlE,KAAMkE,WACLrD,WACHkK,SAAU7G,oBACVc,gBAAiBd,oBACjBZ,UAAWY,oBACXuM,qBAAsBvM,oBACtBiI,WAAYjI,WACZyM,MAAOzM,UACP8C,cAAe9C,UACfsH,MAAOtH,WACPkH,SAAUlH,WACVsM,kBAAmBtM,qBAkBrB,UAAe0L,iBAAWlL,cAfF,SAAC,GAAD,MAAsC,CAC5DvC,UADsB,EAAGgD,aAAgBhD,cAIhB,SAAC0C,GAAD,OACzBuH,yBACE,CACEpH,qBACA+F,cACAyF,uBACAC,2BAEF5L,KAGsBH,CAA6C6L,K,ynBCtGvE,IAAM5N,GAAU,CACd,CAAElC,MAAO,SAAUqC,WAAY,CAAC8N,WAChC,CAAEnQ,MAAO,YACT,CAAEA,MAAO,SACT,CAAEA,MAAO,aACT,CAAEA,MAAO,eAGLoQ,GAAW,SAAC,GAAD,QAAG1L,aAAgByC,EAAnB,EAAmBA,OAAQ1C,EAA3B,EAA2BA,cAA3B,MAAkD,CACjE4L,WAAY5L,EAAc6L,QAAQ5P,KAClCiB,WAAY8C,EAAc6L,QAAQnM,KAClCoM,aAAcpJ,EAAOqJ,SACrBnJ,UAAW5C,EAAc7E,KACzBoO,iBAAkBvJ,EAAcuJ,iBAChCtM,UAAW+C,EAAc6L,QAAQ5O,YAG7B+O,GAAkB,SAAC7Q,EAAMgL,EAAO8F,GAAd,OACtBA,EACE,oCACQ,yCAAQ9Q,IADhB,wDACgF,qCAAOgL,IADvF,WAIA,2BACE,qCAAOhL,IADT,gDACiE,yCAAQgL,IADzE,YAkKJ,SA7JwB,WAAM,OACU7I,cAAS,IADnB,WACrBC,EADqB,KACRC,EADQ,QAEwBF,cAAS,IAFjC,WAErB4O,EAFqB,KAEDC,EAFC,QAGkB7O,eAAS,GAH3B,WAGrB8O,EAHqB,KAGJC,EAHI,QAIc/O,eAAS,kBAAM,QAJ7B,WAIrBgP,EAJqB,KAINC,EAJM,QAKQjP,cAAS,IALjB,WAKrBkP,EALqB,KAKTC,EALS,KAOpBnQ,GAASoQ,iBAATpQ,KAPoB,GAQ6DqQ,iBAAYhB,GAAUiB,gBAAvGhB,EARoB,EAQpBA,WAAY1O,EARQ,EAQRA,WAAY0F,EARJ,EAQIA,UAAWkJ,EARf,EAQeA,aAAc7O,EAR7B,EAQ6BA,UAAWsM,EARxC,EAQwCA,iBAE9D5J,GAAW6E,mBAEXpG,EAAY,SAACyO,GAAoC,IAAzBC,EAAyB,uDAAf5P,EACtCyC,GAAS4L,QAAqBjP,EAAMuQ,EAAWC,MAGjD9O,gBAAU,WACRI,MACC,IAEH,IAIM2O,EAAgB,SAACC,GACrB,OAAOrN,GAASsN,QAAuB3Q,EAAM0Q,IAAYlH,MAAK,WAC5DqG,EAAsB,IACtB/N,OAAU0E,EAAD,GAAC,MAAgB5F,GAAjB,IAA6BkC,OAAQ,SA+B5CL,GAAU0F,kBA6ChB,OACE,kBAAC,EAAApD,SAAD,KACE,kBAAC6L,GAAA,EAAD,CACEC,KAAMX,EAAWW,KACjB5R,MAAOiR,EAAWjR,MAClB6R,mBAAoBZ,EAAWY,mBAC/BlI,OAAQkH,EACRhG,QAAS,kBAAMiG,GAAmB,IAClC7G,SAAU,WACR6G,GAAmB,GACnBC,OAGJ,kBAACe,GAAA,EAAD,CAASxR,KAAK,UAAUb,GAAI,kBACzBuO,EACC,kBAACtH,EAAA,EAAD,KACE,kBAACqL,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC9L,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMxG,UAAWqH,QAAjB,iEAMR,kBAAC,IAAD,CACEtG,MAAO2P,GAAc,IAAIlN,KAAI,SAACgH,GAAD,UAAC,MAAeA,GAAhB,IAAsBpJ,KAAMoJ,EAAKC,cAC9D1H,aAAc6N,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACrExR,WAAYA,GACZyB,QAASA,GACTgQ,OApFK,kBACb,kBAAC,EAAApM,SAAD,KACE,kBAAC,EAAAqM,MAAD,CACEC,KAAMC,SACNC,OAAQ,SAACC,GAAD,OAAU,kBAAC,GAAD,KAAiB1P,UAAWA,EAAW8H,SAAQ,yBAAoB5J,EAApB,aAAwCwR,SAiFrGC,eAvGa,kBACnBjC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aAErD,CACE,CACEjS,MAAO,SACPwM,QAAS,SAACwC,EAAQyD,EAAQC,GACxB1B,GAAiB,kBAAM,kBAAMQ,EAAc,CAACkB,EAAUtI,SAASpK,YAC/DkR,EAAc,CACZlR,MAAO,iBACP4R,KAAMnB,GAAgBiC,EAAUtI,SAASpK,MAAOqH,GAAW,GAC3DwK,mBAAoB,kBAEtBf,GAAmB,MAXzB,MAsGI6B,kBAAkB,WAClBvP,YAAY,UACZC,cAAc,SACdL,OAAO,gBACPrB,WAAYA,EACZK,YAAaA,EACba,UAAW,gBAAGe,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQjE,EAAlB,EAAkBA,KAAlB,OAA6BiD,EAAUjD,EAAM,CAAEgE,QAAOC,YACjE5B,eAAgB,gBAAGrC,EAAH,EAAGA,KAAH,OAAcqC,EAAerC,IAC7CgB,YAAa+P,EACbjP,UAAWA,EACXkR,WAAYC,KACZ5P,gBA9HmB,SAACC,GAC5B0N,GAAsB,SAACP,GAAD,OAAgBnN,EAAamN,OA8H3CyC,eAvFa,sBACjBvC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACvD,CACE,kBAAC,EAAAhE,KAAD,CAAMC,GAAE,yBAAoBnN,EAApB,wBAAgDqB,IAAI,oBAAoBwE,UAAU,sBACxF,kBAAC0F,EAAA,GAAD,CAAQ/C,QAAQ,UAAUwJ,aAAW,cAArC,eAIF,CACE5S,MAAO,aACPkF,MAAO,CACLuB,UAAW,qBAEb4F,QAAS,WACPhJ,EAAQjE,KAAR,yBAA+BwB,EAA/B,2BAGJ,CACEZ,MAAO,SACPkF,MAAO,CACLkH,YAAaoE,IAAuBA,EAAmB9L,OAAS,EAChE0E,QAAS,UAEXiD,QAAS,WACP,IAAMwG,EAA0BrC,EAAmB9L,OAAS,EACtDoO,EAAaD,EAA0B,kBAAoB,iBACjEhC,GAAiB,kBAAM,kBAAMQ,EAAcb,EAAmBxN,KAAI,SAACgH,GAAD,OAAUA,EAAKpJ,aACjFmQ,EAAc,CACZlR,MAAOiT,EACPpB,mBAAoBoB,EACpBrB,KAAMnB,GACJuC,EAA0BrC,EAAmB9L,OAAS8L,EAAmB,GAAG5P,KAC5EsG,EACA2L,KAGJlC,GAAmB,MAIzB,KAgDIoC,WAAY,CAAElT,MAAO,qCAAsCiB,YAAa,CAAC,uCAAwC,KACjHqC,QAAQ,qB,4BC3Ld6P,GAAqB,SAAC,GAAkC,IAAhCxJ,EAAgC,EAAhCA,OAAQkB,EAAwB,EAAxBA,QAASZ,EAAe,EAAfA,SAC7C,OACE,kBAAC0H,GAAA,EAAD,CACEC,KACE,kBAAC1L,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,0BACoB,6CADpB,4GAEY,oDAFZ,MAMJnG,MAAO,UACPoT,cAAY,EACZzJ,OAAQA,EACRkI,mBAAoB,WACpBhH,QAASA,EACTZ,SAAUA,KAKhBkJ,GAAmB5P,UAAY,CAC7B0G,SAAUxG,SACVoH,QAASpH,SACTkG,OAAQlG,UAGV,YCzBA,IAAM4P,GAAgB,SAAC,GAgBjB,IAfO9T,EAeP,EAfJiE,QAAWjE,KAECwB,EAaR,EAdJgK,MACEG,OAAUnK,KAEZa,EAWI,EAXJA,cACAE,EAUI,EAVJA,iBACA9B,EASI,EATJA,MACA2K,EAQI,EARJA,SACA2I,EAOI,EAPJA,gBACA1T,EAMI,EANJA,KACA2T,EAKI,EALJA,UACAC,EAII,EAJJA,UACAjP,EAGI,EAHJA,gBACAkP,EAEI,EAFJA,sBACAC,EACI,EADJA,mBACI,GAC4C3R,eAAS,GADrD,WACG4R,EADH,KACqBC,EADrB,KAGEpL,EAAW,WACf1G,GAAoBA,EAAiB,IACrCyC,EAAgB,CACdgF,QAAS,UACTvJ,MAAO,wBACPwJ,aAAc,IACdC,aAAa,EACbxI,YAAa,oDAEf1B,EAAKoL,IAGDV,EAAW,WACf,IAAM4J,EAAYjS,EAAcuB,KAAI,SAAC8D,GAAD,OAAUA,EAAKlG,QAMnD,OALAuS,EAAgBvS,EAAM8S,EAAWH,GAC7BH,IAAcC,GAChBC,GAAsB,GAGjBlU,EAAKoL,IAGd,OAAO4I,IAAcC,GAAaG,EAChC,kBAAC,GAAD,CAAoBhK,OAAQgK,EAAkB9I,QAASrC,EAAUyB,SAAUA,IAE3E,kBAACkC,GAAA,EAAD,CACEnM,MAAM,qBACNuJ,QAAS6C,YACTzC,QAAM,EACNkB,QAAS,WACPrC,IACAoL,GAAoB,IAEtBvH,QAAS,CACP,kBAACC,EAAA,GAAD,CACEyG,aAAW,OACX/P,OAAO,sBACPuG,QAAQ,UACRnH,IAAI,UACJmK,WAAqC,IAAzB3K,EAAciD,OAC1B2H,QAAS,WACPoH,GAAoB,KAClBL,GAAaC,IAAcvJ,MARjC,gBAaA,kBAACqC,EAAA,GAAD,CAAQyG,aAAW,SAAS/P,OAAO,0BAA0BuG,QAAQ,OAAOnH,IAAI,SAASoK,QAAShE,GAAlG,YAKF,kBAACzC,EAAA,EAAD,CAAOC,WAAS,GACbhG,GACC,kBAACiG,EAAA,EAAD,KACE,kBAAC6N,GAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BhU,IAIP,kBAACiG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMxG,UAAWqH,OAAjB,iFACgF,+BAAKpH,GADrF,OAKJ,kBAACqG,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,kBAAClC,EAAD,CAAmB5C,cAAeA,EAAeE,iBAAkBA,SAQ/EuR,GAAc9P,UAAY,CACxBC,QAASC,UAAgB,CACvBlE,KAAMkE,QACNC,OAAQD,sBACPrD,WACH2K,MAAOtH,UAAgB,CACrByH,OAAQzH,wBACPrD,WACHwB,cAAe6B,UACf3B,iBAAkB2B,SAClB6P,gBAAiB7P,SACjBkH,SAAUlH,WACVzD,MAAOyD,WACP7D,KAAM6D,WACN8P,UAAW9P,SACX+P,UAAW/P,SACXc,gBAAiBd,SACjBgQ,sBAAuBhQ,SACvBiQ,mBAAoBjQ,UAGtB,YCvHA,IAAMwQ,GAAc,SAAC,GAAyF,IAAvFjU,EAAuF,EAAvFA,MAAO4R,EAAgF,EAAhFA,KAAM/G,EAA0E,EAA1EA,QAASZ,EAAiE,EAAjEA,SAAUN,EAAuD,EAAvDA,OAAQkI,EAA+C,EAA/CA,mBAAoB0B,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAAgB,GAC5DzR,eAAS,GADmD,WACrG4R,EADqG,KACnFC,EADmF,KAG5G,OAAOL,IAAcC,GAAaG,EAChC,kBAAC,GAAD,CACEhK,OAAQgK,GAAoBhK,EAC5BkB,QAAS,WACPA,IACA+I,GAAoB,IAEtB3J,SAAU,WACRA,OAIJ,kBAAC0H,GAAA,EAAD,CACEC,KAAMA,EACN5R,MAAOA,EACP2J,OAAQA,EACRkI,mBAAoBA,EACpBhH,QAAS,WACPA,KAEFZ,SAAU,WACR2J,GAAoB,KAClBL,GAAaC,IAAcvJ,QAMrCgK,GAAY1Q,UAAY,CACtBqO,KAAMnO,SACNzD,MAAOyD,SACPoO,mBAAoBpO,WACpBwG,SAAUxG,SACVoH,QAASpH,SACTkG,OAAQlG,SACR8P,UAAW9P,SACX+P,UAAW/P,UAGbwQ,GAAYlQ,aAAe,CACzBwP,WAAW,EACXC,WAAW,GAGb,Y,8kBCnCA,IAAMtR,GAAU,CAAC,CAAElC,MAAO,OAAQuC,QAAS,QAAU,CAAEvC,MAAO,eAAiB,CAAEA,MAAO,kBAElFS,GAAa,SAACyT,EAAWxT,EAAMC,GAA+B,IAArBC,EAAqB,uDAAP,GAC3D,OAAOF,EACHA,EAAKG,QACH,SAACC,EAAD,OAAQC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcpB,EAA5B,EAA4BA,KAAMqB,EAAlC,EAAkCA,YAAa6M,EAA/C,EAA+CA,SAA/C,oBACKhN,GADL,CAEE,CACEC,OACAf,MAAOgB,GAAgBpB,EACvBsB,MAAO,CACL,kBAAC,EAAA4E,SAAD,CAAU1D,IAAG,UAAKrB,EAAL,UACX,kBAAC,EAAAkN,KAAD,CAAMC,GAAE,yBAAoBgG,EAApB,yBAA8CnT,IAASC,GAAgBpB,IAEjFqB,EACA,kBAAC,EAAA6E,SAAD,CAAU1D,IAAG,UAAKrB,EAAL,cACX,kBAACoN,GAAA,EAAD,CAAYC,KAAMN,EAAUxN,KAAK,eAGrCa,SAAUC,QAAQR,GAAeA,EAAYS,MAAK,SAACC,GAAD,OAASA,EAAIP,OAASA,WAG5E,IAEF,IAiBAoT,GAAa,SAAC,GAmBd,IAlBJ3S,EAkBI,EAlBJA,MACAC,EAiBI,EAjBJA,WACA2S,EAgBI,EAhBJA,YACAzP,EAeI,EAfJA,SACA+O,EAcI,EAdJA,mBACAhS,EAaI,EAbJA,UACAC,EAYI,EAZJA,WAEYZ,EAUR,EAXJgK,MACEG,OAAUnK,KAEZwP,EAQI,EARJA,aACA3Q,EAOI,EAPJA,KACA2T,EAMI,EANJA,UACAC,EAKI,EALJA,UACAC,EAII,EAJJA,sBACAzO,EAGI,EAHJA,sBACAqP,EAEI,EAFJA,gBACA9P,EACI,EADJA,gBACI,GAC4CxC,cAAS,IADrD,WACGuS,EADH,KACqBC,EADrB,QAEkCxS,cAAS,IAF3C,WAEGC,EAFH,KAEgBC,EAFhB,QAGsCF,cAAS,IAH/C,WAGGH,EAHH,KAGkBE,EAHlB,QAI4CC,cAAS,IAJrD,WAIGyS,EAJH,KAIqBC,EAJrB,QAK0C1S,eAAS,GALnD,WAKG8O,EALH,KAKoBC,EALpB,QAMsC/O,eAAS,kBAAM,QANrD,WAMGgP,EANH,KAMkBC,EANlB,QAOgCjP,cAAS,IAPzC,WAOGkP,EAPH,KAOeC,EAPf,MASJzO,gBAAU,WACRiR,EAAmB/R,EAAnB+R,CAA+B3S,KAC9B,KAEH0B,gBAAU,WACRuC,EAAsBjE,KACrB,CAACS,IAEJ,IAMMiP,EAAkB,SAAC7Q,EAAMqH,EAAMyJ,GAAb,OACtB,6CACiB,2BAAI9Q,GADrB,uCACmE8Q,EAAS,QAAU,MACpF,+BAAKzJ,GAFP,QAEsByJ,EAAS,IAAM,GAFrC,MAiDIlN,IAAU0F,kBAsDhB,OACE,kBAAC,aAAD,KACE,kBAAC,GAAD,CACE0I,KAAMX,EAAWW,KACjB5R,MAAOiR,EAAWjR,MAClB2J,OAAQkH,EACR2C,UAAWA,EACXD,UAAWA,EACX1B,mBAAoBZ,EAAWY,mBAC/BhH,QAAS,kBAAMiG,GAAmB,IAClC7G,SAAU,WACR6G,GAAmB,GACnBC,IACAjP,EAAiB,IACjB2R,EAAsBF,IAAcC,MAIxC,kBAAC1B,GAAA,EAAD,CAASxR,KAAK,UAAUb,GAAI,aAC1B,kBAAC,IAAD,CACEyC,QAASA,GACTQ,aAAc6N,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACrExR,WAAY,sCAAI4E,EAAJ,yBAAIA,EAAJ,uBAAc5E,GAAU,WAAV,GAAWM,GAAX,OAAoBsE,KAC9C3E,KAAMc,EACNQ,YAAaA,EACba,UAAW,SAACC,GACV4Q,EAAmB5Q,EAAnB4Q,CAA2B3S,IAE7BkB,eAAgB,YAA2B,IAAxBrC,EAAwB,EAAxBA,KAAMqB,EAAkB,EAAlBA,iBACP,IAATrB,GAAwBqC,EAAerC,QACvB,IAAhBqB,GAA+BsT,EAAoBtT,IAE5DS,UAAWA,EACXC,WAAYA,EACZf,YAAagB,EACbqB,gBAjJgB,SAACC,GACvBpB,GAAiB,SAACN,GAChB,OAAO0B,EAAa1B,GAAO2B,KAAI,gBAAGpC,EAAH,EAAGA,KAAMnB,EAAT,EAASA,KAAT,MAA4B,CAAEmB,OAAMZ,MAApC,EAAeA,OAAqCP,UAgJ/EwD,YAAY,QACZC,cAAc,OACdyP,eA1Fe,sBACjBvC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACvD,CACE,kBAAC,EAAAhE,KAAD,CACErH,UAAS,mDAA8CyN,GAAmB,aAC1EnG,GAAE,yBAAoBnN,EAApB,oBACFqB,IAAI,iBAlHOmK,EAoHI8H,EAnHnBK,EACJ,kBAACpI,EAAA,GAAD,CAAQ/C,QAAQ,UAAUwJ,aAAW,WAAW4B,eAAgBpI,GAAhE,YAKKA,EACL,kBAACqI,GAAA,EAAD,CAASC,QAAQ,4DAA4DH,GAE7EA,IA4GM,CACEvU,MAAO,WACPkF,MAAO,CACLkH,WAAY8H,EACZzN,UAAW,qBAEb4F,QAAS,WACPhJ,GAAQjE,KAAR,yBAA+BwB,EAA/B,uBAGJ,CACEZ,MAAO,SACPkF,MAAO,CACLkH,YAAa3K,IAAkBA,EAAciD,OAAS,EACtD0E,QAAS,UAEXiD,QAAS,WACP,IAAMsI,EAAwBlT,EAAciD,OAAS,EACrDmM,GAAiB,kBAAM,kBACrBoD,EACErT,EACAa,EAAcuB,KAAI,SAAC8D,GAAD,OAAUA,EAAKlG,SACjC,kBAAM2S,EAAmB,SAAK/R,GAAN,IAAkBkC,OAAQ,IAA5C6P,CAAiD3S,UAG3DmQ,EAAc,CACZlR,MAAO8U,EAAwB,gBAAkB,eACjDjD,mBAAoBjQ,EAAciD,OAAS,EAAI,eAAiB,cAChE+M,KAAMnB,EACJ7Q,EACAkV,EAAwBlT,EAAciD,OAASrD,EAAMH,MAAK,SAAC4F,GAAD,OAAUA,EAAKlG,OAASa,EAAc,GAAGb,QAAMnB,KACzGkV,KAIJhE,GAAmB,MAIzB,IA7Jc,IAACvE,EACfmI,GAsMElC,eAxIe,sBACjBjC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACvD,CACE,CACEjS,MAAO,SACPwM,QAAS,SAACwC,EAAQyD,EAAQxL,GACxB+J,GAAiB,kBAAM,kBAAMoD,EAAYrT,EAAM,CAACkG,EAAKlG,OAAO,kBAAM2S,EAAmB,SAAK/R,GAAN,IAAkBkC,OAAQ,IAA5C6P,CAAiD3S,UACnHmQ,EAAc,CACZlR,MAAO,eACP6R,mBAAoB,cACpBD,KAAMnB,EAAgB7Q,EAAMqH,EAAKjH,OAAO,KAE1C8Q,GAAmB,MAIzB,KAyHEoB,OAtHO,kBACb,kBAAC,EAAApM,SAAD,KACE,kBAAC,EAAAqM,MAAD,CACEC,KAAMC,SACNC,OAAQ,SAACC,GAAD,OACN,kBAAC,GAAD,KACE1P,UAAWpB,EACXiS,mBAAoB,kBAAMA,EAAmB,SAAK/R,GAAN,IAAkBkC,OAAQ,IAA5C6P,CAAiD3S,IAC3Ea,cAAe4S,EACf1S,iBAAkB2S,EAClB9J,SAAQ,yBAAoB5J,EAApB,UACRuS,gBAAiB3O,EACjB/E,KAAMA,EACN2T,UAAWA,EACXC,UAAWA,EACXjP,gBAAiBA,EACjBkP,sBAAuBA,GACnBlB,SAsGNvP,OAAO,cACPkQ,WAAY,CAAElT,MAAO,mCAAoCiB,YAAa,CAAC,uCAAwC,KAC/G8T,QAAS,CACP,CAAE3S,IAAK,OAAQ6F,MAAOjG,GACtB,CAAEI,IAAK,cAAe6F,MAAOqM,IAE/BhR,QAAQ,mBAOZ0R,GAAgB,SAACC,EAAOC,GAE5B,OADAD,EAAM9J,QAAQZ,KAAK2K,GACZD,GAgCTd,GAAW5Q,UAAY,CACrBC,QAASC,UAAgB,CACvBC,OAAQD,oBACRlE,KAAMkE,sBAERjC,MAAOiC,UACP/B,UAAW+B,SACXE,aAAcF,WACdhC,WAAYgC,oBACZiQ,mBAAoBjQ,oBACpBuB,sBAAuBvB,oBACvB7B,cAAe6B,UACfkB,SAAUlB,SACV7D,KAAM6D,WACN2Q,YAAa3Q,SACb9B,WAAY8B,UAAgB,CAC1BG,MAAOH,sBACPI,OAAQJ,sBACRK,MAAOL,aAETsH,MAAOtH,UAAgB,CACrByH,OAAQzH,wBACPrD,WACHmQ,aAAc9M,UAAgB,CAC5B0G,KAAM1G,UAAgB,CACpBwO,aAAcxO,aAGlB8P,UAAW9P,SACX+P,UAAW/P,SACXgQ,sBAAuBhQ,SACvB4Q,gBAAiB5Q,oBACjBc,gBAAiBd,UAGnB0Q,GAAWpQ,aAAe,CACxBvC,MAAO,GACPG,WAAYqC,KACZpC,cAAe,GACf2O,aAAc,IAGhB,UAAetM,cAvES,SAAC,GAAgD,QAA9CS,aAAgBD,EAA8B,EAA9BA,cAAe0C,EAAe,EAAfA,OAClD3F,EAAQiD,EAAcjD,MAE5B,MAAO,CACLA,QACAG,WAAY8C,EAAc9C,YAAd,SAAiCiD,MAAjC,IAAkDd,MAAOtC,GAASA,EAAMqD,SACpFnD,WAAY+C,EAAcK,OAC1ByL,aAAcpJ,EAAOqJ,SACrB5Q,KAAM6E,EAAc7E,KACpB2T,UAAW9O,EAAcuJ,iBACzBwF,WAAY/O,EAAc0Q,OAC1Bd,kBAAmB5P,EAAcE,SAAShD,YAAc8C,EAAcE,SAAShD,WAAWmC,MAAQ,OAI3E,SAACM,GAC1B,MAAO,CACL3C,WAAY,SAAC4C,GACXD,GAAS3C,SAAWsB,QAAYsB,MAElCM,SAAU,SAACI,EAASvD,EAAO0T,GAAjB,OAA8B9Q,EAAS4Q,IAAc1B,QAAgBvO,EAASvD,GAAQ0T,KAChGd,YAAa,SAACrP,EAASvD,EAAO0T,GAAjB,OAA8B9Q,EAAS4Q,IAAcI,QAAqBrQ,EAASvD,GAAQ0T,KACxGxB,mBAAoB,SAAC5Q,GAAD,OAAY,SAACiC,EAASwM,GAAV,OAAsBnN,GAASsP,QAAmB3O,EAASjC,EAAQyO,MACnGvM,sBAAuB,SAACD,GAAD,OAAaX,GAASY,QAAsBD,EAAS,GAAI,MAChFR,gBAAiB,kBAAcH,EAASG,gBAAA,eACxC0G,WAAY,SAAC5G,GAAD,OAAcD,GAAS6G,QAAW5G,QA8ClD,CAA4D8P,I,oGC5TtDkB,I,SAAQ,SAAC,GAQT,IANQtU,EAMR,EAPJgK,MACEG,OAAUnK,KAEZ6J,EAII,EAJJA,MACAK,EAGI,EAHJA,WACAqK,EAEI,EAFJA,WACAC,EACI,EADJA,SAOM/G,EAAW,CACf,CAAEM,SAAU,EAAG9O,MAAO,QAASJ,KAAM,kBAAF,OAAoBmB,EAApB,WACnC,CAAE+N,SAAU,EAAG9O,MAAO,UAAWJ,KAAM,kBAAF,OAAoBmB,EAApB,cARnC,GAWsCgB,eAAS,GAX/C,WAWGyT,EAXH,KAWmBC,EAXnB,QAYkE1T,eAAS,GAZ3E,WAYG2T,EAZH,KAYgCC,EAZhC,KAcE9S,EAAY,SAACwB,GACjB4G,EAAW5G,IAGPD,GAAW6E,mBACXsF,GAAWqH,oBAEjBnT,gBAAU,WAGR,OAFAI,EAAU9B,GACV8U,SAASC,OAAOC,YAAYhV,GACrB,kBAAM8U,SAASC,OAAOC,iBAAYxO,MACxC,IAEH,IAAiC3H,EAmB3BoW,EAAgB,CACpB,kBAACC,GAAA,EAAD,CACEtW,UACE,kBAAC,EAAAsO,KAAD,CACEC,IAAKK,EAASD,SAASK,SAAS,WAAauD,SAAsCA,UAAmCgE,QACpH,QACAnV,IAHJ,QASFqB,IAAI,eAEN,kBAAC6T,GAAA,EAAD,CACEtW,UACE,kBAAC,EAAAsO,KAAD,CACEzB,QAAS+I,EACTrH,GAAI,kBACDK,EAASD,SAASK,SAAS,WAAauD,SAAwCA,UAAqCgE,QACpH,QACAnV,KALN,UAYF6F,UAAU,sBACVxE,IAAI,kBAIR,OACE,kBAAC,EAAA0D,SAAD,KACE,kBAAC,KAAD,CAAYqQ,YAhFc,CAC5B,CAAEnW,MAAO,SAAUkO,GAAI,WACvB,CAAElO,MAAOsV,OAAa/N,EAAYqD,EAAMhL,KAAMyP,UAAU,KA+EpD,kBAAC+G,GAAA,EAAD,CAAOpQ,WAAS,GACd,kBAACqQ,GAAA,EAAD,CAAWC,UAAQ,GACjB,kBAAC,KAAD,CACEtW,OACGsV,GAAc1K,EACb,kBAAC,EAAA9E,SAAD,KAAW8E,EAAMoD,mBAAqBpD,EAAMuK,QA5D3BvV,EA4D4DgL,EAAMhL,KA3DjG,yBAAK2W,MAAO,CAAEC,QAAS,gBACpB5W,EACD,yBAAKgH,UAAU,cACb,kBAACqG,GAAA,EAAD,CACE8F,aAAW,qBACXxF,YACE,6DAC+B,6CAD/B,4GAEsB,oDAFtB,MAMF,kBAAC,MAAD,CAAgB3G,UAAU,4CA+CyEgE,EAAMhL,WAC/F2H,EAENtG,aAAcqU,GAAc1K,EAAQA,EAAM3J,iBAAcsG,KAG5D,kBAAC8O,GAAA,EAAD,KACGzL,EAAMoD,iBAAmB,KACxB,kBAACyI,GAAA,EAAD,CACEzT,OAAO,+BACP0T,OAAQ,kBAACC,GAAA,EAAD,CAAaC,SAAU,SAACjN,GAAD,OAAY8L,EAAgB9L,IAASlK,GAAG,2BACvEkK,OAAQ6L,EACRqB,SAAO,EACP1J,SAAS,QACT6I,cAAeA,MAKtBN,EACC,kBAACoB,GAAA,EAAD,CACEvN,QAAQ,OACRwN,UAAQ,EACR/W,MAAM,mCACNgX,OAAQ,kBAACC,GAAA,EAAD,CAAwBpM,QAAS,kBAAM8K,GAA+B,MAC9E/O,UAAU,yBALZ,gCAO+B,6CAP/B,4GAQsB,oDARtB,KAUE,MAEN,kBAAC,GAAD,CAAS6H,UAAQ,EAACD,SAAUA,IAC5B,kBAAC,EAAA2D,MAAD,CACEC,KAAM,CAACF,SAAqCA,UAC5CI,OAAQ,SAACjN,GAAD,OACN,kBAAC,GAAD,OACMA,EADN,CAEE2D,WAAY,WACV5E,GAASoD,YAEXuE,aAAW,EACXD,WAAY,CAAClB,SAInB,kBAAC,EAAAuH,MAAD,CACEC,KAAM,CAACF,SAAmCA,UAC1CI,OAAQ,SAACjN,GAAD,OACN,kBAAC,GAAD,OACMA,EADN,CAEEuF,MAAOA,EACPD,SAAQ,uBAAkB5J,GAC1BiI,WAAY,WACVnG,EAAU9B,UAKlB,kBAAC,EAAAoR,MAAD,CACEC,KAAMF,SACNI,OAAQ,SAACjN,GAAD,OAAW,kBAAC,GAAD,OAAgBA,EAAhB,CAAuBoO,sBAAuBkC,QAEnE,kBAAC,EAAAxD,MAAD,CAAOC,KAAMF,SAAgCvS,UAAWuX,KACxD,kBAAC,EAAA/E,MAAD,CAAOG,OAAQ,kBAAM,kBAAC,EAAA6E,SAAD,CAAUjJ,GAAE,yBAAoBnN,EAApB,gBAC/B6J,GAAS,kBAAC,MAAD,SAkBjByK,GAAM9R,UAAY,CAChBgL,SAAU9K,UAAgB,CACxB6K,SAAU7K,wBAEZD,QAASC,UAAgB,CACvBlE,KAAMkE,sBAERsH,MAAOtH,WACPmH,MAAOnH,UAAgB,CACrB1C,KAAM0C,WACN7D,KAAM6D,WACNxC,YAAawC,WACbuK,iBAAkBvK,SAClB0R,OAAQ1R,WAEV6R,WAAY7R,SACZwH,WAAYxH,SACZ8R,SAAU9R,UAGZ4R,GAAMtR,aAAe,CACnBuR,YAAY,GAGd,UAAerR,cArCS,SAAC,GAAD,QAAGS,aAAgBD,EAAnB,EAAmBA,cAAe2S,EAAlC,EAAkCA,gBAAiBC,EAAnD,EAAmDA,qBAAnD,MAAiF,CACvGzM,MAAOnG,EACP6Q,WAAY8B,GAAmBC,MAGN,SAACjT,GAAD,OACzBuH,yBACE,CACEV,iBAEF7G,KA2BJ,CAA4DiR,I,gBCvNtDiC,GAAkB,SAAC,GAAiC,IAA/B1Q,EAA+B,EAA/BA,UAAWtF,EAAoB,EAApBA,IAAQ+D,EAAY,2BACxD,OACE,kBAAC,EAAAkS,WAAD,KACE3Q,UAAW4Q,KAAW5Q,EAAW,CAC/B,4BAA6BtF,EAAIyM,oBAEnCzM,IAAKA,GACD+D,KAKViS,GAAgB/T,UAAY,CAC1BjC,IAAKmC,UAAgB,CACnBsK,kBAAmBtK,WAErBmD,UAAWnD,YAGb,Y,6lBCJA,IAAMvB,GAAU,CACd,CAAElC,MAAO,OAAQoC,IAAK,OAAQC,WAAY,CAACC,aAC3C,CAAEtC,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,gBAAiBoC,IAAK,WAAYC,WAAY,CAACC,cAiL1D,SA9Ke,WAAM,OACmBP,cAAS,IAD5B,WACZC,EADY,KACCC,EADD,QAEqBF,cAAS,IAF9B,WAEZ4L,EAFY,KAEE8J,EAFF,QAG6B1V,cAAS,IAHtC,WAGZ2V,EAHY,KAGMC,EAHN,KAKbvT,GAAW6E,mBALE,GAMqCmI,kBACtD,wBAAG1M,aAAgByC,EAAnB,EAAmBA,OAAQzF,EAA3B,EAA2BA,UAAWkW,EAAtC,EAAsCA,YAAtC,MAA2D,CACzDzQ,OAAQ,GAAF,YACAyQ,SAAA,UAAAA,EAAahY,YAAb,eAAmBmL,MAAM,IAAI8M,OAAO7V,EAAa,OAAQ,CAAC4V,GAAe,IADzE,KAEAzQ,SAAA,UAAAA,EAAQzG,YAAR,eAAcoX,QAAO,wEAAwB,GAArB9J,EAAH,EAAGA,iBAAH,OAAgCA,OAAqB,KAEhFrM,WAAYwF,EAAOhD,KACnBoM,aAAcpJ,EAAOqJ,SACrB9O,YACAkW,iBAEFvG,gBAXMlK,EANW,EAMXA,OAAQxF,EANG,EAMHA,WAAY4O,EANT,EAMSA,aAAc7O,EANvB,EAMuBA,WAc1Ce,gBAAU,WACRoT,SAASC,OAAOiC,YAAY,CAAEtY,GAAI,SAAUuY,cAAc,IAC1D5T,GAASoD,QAAY,SAAK7F,GAAN,IAAkB/B,KAAMoC,MAC5CoC,GAAS6T,QAAiBjW,MACzB,IAEH,IAAMwB,GAAU0F,kBAEVjG,EAAkB,SAACC,GACvBuU,GAAgB,SAACS,GAAD,OACdhV,EAAagV,GACVJ,QAAO,qBAAG9J,oBACV7K,KAAI,kBAAqB,CAAEpC,KAAvB,EAAGA,KAA0BZ,MAA7B,EAASP,aAIdsS,EAAS,kBACb,kBAAC,EAAApM,SAAD,KACE,kBAAC,EAAAqM,MAAD,CAAOgG,OAAK,EAAC/F,KAAMC,UACjB,kBAAC,GAAD,CACErJ,WAAY,SAAClG,GACXsB,GAASoD,QAAY1E,IACrBb,EAAe,QAIrB,kBAAC,EAAAkQ,MAAD,CAAOgG,OAAK,EAAC/F,KAAMC,YACjB,kBAAC,GAAD,CACErJ,WAAY,SAAClG,GACXsB,GAASoD,QAAY1E,IACrBb,EAAe,QAIrB,kBAAC,EAAAkQ,MAAD,CAAOgG,OAAK,EAAC/F,KAAMC,UACjB,kBAAC,GAAD,CACErJ,WAAY,SAACoP,GACXhU,GAASoD,WACTiQ,EAAgB9J,EAAamK,QAAO,SAACxW,GAAD,OAAU8W,EAAIzJ,SAASrN,EAAIP,UAC/DkB,EAAe,KAEjB8J,aAAW,EACXD,WAAY4L,OAMdlF,EAAiB,SAAC,GAAD,SAAGzE,qBACDwC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,cAC1E,KACA,CACE,CACEjS,MAAO,OACPwM,QAAS,SAACwC,EAAQyD,EAAQ7H,GACxBpH,EAAQjE,KAAR,uBAA6BqL,EAAM7J,SAGvC,CACEf,MAAO,SACPwM,QAAS,SAACwC,EAAQyD,EAAQ7H,GACxB+M,EAAoB,CAAC/M,IACrBpH,EAAQjE,KAAK8S,cAMnBS,EAAiB,sBACjBvC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACvD,CACE,kBAAC,EAAAhE,KAAD,CAAMC,GAAImE,SAAoBjQ,IAAI,YAAYwE,UAAU,sBACtD,kBAAC0F,EAAA,GAAD,CAAQtJ,OAAO,sBAAsBuG,QAAQ,UAAUwJ,aAAW,gBAAlE,iBAIF,CACE5S,MAAO,eACPkF,MAAO,CACLuB,UAAW,qBAEb4F,QAAS,WACPhJ,EAAQjE,KAAK8S,YAGjB,CACElS,MAAO,OACPkF,MAAO,CACLkH,aAAsC,IAAxBoB,EAAa9I,SAE7B2H,QAAS,kBAAMhJ,EAAQjE,KAAR,uBAA6BoO,EAAa,GAAG5M,SAE9D,CACEZ,MAAO,SACPkF,MAAO,CACLkH,YAAaoB,EAAa9I,OAAS,GAErC2H,QAAS,WACPmL,EAAoBhK,GACpBnK,EAAQjE,KAAK8S,aAInB,KAsCN,OACE,kBAAC,EAAAgG,OAAD,KACE,kBAAC,KAAD,CAAiBC,WAAW,cAAclG,KAAMC,SAAmCC,OAAQ,SAACjN,GAAD,OAAW,kBAAC,KAASA,MAChH,kBAAC,KAAD,CACEiT,WAAW,eACXlG,KAAMC,SACNC,OAAQ,SAACjN,GAAD,OAAW,kBAAC,GAAD,OAAWA,EAAX,CAAkBkQ,SAAU,kBAAMtT,EAAe,WAEtE,kBAAC,KAAD,CAAiBqW,WAAW,aAAalG,KAAMC,SAAcC,OAAQ,kBA1CvE,kBAACvM,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAAC,KAAD,CAAYsS,eAAa,GACvB,kBAAC,KAAD,CAAiBvY,MAAM,aAG3B,kBAACiG,EAAA,EAAD,KACE,kBAAC6L,GAAA,EAAD,CAASxR,KAAK,UAAUb,GAAI,cAC1B,kBAAC,IAAD,CACEiB,KAAMyG,EAAOhE,KAAI,SAACyH,GAAD,OAAYA,EAAMoD,iBAAN,SAA8BpD,GAA9B,IAAqCiD,eAAgB,QAAUjD,KAC5FnK,WAAYA,GACZyB,QAASA,GACTQ,aAAc6N,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8H,aACrErR,YAAa+M,EACb1K,gBAAiBA,EACjBiP,OAAQA,EACRM,eAAgBA,EAChBpP,YAAY,SACZC,cAAc,QACdL,OAAO,eACPrB,WAAYA,EACZK,YAAaA,EACba,UAAW,SAACC,GAAD,OAAYsB,GAASoD,QAAY1E,KAC5Cb,eAAgB,gBAAGrC,EAAH,EAAGA,KAAH,OAAcqC,EAAerC,IAC7CkT,eAAgBA,EAChBpR,UAAWA,EACXiR,kBAAkB,OAClBC,WAAY0E,GACZhU,QAAQ,oB,gBCtLpB,IAAIkV,EAAM,EAAQ,OACF3D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MAG9C,IAKI8D,EAASH,EAAI3D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQ+D,QAAUpZ,EAAOqZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYlE,EAAQ+D,OAExBpZ,EAAOqZ,IAAIG,OACT,OACA,WAK+B,iBAFvBnE,GAFNA,EAAU,EAAQ,QAEM4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MA/BxB,SAAuBoE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWlE,EAAQ+D,SAMtCG,EAAYlE,EAAQ+D,OAEpBD,EAAO9D,IAPLrV,EAAOqZ,IAAIC,gBAYzBtZ,EAAOqZ,IAAIQ,SAAQ,WACjBV,OAIJnZ,EAAOH,QAAUwV,EAAQ+D,QAAU,I,gBCvEnC,IAAIJ,EAAM,EAAQ,OACF3D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MAG9C,IAKI8D,EAASH,EAAI3D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQ+D,QAAUpZ,EAAOqZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYlE,EAAQ+D,OAExBpZ,EAAOqZ,IAAIG,OACT,OACA,WAK+B,iBAFvBnE,GAFNA,EAAU,EAAQ,QAEM4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MA/BxB,SAAuBoE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWlE,EAAQ+D,SAMtCG,EAAYlE,EAAQ+D,OAEpBD,EAAO9D,IAPLrV,EAAOqZ,IAAIC,gBAYzBtZ,EAAOqZ,IAAIQ,SAAQ,WACjBV,OAIJnZ,EAAOH,QAAUwV,EAAQ+D,QAAU,I,gBCvEnC,IAAIJ,EAAM,EAAQ,OACF3D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MAG9C,IAKI8D,EAASH,EAAI3D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQ+D,QAAUpZ,EAAOqZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYlE,EAAQ+D,OAExBpZ,EAAOqZ,IAAIG,OACT,OACA,WAK+B,iBAFvBnE,GAFNA,EAAU,EAAQ,QAEM4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MA/BxB,SAAuBoE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWlE,EAAQ+D,SAMtCG,EAAYlE,EAAQ+D,OAEpBD,EAAO9D,IAPLrV,EAAOqZ,IAAIC,gBAYzBtZ,EAAOqZ,IAAIQ,SAAQ,WACjBV,OAIJnZ,EAAOH,QAAUwV,EAAQ+D,QAAU,I,gBCvEnC,IAAIJ,EAAM,EAAQ,OACF3D,EAAU,EAAQ,OAIC,iBAFvBA,EAAUA,EAAQ4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MAG9C,IAKI8D,EAASH,EAAI3D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQ+D,QAAUpZ,EAAOqZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYlE,EAAQ+D,OAExBpZ,EAAOqZ,IAAIG,OACT,OACA,WAK+B,iBAFvBnE,GAFNA,EAAU,EAAQ,QAEM4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MA/BxB,SAAuBoE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWlE,EAAQ+D,SAMtCG,EAAYlE,EAAQ+D,OAEpBD,EAAO9D,IAPLrV,EAAOqZ,IAAIC,gBAYzBtZ,EAAOqZ,IAAIQ,SAAQ,WACjBV,OAIJnZ,EAAOH,QAAUwV,EAAQ+D,QAAU,I,gBCvEnC,IAAIJ,EAAM,EAAQ,OACF3D,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQ4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MAG9C,IAKI8D,EAASH,EAAI3D,EALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAKA,EAAQ+D,QAAUpZ,EAAOqZ,IAAIC,WAAY,CAC5C,IAqBIC,EAAYlE,EAAQ+D,OAExBpZ,EAAOqZ,IAAIG,OACT,MACA,WAK+B,iBAFvBnE,GAFNA,EAAU,EAAQ,OAEM4D,WAAa5D,EAAQ6D,QAAU7D,KAG/CA,EAAU,CAAC,CAACrV,EAAOC,GAAIoV,EAAS,MA/BxB,SAAuBoE,EAAGC,GAChD,IAAKD,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIC,EAEJ,IAAKA,KAAKF,EACR,GAAIA,EAAEE,KAAOD,EAAEC,GACb,OAAO,EAIX,IAAKA,KAAKD,EACR,IAAKD,EAAEE,GACL,OAAO,EAIX,OAAO,EAeUC,CAAcL,EAAWlE,EAAQ+D,SAMtCG,EAAYlE,EAAQ+D,OAEpBD,EAAO9D,IAPLrV,EAAOqZ,IAAIC,gBAYzBtZ,EAAOqZ,IAAIQ,SAAQ,WACjBV,OAIJnZ,EAAOH,QAAUwV,EAAQ+D,QAAU","file":"js/7220.44f425a2bb0fe25231ee.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .pf-c-tabs.ins-rbac-page-header__tabs,.my-user-access .pf-c-tabs.ins-rbac-page-header__tabs{padding:0 var(--pf-c-page__main-section--PaddingRight) 0 var(--pf-c-page__main-section--PaddingLeft);background:white}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .ins-c-rbac__default-group-info-icon,.my-user-access .ins-c-rbac__default-group-info-icon{color:var(--pf-global--info-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .pf-c-table tbody tr.ins-c-rbac__group-default .pf-c-table__check:first-of-type input,.my-user-access .pf-c-table tbody tr.ins-c-rbac__group-default .pf-c-table__check:first-of-type input{display:none}.rbac .pf-c-question-circle-icon,.my-user-access .pf-c-question-circle-icon{color:var(--pf-global--palette--black-600);margin-left:var(--pf-global--spacer--sm);cursor:pointer}.rbac .pf-c-question-circle-icon.icon-active,.my-user-access .pf-c-question-circle-icon.icon-active{color:var(--pf-global--palette--blue-400)}.rbac .pf-c-popover,.my-user-access .pf-c-popover{min-width:350px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .delete-group-warning-icon,.my-user-access .delete-group-warning-icon{color:var(--pf-global--warning-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".rbac .ins-c-button__add-role-disabled:hover,.my-user-access .ins-c-button__add-role-disabled:hover{text-decoration:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\n\nexport default {\n  fields: [\n    {\n      component: 'wizard',\n      name: 'wizard',\n      isDynamic: true,\n      inModal: true,\n      showTitles: true,\n      title: 'Create group',\n      fields: [\n        {\n          name: 'name-and-description',\n          title: 'Name and Description',\n          nextStep: 'add-roles',\n          fields: [\n            {\n              component: componentTypes.TEXT_FIELD,\n              name: 'group-name',\n              label: 'Group name',\n              isRequired: true,\n              validate: [\n                { type: 'validate-group-name' },\n                {\n                  type: validatorTypes.REQUIRED,\n                },\n              ],\n            },\n            {\n              component: componentTypes.TEXTAREA,\n              name: 'group-description',\n              type: 'text',\n              label: 'Group description',\n              validate: [\n                {\n                  type: validatorTypes.MAX_LENGTH,\n                  threshold: 150,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'add-roles',\n          nextStep: 'add-users',\n          title: 'Add roles',\n          fields: [\n            {\n              component: 'set-roles',\n              name: 'roles-list',\n            },\n          ],\n        },\n        {\n          name: 'add-users',\n          nextStep: 'review',\n          title: 'Add members',\n          fields: [\n            {\n              component: 'set-users',\n              name: 'users-list',\n            },\n          ],\n        },\n        {\n          name: 'review',\n          title: 'Review details',\n          fields: [\n            {\n              component: 'summary-content',\n              name: 'summary-content',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { sortable } from '@patternfly/react-table';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description }) => [\n          ...acc,\n          {\n            uuid,\n            cells: [display_name || name, description],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, canSort, setSelectedRoles }) => {\n  const [filterValue, setFilterValue] = useState('');\n  const { current: columns } = useRef([\n    { title: 'Name', key: 'display_name', ...(canSort ? { transforms: [sortable] } : { orderBy: 'name' }) },\n    { title: 'Description' },\n  ]);\n\n  useEffect(() => {\n    fetchRoles({ orderBy: 'display_name' });\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact\n      borders={false}\n      createRows={createRows}\n      data={roles}\n      filterValue={filterValue}\n      fetchData={(config) => fetchRoles(mappedProps(config))}\n      setFilterValue={({ name }) => setFilterValue(name)}\n      isLoading={isLoading}\n      ouiaId=\"roles-table\"\n      pagination={pagination}\n      checkedRows={selectedRoles}\n      setCheckedItems={setCheckedItems}\n      titlePlural=\"roles\"\n      titleSingular=\"role\"\n      tableId=\"roles-list\"\n    />\n  );\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading } }) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  canSort: PropTypes.bool,\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  canSort: true,\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup } }) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid,\n  };\n};\n\nconst mapDispatchToPropsGroup = (dispatch) => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    canSort: false,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { FormGroup, Stack, StackItem, Text, TextContent } from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = (props) => {\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedRoles(formOptions.getState().values['roles-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedRoles);\n    formOptions.change('roles-list', selectedRoles);\n  }, [selectedRoles]);\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text>Select one or more roles to add to this group.</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <FormGroup fieldId=\"select-role\">\n            <RolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </FormGroup>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetRoles;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Form, FormGroup, Stack, StackItem, TextContent } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { CompactUsersList } from './users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\nimport '../../../App.scss';\n\nconst SetUsers = (props) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { input } = useFieldApi(props);\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setSelectedUsers(formOptions.getState().values['users-list'] || []);\n  }, []);\n\n  useEffect(() => {\n    input.onChange(selectedUsers);\n    formOptions.change('users-list', selectedUsers);\n  }, [selectedUsers]);\n\n  return (\n    <Fragment>\n      <Form>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <ActiveUser description={'These are all of the users in your Red Hat organization. To manage users, go to your'} />\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup fieldId=\"select-user\">\n              <Card>\n                <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default SetUsers;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst SummaryContent = () => {\n  const formOptions = useFormApi();\n  const {\n    'group-name': name,\n    'group-description': description,\n    'users-list': selectedUsers,\n    'roles-list': selectedRoles,\n  } = formOptions.getState().values;\n\n  return (\n    <Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          <Stack hasGutter>\n            <StackItem className=\"ins-c-rbac__summary\">\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Group name\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{name}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Group description\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>{description}</Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Roles\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedRoles.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid>\n                <GridItem md={3}>\n                  <Text component={TextVariants.h4} className=\"ins-c-rbac__bold-text\">\n                    Members\n                  </Text>\n                </GridItem>\n                <GridItem md={9}>\n                  <Text component={TextVariants.p}>\n                    {selectedUsers.map((role, index) => (\n                      <Text className=\"pf-u-mb-0\" key={index}>\n                        {role.label}\n                      </Text>\n                    ))}\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array,\n};\n\nexport default SummaryContent;\n","import { fetchGroups } from '../../helpers/group/group-helper';\nimport asyncDebounce from '../../utilities/async-debounce';\n\nconst asyncValidator = async (groupName, idKey, id) => {\n  if (!groupName) {\n    return undefined;\n  }\n\n  if (groupName.length > 150) {\n    throw 'Can have maximum of 150 characters.';\n  }\n\n  const response = await fetchGroups({ limit: 10, offset: 0, name: groupName, nameMatch: 'exact' }).catch((error) => {\n    console.error(error);\n    return undefined;\n  });\n\n  if (id ? response?.data?.some((item) => item[idKey] !== id) : response?.data?.length > 0) {\n    throw 'Name has already been taken.';\n  }\n\n  return undefined;\n};\n\nexport const debouncedAsyncValidator = asyncDebounce((value, idKey, id) => asyncValidator(value, idKey, id));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useHistory } from 'react-router-dom';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/esm/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/esm/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\nimport { WarningModal } from '../../common/warningModal';\nimport schema from './schema';\nimport { addGroup } from '../../../redux/actions/group-actions';\nimport SetRoles from './set-roles';\nimport SetUsers from './set-users';\nimport SummaryContent from './summary-content';\nimport { debouncedAsyncValidator } from '../validators';\n\nconst FormTemplate = (props) => <Pf4FormTemplate {...props} showFormControls={false} />;\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\nDescription.propTypes = {\n  Content: PropTypes.elementType.isRequired,\n};\n\nexport const mapperExtension = {\n  description: Description,\n  'set-roles': SetRoles,\n  'set-users': SetUsers,\n  'summary-content': SummaryContent,\n};\n\nexport const onCancel = (emptyCallback, nonEmptyCallback, setGroupData) => (formData) => {\n  setGroupData(formData);\n  if (Object.keys(formData).length > 0) {\n    nonEmptyCallback(true);\n  } else {\n    emptyCallback();\n  }\n};\n\nconst AddGroupWizard = ({ postMethod }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [cancelWarningVisible, setCancelWarningVisible] = useState(false);\n  const [groupData, setGroupData] = useState({});\n\n  const redirectToGroups = () => {\n    dispatch(\n      addNotification({\n        variant: 'warning',\n        title: 'Adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'Adding group was canceled by the user.',\n      })\n    );\n    history.push('/groups');\n  };\n\n  const onSubmit = (formData) => {\n    const groupData = {\n      name: formData['group-name'],\n      description: formData['group-description'],\n      user_list: formData['users-list'].map((user) => ({ username: user.label })),\n      roles_list: formData['roles-list'].map((role) => role.uuid),\n    };\n    history.push('/groups');\n    dispatch(addGroup(groupData))\n      .then(() => postMethod())\n      .then(() => {\n        dispatch(\n          addNotification({\n            variant: 'success',\n            title: 'Success adding group',\n            dismissDelay: 8000,\n            dismissable: false,\n            description: 'The group was added successfully.',\n          })\n        );\n      });\n  };\n\n  const validatorMapper = {\n    'validate-group-name': ({ idKey, id }) => (value) => debouncedAsyncValidator(value, idKey, id),\n  };\n\n  return cancelWarningVisible ? (\n    <WarningModal\n      type=\"group\"\n      isOpen={cancelWarningVisible}\n      onModalCancel={() => setCancelWarningVisible(false)}\n      onConfirmCancel={redirectToGroups}\n    />\n  ) : (\n    <FormRenderer\n      schema={schema}\n      subscription={{ values: true }}\n      FormTemplate={FormTemplate}\n      validatorMapper={validatorMapper}\n      componentMapper={{ ...componentMapper, ...mapperExtension }}\n      onSubmit={onSubmit}\n      initialValues={groupData}\n      onCancel={onCancel(redirectToGroups, setCancelWarningVisible, setGroupData)}\n    />\n  );\n};\n\nAddGroupWizard.propTypes = {\n  postMethod: PropTypes.func,\n};\n\nexport default AddGroupWizard;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\nimport ModalFormTemplate from '../common/ModalFormTemplate';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nimport { Skeleton } from '@patternfly/react-core';\nimport { debouncedAsyncValidator } from './validators';\n\nconst EditGroupModal = ({ addNotification, updateGroup, postMethod, closeUrl, group, onClose }) => {\n  const [selectedGroup, setSelectedGroup] = useState(undefined);\n\n  const history = useHistory();\n  const match = useRouteMatch('/groups/edit/:id');\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    match &&\n      fetchGroup(match.params.id)\n        .payload.then((data) => setGroupData(data))\n        .catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [group]);\n\n  const onSubmit = (data) => {\n    const user_data = { ...data };\n    postMethod\n      ? updateGroup(user_data)\n          .then(() => postMethod())\n          .then(history.push(closeUrl))\n      : updateGroup(user_data).then(() => history.push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      dismissable: false,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was canceled by the user.' : 'Adding group was canceled by the user.',\n    });\n    onClose();\n    history.push(closeUrl);\n  };\n\n  const schema = {\n    fields: [\n      {\n        name: 'name',\n        label: 'Name',\n        component: selectedGroup ? componentTypes.TEXT_FIELD : 'skeleton',\n        ...(selectedGroup ? { validateOnMount: true } : {}),\n        validate: [\n          { type: 'validate-group-name', id: match ? match.params.id : group.id, idKey: 'uuid' },\n          {\n            type: validatorTypes.REQUIRED,\n          },\n        ],\n      },\n      {\n        name: 'description',\n        label: 'Description',\n        component: selectedGroup ? componentTypes.TEXTAREA : 'skeleton',\n        validate: [\n          {\n            type: validatorTypes.MAX_LENGTH,\n            threshold: 150,\n          },\n        ],\n      },\n    ],\n  };\n\n  const validatorMapper = {\n    'validate-group-name': ({ idKey, id }) => (value) => debouncedAsyncValidator(value, idKey, id),\n  };\n\n  return (\n    <FormRenderer\n      schema={schema}\n      componentMapper={{\n        ...componentMapper,\n        skeleton: Skeleton,\n      }}\n      onCancel={onCancel}\n      onSubmit={onSubmit}\n      validatorMapper={validatorMapper}\n      initialValues={{ ...selectedGroup }}\n      FormTemplate={(props) => (\n        <ModalFormTemplate {...props} ModalProps={{ onClose: onCancel, isOpen: true, variant: 'medium', title: `Edit group's information` }} />\n      )}\n    />\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null,\n};\n\nEditGroupModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n  group: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      updateGroup,\n      fetchGroup,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button, Checkbox, Modal, ModalVariant, Text, TextContent } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\nimport './remove-group-modal.scss';\n\nconst RemoveGroupModal = ({ removeGroups, group, isLoading, fetchGroup, groupsUuid, isModalOpen, postMethod, closeUrl }) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const history = useHistory();\n\n  const [checked, setChecked] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids)\n      .then(() => postMethod(uuids))\n      .then(history.push(closeUrl));\n  };\n\n  const onCancel = () => history.goBack();\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      variant={ModalVariant.small}\n      title={\n        <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n          &nbsp; {multipleGroups ? 'Delete groups?' : 'Delete group?'}\n        </Text>\n      }\n      onClose={onCancel}\n      actions={[\n        <Button key=\"submit\" isDisabled={!checked} variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {multipleGroups ? 'Delete groups' : 'Delete group'}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        {multipleGroups ? (\n          <Text>\n            Deleting these <b>{groupsUuid.length}</b> groups removes all roles from the members inside the group.\n          </Text>\n        ) : isLoading ? (\n          <FormItemLoader />\n        ) : (\n          <Text>\n            Deleting the <b>{group.name}</b> group removes all roles from the members inside the group.\n          </Text>\n        )}\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={checked}\n        onChange={() => setChecked(!checked)}\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  closeUrl: '/groups',\n};\n\nRemoveGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  closeUrl: PropTypes.string,\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup } }) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n      removeGroups,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal);\n","import React, { Fragment, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Popover } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst DefaultPlatformPopover = ({ uuid }) => {\n  const [isPopoverVisible, setPopoverVisible] = useState(false);\n  const popoverRootRef = useRef(null);\n\n  return (\n    <span ref={popoverRootRef} key={`${uuid}-popover`} id=\"default-group-popover\">\n      <Popover\n        zIndex=\"110\"\n        position=\"right\"\n        isVisible={isPopoverVisible}\n        shouldClose={() => setPopoverVisible(false)}\n        hideOnOutsideClick\n        bodyContent=\"This group contains the roles that all users in your organization inherit by default.\"\n        appendTo={popoverRootRef.current}\n      >\n        <OutlinedQuestionCircleIcon\n          onClick={() => setPopoverVisible(!isPopoverVisible)}\n          className={classNames('pf-c-question-circle-icon', { 'icon-active': isPopoverVisible })}\n        />\n      </Popover>\n    </span>\n  );\n};\n\nDefaultPlatformPopover.propTypes = {\n  uuid: PropTypes.string.isRequired,\n};\n\nexport const createRows = (data, opened, selectedRows = []) => {\n  return data.reduce(\n    (acc, { uuid, name, roleCount, principalCount, modified, platform_default: isPlatformDefault }) => [\n      ...acc,\n      {\n        uuid,\n        isPlatformDefault,\n        cells: [\n          <Fragment key={uuid}>\n            <div className=\"pf-m-inline-flex\">\n              <Link key={`${uuid}-link`} to={`/groups/detail/${uuid}`}>\n                {name}\n              </Link>\n              {isPlatformDefault && <DefaultPlatformPopover uuid={uuid} />}\n            </div>\n          </Fragment>,\n          roleCount,\n          principalCount,\n          <Fragment key={`${uuid}-modified`}>\n            <DateFormat date={modified} type=\"relative\" />\n          </Fragment>,\n        ],\n        selected: Boolean(selectedRows && selectedRows.find((row) => row.uuid === uuid)),\n      },\n    ],\n    []\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems, isHeader }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className={isHeader ? `ins-rbac-page-header__tabs` : ''} activeKey={activeTab ? activeTab.eventKey : 0} onSelect={handleTabClick}>\n      {tabItems.map((item) => (\n        <Tab title={item.title} key={item.eventKey} eventKey={item.eventKey} name={item.name} />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool,\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\n\nexport const createRows = (data, _opened, checkedRows = []) => {\n  return data.reduce(\n    (acc, { is_active: isActive, username, email, first_name: firstName, last_name: lastName }) => [\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [\n          {\n            title: <Label color={isActive && 'green'}>{isActive ? 'Active' : 'Inactive'}</Label>,\n            props: {\n              data: { isActive },\n            },\n          },\n          username,\n          email,\n          lastName,\n          firstName,\n        ],\n        selected: checkedRows.find((row) => row.uuid === username),\n      },\n    ],\n    []\n  );\n};\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant, StackItem, Stack, TextContent } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, addMembersToGroup, fetchMembersForGroup } from '../../../redux/actions/group-actions';\nimport { CompactUsersList } from '../add-group/users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchMembersForGroup,\n}) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const onSubmit = () => {\n    const userList = selectedUsers.map((user) => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        dismissDelay: 8000,\n        dismissable: false,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`,\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchMembersForGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      dismissable: false,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was canceled by the user.`,\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members\"\n      variant={ModalVariant.medium}\n      isOpen\n      actions={[\n        <Button key=\"confirm\" ouiaId=\"primary-confirm-button\" isDisabled={selectedUsers.length === 0} variant=\"primary\" onClick={onSubmit}>\n          Add to group\n        </Button>,\n        <Button id=\"add-groups-cancel\" ouiaId=\"secondary-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <ActiveUser description=\"These are all of the users in your Red Hat organization. To manage users, go to your\" />\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <CompactUsersList selectedUsers={selectedUsers} setSelectedUsers={setSelectedUsers} />\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: [],\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func,\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchMembersForGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading } }) => ({\n  isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      addNotification,\n      addGroup,\n      addMembersToGroup,\n      fetchMembersForGroup,\n    },\n    dispatch\n  );\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","/* eslint-disable camelcase */\nimport { nowrap } from '@patternfly/react-table';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, Route, useHistory, useParams } from 'react-router-dom';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchMembersForGroup, removeMembersFromGroup } from '../../../redux/actions/group-actions';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport { routes as paths } from '../../../../package.json';\n\nconst columns = [\n  { title: 'Status', transforms: [nowrap] },\n  { title: 'Username' },\n  { title: 'Email' },\n  { title: 'Last name' },\n  { title: 'First name' },\n];\n\nconst selector = ({ groupReducer: { groups, selectedGroup } }) => ({\n  principals: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  userIdentity: groups.identity,\n  groupName: selectedGroup.name,\n  platform_default: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading,\n});\n\nconst removeModalText = (name, group, plural) =>\n  plural ? (\n    <p>\n      These <b> {`${name}`}</b> members will lose all the roles associated with the <b>{`${group}`}</b> group.\n    </p>\n  ) : (\n    <p>\n      <b>{`${name}`}</b> will lose all the roles associated with the <b> {`${group}`}</b> group.\n    </p>\n  );\n\nconst GroupPrincipals = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedPrincipals, setSelectedPrincipals] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  const { uuid } = useParams();\n  const { principals, pagination, groupName, userIdentity, isLoading, platform_default } = useSelector(selector, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options = pagination) => {\n    dispatch(fetchMembersForGroup(uuid, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(uuid, userNames)).then(() => {\n      setSelectedPrincipals([]);\n      fetchData(undefined, { ...pagination, offset: 0 });\n    });\n  };\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin)\n      ? null\n      : [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, principal) => {\n              setConfirmDelete(() => () => removeMembers([principal.username.title]));\n              setDeleteInfo({\n                title: 'Remove member?',\n                text: removeModalText(principal.username.title, groupName, false),\n                confirmButtonLabel: 'Remove member',\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-members']}\n        render={(args) => <AddGroupMembers fetchData={fetchData} closeUrl={`/groups/detail/${uuid}/members`} {...args} />}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link to={`/groups/detail/${uuid}/members/add_members`} key=\"remove-from-group\" className=\"pf-m-visible-on-md\">\n            <Button variant=\"primary\" aria-label=\"Add member\">\n              Add member\n            </Button>\n          </Link>,\n          {\n            label: 'Add member',\n            props: {\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/members/add_members`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleMembersSelected = selectedPrincipals.length > 1;\n              const removeText = multipleMembersSelected ? 'Remove members?' : 'Remove member?';\n              setConfirmDelete(() => () => removeMembers(selectedPrincipals.map((user) => user.uuid)));\n              setDeleteInfo({\n                title: removeText,\n                confirmButtonLabel: removeText,\n                text: removeModalText(\n                  multipleMembersSelected ? selectedPrincipals.length : selectedPrincipals[0].uuid,\n                  groupName,\n                  multipleMembersSelected\n                ),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        isOpen={showRemoveModal}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        }}\n      />\n      <Section type=\"content\" id={'tab-principals'}>\n        {platform_default ? (\n          <Card>\n            <CardBody>\n              <Bullseye>\n                <TextContent>\n                  <Text component={TextVariants.h1}>All users in this organization are members of this group.</Text>\n                </TextContent>\n              </Bullseye>\n            </CardBody>\n          </Card>\n        ) : (\n          <TableToolbarView\n            data={(principals || []).map((user) => ({ ...user, uuid: user.username }))}\n            isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n            createRows={createRows}\n            columns={columns}\n            routes={routes}\n            actionResolver={actionResolver}\n            filterPlaceholder=\"username\"\n            titlePlural=\"members\"\n            titleSingular=\"member\"\n            ouiaId=\"members-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={({ limit, offset, name }) => fetchData(name, { limit, offset })}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            checkedRows={selectedPrincipals}\n            isLoading={isLoading}\n            rowWrapper={UsersRow}\n            setCheckedItems={setCheckedPrincipals}\n            toolbarButtons={toolbarButtons}\n            emptyProps={{ title: 'There are no members in this group', description: ['Add a user to configure user access.', ''] }}\n            tableId=\"group-members\"\n          />\n        )}\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default GroupPrincipals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  return (\n    <RemoveModal\n      text={\n        <TextContent>\n          <Text>\n            Once you edit the <b>Default access</b> group, the system will no longer update it with new default access roles. The group name will\n            change to <b>Custom default access</b>.\n          </Text>\n        </TextContent>\n      }\n      title={'Warning'}\n      withCheckbox\n      isOpen={isOpen}\n      confirmButtonLabel={'Continue'}\n      onClose={onClose}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DefaultGroupChange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Modal, ModalVariant, Stack, StackItem, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport DefaultGroupChange from './default-group-change-modal';\nimport '../../../App.scss';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: {\n    params: { uuid },\n  },\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  name,\n  isDefault,\n  isChanged,\n  addNotification,\n  onDefaultGroupChanged,\n  fetchRolesForGroup,\n}) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const onCancel = () => {\n    setSelectedRoles && setSelectedRoles([]);\n    addNotification({\n      variant: 'warning',\n      title: 'Adding roles to group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding roles to group was canceled by the user.',\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map((role) => role.uuid);\n    addRolesToGroup(uuid, rolesList, fetchRolesForGroup);\n    if (isDefault && !isChanged) {\n      onDefaultGroupChanged(true);\n    }\n\n    return push(closeUrl);\n  };\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange isOpen={showConfirmModal} onClose={onCancel} onSubmit={onSubmit} />\n  ) : (\n    <Modal\n      title=\"Add roles to group\"\n      variant={ModalVariant.medium}\n      isOpen\n      onClose={() => {\n        onCancel();\n        setShowConfirmModal(true);\n      }}\n      actions={[\n        <Button\n          aria-label=\"Save\"\n          ouiaId=\"primary-save-button\"\n          variant=\"primary\"\n          key=\"confirm\"\n          isDisabled={selectedRoles.length === 0}\n          onClick={() => {\n            setShowConfirmModal(true);\n            (!isDefault || isChanged) && onSubmit();\n          }}\n        >\n          Add to group\n        </Button>,\n        <Button aria-label=\"Cancel\" ouiaId=\"secondary-cancel-button\" variant=\"link\" key=\"cancel\" onClick={onCancel}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Stack hasGutter>\n        {title && (\n          <StackItem>\n            <Title headingLevel=\"h4\" size=\"xl\">\n              {title}\n            </Title>\n          </StackItem>\n        )}\n        <StackItem>\n          <TextContent>\n            <Text component={TextVariants.p}>\n              This role list has been filtered to only show roles that are not currently in <b> {name}</b>.\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={selectedRoles} setSelectedRoles={setSelectedRoles} />\n          </Card>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.any,\n    goBack: PropTypes.func.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  addNotification: PropTypes.func,\n  onDefaultGroupChanged: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func,\n};\n\nexport default AddGroupRoles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  return isDefault && !isChanged && showConfirmModal ? (\n    <DefaultGroupChange\n      isOpen={showConfirmModal && isOpen}\n      onClose={() => {\n        onClose();\n        setShowConfirmModal(false);\n      }}\n      onSubmit={() => {\n        onSubmit();\n      }}\n    />\n  ) : (\n    <RemoveModal\n      text={text}\n      title={title}\n      isOpen={isOpen}\n      confirmButtonLabel={confirmButtonLabel}\n      onClose={() => {\n        onClose();\n      }}\n      onSubmit={() => {\n        setShowConfirmModal(true);\n        (!isDefault || isChanged) && onSubmit();\n      }}\n    />\n  );\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.node,\n  title: PropTypes.node,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false,\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup, fetchAddRolesForGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport RemoveRole from './remove-role-modal';\nimport { routes as paths } from '../../../../package.json';\nimport './group-roles.scss';\n\nconst columns = [{ title: 'Name', orderBy: 'name' }, { title: 'Description' }, { title: 'Last modified' }];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { uuid, display_name, name, description, modified }) => [\n          ...acc,\n          {\n            uuid,\n            title: display_name || name,\n            cells: [\n              <Fragment key={`${uuid}-name`}>\n                <Link to={`/groups/detail/${groupUuid}/roles/detail/${uuid}`}>{display_name || name}</Link>\n              </Fragment>,\n              description,\n              <Fragment key={`${uuid}-modified`}>\n                <DateFormat date={modified} type=\"relative\" />\n              </Fragment>,\n            ],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === uuid)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst addRoleButton = (isDisabled) => {\n  const addRoleButtonContent = (\n    <Button variant=\"primary\" aria-label=\"Add role\" isAriaDisabled={isDisabled}>\n      Add role\n    </Button>\n  );\n\n  return isDisabled ? (\n    <Tooltip content=\"All available roles have already been added to the group\">{addRoleButtonContent}</Tooltip>\n  ) : (\n    addRoleButtonContent\n  );\n};\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: {\n    params: { uuid },\n  },\n  userIdentity,\n  name,\n  isDefault,\n  isChanged,\n  onDefaultGroupChanged,\n  fetchAddRolesForGroup,\n  disableAddRoles,\n  addNotification,\n}) => {\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [selectedAddRoles, setSelectedAddRoles] = useState([]);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(() => null);\n  const [deleteInfo, setDeleteInfo] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n\n  useEffect(() => {\n    fetchAddRolesForGroup(uuid);\n  }, [roles]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{name}</b> group will lose the permissions in {plural ? 'these' : 'the'}\n      <b> {role}</b> role{plural ? `s` : ''}.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          {\n            title: 'Remove',\n            onClick: (_event, _rowId, role) => {\n              setConfirmDelete(() => () => removeRoles(uuid, [role.uuid], () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)));\n              setDeleteInfo({\n                title: 'Remove role?',\n                confirmButtonLabel: 'Remove role',\n                text: removeModalText(name, role.title, false),\n              });\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const routes = () => (\n    <Fragment>\n      <Route\n        path={paths['group-add-roles']}\n        render={(args) => (\n          <AddGroupRoles\n            fetchData={fetchRoles}\n            fetchRolesForGroup={() => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)}\n            selectedRoles={selectedAddRoles}\n            setSelectedRoles={setSelectedAddRoles}\n            closeUrl={`/groups/detail/${uuid}/roles`}\n            addRolesToGroup={addRoles}\n            name={name}\n            isDefault={isDefault}\n            isChanged={isChanged}\n            addNotification={addNotification}\n            onDefaultGroupChanged={onDefaultGroupChanged}\n            {...args}\n          />\n        )}\n      />\n    </Fragment>\n  );\n\n  const history = useHistory();\n\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link\n            className={`pf-m-visible-on-md ins-c-button__add-role${disableAddRoles && '-disabled'}`}\n            to={`/groups/detail/${uuid}/roles/add_roles`}\n            key=\"add-to-group\"\n          >\n            {addRoleButton(disableAddRoles)}\n          </Link>,\n          {\n            label: 'Add role',\n            props: {\n              isDisabled: disableAddRoles,\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(`/groups/detail/${uuid}/roles/add_roles`);\n            },\n          },\n          {\n            label: 'Remove',\n            props: {\n              isDisabled: !selectedRoles || !selectedRoles.length > 0,\n              variant: 'danger',\n            },\n            onClick: () => {\n              const multipleRolesSelected = selectedRoles.length > 1;\n              setConfirmDelete(() => () =>\n                removeRoles(\n                  uuid,\n                  selectedRoles.map((role) => role.uuid),\n                  () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)\n                )\n              );\n              setDeleteInfo({\n                title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n                confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n                text: removeModalText(\n                  name,\n                  multipleRolesSelected ? selectedRoles.length : roles.find((role) => role.uuid === selectedRoles[0].uuid).name,\n                  multipleRolesSelected\n                ),\n              });\n\n              setShowRemoveModal(true);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={deleteInfo.text}\n        title={deleteInfo.title}\n        isOpen={showRemoveModal}\n        isChanged={isChanged}\n        isDefault={isDefault}\n        confirmButtonLabel={deleteInfo.confirmButtonLabel}\n        onClose={() => setShowRemoveModal(false)}\n        onSubmit={() => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isDefault && !isChanged);\n        }}\n      />\n\n      <Section type=\"content\" id={'tab-roles'}>\n        <TableToolbarView\n          columns={columns}\n          isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n          createRows={(...props) => createRows(uuid, ...props)}\n          data={roles}\n          filterValue={filterValue}\n          fetchData={(config) => {\n            fetchRolesForGroup(config)(uuid);\n          }}\n          setFilterValue={({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          }}\n          isLoading={isLoading}\n          pagination={pagination}\n          checkedRows={selectedRoles}\n          setCheckedItems={setCheckedItems}\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          routes={routes}\n          ouiaId=\"roles-table\"\n          emptyProps={{ title: 'There are no roles in this group', description: ['Add a role to configure user access.', ''] }}\n          filters={[\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue },\n          ]}\n          tableId=\"group-roles\"\n        />\n      </Section>\n    </React.Fragment>\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups } }) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name,\n    isDefault: selectedGroup.platform_default,\n    isChanged: !selectedGroup.system,\n    disableAddRoles: !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options)),\n    fetchAddRolesForGroup: (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {})),\n    addNotification: (...props) => dispatch(addNotification(...props)),\n    fetchGroup: (apiProps) => dispatch(fetchGroup(apiProps)),\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  fetchAddRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool,\n    }),\n  }),\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  onDefaultGroupChanged: PropTypes.func,\n  disableAddRoles: PropTypes.bool.isRequired,\n  addNotification: PropTypes.func,\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, Link, useLocation } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup, fetchGroups } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Alert, AlertActionCloseButton, Popover, Split, SplitItem, DropdownItem, Dropdown, KebabToggle } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { routes } from '../../../package.json';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport './group.scss';\n\nconst Group = ({\n  match: {\n    params: { uuid },\n  },\n  group,\n  fetchGroup,\n  isFetching,\n  onDelete,\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'Groups', to: '/groups' },\n    { title: isFetching ? undefined : group.name, isActive: true },\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` },\n  ];\n\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo] = useState(false);\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchData(uuid);\n    insights.chrome.appObjectId(uuid);\n    return () => insights.chrome.appObjectId(undefined);\n  }, []);\n\n  const defaultGroupChangedIcon = (name) => (\n    <div style={{ display: 'inline-flex' }}>\n      {name}\n      <div className=\"pf-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={\n            <div>\n              Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n              name has changed to <b>Custom default access</b>.\n            </div>\n          }\n        >\n          <InfoCircleIcon className=\"ins-c-rbac__default-group-info-icon\" />\n        </Popover>\n      </div>\n    </div>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      component={\n        <Link\n          to={(location.pathname.includes('members') ? routes['group-detail-members-edit'] : routes['group-detail-roles-edit']).replace(\n            ':uuid',\n            uuid\n          )}\n        >\n          Edit\n        </Link>\n      }\n      key=\"edit-group\"\n    />,\n    <DropdownItem\n      component={\n        <Link\n          onClick={onDelete}\n          to={() =>\n            (location.pathname.includes('members') ? routes['group-detail-members-remove'] : routes['group-detail-roles-remove']).replace(\n              ':uuid',\n              uuid\n            )\n          }\n        >\n          Delete\n        </Link>\n      }\n      className=\"ins-c-group__action\"\n      key=\"delete-group\"\n    />,\n  ];\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={breadcrumbsList()}>\n        <Split hasGutter>\n          <SplitItem isFilled>\n            <TopToolbarTitle\n              title={\n                !isFetching && group ? (\n                  <Fragment>{group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name}</Fragment>\n                ) : undefined\n              }\n              description={!isFetching && group ? group.description : undefined}\n            />\n          </SplitItem>\n          <SplitItem>\n            {group.platform_default ? null : (\n              <Dropdown\n                ouiaId=\"group-title-actions-dropdown\"\n                toggle={<KebabToggle onToggle={(isOpen) => setDropdownOpen(isOpen)} id=\"group-actions-dropdown\" />}\n                isOpen={isDropdownOpen}\n                isPlain\n                position=\"right\"\n                dropdownItems={dropdownItems}\n              />\n            )}\n          </SplitItem>\n        </Split>\n        {showDefaultGroupChangedInfo ? (\n          <Alert\n            variant=\"info\"\n            isInline\n            title=\"Default access group has changed\"\n            action={<AlertActionCloseButton onClose={() => setShowDefaultGroupChangedInfo(false)} />}\n            className=\"pf-u-mb-lg pf-u-mt-sm\"\n          >\n            Now that you have edited the <b>Default access</b> group, the system will no longer update it with new default access roles. The group\n            name has changed to <b>Custom default access</b>.\n          </Alert>\n        ) : null}\n      </TopToolbar>\n      <AppTabs isHeader tabItems={tabItems} />\n      <Route\n        path={[routes['group-detail-roles-remove'], routes['group-detail-members-remove']]}\n        render={(props) => (\n          <RemoveGroup\n            {...props}\n            postMethod={() => {\n              dispatch(fetchGroups());\n            }}\n            isModalOpen\n            groupsUuid={[group]}\n          />\n        )}\n      />\n      <Route\n        path={[routes['group-detail-roles-edit'], routes['group-detail-members-edit']]}\n        render={(props) => (\n          <EditGroup\n            {...props}\n            group={group}\n            closeUrl={`group/detail/${uuid}`}\n            postMethod={() => {\n              fetchData(uuid);\n            }}\n          />\n        )}\n      />\n      <Route\n        path={routes['group-detail-roles']}\n        render={(props) => <GroupRoles {...props} onDefaultGroupChanged={setShowDefaultGroupChangedInfo} />}\n      />\n      <Route path={routes['group-detail-members']} component={GroupPrincipals} />\n      <Route render={() => <Redirect to={`/groups/detail/${uuid}/roles`} />} />\n      {!group && <ListLoader />}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isRecordLoading, isRecordRolesLoading } }) => ({\n  group: selectedGroup,\n  isFetching: isRecordLoading || isRecordRolesLoading,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchGroup,\n    },\n    dispatch\n  );\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    platform_default: PropTypes.bool,\n    system: PropTypes.bool,\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nGroup.defaultProps = {\n  isFetching: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst GroupRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={classnames(className, {\n        'ins-c-rbac__group-default': row.isPlatformDefault,\n      })}\n      row={row}\n      {...props}\n    />\n  );\n};\n\nGroupRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    isPlatformDefault: PropTypes.bool,\n  }),\n  className: PropTypes.string,\n};\n\nexport default GroupRowWrapper;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups, fetchSystemGroup } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\nimport GroupRowWrapper from './group-row-wrapper';\nimport { routes as paths } from '../../../package.json';\nimport './groups.scss';\nimport PageActionRoute from '../common/page-action-route';\n\nconst columns = [\n  { title: 'Name', key: 'name', transforms: [sortable] },\n  { title: 'Roles' },\n  { title: 'Members' },\n  { title: 'Last modified', key: 'modified', transforms: [sortable] },\n];\n\nconst Groups = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [removeGroupsList, setRemoveGroupsList] = useState([]);\n\n  const dispatch = useDispatch();\n  const { groups, pagination, userIdentity, isLoading } = useSelector(\n    ({ groupReducer: { groups, isLoading, systemGroup } }) => ({\n      groups: [\n        ...(systemGroup?.name?.match(new RegExp(filterValue, 'i')) ? [systemGroup] : []),\n        ...(groups?.data?.filter(({ platform_default } = {}) => !platform_default) || []),\n      ],\n      pagination: groups.meta,\n      userIdentity: groups.identity,\n      isLoading,\n      systemGroup,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'groups', secondaryNav: true });\n    dispatch(fetchGroups({ ...pagination, name: filterValue }));\n    dispatch(fetchSystemGroup(filterValue));\n  }, []);\n\n  const history = useHistory();\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) =>\n      newSelection(rows)\n        .filter(({ platform_default: isPlatformDefault }) => !isPlatformDefault)\n        .map(({ uuid, name }) => ({ uuid, label: name }))\n    );\n  };\n\n  const routes = () => (\n    <Fragment>\n      <Route exact path={paths['add-group']}>\n        <AddGroupWizard\n          postMethod={(config) => {\n            dispatch(fetchGroups(config));\n            setFilterValue('');\n          }}\n        />\n      </Route>\n      <Route exact path={paths['group-edit'].path}>\n        <EditGroup\n          postMethod={(config) => {\n            dispatch(fetchGroups(config));\n            setFilterValue('');\n          }}\n        />\n      </Route>\n      <Route exact path={paths['remove-group']}>\n        <RemoveGroup\n          postMethod={(ids) => {\n            dispatch(fetchGroups());\n            setSelectedRows(selectedRows.filter((row) => !ids.includes(row.uuid)));\n            setFilterValue('');\n          }}\n          isModalOpen\n          groupsUuid={removeGroupsList}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const actionResolver = ({ isPlatformDefault }) =>\n    isPlatformDefault || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin)\n      ? null\n      : [\n          {\n            title: 'Edit',\n            onClick: (_event, _rowId, group) => {\n              history.push(`/groups/edit/${group.uuid}`);\n            },\n          },\n          {\n            title: 'Delete',\n            onClick: (_event, _rowId, group) => {\n              setRemoveGroupsList([group]);\n              history.push(paths['remove-group']);\n            },\n          },\n        ];\n\n  // TODO check this later\n  const toolbarButtons = () => [\n    ...(userIdentity && userIdentity.user && userIdentity.user.is_org_admin\n      ? [\n          <Link to={paths['add-group']} key=\"add-group\" className=\"pf-m-visible-on-md\">\n            <Button ouiaId=\"create-group-button\" variant=\"primary\" aria-label=\"Create group\">\n              Create group\n            </Button>\n          </Link>,\n          {\n            label: 'Create group',\n            props: {\n              className: 'pf-m-hidden-on-md',\n            },\n            onClick: () => {\n              history.push(paths['add-group']);\n            },\n          },\n          {\n            label: 'Edit',\n            props: {\n              isDisabled: !(selectedRows.length === 1),\n            },\n            onClick: () => history.push(`/groups/edit/${selectedRows[0].uuid}`),\n          },\n          {\n            label: 'Delete',\n            props: {\n              isDisabled: !selectedRows.length > 0,\n            },\n            onClick: () => {\n              setRemoveGroupsList(selectedRows);\n              history.push(paths['remove-group']);\n            },\n          },\n        ]\n      : []),\n  ];\n\n  const renderGroupsList = () => (\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottom>\n          <TopToolbarTitle title=\"Groups\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={'tab-groups'}>\n          <TableToolbarView\n            data={groups.map((group) => (group.platform_default ? { ...group, principalCount: 'All' } : group))}\n            createRows={createRows}\n            columns={columns}\n            isSelectable={userIdentity && userIdentity.user && userIdentity.user.is_org_admin}\n            checkedRows={selectedRows}\n            setCheckedItems={setCheckedItems}\n            routes={routes}\n            actionResolver={actionResolver}\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            ouiaId=\"groups-table\"\n            pagination={pagination}\n            filterValue={filterValue}\n            fetchData={(config) => dispatch(fetchGroups(config))}\n            setFilterValue={({ name }) => setFilterValue(name)}\n            toolbarButtons={toolbarButtons}\n            isLoading={isLoading}\n            filterPlaceholder=\"name\"\n            rowWrapper={GroupRowWrapper}\n            tableId=\"groups\"\n          />\n        </Section>\n      </StackItem>\n    </Stack>\n  );\n  return (\n    <Switch>\n      <PageActionRoute pageAction=\"role-detail\" path={paths['group-detail-role-detail']} render={(props) => <Role {...props} />} />\n      <PageActionRoute\n        pageAction=\"group-detail\"\n        path={paths['group-detail']}\n        render={(props) => <Group {...props} onDelete={() => setFilterValue('')} />}\n      />\n      <PageActionRoute pageAction=\"group-list\" path={paths.groups} render={() => renderGroupsList()} />\n    </Switch>\n  );\n};\n\nexport default Groups;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./remove-group-modal.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};"],"sourceRoot":""}
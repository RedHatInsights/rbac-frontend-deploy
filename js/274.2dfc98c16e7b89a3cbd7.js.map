{"version":3,"sources":["webpack://insights-rbac-frontend/./src/presentational-components/shared/ActiveUsers.js","webpack://insights-rbac-frontend/./src/presentational-components/shared/UsersRow.js","webpack://insights-rbac-frontend/./src/helpers/user/user-helper.js","webpack://insights-rbac-frontend/./src/redux/actions/user-actions.js","webpack://insights-rbac-frontend/./src/smart-components/group/add-group/users-list.js"],"names":["ActiveUser","description","linkTitle","className","component","TextVariants","href","window","insights","chrome","isProd","target","rel","propTypes","PropTypes","defaultProps","UsersRow","row","props","status","isActive","RowWrapper","classNames","data","principalApi","getPrincipalApi","principalStatusApiMap","Active","Inactive","fetchUsers","apiProps","type","ActionTypes","payload","limit","offset","username","orderBy","email","sortOrder","mappedStatus","length","listPrincipals","undefined","then","meta","columns","title","key","transforms","nowrap","sortable","createRows","userLinks","_expanded","checkedRows","reduce","acc","is_active","firstName","first_name","lastName","last_name","isOrgAdmin","is_org_admin","uuid","cells","Fragment","Link","to","color","selected","Boolean","find","UsersList","users","isLoading","pagination","selectedUsers","setSelectedUsers","useState","filterValue","setFilterValue","emailValue","setEmailValue","statusValue","setStatusValue","useEffect","mappedProps","defaultSettings","isSelectable","isCompact","borders","ouiaId","fetchData","config","Object","prototype","hasOwnProperty","call","setCheckedItems","newSelection","map","label","sortBy","index","direction","rowWrapper","titlePlural","titleSingular","filters","value","placeholder","items","mapStateToProps","userReducer","isUserDataLoading","mapDispatchToProps","dispatch","addNotification","history","goBack","push","searchFilter","count","connect","CompactUsersList","propsFromState","propsFromDispatch","ownProps","defaultCompactSettings"],"mappings":"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","file":"js/274.2dfc98c16e7b89a3cbd7.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nconst ActiveUser = ({ description, linkTitle }) => (\n  <Text className=\"pf-u-mt-0\" component={TextVariants.h7}>\n    {description}\n    <Text\n      component={TextVariants.a}\n      href={`https://www.${window.insights.chrome.isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {linkTitle}\n      <ExternalLinkAltIcon />\n    </Text>\n    .\n  </Text>\n);\n\nActiveUser.propTypes = {\n  description: PropTypes.node,\n  linkTitle: PropTypes.node,\n};\n\nActiveUser.defaultProps = {\n  description: '',\n  linkTitle: ' user management list ',\n};\n\nexport default ActiveUser;\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  const isActive = status?.props?.['data-is-active'];\n  return <RowWrapper className={classNames('ins-c-rbac__user-row', { 'ins-m-inactive': !isActive })} row={row} {...props} />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        data: PropTypes.shape({\n          isActive: PropTypes.bool,\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default UsersRow;\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nconst principalStatusApiMap = {\n  Active: 'enabled',\n  Inactive: 'disabled',\n};\nexport function fetchUsers({ limit, offset, username, orderBy, email, status = [] }) {\n  const sortOrder = orderBy === '-username' ? 'desc' : 'asc';\n  const mappedStatus = status.length === 2 ? 'all' : principalStatusApiMap[status[0]] || 'all';\n  return principalApi.listPrincipals(limit, offset, undefined, username, sortOrder, email, mappedStatus).then(({ data, meta }) => {\n    return {\n      data,\n      meta: {\n        ...meta,\n        offset,\n        limit,\n      },\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps),\n});\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Label } from '@patternfly/react-core';\nimport { sortable, nowrap } from '@patternfly/react-table';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport { CheckIcon, CloseIcon } from '@patternfly/react-icons';\n\nconst columns = [\n  { title: 'Org. Administrator', key: 'org-admin', transforms: [nowrap] },\n  { title: 'Username', key: 'username', transforms: [sortable] },\n  { title: 'Email' },\n  { title: 'First name', transforms: [nowrap] },\n  { title: 'Last name', transforms: [nowrap] },\n  { title: 'Status', transforms: [nowrap] },\n];\n\nconst createRows = (userLinks) => (data, _expanded, checkedRows = []) => {\n  return data\n    ? data.reduce(\n        (acc, { username, is_active: isActive, email, first_name: firstName, last_name: lastName, is_org_admin: isOrgAdmin }) => [\n          ...acc,\n          {\n            uuid: username,\n            cells: [\n              isOrgAdmin ? (\n                <Fragment>\n                  <CheckIcon key=\"yes-icon\" className=\"pf-u-mr-sm\" />\n                  <span key=\"yes\">Yes</span>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <CloseIcon key=\"no-icon\" className=\"pf-u-mr-sm\" />\n                  <span key=\"no\">No</span>\n                </Fragment>\n              ),\n              { title: userLinks ? <Link to={`/users/detail/${username}`}>{username}</Link> : username },\n              email,\n              firstName,\n              lastName,\n              {\n                title: (\n                  <Label key=\"status\" color={isActive && 'green'}>\n                    {isActive ? 'Active' : 'Inactive'}\n                  </Label>\n                ),\n                props: {\n                  'data-is-active': isActive,\n                },\n              },\n            ],\n            selected: Boolean(checkedRows && checkedRows.find((row) => row.uuid === username)),\n          },\n        ],\n        []\n      )\n    : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers, userLinks, props }) => {\n  const [filterValue, setFilterValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [statusValue, setStatusValue] = useState(['Active']);\n\n  useEffect(() => {\n    fetchUsers(mappedProps({ ...defaultSettings, status: ['Active'] }));\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, username }) => ({ uuid, label: username || uuid }));\n    });\n  };\n\n  return (\n    <TableToolbarView\n      columns={columns}\n      isSelectable\n      isCompact={true}\n      borders={false}\n      createRows={createRows(userLinks)}\n      data={users}\n      ouiaId=\"users-table\"\n      fetchData={(config) => {\n        const status = Object.prototype.hasOwnProperty.call(config, 'status') ? config.status : statusValue;\n        fetchUsers(mappedProps({ ...config, status }));\n      }}\n      setFilterValue={({ username, email, status }) => {\n        typeof username !== 'undefined' && setFilterValue(username);\n        typeof email !== 'undefined' && setEmailValue(email);\n        typeof statusValue !== undefined && setStatusValue(status);\n      }}\n      isLoading={isLoading}\n      pagination={pagination}\n      checkedRows={selectedUsers}\n      setCheckedItems={setCheckedItems}\n      sortBy={{\n        index: 1,\n        direction: 'asc',\n      }}\n      rowWrapper={UsersRow}\n      titlePlural=\"users\"\n      titleSingular=\"user\"\n      filters={[\n        { key: 'username', value: filterValue, placeholder: 'Filter by exact username' },\n        { key: 'email', value: emailValue, placeholder: 'Filter by exact email' },\n        {\n          key: 'status',\n          value: statusValue,\n          label: 'Status',\n          type: 'checkbox',\n          items: [\n            { label: 'Active', value: 'Active' },\n            { label: 'Inactive', value: 'Inactive' },\n          ],\n        },\n      ]}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading } }) => {\n  return {\n    users: users.data && users.data.map((data) => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: (apiProps = defaultSettings) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props)),\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchUsers: (apiProps) => {\n      return propsFromDispatch.fetchUsers(apiProps ? apiProps : defaultCompactSettings);\n    },\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number,\n    count: PropTypes.number,\n  }),\n  userLinks: PropTypes.bool,\n  props: PropTypes.object,\n};\n\nUsersList.defaultProps = {\n  users: [],\n  selectedUsers: [],\n  setSelectedUsers: () => undefined,\n  userLinks: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\nexport const CompactUsersList = connect(mapStateToProps, mapDispatchToProps, mergeProps)(UsersList);\n"],"sourceRoot":""}
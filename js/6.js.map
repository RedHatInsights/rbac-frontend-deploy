{"version":3,"sources":["webpack:///./src/smart-components/role/role-table-helpers.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextListItem.js","webpack:///./src/smart-components/role/add-role/resource-definitions-table.js","webpack:///./src/smart-components/role/add-role/summary-content.js","webpack:///./src/smart-components/role/add-role/resource-definitions.js","webpack:///./src/smart-components/role/add-role/role-information.js","webpack:///./src/smart-components/role/add-role/permission-information.js","webpack:///./src/smart-components/role/add-role/add-role-wizard.js","webpack:///./src/smart-components/role/remove-role-modal.js","webpack:///./src/smart-components/role/roles.js"],"names":["createRows","data","reduce","acc","uuid","name","description","system","accessCount","groupsCount","groups_in_count","modified","cells","key","to","date","type","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","TextListVariants","TextList","_ref","children","className","component","ul","props","Component","TextListItemVariants","propTypes","node","string","oneOf","TextListItem","li","ResourceDefinitionsTable","formData","handleChange","editable","resourceDefinitions","columns","title","rows","map","definition","operation","value","Button","variant","isInline","onClick","Table","aria-label","TableVariant","compact","PropTypes","arrayOf","shape","number","isRequired","SummaryContent","application","permission","resourceType","Stack","gutter","StackItem","Title","size","TextContent","Text","TextVariants","h5","dl","dt","dd","ResourceDefinitions","useState","resourceDefinition","setResourceDefinition","hasDuplicates","result","isFormValid","trim","updateDefinition","values","h6","Form","FormGroup","label","fieldId","TextInput","aria-describedby","id","onChange","_","event","currentTarget","isDisabled","definitions","push","RoleInformation","onHandleChange","TextArea","PermissionInformation","getFormValues","AddRoleWizard","addNotification","createRole","history","pagination","setValues","isRoleFormValid","setIsRoleFormValid","isPermissionFormValid","setIsPermissionFormValid","stepIdReached","setStepIdReached","steps","canJumpTo","isValid","enableNext","nextButtonText","onSubmit","a","roleData","applications","access","attributeFilter","role","fetchRoles","then","cancelWarningVisible","setcancelWarningVisible","Fragment","Wizard","isLarge","isOpen","onClose","onNext","onSave","onModalCancel","onConfirmCancel","dismissDelay","dismissable","defaultProps","users","inputValue","selectedGroup","undefined","selectedUsers","selectedRoles","goBack","func","limit","offset","count","withRouter","connect","roleReducer","roles","filterValue","isLoading","meta","searchFilter","dispatch","bindActionCreators","RemoveRoleModal","match","params","removeRole","fetchRole","postMethod","useEffect","onCancel","Modal","isSmall","actions","Grid","GridItem","span","h1","bool","object","selectedRole","isRecordLoading","transforms","cellWidth","sortable","selector","userIdentity","identity","userEntitlements","entitlements","Roles","setFilterValue","isCostAdmin","setIsCostAdmin","useDispatch","useHistory","useSelector","shallowEqual","fetchData","options","fetchRolesWithPolicies","window","insights","chrome","getUserPermissions","allPermissions","permissionList","permissions","includes","routes","exact","path","actionResolver","userAllowed","isBeta","user","is_org_admin","_event","_rowId","toolbarButtons","cost_management","render","config","mappedProps","titlePlural","titleSingular","filterPlaceholder"],"mappings":"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","file":"js/6.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { uuid, name, description, system, accessCount, groups_in_count: groupsCount, modified }) => ([\n    ...acc,\n    {\n      uuid,\n      system,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-accessCount` }>\n          <Link to={ `/roles/detail/${uuid}` }>\n            { accessCount }\n          </Link>\n        </Fragment>,\n        groupsCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ]\n    }\n  ]), [])\n);\n","import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport let TextListVariants;\n\n(function (TextListVariants) {\n  TextListVariants[\"ul\"] = \"ul\";\n  TextListVariants[\"ol\"] = \"ol\";\n  TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants || (TextListVariants = {}));\n\nexport const TextList = (_ref) => {\n  let {\n    children = null,\n    className = '',\n    component = TextListVariants.ul\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"component\"]);\n\n  const Component = component;\n  return React.createElement(Component, _extends({}, props, {\n    \"data-pf-content\": true,\n    className: css(className)\n  }), children);\n};\nTextList.propTypes = {\n  children: _pt.node,\n  className: _pt.string,\n  component: _pt.oneOf(['ul', 'ol', 'dl'])\n};\n//# sourceMappingURL=TextList.js.map","import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport let TextListItemVariants;\n\n(function (TextListItemVariants) {\n  TextListItemVariants[\"li\"] = \"li\";\n  TextListItemVariants[\"dt\"] = \"dt\";\n  TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants || (TextListItemVariants = {}));\n\nexport const TextListItem = (_ref) => {\n  let {\n    children = null,\n    className = '',\n    component = TextListItemVariants.li\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"component\"]);\n\n  const Component = component;\n  return React.createElement(Component, _extends({}, props, {\n    \"data-pf-content\": true,\n    className: css(className)\n  }), children);\n};\nTextListItem.propTypes = {\n  children: _pt.node,\n  className: _pt.string,\n  component: _pt.oneOf(['li', 'dt', 'dd'])\n};\n//# sourceMappingURL=TextListItem.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nconst ResourceDefinitionsTable = (formData, handleChange, editable = false) => {\n  const { resourceDefinitions = []} = formData;\n\n  // Resource definition table columns\n  const columns = [\n    { title: 'Key' },\n    { title: 'Operation' },\n    { title: 'value' },\n    ''\n  ];\n\n  const rows = resourceDefinitions.map(definition => {\n    return {\n      cells: [\n        { title: definition.key },\n        { title: definition.operation },\n        { title: definition.value },\n        {\n          title: editable ?\n            <Button variant=\"link\" isInline onClick={ () => handleChange(definition) }>\n              Remove\n            </Button>\n            : null\n        }\n      ]\n    };\n  });\n\n  return (\n    <Table\n      aria-label=\"Resource definitions\"\n      cells={ columns }\n      rows={ rows }\n      variant={ TableVariant.compact }\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nResourceDefinitionsTable.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitionsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst SummaryContent = (formData) => {\n  const {\n    application = '',\n    description = '',\n    name = '',\n    permission = '',\n    resourceType = ''\n  } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Confirm details</Title>\n      </StackItem>\n      <StackItem>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text component={ TextVariants.h5 }>\n                  Confirm the details for your source, or click Back to revise\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <TextContent>\n              <TextList component={ TextListVariants.dl }>\n                <TextListItem component={ TextListItemVariants.dt }>Name</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ name }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Description</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ description }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Application</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ application }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource type</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ resourceType }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Operation</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>{ permission }</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Resource definition</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                  { new ResourceDefinitionsTable(formData) }\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nSummaryContent.propTypes = {\n  application: PropTypes.string,\n  description: PropTypes.string,\n  name: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default SummaryContent;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport ResourceDefinitionsTable from './resource-definitions-table';\n\nconst ResourceDefinitions = (formData, handleChange) => {\n  // The current resource definition defined in the page\n  const [ resourceDefinition, setResourceDefinition ] = useState({\n    key: '',\n    operation: '',\n    value: ''\n  });\n  const { resourceDefinitions = []} = formData;\n\n  const hasDuplicates = () => {\n    let result = false;\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  // Disable \"Add to definitions\" button if any field is empty\n  let isFormValid = !hasDuplicates() &&\n    resourceDefinition.key.trim().length > 0 &&\n    resourceDefinition.operation.trim().length > 0 &&\n    resourceDefinition.value.trim().length > 0;\n\n  // Add the current resource definition\n  const addDefinition = () => {\n    // Omit duplicates\n    if (hasDuplicates()) {\n      return;\n    }\n\n    const definitions = [\n      ...resourceDefinitions,\n      resourceDefinition\n    ];\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const removeDefinition = (resourceDefinition) => {\n    const definitions = [];\n    for (let i = 0; i < resourceDefinitions.length; i++) {\n      const definition = resourceDefinitions[i];\n      if (definition.key === resourceDefinition.key && definition.operation === resourceDefinition.operation &&\n          definition.value === resourceDefinition.value) {\n        continue;\n      }\n\n      definitions.push(definition);\n    }\n\n    handleChange({ resourceDefinitions: definitions });\n  };\n\n  const updateDefinition = (values) => {\n    setResourceDefinition({\n      ...resourceDefinition,\n      ...values\n    });\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Resource definitions</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              If there needs to be more details on the resources the permission is to be used for, it would be detailed\n              here.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Key\"\n            fieldId=\"resource-key\"\n          >\n            <TextInput\n              aria-describedby=\"resource-key\"\n              id=\"resource-key\"\n              name=\"resource-key\"\n              onChange={ (_, event) => updateDefinition({ key: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.key }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Operation\"\n            fieldId=\"resource-operation\"\n          >\n            <TextInput\n              aria-describedby=\"resource-operation\"\n              id=\"resource-operation\"\n              name=\"resource-operation\"\n              onChange={ (_, event) => updateDefinition({ operation: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.operation }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Value\"\n            fieldId=\"resource-value\"\n          >\n            <TextInput\n              aria-describedby=\"resource-value\"\n              id=\"resource-value\"\n              name=\"resource-value\"\n              onChange={ (_, event) => updateDefinition({ value: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceDefinition.value }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n      <StackItem>\n        <Button variant=\"primary\" isDisabled={ !isFormValid } onClick={ addDefinition }>Add to definitions</Button>\n      </StackItem>\n      <StackItem>\n        { new ResourceDefinitionsTable(formData, removeDefinition, true) }\n      </StackItem>\n    </Stack>\n  );\n};\n\nResourceDefinitions.propTypes = {\n  resourceDefinitions: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    operation: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  }))\n};\n\nexport default ResourceDefinitions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst RoleInformation = (formData, onHandleChange) => {\n  const { description = '', name = '' } = formData;\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Name and description</Title>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Name\"\n            isRequired\n            fieldId=\"name\"\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"name\"\n              value={ name }\n              onChange={ (_, event) => onHandleChange({ name: event.currentTarget.value },\n                event.currentTarget.value.trim().length > 0) }\n            />\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description\">\n            <TextArea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }, true) }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nRoleInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default RoleInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextInput,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst PermissionInformation = (formData, onHandleChange) => {\n  const { application = '', permission = '', resourceType = ''  } = formData;\n\n  let getFormValues = (values) => {\n    return {\n      application,\n      permission,\n      resourceType,\n      ...values\n    };\n  };\n\n  const handleChange = (values) => {\n    const data = getFormValues(values);\n    const isFormValid = data.application.trim().length > 0 && data.permission.trim().length > 0 &&\n      data.resourceType.trim().length > 0;\n    onHandleChange(data, isFormValid);\n  };\n\n  return (\n    <Stack gutter=\"md\">\n      <StackItem>\n        <Title size=\"xl\">Permission</Title>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={ TextVariants.h6 }>\n              The permission string is made up of the following inputs where it denotes which application and the\n              resource type the permission will be allowed for.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Form>\n          <FormGroup\n            label=\"Application\"\n            isRequired\n            fieldId=\"application\"\n          >\n            <TextInput\n              aria-describedby=\"application\"\n              id=\"application\"\n              isRequired\n              name=\"application\"\n              onChange={ (_, event) => handleChange({ application: event.currentTarget.value }) }\n              type=\"text\"\n              value={ application }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Resource type\"\n            isRequired\n            fieldId=\"resource-type\"\n          >\n            <TextInput\n              aria-describedby=\"resource-type\"\n              id=\"resource-type\"\n              isRequired\n              name=\"resource-type\"\n              onChange={ (_, event) => handleChange({ resourceType: event.currentTarget.value }) }\n              type=\"text\"\n              value={ resourceType }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Permission\"\n            isRequired\n            fieldId=\"permission\"\n          >\n            <TextInput\n              aria-describedby=\"permission\"\n              id=\"permission\"\n              isRequired\n              name=\"permission\"\n              onChange={ (_, event) => handleChange({ permission: event.currentTarget.value }) }\n              type=\"text\"\n              value={ permission }\n            />\n          </FormGroup>\n        </Form>\n      </StackItem>\n    </Stack>\n  );\n};\n\nPermissionInformation.propTypes = {\n  application: PropTypes.string,\n  permission: PropTypes.string,\n  resourceType: PropTypes.string\n};\n\nexport default PermissionInformation;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { createRole, fetchRoles } from '../../../redux/actions/role-actions';\nimport SummaryContent from './summary-content';\nimport ResourceDefinitions from './resource-definitions';\nimport RoleInformation from './role-information';\nimport PermissionInformation from './permission-information';\nimport { WarningModal } from '../../common/warningModal';\nimport '../../common/hideWizard.scss';\n\nconst AddRoleWizard = ({\n  addNotification,\n  createRole,\n  history: { push },\n  pagination\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isRoleFormValid, setIsRoleFormValid ] = useState(false);\n  const [ isPermissionFormValid, setIsPermissionFormValid ] = useState(false);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = (data) => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const handleRoleChange = (data, isValid) => {\n    handleChange(data);\n    setIsRoleFormValid(isValid);\n  };\n\n  const handlePermissionChange = (data, isValid) => {\n    handleChange(data);\n    setIsPermissionFormValid(isValid);\n  };\n\n  const steps = [\n    {\n      id: 1,\n      name: 'Name and Description',\n      canJumpTo: stepIdReached >= 1,\n      component: new RoleInformation(formData, handleRoleChange),\n      enableNext: isRoleFormValid\n    },\n    {\n      id: 2,\n      name: 'Permission',\n      canJumpTo: stepIdReached >= 2 && isRoleFormValid,\n      component: new PermissionInformation(formData, handlePermissionChange),\n      enableNext: isPermissionFormValid\n    },\n    {\n      id: 3,\n      name: 'Resource definitions',\n      canJumpTo: stepIdReached >= 3 && isRoleFormValid && isPermissionFormValid,\n      component: new ResourceDefinitions(formData, handleChange)\n    },\n    {\n      id: 4,\n      name: 'Review',\n      canJumpTo: stepIdReached >= 4 && isRoleFormValid && isPermissionFormValid,\n      component: new SummaryContent(formData),\n      nextButtonText: 'Confirm'\n    }\n  ];\n\n  const onNext = ({ id }) => {\n    const step = stepIdReached < id ? id : stepIdReached;\n    setStepIdReached(step);\n  };\n\n  const onSubmit = async() => {\n    const roleData = {\n      applications: [ formData.application ],\n      description: formData.description,\n      name: formData.name,\n      access: [{\n        // Permission must be in the format \"application:resource_type:operation\"\n        permission: `${formData.application}:${formData.resourceType}:${formData.permission}`,\n        resourceDefinitions: formData.resourceDefinitions.map(definition => {\n          return {\n            attributeFilter: {\n              key: definition.key,\n              operation: definition.operation,\n              value: definition.value\n            }\n          };\n        })\n      }]\n    };\n    const role = await createRole(roleData);\n    fetchRoles(pagination).then(push('/roles'));\n    return role;\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Creating role was canceled by the user',\n      dismissDelay: 8000,\n      dismissable: false\n    });\n    push('/roles');\n  };\n\n  const [ cancelWarningVisible, setcancelWarningVisible ] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Wizard\n        className={ cancelWarningVisible && 'ins-m-wizard__hidden' }\n        isLarge\n        title=\"Add role\"\n        isOpen\n        onClose={ () => setcancelWarningVisible(true) }\n        onNext={ onNext }\n        onSave={ onSubmit }\n        steps={ steps }\n      />\n      <WarningModal\n        type='role'\n        isOpen={ cancelWarningVisible }\n        onModalCancel={ () => setcancelWarningVisible(false) }\n        onConfirmCancel={ onCancel }/>\n    </React.Fragment>\n  );\n};\n\nAddRoleWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedGroup: undefined,\n  selectedUsers: [],\n  selectedRoles: []\n};\n\nAddRoleWizard.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRole: PropTypes.func.isRequired,\n  fetchRoles: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, filterValue, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRole,\n  fetchRoles\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRoleWizard));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Grid, GridItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { fetchRole, removeRole } from '../../redux/actions/role-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveRoleModal = ({\n  history: { goBack, push },\n  match: { params: { id }},\n  removeRole,\n  role,\n  isLoading,\n  fetchRole,\n  postMethod\n}) => {\n  useEffect(() => {\n    fetchRole(id);\n  }, []);\n\n  const onSubmit = () => removeRole(id)\n  .then(() => {\n    postMethod();\n    push('/roles');\n  });\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" isDisabled={ isLoading  }  variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Grid gutter=\"sm\">\n        <GridItem span={ 5 }>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                Removing Role:\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem span={ 6 }>\n          <TextContent>\n            { !isLoading && <Text component={ TextVariants.h1 }>\n              { role.name }\n            </Text> }\n          </TextContent>\n          { isLoading && <FormItemLoader/> }\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n\nRemoveRoleModal.defaultProps = {\n  role: {},\n  isLoading: true\n};\n\nRemoveRoleModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchRole: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  postMethod: PropTypes.func,\n  removeRole: PropTypes.func.isRequired,\n  role: PropTypes.object\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, selectedRole, isRecordLoading }}) => ({\n  role: selectedRole,\n  isLoading: isRecordLoading,\n  pagination: roles.meta\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchRole,\n  removeRole\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemoveRoleModal));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { shallowEqual, useSelector, useDispatch  } from 'react-redux';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { cellWidth, sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport { createRows } from './role-table-helpers';\nimport { mappedProps } from '../../helpers/shared/helpers';\nimport { fetchRolesWithPolicies } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport AddRoleWizard from './add-role/add-role-wizard';\nimport RemoveRole from './remove-role-modal';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from './role';\n\nconst columns = [\n  { title: 'Name', key: 'name', transforms: [ cellWidth(20), sortable ]},\n  { title: 'Description' },\n  { title: 'Permissions', transforms: [ cellWidth(5) ]},\n  { title: 'Groups', transforms: [ cellWidth(5) ]},\n  { title: 'Last modified', key: 'modified', transforms: [ cellWidth(10), sortable ]}\n];\n\nconst selector = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  userIdentity: roles.identity,\n  userEntitlements: roles.entitlements,\n  isLoading\n});\n\nconst Roles = () => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ isCostAdmin, setIsCostAdmin ] = useState(false);\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const {\n    roles,\n    isLoading,\n    pagination,\n    userIdentity,\n    userEntitlements\n  } = useSelector(selector, shallowEqual);\n  const fetchData = (options) => dispatch(fetchRolesWithPolicies(options));\n\n  useEffect(() => {\n    fetchData({ ...pagination, name: filterValue });\n    window.insights.chrome.getUserPermissions('cost-management').then(\n      allPermissions => {\n        const permissionList = allPermissions.map(permissions => permissions.permission);\n        setIsCostAdmin(permissionList.includes('cost-management:*:*'));\n      }\n    );\n  }, []);\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/roles/add-role\" component={ AddRoleWizard } />\n    <Route exact path=\"/roles/remove/:id\">\n      <RemoveRole\n        postMethod={ () => {\n          fetchData();\n          setFilterValue('');\n        } } />\n    </Route>\n  </Fragment>;\n\n  const actionResolver = ({ system }) => {\n    const userAllowed = insights.chrome.isBeta() && userIdentity && userIdentity.user && userIdentity.user.is_org_admin;\n    return (system || !userAllowed) ? [] : [\n      {\n        title: 'Delete',\n        onClick: (_event, _rowId, role) =>\n        push(`/roles/remove/${role.uuid}`)\n      }\n    ];\n  };\n\n  const toolbarButtons = () => [\n    <Fragment key=\"add-role\">\n      { userEntitlements && userEntitlements.cost_management && window.insights.chrome.isBeta() && isCostAdmin ?\n        <Link to=\"/roles/add-role\" >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create role\"\n          >\n          Create role\n          </Button>\n        </Link> :\n        <Fragment /> }\n    </Fragment>\n  ];\n\n  const renderRolesList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar>\n          <TopToolbarTitle title=\"Roles\" />\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-roles' }>\n          <TableToolbarView\n            actionResolver={ actionResolver }\n            columns={ columns }\n            createRows={ createRows }\n            data={ roles }\n            filterValue={ filterValue }\n            fetchData={ (config) => fetchData(mappedProps(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            isLoading={ isLoading }\n            pagination={ pagination }\n            routes={ routes }\n            titlePlural=\"roles\"\n            titleSingular=\"role\"\n            toolbarButtons = { toolbarButtons }\n            filterPlaceholder=\"name\"\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n\n  return (\n    <Switch>\n      <Route path={ '/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/roles' } render={ () => renderRolesList() } />\n    </Switch>\n  );\n};\n\nexport default Roles;\n"],"sourceRoot":""}
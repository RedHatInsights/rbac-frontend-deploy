{"version":3,"sources":["webpack:///./src/helpers/shared/helpers.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/presentational-components/shared/toolbar.js","webpack:///./src/presentational-components/shared/empty-filter.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/table-toolbar-view.scss","webpack:///./src/presentational-components/shared/top-toolbar.scss","webpack:///./src/helpers/role/role-helper.js","webpack:///./src/redux/actions/role-actions.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/utilities/constants.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/common/warningModal.scss","webpack:///./src/smart-components/common/hideWizard.scss","webpack:///./src/smart-components/role/role-permissions.scss","webpack:///./src/presentational-components/shared/table-toolbar-view.scss?4a5b","webpack:///./src/presentational-components/shared/top-toolbar.scss?e61f","webpack:///./src/smart-components/group/add-group/users-list.js","webpack:///./src/presentational-components/shared/UsersRow.js","webpack:///./src/presentational-components/shared/ActiveUsers.js","webpack:///./src/helpers/user/user-helper.js","webpack:///./src/redux/actions/user-actions.js","webpack:///./src/smart-components/common/warningModal.js","webpack:///./src/smart-components/common/warningModal.scss?b4c8","webpack:///./src/smart-components/common/hideWizard.scss?aea2","webpack:///./src/smart-components/app-tabs/app-tabs.scss","webpack:///./src/smart-components/group/role/group-roles.scss","webpack:///./src/smart-components/group/group.scss","webpack:///./src/smart-components/role/role-permissions.scss?1fa0","webpack:///./src/smart-components/group/groups.scss","webpack:///./src/smart-components/role/role-permissions-table-helpers.js","webpack:///./src/smart-components/role/role-permissions.js","webpack:///./src/smart-components/role/role.js","webpack:///./src/smart-components/app-tabs/app-tabs.scss?da09","webpack:///./src/smart-components/group/role/group-roles.scss?b25f","webpack:///./src/smart-components/group/group.scss?d836","webpack:///./src/smart-components/group/groups.scss?a8fb","webpack:///./src/smart-components/group/add-group/summary-content.js","webpack:///./src/smart-components/group/add-group/group-information.js","webpack:///./src/smart-components/group/add-group/set-users.js","webpack:///./src/smart-components/group/add-group/roles-list.js","webpack:///./src/smart-components/group/add-group/set-roles.js","webpack:///./src/smart-components/group/add-group/add-group-wizard.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/smart-components/group/edit-group-modal.js","webpack:///./src/smart-components/group/remove-group-modal.js","webpack:///./src/smart-components/group/group-table-helpers.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/smart-components/group/principal/principal-table-helpers.js","webpack:///./src/smart-components/group/principal/add-group-members.js","webpack:///./src/presentational-components/shared/RemoveModal.js","webpack:///./src/smart-components/group/principal/principals.js","webpack:///./src/smart-components/group/role/default-group-change-modal.js","webpack:///./src/smart-components/group/role/add-group-roles.js","webpack:///./src/smart-components/group/role/remove-role-modal.js","webpack:///./src/smart-components/group/role/group-roles.js","webpack:///./src/smart-components/group/group.js","webpack:///./src/smart-components/group/group-row-wrapper.js","webpack:///./src/smart-components/group/groups.js"],"names":["getCurrentPage","limit","offset","Math","floor","mappedProps","apiProps","Object","entries","reduce","acc","key","value","debouncedFetch","debouncePromise","callback","calculateChecked","rows","selected","length","every","uuid","find","row","some","selectedRows","newSelection","isSelected","filter","arr","findIndex","firstUpperCase","text","charAt","toUpperCase","slice","groupApi","getGroupApi","fetchGroups","a","name","orderBy","Promise","all","listGroups","undefined","insights","chrome","auth","getUser","groups","fetchGroup","getGroup","updateGroup","data","addGroup","createGroup","newGroup","ret","user_list","addPrincipalToGroup","principals","roles_list","addRoleToGroup","roles","removeGroups","uuids","map","deleteGroup","deletePrincipalsFromGroup","groupId","users","deletePrincipalFromGroup","join","addPrincipalsToGroup","fetchRolesForGroup","excluded","description","options","listRolesForGroup","deleteRolesFromGroup","deleteRoleFromGroup","addRolesToGroup","fetchPrincipalsForGroup","usernames","getPrincipalsFromGroup","query","type","ActionTypes","payload","GroupHelper","groupData","meta","notifications","fulfilled","variant","title","dismissDelay","dismissable","rejected","addMembersToGroup","members","removeMembersFromGroup","pagination","fetchMembersForGroup","fetchAddRolesForGroup","removeRolesFromGroup","paginationBuilder","fetchData","filterValue","sortBy","itemCount","count","perPage","page","onSetPage","_event","perPageOptions","onPerPageSelect","bulkSelectBuilder","isLoading","checkedRows","setCheckedItems","items","onClick","checked","onSelect","filterConfigBuilder","setFilterValue","titleSingular","filterPlaceholder","filterItems","textFilters","placeholder","label","filterValues","id","onChange","_e","filterBy","curr","isDisabled","activeFiltersConfigBuilder","filters","category","chips","Boolean","onDelete","isAll","deleted","Toolbar","isSelectable","toolbarButtons","PrimaryToolbar","bulkSelect","filterConfig","actionsConfig","actions","activeFiltersConfig","propTypes","PropTypes","bool","array","func","string","oneOfType","arrayOf","shape","number","ConditionalFilter","isCollapsible","defaultProps","defaultSettings","EmptyWithFilter","icon","props","EmptyState","EmptyStateVariant","full","EmptyStateIcon","SearchIcon","Title","headingLevel","size","EmptyStateBody","Fragment","node","className","TableToolbarView","isCompact","createRows","borders","columns","actionResolver","areActionsDisabled","routes","titlePlural","emptyProps","rowWrapper","isExpandable","onExpand","useState","opened","openRow","index","direction","sortByState","setSortByState","useEffect","onCollapse","_index","isOpen","PlusCircleIcon","Table","canSelectAll","aria-label","TableVariant","compact","_idx","cells","fullWidth","EmptyStatePrimary","Button","colSpan","onSort","e","noBottom","TableToolbar","Pagination","dropDirection","any","isRequired","exports","___CSS_LOADER_API_IMPORT___","push","module","i","roleApi","getRoleApi","createRole","createRoles","fetchRoles","scope","addFields","username","listRoles","fetchRolesWithPolicies","fetchRole","getRole","removeRole","roleId","deleteRole","roleData","RoleHelper","role","fetchRoleForUser","principalApi","PrincipalApi","axiosInstance","GroupApi","RoleApi","PolicyApi","getPrincipalApi","RbacBreadcrumbs","breadcrumbs","Breadcrumb","values","item","BreadcrumbItem","isActive","to","exact","object","TopToolbar","children","PageHeader","paddingBottom","TopToolbarTitle","TextContent","Text","component","TextVariants","p","api","content","__esModule","default","update","exported","locals","hot","accept","newContent","dispose","transforms","cellWidth","sortable","userLinks","expanded","is_active","email","firstName","first_name","lastName","last_name","classNames","UsersList","fetchUsers","selectedUsers","setSelectedUsers","emailValue","setEmailValue","config","UsersRow","mapStateToProps","userReducer","isUserDataLoading","mapDispatchToProps","dispatch","addNotification","history","goBack","searchFilter","connect","CompactUsersList","propsFromState","propsFromDispatch","ownProps","defaultCompactSettings","status","ActiveUser","linkTitle","h7","href","window","isProd","target","rel","sortOrder","listPrincipals","then","WarningModal","onModalCancel","onConfirmCancel","isSmall","onClose","isFooterLeftAligned","permission","modified","split","appName","operation","DateFormat","date","Permissions","setConfig","useSelector","state","roleReducer","selectedRole","isRecordLoading","shallowEqual","access","filteredRows","includes","h1","Role","useParams","groupUuid","group","groupReducer","selectedGroup","useDispatch","loaded","SummaryContent","formData","selectedRoles","Stack","gutter","StackItem","Grid","GridItem","span","h5","GroupInformation","formValue","onHandleChange","setIsGroupInfoValid","Form","FormGroup","fieldId","TextInput","aria-describedby","_","event","currentTarget","trim","TextArea","SetUsers","Card","RolesList","setSelectedRoles","ExcludedRolesList","addRoles","SetRoles","h6","AddGroupWizard","postMethod","closeUrl","setValues","isGroupInfoValid","useHistory","steps","enableNext","nextButtonText","onSubmit","user_data","user","onCancel","cancelWarningVisible","setCancelWarningVisible","Wizard","isLarge","isCompactNav","onSave","inputValue","match","bindActionCreators","Select","input","isReadOnly","rest","FormSelect","selectOptions","createOptions","FormSelectOption","toString","FieldProvider","Pf4SelectWrapper","helperText","hideLabel","error","showError","touched","isValid","helperTextInvalid","small","componentType","buttonPositioning","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","EditGroupModal","setSelectedGroup","useRouteMatch","setGroupData","params","schema","fields","TEXT_FIELD","validate","validatorTypes","REQUIRED","TEXTAREA_FIELD","Modal","width","schemaType","initialValues","renderFormButtons","pristine","valid","submit","form","Skeleton","RemoveGroupModal","groupsUuid","isModalOpen","setChecked","multipleGroups","Checkbox","isChecked","roleCount","principalCount","isPlatformDefault","platform_default","AppTabs","pathname","location","tabItems","isHeader","activeTab","Tabs","activeKey","eventKey","tabIndex","Tab","withRouter","_opened","Label","AddGroupMembers","userList","RemoveModal","confirmButtonLabel","withCheckbox","Split","SplitItem","isFilled","selector","userIdentity","identity","groupName","removeModalText","plural","GroupPrincipals","selectedPrincipals","setSelectedPrincipals","showRemoveModal","setShowRemoveModal","confirmDelete","setConfirmDelete","deleteInfo","setDeleteInfo","removeMembers","userNames","Section","CardBody","Bullseye","is_org_admin","path","render","args","_rowId","principal","multipleMembersSelected","DefaultGroupChange","AddGroupRoles","isDefault","isChanged","onDefaultGroupChanged","showConfirmModal","setShowConfirmModal","rolesList","RemoveRoles","GroupRoles","removeRoles","disableAddRoles","descriptionValue","setDescriptionValue","selectedAddRoles","setSelectedAddRoles","preventDefault","Tooltip","multipleRolesSelected","reloadWrapper","system","Group","isFetching","showEdit","setShowEdit","showDefaultGroupChangedInfo","setShowDefaultGroupChangedInfo","style","display","Popover","bodyContent","Alert","isInline","action","AlertActionCloseButton","GroupRowWrapper","RowWrapper","clsx","Groups","setSelectedRows","removeGroupsList","setRemoveGroupsList","appNavClick","secondaryNav","ids"],"mappings":"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","file":"js/6.js","sourcesContent":["import debouncePromise from '@redhat-cloud-services/frontend-components-utilities/files/debounce';\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const mappedProps = (apiProps) => Object.entries(apiProps).reduce((acc, [ key, value ]) => ({\n  ...acc,\n  ...value && { [key]: value }\n}), {});\n\nexport const debouncedFetch = debouncePromise(callback => callback());\n\nexport const calculateChecked = (rows = [], selected) => {\n  return (rows.length !== 0 && rows.every(({ uuid }) => selected.find(row => row.uuid === uuid))) || (\n    (rows.length !== 0 && rows.some(({ uuid }) => selected.find(row => row.uuid === uuid))) ? null : false\n  );\n};\n\nexport const selectedRows = (newSelection, isSelected) => (selected) => {\n  if (!isSelected) {\n    return selected.filter((row) => !newSelection.find(({ uuid }) => uuid === row.uuid));\n  }\n\n  return [\n    ...selected,\n    ...newSelection\n  ].filter((row, key, arr) => arr.findIndex(({ uuid }) => row.uuid === uuid) === key);\n};\n\nexport const firstUpperCase = (text) => text.charAt(0).toUpperCase() + text.slice(1);\n","import { getGroupApi } from '../shared/user-login';\n\nconst groupApi = getGroupApi();\n\nexport async function fetchGroups({ limit, offset, name, orderBy }) {\n  const [ groups, auth ] = await Promise.all([\n    groupApi.listGroups(limit, offset, name, undefined, undefined, undefined, undefined, undefined, orderBy),\n    insights.chrome.auth.getUser()\n  ]);\n  return {\n    ...groups,\n    ...auth\n  };\n}\n\nexport async function fetchGroup(uuid) {\n  return await groupApi.getGroup(uuid);\n}\n\nexport async function updateGroup(data) {\n  await groupApi.updateGroup(data.uuid, data);\n}\n\nexport async function addGroup(data) {\n  let newGroup = await groupApi.createGroup(data);\n  let ret = newGroup;\n\n  if (data.user_list && data.user_list.length > 0) {\n    ret = groupApi.addPrincipalToGroup(newGroup.uuid, { principals: data.user_list });\n  }\n\n  if (data.roles_list && data.roles_list.length > 0) {\n    ret = groupApi.addRoleToGroup(newGroup.uuid, { roles: data.roles_list });\n  }\n\n  return ret;\n}\n\nexport async function removeGroups(uuids) {\n  return await Promise.all(uuids.map((uuid) => groupApi.deleteGroup(uuid)));\n}\n\nexport async function deletePrincipalsFromGroup(groupId, users) {\n  return await groupApi.deletePrincipalFromGroup(groupId, users.join(','));\n}\n\nexport async function addPrincipalsToGroup(groupId, users) {\n  return await groupApi.addPrincipalToGroup(groupId, { principals: users });\n}\n\nexport async function fetchRolesForGroup(groupId, excluded, { limit, offset, name, description }, options = {}) {\n  return await groupApi.listRolesForGroup(groupId, excluded, name, description, limit, offset, undefined, options);\n}\n\nexport async function deleteRolesFromGroup(groupId, roles) {\n  return await groupApi.deleteRoleFromGroup(groupId, roles.join(','));\n}\n\nexport async function addRolesToGroup(groupId, roles) {\n  return await groupApi.addRoleToGroup(groupId, { roles });\n}\n\nexport async function fetchPrincipalsForGroup(groupId, usernames, options = {}) {\n  return await groupApi.getPrincipalsFromGroup(groupId, usernames, undefined, {\n    query: {\n      ...options\n    }\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchGroups = (options = {}) => ({\n  type: ActionTypes.FETCH_GROUPS,\n  payload: GroupHelper.fetchGroups(options)\n});\n\nexport const fetchGroup = apiProps => ({\n  type: ActionTypes.FETCH_GROUP,\n  payload: GroupHelper.fetchGroup(apiProps)\n});\n\nexport const addGroup = (groupData) => ({\n  type: ActionTypes.ADD_GROUP,\n  payload: GroupHelper.addGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateGroup = (groupData) => ({\n  type: ActionTypes.UPDATE_GROUP,\n  payload: GroupHelper.updateGroup(groupData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The group was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeGroups = (uuids) => ({\n  type: ActionTypes.REMOVE_GROUPS,\n  payload: GroupHelper.removeGroups(uuids),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        dismissDelay: 8000,\n        dismissable: false,\n        title: uuids.length > 1 ? 'Groups deleted successfully' :\n          'Group deleted successfully'\n      },\n      rejected: {\n        variant: 'danger',\n        dismissDelay: 8000,\n        dismissable: false,\n        title: uuids.length > 1 ? 'There was an error deleting the groups. Please try again.' :\n          'There was an error deleting the group. Please try again.'\n      }\n    }\n  }\n});\n\nexport const resetSelectedGroup = () => ({\n  type: ActionTypes.RESET_SELECTED_GROUP\n});\n\nexport const addMembersToGroup = (groupId, members) => ({\n  type: ActionTypes.ADD_MEMBERS_TO_GROUP,\n  payload: GroupHelper.addPrincipalsToGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding members to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The members were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding members to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The members were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeMembersFromGroup = (groupId, members) => ({\n  type: ActionTypes.REMOVE_MEMBERS_FROM_GROUP,\n  payload: GroupHelper.deletePrincipalsFromGroup(groupId, members),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing members from group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The members were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing members to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The members were not removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, false, pagination, options)\n});\n\nexport const fetchMembersForGroup = (groupId, usernames, options) => ({\n  type: ActionTypes.FETCH_MEMBERS_FOR_GROUP,\n  payload: GroupHelper.fetchPrincipalsForGroup(groupId, usernames, options)\n});\n\nexport const fetchAddRolesForGroup = (groupId, pagination, options) => ({\n  type: ActionTypes.FETCH_ADD_ROLES_FOR_GROUP,\n  payload: GroupHelper.fetchRolesForGroup(groupId, true, pagination, options)\n});\n\nexport const addRolesToGroup = (groupId, roles) => ({\n  type: ActionTypes.ADD_ROLES_TO_GROUP,\n  payload: GroupHelper.addRolesToGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding roles to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The roles were successfully added to the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding roles to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The roles were not added successfully.'\n      }\n    }\n  }\n});\n\nexport const removeRolesFromGroup = (groupId, roles) => ({\n  type: ActionTypes.REMOVE_ROLES_FROM_GROUP,\n  payload: GroupHelper.deleteRolesFromGroup(groupId, roles),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing roles from group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The roles were successfully removed from the group.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed removing roles to group',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The roles were not removed successfully.'\n      }\n    }\n  }\n});\n","import React from 'react';\nimport { PrimaryToolbar, ConditionalFilter } from '@redhat-cloud-services/frontend-components';\nimport PropTypes from 'prop-types';\nimport { getCurrentPage, selectedRows, calculateChecked, debouncedFetch, firstUpperCase } from '../../helpers/shared/helpers';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const paginationBuilder = (pagination = {}, fetchData = () => undefined, filterValue = '', sortBy = '') => ({\n  ...pagination,\n  itemCount: pagination.count,\n  perPage: pagination.limit,\n  page: getCurrentPage(pagination.limit, pagination.offset),\n  onSetPage: (_event, page) => {\n    fetchData({\n      ...pagination,\n      offset: (page - 1) * pagination.limit,\n      name: filterValue,\n      orderBy: sortBy\n    });\n  },\n  perPageOptions: [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 }\n  ],\n  onPerPageSelect: (_event, perPage) => {\n    fetchData({\n      ...pagination,\n      offset: 0,\n      limit: perPage,\n      name: filterValue,\n      orderBy: sortBy\n    });\n  }\n});\n\nexport const bulkSelectBuilder = (isLoading, checkedRows = {}, setCheckedItems = () => undefined, data = []) => ({\n  count: checkedRows.length,\n  items: [{\n    title: 'Select none (0)',\n    onClick: () => {\n      setCheckedItems(() => []);\n    }\n  },\n  {\n    ...!isLoading && data && data.length > 0 ? {\n      title: `Select page (${data.length})`,\n      onClick: () => {\n        setCheckedItems(selectedRows(data, true));\n      }\n    } : {}\n  }],\n  checked: calculateChecked(data, checkedRows),\n  onSelect: (value) => {\n    !isLoading && setCheckedItems(selectedRows(data, value));\n  }\n});\n\nexport const filterConfigBuilder = (\n  isLoading,\n  setFilterValue = () =>  undefined,\n  fetchData = () => undefined,\n  filterValue = '',\n  pagination = {},\n  titleSingular = '',\n  filterPlaceholder,\n  filterItems,\n  textFilters,\n  sortBy\n) => ({\n  items: [ ...textFilters && textFilters.length > 0 ? textFilters.map(({ key, value, placeholder }) => ({\n    label: firstUpperCase(key),\n    type: 'text',\n    filterValues: {\n      id: `filter-by-${key}`,\n      key: `filter-by-${key}`,\n      placeholder: placeholder ? placeholder : `Filter by ${key}`,\n      value,\n      onChange: (_e, filterBy) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          [key]: filterBy\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          orderBy: sortBy,\n          ...textFilters.reduce((acc, curr) => ({\n            ...acc,\n            [curr.key]: curr.value\n          }), {}),\n          [key]: filterBy\n        }));\n      },\n      isDisabled: isLoading\n    }})) : [{\n    label: firstUpperCase(filterPlaceholder || titleSingular),\n    type: 'text',\n    filterValues: {\n      id: 'filter-by-string',\n      key: 'filter-by-string',\n      placeholder: `Filter by ${filterPlaceholder || titleSingular}`,\n      value: filterValue,\n      onChange: (_e, value) => {\n        setFilterValue({\n          ...pagination,\n          offset: 0,\n          name: value\n        });\n        debouncedFetch(() => fetchData({\n          ...pagination,\n          offset: 0,\n          name: value,\n          orderBy: sortBy\n        }));\n      },\n      isDisabled: isLoading\n    }\n  }], ...filterItems || [] ]\n});\n\nexport const activeFiltersConfigBuilder = (\n  filterValue = '',\n  textFilters,\n  pagination = {},\n  setFilterValue  = () => undefined,\n  fetchData = () => undefined,\n  sortBy\n) => ({\n  filters: (textFilters && textFilters.length > 0) ? textFilters.map(({ key, value }) => value && ({\n    category: firstUpperCase(key),\n    type: key,\n    chips: [{ name: value }]\n  })).filter(Boolean) : [{\n    name: filterValue\n  }],\n  onDelete: (_e, [ deleted ], isAll) => {\n    setFilterValue({\n      ...pagination,\n      offset: 0,\n      name: '',\n      ...textFilters ? textFilters.reduce((acc, { key, value }) => ({\n        ...acc,\n        [key]: deleted.type === key || isAll ? '' : value\n      }), {}) : {\n        name: ''\n      }\n    });\n    fetchData({\n      ...pagination,\n      offset: 0,\n      orderBy: sortBy,\n      ...textFilters ? textFilters.reduce((acc, { key, value }) => ({\n        ...acc,\n        [key]: deleted.type === key || isAll ? '' : value\n      }), {}) : {\n        name: ''\n      }\n    });\n  }\n});\n\nconst Toolbar = ({\n  isSelectable,\n  checkedRows,\n  setCheckedItems,\n  isLoading,\n  data,\n  titleSingular,\n  filterValue,\n  setFilterValue,\n  pagination,\n  fetchData,\n  sortBy,\n  toolbarButtons,\n  filterPlaceholder,\n  filterItems,\n  textFilters\n}) => (\n  <PrimaryToolbar\n    { ...isSelectable && {\n      bulkSelect: bulkSelectBuilder(isLoading, checkedRows, setCheckedItems, data) } }\n    filterConfig={ filterConfigBuilder(\n        isLoading,\n        setFilterValue,\n        fetchData,\n        filterValue,\n        pagination,\n        titleSingular,\n        filterPlaceholder,\n        filterItems,\n        textFilters,\n        sortBy\n      ) }\n    actionsConfig={ {\n      actions: toolbarButtons()\n    } }\n    { ...!isLoading && {\n      pagination: paginationBuilder(pagination, fetchData, filterValue, sortBy)\n    } }\n    { ...(filterValue.length > 0 || (textFilters && textFilters.length > 0)) && {\n      activeFiltersConfig: activeFiltersConfigBuilder(filterValue, textFilters, pagination, setFilterValue, fetchData, sortBy)\n    } }\n  />\n);\n\nToolbar.propTypes = {\n  isSelectable: PropTypes.bool,\n  checkedRows: PropTypes.array,\n  setCheckedItems: PropTypes.func,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  titleSingular: PropTypes.string,\n  filterValue: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  setFilterValue: PropTypes.func,\n  textFilters: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n    key: PropTypes.string,\n    placeholder: PropTypes.string\n  })),\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  sortBy: PropTypes.string,\n  filterItems: ConditionalFilter.propTypes.items,\n  filterPlaceholder: PropTypes.string,\n  isCollapsible: PropTypes.bool,\n  fetchData: PropTypes.func,\n  toolbarButtons: PropTypes.func\n};\n\nToolbar.defaultProps = {\n  isCollapsible: false,\n  isSelectable: false,\n  isLoading: false,\n  data: [],\n  titleSingular: '',\n  filterValue: [],\n  pagination: defaultSettings,\n  setCheckedItems: () => undefined,\n  setFilterValue: () => undefined,\n  sortBy: undefined,\n  fetchData: () => undefined,\n  toolbarButtons: () => [],\n  filterItems: [],\n  textFilters: []\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  Title,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateIcon\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst EmptyWithFilter = ({ title, icon, description, actions, ...props }) => (\n  <EmptyState variant={ EmptyStateVariant.full } { ...props }>\n    <EmptyStateIcon icon={ icon || SearchIcon } />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      { title }\n    </Title>\n    <EmptyStateBody>\n      { description.map((text, key) => <React.Fragment key={ key }>{ text } <br /></React.Fragment>) }\n    </EmptyStateBody>\n    { actions }\n  </EmptyState>\n);\n\nEmptyWithFilter.propTypes = {\n  icon: PropTypes.func,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.arrayOf(PropTypes.node),\n  className: PropTypes.string\n};\n\nexport default EmptyWithFilter;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody, TableVariant } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination, EmptyStatePrimary } from '@patternfly/react-core';\nimport { ListLoader } from './loader-placeholders';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { selectedRows } from '../../helpers/shared/helpers';\nimport Toolbar, { paginationBuilder } from './toolbar';\nimport EmptyWithAction from './empty-filter';\nimport './table-toolbar-view.scss';\n\nexport const TableToolbarView = ({\n  isCompact,\n  createRows,\n  borders,\n  columns,\n  toolbarButtons,\n  data,\n  actionResolver,\n  areActionsDisabled,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  isLoading,\n  setFilterValue,\n  checkedRows,\n  isSelectable,\n  fetchData,\n  setCheckedItems,\n  isCollapsible,\n  emptyProps,\n  filterPlaceholder,\n  rowWrapper,\n  textFilters,\n  sortBy,\n  isExpandable,\n  onExpand\n}) => {\n  const [ opened, openRow ] = useState({});\n  const [ sortByState, setSortByState ] = useState({ index: undefined, direction: undefined });\n  useEffect(() => {\n    setSortByState({\n      ...sortBy,\n      ...sortByState.index !== undefined && sortByState\n    });\n  }, [ sortBy ]);\n\n  const rows = createRows(data, opened, checkedRows);\n\n  const onCollapse = (_event, _index, isOpen, { uuid }) => openRow((opened) => ({\n    ...opened,\n    [uuid]: isOpen\n  }));\n\n  const renderEmpty = () => ({\n    title: (\n      <EmptyWithAction\n        title={ `No matching ${titlePlural} found` }\n        description={ [\n          `This filter criteria matches no ${titlePlural}.`,\n          `Try changing your filter settings.`\n        ] }\n        actions={ [\n          <EmptyStatePrimary key=\"clear-filters\">\n            <Button\n              variant=\"link\"\n              onClick={ () => {\n                setFilterValue({\n                  ...pagination,\n                  offset: 0,\n                  name: ''\n                });\n                fetchData({\n                  ...pagination,\n                  offset: 0,\n                  name: ''\n                });\n              } }\n            >\n              Clear all filters\n            </Button>\n          </EmptyStatePrimary>\n        ] }\n      />\n    ),\n    props: {\n      colSpan: columns.length + Boolean(onCollapse)\n    }\n  });\n\n  const renderTable = () => (\n    <Fragment>\n      <Toolbar\n        isSelectable={ isSelectable }\n        checkedRows={ checkedRows }\n        setCheckedItems={ setCheckedItems }\n        isLoading={ isLoading }\n        data={ data }\n        titleSingular={ titleSingular }\n        filterValue={ filterValue }\n        setFilterValue={ setFilterValue }\n        sortBy={ (\n            sortByState.index !== undefined && sortByState.index - isSelectable >= 0\n            && `${sortByState.direction === 'desc' ? '-' : ''}${columns[sortByState.index - isSelectable].key}`\n        ) || undefined }\n        pagination={ pagination }\n        fetchData={ fetchData }\n        toolbarButtons={ toolbarButtons }\n        filterPlaceholder={ filterPlaceholder }\n        textFilters={ textFilters }\n      />\n      { isLoading ? <ListLoader /> : <Table\n        canSelectAll={ false }\n        aria-label={ `${titlePlural} table` }\n        variant={ isCompact ? TableVariant.compact : null }\n        borders={ borders }\n        { ...isCollapsible && { onCollapse } }\n        { ...isSelectable && rows.length > 0 && {\n          onSelect: (_e, isSelected, _idx, { uuid, cells: [ name ] }) =>\n            setCheckedItems(selectedRows([{ uuid, name }], isSelected))\n        } }\n        { ...isExpandable && { onExpand } }\n        rows={ rows.length > 0 ? rows : [{ fullWidth: true, cells: [ renderEmpty() ]}] }\n        cells={ columns }\n        { ...rows.length > 0 && { actionResolver } }\n        areActionsDisabled={ areActionsDisabled }\n        rowWrapper={ rowWrapper }\n        sortBy={ sortByState }\n        onSort={ (e, index, direction) => {\n          setSortByState({ index, direction });\n          fetchData({\n            ...pagination,\n            offset: 0,\n            name: filterValue,\n            orderBy: `${direction === 'desc' ? '-' : ''}${columns[index - isSelectable].key}`\n          });\n        } }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table> }\n      { !pagination.noBottom && <TableToolbar>\n        {\n          !isLoading &&\n          <Pagination\n            { ...paginationBuilder(pagination, fetchData, filterValue) }\n            variant=\"bottom\"\n            dropDirection=\"up\"\n          />\n        }\n      </TableToolbar> }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      { routes() }\n      { !isLoading && rows.length === 0 && (filterValue.length === 0 && textFilters.every(({ value }) => !value)) ?\n        <EmptyWithAction\n          title={ `Configure ${titlePlural}` }\n          icon={ PlusCircleIcon }\n          description={ [\n            `To configure user access to applications`,\n            `create at least one ${titleSingular}`\n          ] }\n          actions={ toolbarButtons()[0] }\n          { ...emptyProps }\n        /> :\n        renderTable() }\n    </Fragment>\n  );\n};\n\nTableToolbarView.propTypes = {\n  ...Toolbar.propTypes,\n  rowWrapper: propTypes.any,\n  isCompact: propTypes.bool,\n  borders: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  titlePlural: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  areActionsDisabled: propTypes.func,\n  pagination: propTypes.shape({\n    noBottom: propTypes.bool\n  }),\n  isExpandable: propTypes.bool,\n  onExpand: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  ...Toolbar.defaultProps,\n  isCompact: false,\n  borders: true,\n  routes: () => null\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-l-toolbar.rbac-table__toolbar .pf-l-toolbar__item{min-width:5rem}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-rbac-page-header__title{display:block}.ins-rbac-page-header__title+.ins-rbac-page-header__description{margin-top:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { getRoleApi } from '../shared/user-login';\n\nconst roleApi = getRoleApi();\n\nexport async function createRole(data) {\n  return await roleApi.createRoles(data);\n}\n\nexport function fetchRoles({ limit, offset, name, scope, orderBy, addFields, username }) {\n  return roleApi.listRoles(limit, offset, name, scope, orderBy, addFields, username);\n}\n\nexport async function fetchRolesWithPolicies({ limit, offset, name, orderBy }) {\n  return {\n    ...await roleApi.listRoles(limit, offset, name, 'account', orderBy, [ 'groups_in_count' ]),\n    ...await insights.chrome.auth.getUser()\n  };\n}\n\nexport async function fetchRole(uuid) {\n  return await roleApi.getRole(uuid);\n}\n\nexport async function removeRole(roleId) {\n  return await roleApi.deleteRole(roleId);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RoleHelper from '../../helpers/role/role-helper';\n\nexport const createRole = (roleData) => ({\n  type: ActionTypes.ADD_ROLE,\n  payload: RoleHelper.createRole(roleData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding role',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The role was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding role',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The role was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const fetchRole = apiProps => ({\n  type: ActionTypes.FETCH_ROLE,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n\nexport const fetchRoles = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRoles(options)\n});\n\nexport const fetchRolesWithPolicies = (options = {}) => ({\n  type: ActionTypes.FETCH_ROLES,\n  payload: RoleHelper.fetchRolesWithPolicies(options)\n});\n\nexport const removeRole = (role) => ({\n  type: ActionTypes.REMOVE_ROLE,\n  payload: RoleHelper.removeRole(role),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing role',\n        dismissDelay: 8000,\n        dismissable: false,\n        description: 'The role was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const fetchRoleForUser = apiProps => ({\n  type: ActionTypes.FETCH_ROLE_FOR_USER,\n  payload: RoleHelper.fetchRole(apiProps)\n});\n","import axiosInstance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { GroupApi, PrincipalApi, RoleApi, PolicyApi } from '@redhat-cloud-services/rbac-client';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst principalApi = new PrincipalApi(undefined, RBAC_API_BASE, axiosInstance);\nconst groupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\nconst roleApi = new RoleApi(undefined, RBAC_API_BASE, axiosInstance);\nconst policyApi = new PolicyApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getPrincipalApi() {\n  return principalApi;\n}\n\nexport function getGroupApi() {\n  return groupApi;\n}\n\nexport function getRoleApi() {\n  return roleApi;\n}\n\nexport function getPolicyApi() {\n  return policyApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n","export const RBAC_API_BASE = `/api/rbac/v1`;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { BreadcrumbPlaceholder } from './loader-placeholders';\n\nconst RbacBreadcrumbs = (breadcrumbs) => {\n  return (\n    breadcrumbs ? <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        item.title\n          ? (<BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n            { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n          </BreadcrumbItem>)\n          : <BreadcrumbPlaceholder />\n      )) }\n    </Breadcrumb> : null\n  );\n};\n\nRbacBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object\n};\n\nexport default RbacBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport RbacBreadcrumbs from './breadcrubms';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs }) => (\n  <Fragment>\n    { breadcrumbs &&\n      <section className=\"pf-c-page__main-breadcrumb\">\n        <RbacBreadcrumbs { ...breadcrumbs } />\n      </section>\n    }\n    <PageHeader className='ins-rbac-page-header'>\n      { children }\n    </PageHeader>\n  </Fragment>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <PageHeaderTitle title={ title || <ToolbarTitlePlaceholder /> } className='ins-rbac-page-header__title'/>\n    { description &&\n      <TextContent className=\"ins-rbac-page-header__description\">\n        <Text component={ TextVariants.p }>{ description }</Text>\n      </TextContent>\n    }\n    { children }\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-wizard__cancel-warning-header{display:flex;align-items:center}.ins-c-wizard__cancel-warning-header--icon{fill:var(--pf-global--warning-color--100);margin-right:var(--pf-global--spacer--md)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-m-wizard__hidden{display:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-role__permissions .pf-c-content{padding-bottom:var(--pf-global--spacer--lg)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./table-toolbar-view.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./table-toolbar-view.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./table-toolbar-view.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./top-toolbar.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./top-toolbar.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./top-toolbar.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Label } from '@patternfly/react-core';\nimport { sortable, cellWidth } from '@patternfly/react-table';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\nimport { defaultCompactSettings, defaultSettings } from '../../../helpers/shared/pagination';\nimport classNames from 'classnames';\n\nconst columns = [\n  { title: 'Status', transforms: [ cellWidth(10), () => ({ className: 'ins-m-width-5' }) ]},\n  { title: 'Username', key: 'username', transforms: [ sortable ]},\n  { title: 'Email' },\n  { title: 'First name' },\n  { title: 'Last name' }\n];\n\nconst createRows = (userLinks) => (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { username, is_active: isActive, email, first_name: firstName, last_name: lastName }) => ([\n    ...acc, {\n      uuid: username,\n      cells: [{\n          title: (\n            <Label isCompact className={ classNames('ins-c-rbac__user-label', { 'ins-m-inactive': !isActive }) }>\n              {isActive ? 'Active' : 'Inactive'}\n            </Label>\n        ),\n        props: {\n          data: { isActive }\n        }\n      }, { title: userLinks ? <Link to={ `/users/detail/${username}` }>{username}</Link> : username }, email, firstName, lastName ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === username))\n    }\n  ]), []) : [];\n};\n\nconst UsersList = ({ users, fetchUsers, isLoading, pagination, selectedUsers, setSelectedUsers, userLinks, props }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ emailValue, setEmailValue ] = useState('');\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedUsers((users) => {\n      return newSelection(users).map(({ uuid, username }) => ({ uuid, label: username || uuid }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders={ false }\n    createRows={ createRows(userLinks) }\n    data={ users }\n    filterValue={ filterValue }\n    fetchData={ (config) => {\n      fetchUsers(mappedProps(config));\n    } }\n    setFilterValue={ ({ username, email }) => {\n      typeof username !== 'undefined' && setFilterValue(username);\n      typeof email !== 'undefined' && setEmailValue(email);\n    } }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    checkedRows={ selectedUsers }\n    setCheckedItems={ setCheckedItems }\n    sortBy={ {\n      index: 1,\n      direction: 'asc'\n    } }\n    rowWrapper={ UsersRow }\n    titlePlural=\"users\"\n    titleSingular=\"user\"\n    textFilters={ [\n      { key: 'username', value: filterValue, placeholder: 'Filter by exact username' },\n      { key: 'email', value: emailValue, placeholder: 'Filter by exact email' }\n    ] }\n    { ...props }\n  />;\n};\n\nconst mapStateToProps = ({ userReducer: { users, isUserDataLoading }}) => {\n  return {\n    users: users.data && users.data.map(data => ({ ...data, uuid: data.username })),\n    pagination: users.meta,\n    isLoading: isUserDataLoading\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: (apiProps = defaultSettings) => {\n      dispatch(fetchUsers(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchUsers: (apiProps) => {\n      return propsFromDispatch.fetchUsers(apiProps ? apiProps : defaultCompactSettings);\n    }\n  };\n};\n\nUsersList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  users: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchUsers: PropTypes.func.isRequired,\n  setSelectedUsers: PropTypes.func.isRequired,\n  selectedUsers: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  userLinks: PropTypes.bool,\n  props: PropTypes.object\n};\n\nUsersList.defaultProps = {\n  users: [],\n  selectedUsers: [],\n  setSelectedUsers: () => undefined,\n  userLinks: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\nexport const CompactUsersList = connect(mapStateToProps, mapDispatchToProps, mergeProps)(UsersList);\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\n\nconst UsersRow = ({ row, ...props }) => {\n  const { status } = row;\n  return <RowWrapper\n    className={ `ins-c-rbac__user-row ${status?.props?.data?.isActive ? '' : 'ins-m-inactive'}` }\n    row={ row }\n    { ...props }\n  />;\n};\n\nUsersRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.shape({\n      props: PropTypes.shape({\n        data: PropTypes.shape({\n          isActive: PropTypes.bool\n        })\n      })\n    })\n  })\n};\n\nexport default UsersRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nconst ActiveUser = ({ description, linkTitle }) => (\n    <TextContent>\n        <Text\n        className=\"pf-u-mt-0\"\n        component={ TextVariants.h7 }>\n            {description}{ ' ' }\n        <Text\n            component={ TextVariants.a }\n            href={ `https://www.${window.insights.chrome.isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/usermgt/userList.html` }\n            target=\"_blank\"\n            rel='noopener noreferrer'\n        >\n                {linkTitle}\n        </Text>\n        </Text>\n    </TextContent>\n);\n\nActiveUser.propTypes = {\n    description: PropTypes.node,\n    linkTitle: PropTypes.node\n};\n\nActiveUser.defaultProps = {\n    description: '',\n    linkTitle: 'user management list.'\n};\n\nexport default ActiveUser;\n","import { getPrincipalApi } from '../shared/user-login';\n\nconst principalApi = getPrincipalApi();\n\nexport function fetchUsers({ limit, offset, username, orderBy, email }) {\n  const sortOrder = orderBy === '-username' ? ('desc') : ('asc');\n  return principalApi.listPrincipals(limit, offset, username, sortOrder, email).then(({ data, meta }) => {\n    return {\n      data,\n      meta: {\n        ...meta,\n        offset,\n        limit\n      }\n    };\n  });\n}\n","import * as ActionTypes from '../action-types';\nimport * as UserHelper from '../../helpers/user/user-helper';\n\nexport const fetchUsers = (apiProps) => ({\n  type: ActionTypes.FETCH_USERS,\n  payload: UserHelper.fetchUsers(apiProps)\n});\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport './warningModal.scss';\n\nexport const WarningModal = ({ type, isOpen, onModalCancel, onConfirmCancel }) => (\n  <Modal\n    title={ <span className='ins-c-wizard__cancel-warning-header'>\n        <ExclamationTriangleIcon size='md' className='ins-c-wizard__cancel-warning-header--icon'/>\n        Exit { type } creation?\n      </span> }\n    isSmall\n    className='ins-c-wizard__cancel-warning'\n    isOpen={ isOpen }\n    onClose={ onModalCancel }\n    actions={ [\n      <Button key=\"confirm\" variant=\"primary\" onClick={ onConfirmCancel }>\n        Exit\n      </Button>,\n      <Button key=\"cancel\" variant=\"link\" onClick={ onModalCancel }>\n        Stay\n      </Button>\n    ] }\n    isFooterLeftAligned>\n    <span> All inputs will be discarded.</span>\n  </Modal>\n);\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onConfirmCancel: PropTypes.func\n};\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./warningModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./warningModal.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./warningModal.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./hideWizard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./hideWizard.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./hideWizard.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-tabs.ins-rbac-page-header__tabs{padding:0 var(--pf-c-page__main-section--PaddingRight) 0 var(--pf-c-page__main-section--PaddingLeft);background:white}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-rbac__add-role-disabled{cursor:default}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-rbac__default-group-info-icon{color:var(--pf-global--info-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./role-permissions.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./role-permissions.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./role-permissions.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-table tbody tr.ins-c-rbac__group-default .pf-c-table__check:first-of-type input{display:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { Fragment } from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data) => (\n  data.reduce((acc, { permission, modified }) => {\n    const [ appName, type, operation ] = permission.split(':');\n    return ([\n      ...acc,\n      {\n        cells: [\n          appName,\n          type,\n          operation,\n          <Fragment key={ `${appName}-modified` }>\n            <DateFormat date={ modified } type=\"relative\" />\n          </Fragment>\n        ]\n      }\n    ]);\n  }, [])\n);\n","import React, { useEffect, useState } from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './role-permissions-table-helpers';\nimport { cellWidth } from '@patternfly/react-table';\nimport './role-permissions.scss';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst columns = [\n  { title: 'Application' },\n  { title: 'Resource type' },\n  { title: 'Operation' },\n  { title: 'Last commit', transforms: [ cellWidth(15) ]}\n];\n\nconst Permissions = () => {\n  const [ config, setConfig ] = useState({\n    pagination: {\n      ...defaultSettings,\n      filter: ''\n    }\n  });\n  const { role, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading\n  }), shallowEqual);\n\n  const { pagination, filter } = config;\n\n  useEffect(() => {\n    setConfig({\n      ...config,\n      pagination: {\n        ...config.pagination,\n        count: role.access ? role.access.length : 0\n      }\n    });\n  }, [ role ]);\n\n  const filteredRows = (role && role.access) ?\n    (role.access || [])\n    .filter(({ permission }) => permission === '*' || filter ? permission.includes(filter) : true)\n    .map(acc => ({ ...acc, modified: role.modified })) :\n    [];\n\n  return <section className=\"pf-c-page__main-section ins-c-role__permissions\">\n    <TextContent>\n      <Text component={ TextVariants.h1 }>Permissions</Text>\n    </TextContent>\n    <TableToolbarView\n      columns={ columns }\n      createRows={ createRows }\n      data={ filteredRows.slice(pagination.offset, pagination.offset + pagination.limit) }\n      filterValue={ filter }\n      fetchData={ ({ limit, offset, name }) => setConfig({\n        ...config,\n        filter: name,\n        pagination: {\n          ...config.pagination,\n          limit,\n          offset\n        }\n      }) }\n      setFilterValue={ ({ name }) => setConfig({\n        ...config,\n        filter: name\n      })  }\n      isLoading={ isRecordLoading }\n      pagination={ {\n        ...pagination,\n        count: filteredRows.length\n      } }\n      titlePlural=\"permissions\"\n      titleSingular=\"permission\"\n    />\n  </section>;\n};\n\nexport default Permissions;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { fetchRole } from '../../redux/actions/role-actions';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport Permissions from './role-permissions';\nimport { fetchGroup } from '../../redux/actions/group-actions';\n\nconst Role = () => {\n  const { uuid, groupUuid } = useParams();\n  const { role, group, isRecordLoading } = useSelector(state => ({\n    role: state.roleReducer.selectedRole,\n    isRecordLoading: state.roleReducer.isRecordLoading,\n    ...groupUuid && { group: state.groupReducer.selectedGroup }\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRole(uuid));\n    groupUuid && dispatch(fetchGroup(groupUuid));\n  }, [ uuid, groupUuid ]);\n\n  return <Fragment>\n    <TopToolbar breadcrumbs={ [\n      ...[ groupUuid ? { title: 'Groups', to: '/groups' } : { title: 'Roles', to: '/roles' } ],\n      ...groupUuid ? [{\n        title: group && group.name,\n        to: `/groups/detail/${groupUuid}/roles`,\n        isLoading: group && group.loaded\n      }] : [],\n      { title: role && role.name, isActive: true }\n    ] }>\n      <TopToolbarTitle title= { !isRecordLoading && role ? role.name : undefined }\n        description={ !isRecordLoading && role ? role.description : undefined }/>\n    </TopToolbar>\n    { (isRecordLoading || !role) ? <ListLoader/> : <Permissions /> }\n  </Fragment>;\n};\n\nexport default Role;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app-tabs.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\",\n      function () {\n        var newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./group-roles.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./group.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./groups.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = (formData) => {\n  const { name, description } =\n      formData.values ? formData.values : { name: '', description: '' };\n  const selectedUsers = formData.selectedUsers ? formData.selectedUsers : [];\n  const selectedRoles = formData.selectedRoles ? formData.selectedRoles : [];\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Title headingLevel=\"h4\" size=\"xl\"> Confirm the details for this group, or click Back to revise </Title>\n              </TextContent>\n            </StackItem>\n            <StackItem className=\"ins-c-rbac__summary\">\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading content\" component={ TextVariants.h5 }>Group name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading content\" component={ TextVariants.h5 }>Group description</Text>\n                </GridItem>\n                <GridItem span = { 10 }>\n                  <Text className=\"data-table-detail content content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading content\" component={ TextVariants.h5 }>Role(s)</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    {selectedRoles.map((role, index) => <Text className=\"pf-u-mb-0\" key={ index }>{role.label}</Text>)}\n                  </Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span = { 2 }>\n                  <Text className=\"data-table-detail heading content\" component={ TextVariants.h5 }>Member(s)</Text>\n                </GridItem>\n                <GridItem span= { 10 }>\n                  <Text\n                    className=\"groups-table-detail content\"\n                    component={ TextVariants.h5 }>\n                    { selectedUsers.map((role, index) => <Text className=\"pf-u-mb-0\" key={ index }>{ role.label }</Text>) }\n                  </Text>\n                </GridItem>\n              </Grid>\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  groups: PropTypes.array\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst GroupInformation = (formValue, onHandleChange, setIsGroupInfoValid) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Enter group details </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Group name\"\n              isRequired\n              fieldId=\"group-name\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"group-name\"\n                name=\"group-name\"\n                aria-describedby=\"group-name\"\n                value={ formValue.name }\n                onChange={ (_, event) => { setIsGroupInfoValid(event.currentTarget.value.trim().length > 0);\n                  onHandleChange({ name: event.currentTarget.value });} }\n              />\n            </FormGroup>\n            <FormGroup label=\"Group description\" fieldId=\"group-description\">\n              <TextArea\n                type=\"text\"\n                id=\"group-description\"\n                name=\"group-description\"\n                value={ formValue.description }\n                onChange={ (_, event) => onHandleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nGroupInformation.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default GroupInformation;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextContent,\n  Title\n} from '@patternfly/react-core';\nimport { CompactUsersList } from './users-list';\nimport '../../../App.scss';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\n\nconst SetUsers = ({ selectedUsers, setSelectedUsers, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Title headingLevel=\"h4\" size=\"xl\"> Add members to the group </Title>\n              <ActiveUser\n                description={ description || 'These are all of the users in your Red Hat organization. To manage users, go to your' }\n              />\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-user\"\n            >\n              <Card>\n                <CompactUsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetUsers.propTypes = {\n  selectedUsers: PropTypes.array,\n  setSelectedUsers: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetUsers;\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRolesWithPolicies } from '../../../redux/actions/role-actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { fetchAddRolesForGroup } from '../../../redux/actions/group-actions';\n\nconst columns = [\n  { title: 'Name', orderBy: 'name' },\n  { title: 'Description' }\n];\n\nconst createRows = (data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc,  { uuid, name, description }) => ([\n    ...acc, {\n      uuid,\n      cells: [ name, description ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst RolesList = ({ roles, fetchRoles, isLoading, pagination, selectedRoles, setSelectedRoles }) => {\n  const [ filterValue, setFilterValue ] = useState('');\n\n  useEffect(() => {\n    fetchRoles({});\n  }, []);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  return <TableToolbarView\n    columns={ columns }\n    isSelectable={ true }\n    isCompact={ true }\n    borders = { false }\n    createRows={ createRows }\n    data={ roles }\n    filterValue={ filterValue }\n    fetchData={ (config) => fetchRoles(mappedProps(config)) }\n    setFilterValue={ ({ name }) => setFilterValue(name) }\n    isLoading={ isLoading }\n    pagination={ pagination }\n    checkedRows={ selectedRoles }\n    setCheckedItems={ setCheckedItems }\n    titlePlural=\"roles\"\n    titleSingular=\"role\"\n  />;\n};\n\nconst mapStateToProps = ({ roleReducer: { roles, isLoading }}) => ({\n  roles: roles.data,\n  pagination: roles.meta,\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRolesWithPolicies(mappedProps(apiProps)));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nRolesList.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  setSelectedRoles: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  })\n};\n\nRolesList.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings\n};\n\nconst mapStateToPropsGroup = ({ groupReducer: { selectedGroup }}) => {\n  const roles = selectedGroup.addRoles.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.addRoles.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.addRoles.loaded,\n    groupId: selectedGroup.uuid\n  };\n};\n\nconst mapDispatchToPropsGroup = dispatch => {\n  return {\n    fetchRoles: (groupId, apiProps) => {\n      dispatch(fetchAddRolesForGroup(groupId, apiProps));\n    },\n    addNotification: (...props) => dispatch(addNotification(...props))\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    ...ownProps,\n    ...propsFromState,\n    ...propsFromDispatch,\n    fetchRoles: (apiProps) => propsFromDispatch.fetchRoles(propsFromState.groupId, apiProps)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesList);\nexport const ExcludedRolesList = connect(mapStateToPropsGroup, mapDispatchToPropsGroup, mergeProps)(RolesList);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport RolesList from './roles-list';\nimport '../../../App.scss';\n\nconst SetRoles = ({ selectedRoles, setSelectedRoles, title, description }) => {\n  return (\n    <Fragment>\n      <Form>\n        <Stack gutter=\"md\">\n          { title && <StackItem>\n            <Title size=\"xl\">{ title }</Title>\n          </StackItem> }\n          <StackItem>\n            <TextContent>\n              <Title headingLevel=\"h4\" size=\"xl\"> Assign roles to the group </Title>\n              <Text\n                className=\"pf-u-mt-0\"\n                component={ TextVariants.h6 }>\n                { description || 'Select one or more roles to add to this group.' }\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormGroup\n              fieldId=\"select-role\"\n            >\n              <Card>\n                <RolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n              </Card>\n            </FormGroup>\n          </StackItem>\n        </Stack>\n      </Form>\n    </Fragment>\n  );\n};\n\nSetRoles.propTypes = {\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default SetRoles;\n\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { fetchUsers } from '../../../redux/actions/user-actions';\nimport SummaryContent from './summary-content';\nimport GroupInformation from './group-information';\nimport SetUsers from './set-users';\nimport SetRoles from './set-roles';\nimport { WarningModal } from '../../common/warningModal';\nimport '../../common/hideWizard.scss';\n\nconst AddGroupWizard = ({\n  addNotification,\n  addGroup,\n  postMethod,\n  closeUrl\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ formData, setValues ] = useState({});\n  const [ isGroupInfoValid, setIsGroupInfoValid ] = useState(false);\n\n  const history = useHistory();\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      component: new GroupInformation(formData, handleChange, setIsGroupInfoValid),\n      enableNext: isGroupInfoValid\n    },\n    {\n      name: 'Assign roles',\n      component: new SetRoles({ formData, selectedRoles, setSelectedRoles })\n    },\n    { name: 'Add members',\n      component: new SetUsers({ formData, selectedUsers, setSelectedUsers })\n    },\n    { name: 'Review',\n      component: new SummaryContent({ values: formData, selectedUsers, selectedRoles }),\n      nextButtonText: 'Confirm',\n      enableNext: isGroupInfoValid\n    }\n  ];\n\n  const  onSubmit =  async() => {\n    const user_data = {\n      ...formData,\n      user_list: selectedUsers ? selectedUsers.map(user => ({ username: user.label })) : undefined,\n      roles_list: selectedRoles ? selectedRoles.map(role => role.uuid) : undefined\n    };\n    await addGroup(user_data);\n    postMethod();\n    history.push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding group was canceled by the user.'\n    });\n    history.push('/groups');\n  };\n\n  const [ cancelWarningVisible, setCancelWarningVisible ] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Wizard\n        className={ cancelWarningVisible && 'ins-m-wizard__hidden' }\n        isLarge\n        isCompactNav\n        title=\"Create and configure a group\"\n        description=\"To give users access permissions, create a group and assign roles to it.\"\n        isOpen\n        onClose={ () => {\n          if (Object.values(formData).filter(Boolean).length > 0 || selectedRoles.length > 0 || selectedUsers.length > 0) {\n            setCancelWarningVisible(true);\n          } else {\n            onCancel();\n          }\n        } }\n        onSave={ onSubmit }\n        steps={ steps }\n      />\n      <WarningModal\n        type='group'\n        isOpen={ cancelWarningVisible }\n        onModalCancel={ () => setCancelWarningVisible(false) }\n        onConfirmCancel={ onCancel }/>\n    </React.Fragment>\n  );\n\n};\n\nAddGroupWizard.defaultProps = {\n  users: [],\n  inputValue: '',\n  selectedUsers: [],\n  selectedRoles: [],\n  closeUrl: '/groups',\n  postMethod: () => undefined\n};\n\nAddGroupWizard.propTypes = {\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ roleReducer: { roles: { meta }, filterValue, isLoading }}) => {\n  return {\n    pagination: meta,\n    isLoading,\n    searchFilter: filterValue\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  fetchGroup,\n  fetchRoles,\n  fetchUsers\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddGroupWizard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components';\nimport { Button, Modal, Grid, GridItem, TextContent, Text } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport FormRenderer from '../common/form-renderer';\nimport { fetchGroup, updateGroup } from '../../redux/actions/group-actions';\nconst EditGroupModal = ({\n  addNotification,\n  updateGroup,\n  postMethod,\n  closeUrl,\n  isOpen,\n  group,\n  onClose\n}) => {\n  const [ selectedGroup, setSelectedGroup ] = useState(undefined);\n\n  const history = useHistory();\n  const match = useRouteMatch('/groups/edit/:id');\n\n  const setGroupData = (groupData) => {\n    setSelectedGroup(groupData);\n  };\n\n  const fetchData = () => {\n    match && fetchGroup(match.params.id).payload.then((data) => setGroupData(data)).catch(() => setGroupData(undefined));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelectedGroup(group);\n  }, [ group ]);\n\n  const onSubmit = data => {\n    const user_data = { ...data };\n    postMethod ? updateGroup(user_data).then(() => postMethod()).then(history.push(closeUrl)) :\n      updateGroup(user_data).then(() => history.push(closeUrl));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      dismissDelay: 8000,\n      dismissable: false,\n      title: selectedGroup ? 'Editing group' : 'Adding group',\n      description: selectedGroup ? 'Edit group was canceled by the user.' : 'Adding group was canceled by the user.'\n    });\n    onClose();\n    history.push(closeUrl);\n  };\n\n  const schema = {\n    fields: [{\n      name: 'name',\n      label: 'Name',\n      component: componentTypes.TEXT_FIELD,\n      validate: [{\n        type: validatorTypes.REQUIRED\n      }]\n    }, {\n      name: 'description',\n      label: 'Description',\n      component: componentTypes.TEXTAREA_FIELD\n    }]\n  };\n\n  // eslint-disable-next-line react/prop-types\n  const formButtons = ({ pristine, valid, form: { submit }}) => {\n    return (\n      <div>\n        <Button isDisabled={ pristine || !valid } onClick={ submit } variant=\"primary\">Submit</Button>\n        <Button variant='link' onClick={ onCancel }>Cancel</Button>\n      </div>\n    );\n  };\n\n  return (\n    <Modal\n      isLarge\n      width={ '50%' }\n      title={ 'Edit group\\'s information' }\n      isOpen={ isOpen }\n      onClose={ onCancel }\n    > { selectedGroup\n        ?\n        <Grid gutter=\"md\">\n          <TextContent>\n            <Text>\n              { `Make any changes to ${selectedGroup.name} group.` }\n            </Text>\n          </TextContent>\n          <GridItem>\n            <FormRenderer\n              schema={ schema }\n              schemaType=\"mozilla\"\n              onSubmit={ onSubmit }\n              formContainer=\"modal\"\n              initialValues={ { ...selectedGroup } }\n              renderFormButtons={ formButtons }\n            />\n          </GridItem>\n        </Grid>\n        : <Skeleton/>\n      }\n    </Modal>\n  );\n};\n\nEditGroupModal.defaultProps = {\n  closeUrl: '/groups',\n  onClose: () => null,\n  onSubmit: () => null\n};\n\nEditGroupModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  updateGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  closeUrl: PropTypes.string,\n  isOpen: PropTypes.bool,\n  group: PropTypes.object,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  updateGroup,\n  fetchGroup\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Text, TextContent, Checkbox } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { fetchGroup, removeGroups } from '../../redux/actions/group-actions';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst RemoveGroupModal = ({\n  removeGroups,\n  group,\n  isLoading,\n  fetchGroup,\n  groupsUuid,\n  isModalOpen,\n  postMethod,\n  closeUrl\n}) => {\n  useEffect(() => {\n    if (groupsUuid.length === 1) {\n      fetchGroup(groupsUuid[0].uuid);\n    }\n  }, []);\n\n  const history = useHistory();\n\n  const [ checked, setChecked ] = useState(false);\n\n  const multipleGroups = groupsUuid.length > 1;\n\n  const onSubmit = () => {\n    const uuids = groupsUuid.map((group) => group.uuid);\n    removeGroups(uuids).then(() => postMethod(uuids)).then(history.push(closeUrl));\n  };\n\n  const onCancel = () => history.goBack();\n\n  return (\n    <Modal\n      isOpen={ isModalOpen }\n      isSmall\n      title = { <Text>\n          <ExclamationTriangleIcon className=\"delete-group-warning-icon\" />\n        &nbsp; { multipleGroups ? 'Delete groups?' : 'Delete group?' }\n        </Text> }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"submit\" isDisabled={ !checked }  variant=\"danger\" type=\"button\" onClick={ onSubmit }>\n          { multipleGroups ? 'Delete groups' : 'Delete group' }\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <TextContent>\n        { multipleGroups ?\n          <Text>\n          Deleting these <b>{ groupsUuid.length }</b> groups removes all roles\n          from the members inside the group.\n          </Text> :\n          isLoading ?\n            <FormItemLoader/> :\n            <Text>\n          Deleting the <b>{ group.name }</b> group removes all roles\n          from the members inside the group.\n            </Text>\n        }\n      </TextContent>\n      &nbsp;\n      <Checkbox\n        isChecked={ checked }\n        onChange={ ()=> setChecked(!checked) }\n        label=\"I understand that this action cannot be undone.\"\n        id=\"delete-group-check\"\n      />\n    </Modal>\n  );\n};\n\nRemoveGroupModal.defaultProps = {\n  isModalOpen: false,\n  group: {},\n  groupsUuid: [],\n  isLoading: true,\n  closeUrl: '/groups'\n};\n\nRemoveGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  removeGroups: PropTypes.func.isRequired,\n  fetchGroup: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  isLoading: PropTypes.bool,\n  group: PropTypes.object,\n  groupsUuid: PropTypes.array,\n  closeUrl: PropTypes.string\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup }}) => ({\n  group: selectedGroup,\n  isLoading: !selectedGroup.loaded\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchGroup,\n  removeGroups\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveGroupModal);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nexport const createRows = (data, opened, selectedRows = []) => (\n  data.reduce((acc, { uuid, name, roleCount, principalCount, modified, platform_default: isPlatformDefault }) => ([\n    ...acc,\n    {\n      uuid,\n      isPlatformDefault,\n      cells: [\n        <Fragment key={ uuid }>\n          <Link to={ `/groups/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        roleCount,\n        principalCount,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment>\n      ],\n      selected: Boolean(selectedRows && selectedRows.find(row => row.uuid === uuid))\n    }\n  ]), [])\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport './app-tabs.scss';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems, isHeader }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className={ isHeader ? `ins-rbac-page-header__tabs` : '' } activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired,\n  isHeader: PropTypes.bool\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport classNames from 'classnames';\n\nexport const createRows = (data, _opened, checkedRows = []) => {\n  return (\n    data.reduce((acc,  { is_active: isActive, username, email, first_name: firstName, last_name: lastName }) => ([\n      ...acc,\n      {\n        uuid: username,\n        username,\n        cells: [{\n          title: (\n            <Label isCompact className={ classNames('ins-c-rbac__user-label', { 'ins-m-inactive': !isActive }) }>\n              {isActive ? 'Active' : 'Inactive'}\n            </Label>\n        ),\n        props: {\n          data: { isActive }\n        }\n      }, username, email, lastName, firstName ],\n        selected: checkedRows.find(row => row.uuid === username)\n      }\n    ]), []));\n};\n\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, StackItem, Stack } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { addGroup, addMembersToGroup, fetchMembersForGroup } from '../../../redux/actions/group-actions';\nimport { CompactUsersList } from '../add-group/users-list';\nimport ActiveUser from '../../../presentational-components/shared/ActiveUsers';\n\nconst AddGroupMembers = ({\n  history: { push },\n  match: { params: { uuid }},\n  addNotification,\n  closeUrl,\n  addMembersToGroup,\n  fetchMembersForGroup\n}) => {\n  const [ selectedUsers, setSelectedUsers ] = useState([]);\n\n  const onSubmit = () => {\n    const userList = selectedUsers.map(user => ({ username: user.label }));\n    if (userList.length > 0) {\n      addNotification({\n        variant: 'info',\n        title: `Adding member${userList.length > 1 ? 's' : ''} to group`,\n        dismissDelay: 8000,\n        dismissable: false,\n        description: `Adding member${userList.length > 1 ? 's' : ''} to group initiated.`\n      });\n      addMembersToGroup(uuid, userList).then(() => fetchMembersForGroup(uuid));\n    }\n\n    push(closeUrl);\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group`,\n      dismissDelay: 8000,\n      dismissable: false,\n      description: `Adding member${selectedUsers.length > 1 ? 's' : ''} to group was canceled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      title=\"Add members to the group\"\n      width={ '75%' }\n      isOpen\n      isFooterLeftAligned\n      actions={ [\n        <Button key=\"confirm\" isDisabled={ selectedUsers.length === 0 } variant=\"primary\" onClick={ onSubmit }>\n          Add to group\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      onClose={ onCancel }>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <ActiveUser description=\"These are all of the users in your Red Hat organization. To manage users, go to your\"/>\n          </StackItem>\n          <StackItem>\n            <CompactUsersList selectedUsers={ selectedUsers } setSelectedUsers={ setSelectedUsers } />\n          </StackItem>\n        </Stack>\n    </Modal>\n  );\n};\n\nAddGroupMembers.defaultProps = {\n  users: [],\n  inputValue: '',\n  closeUrl: '/groups',\n  selectedUsers: []\n};\n\nAddGroupMembers.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func\n  }).isRequired,\n  addGroup: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  fetchMembersForGroup: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  users: PropTypes.array,\n  selectedUsers: PropTypes.array,\n  match: PropTypes.object,\n  closeUrl: PropTypes.string,\n  addMembersToGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ groupReducer: { isLoading }}) => ({\n  isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addGroup,\n  addMembersToGroup,\n  fetchMembersForGroup\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddGroupMembers));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n  Button,\n  Checkbox,\n  Modal,\n  Split,\n  SplitItem,\n  Stack,\n  TextContent\n} from '@patternfly/react-core';\n\nconst RemoveModal = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, withCheckbox }) => {\n  const [ checked, setChecked ] = useState(false);\n\n  return (\n    <Modal className=\"ins-c-rbac__dialog--warning\"\n\n      title={ <div> <ExclamationTriangleIcon className=\"ins-m-alert ins-c-rbac__delete-icon\" /> { title } </div> }\n      isOpen={ isOpen }\n      isSmall\n      onClose={ onClose }\n      actions={ [\n        <Button\n          key=\"confirm\"\n          isDisabled={ withCheckbox && !checked }\n          variant=\"danger\"\n          onClick={ onSubmit }>\n          { confirmButtonLabel }\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={ onClose }\n        >\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned\n    >\n      <Split gutter=\"md\">\n        <SplitItem isFilled>\n          <Stack gutter=\"md\">\n            <TextContent>\n              { text }\n            </TextContent>\n          </Stack>\n\n        </SplitItem>\n      </Split>\n      { withCheckbox\n        ? <Checkbox\n          isChecked={ checked }\n          onChange={ () => setChecked(!checked) }\n          label=\"I understand, and I want to continue.\"\n          id=\"remove-modal-check\"\n          className=\"pf-u-mt-lg\"\n        />\n        : null }\n    </Modal>\n  );\n};\n\nRemoveModal.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  withCheckbox: PropTypes.bool\n};\n\nRemoveModal.defaultProps = {\n  withCheckbox: false\n};\n\nexport default RemoveModal;\n","/* eslint-disable camelcase */\nimport { cellWidth } from '@patternfly/react-table';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, Route, useParams } from 'react-router-dom';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './principal-table-helpers';\nimport { fetchMembersForGroup } from '../../../redux/actions/group-actions';\nimport { removeMembersFromGroup } from '../../../redux/actions/group-actions';\nimport { Button, Card, CardBody, Text, TextVariants, Bullseye, TextContent } from '@patternfly/react-core';\nimport AddGroupMembers from './add-group-members';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\nimport UsersRow from '../../../presentational-components/shared/UsersRow';\n\nconst columns = [\n  { title: 'Status', transforms: [ cellWidth(10), () => ({ className: 'ins-m-width-5' }) ]},\n  { title: 'Username' },\n  { title: 'Email' },\n  { title: 'Last name' },\n  { title: 'First name' }\n];\n\nconst selector = ({ groupReducer: { groups, selectedGroup }}) => ({\n  principals: selectedGroup.members.data,\n  pagination: selectedGroup.members.meta,\n  userIdentity: groups.identity,\n  groupName: selectedGroup.name,\n  platform_default: selectedGroup.platform_default,\n  isLoading: selectedGroup.members.isLoading\n});\n\nconst removeModalText = (name, group, plural) => (plural\n  ? <p>These <b> { `${name}` }</b> members will lose all the roles associated with the <b>{ `${group}` }</b> group.</p>\n  : <p> <b>{ `${name}` }</b> will lose all the roles associated with the <b> { `${group}` }</b> group.</p>\n);\n\nconst GroupPrincipals = () => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedPrincipals, setSelectedPrincipals ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  const { uuid } = useParams();\n  const {\n    principals,\n    pagination,\n    groupName,\n    userIdentity,\n    isLoading,\n    platform_default\n  } = useSelector(selector, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  const fetchData = (usernames, options = pagination) => {\n    dispatch(fetchMembersForGroup(uuid, usernames, options));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const setCheckedPrincipals = (newSelection) => {\n    setSelectedPrincipals((principals) => newSelection(principals));\n  };\n\n  const removeMembers = (userNames) => {\n    return dispatch(removeMembersFromGroup(uuid, userNames)).then(() => {\n      setSelectedPrincipals([]);\n      fetchData(undefined, { ...pagination, offset: 0 });\n    });\n  };\n\n  const actionResolver = () =>\n    !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Remove',\n          onClick: (_event, _rowId, principal) => {\n            setConfirmDelete(() => () => removeMembers([ principal.username.title ]));\n            setDeleteInfo({\n              title: 'Remove member?',\n              text: removeModalText(principal.username.title, groupName, false),\n              confirmButtonLabel: 'Remove member'\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/members/add_members` }\n      render={ args => <AddGroupMembers\n        fetchData={ fetchData }\n        closeUrl={ `/groups/detail/${uuid}/members` }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          to={ `/groups/detail/${uuid}/members/add_members` }\n          key=\"remove-from-group\"\n        >\n          <Button\n            variant=\"primary\"\n            aria-label=\"Add member\"\n          >\n        Add member\n          </Button>\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedPrincipals || !selectedPrincipals.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleMembersSelected = selectedPrincipals.length > 1;\n            setConfirmDelete(() => () => removeMembers(selectedPrincipals.map(user => user.name || user.username)));\n            setDeleteInfo({\n              title: 'Remove members?',\n              confirmButtonLabel: multipleMembersSelected ? 'Remove members' : 'Remove member',\n              text: removeModalText(\n                multipleMembersSelected ? selectedPrincipals.length : (selectedPrincipals[0].name || selectedPrincipals[0].username),\n                groupName,\n                multipleMembersSelected\n              )\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <Fragment>\n      <RemoveModal\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        isOpen={ showRemoveModal }\n        onClose={ () => setShowRemoveModal(false) }\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n        } }\n      />\n      <Section type=\"content\" id={ 'tab-principals' }>\n        {\n          platform_default ?\n            <Card>\n              <CardBody>\n                <Bullseye>\n                  <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                    All users in this organization are members of this group.\n                    </Text>\n                  </TextContent>\n                </Bullseye>\n              </CardBody>\n            </Card> :\n            <TableToolbarView\n              data={ (principals || []).map(user => ({ ...user, uuid: user.username })) }\n              isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n              createRows={ createRows }\n              columns={ columns }\n              routes={ routes }\n              actionResolver={ actionResolver }\n              filterPlaceholder=\"username\"\n              titlePlural=\"members\"\n              titleSingular=\"member\"\n              pagination={ pagination }\n              filterValue={ filterValue }\n              fetchData={ ({ limit, offset, name }) => fetchData(name, { limit, offset }) }\n              setFilterValue={ ({ name }) => setFilterValue(name) }\n              checkedRows={ selectedPrincipals }\n              isLoading={ isLoading }\n              rowWrapper={ UsersRow }\n              setCheckedItems={ setCheckedPrincipals }\n              toolbarButtons={ toolbarButtons }\n              emptyProps={ { title: 'There are no members in this group', description: [ 'Add a user to configure user access.', '' ]} }\n            /> }\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default GroupPrincipals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent } from '@patternfly/react-core';\n\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst DefaultGroupChange = ({ isOpen, onClose, onSubmit }) => {\n  return (<RemoveModal\n    text={ <TextContent>\n        <Text>\n          Once you edit the <b>Default user access</b> group, the system will no longer update it with new default access roles.\n              The group name will change to <b>Custom default user access</b>.\n        </Text>\n      </TextContent> }\n    title={ 'Warning' }\n    withCheckbox\n    isOpen={ isOpen }\n    confirmButtonLabel={ 'Continue' }\n    onClose={ onClose }\n    onSubmit={ onSubmit }\n  />);\n};\n\nDefaultGroupChange.propTypes = {\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nexport default DefaultGroupChange;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { ExcludedRolesList } from '../add-group/roles-list';\nimport '../../../App.scss';\nimport DefaultGroupChange from './default-group-change-modal';\n\nconst AddGroupRoles = ({\n  history: { push },\n  match: { params: { uuid }},\n  selectedRoles,\n  setSelectedRoles,\n  title,\n  closeUrl,\n  addRolesToGroup,\n  name,\n  isDefault,\n  isChanged,\n  addNotification,\n  onDefaultGroupChanged,\n  fetchRolesForGroup\n}) => {\n  const [ showConfirmModal, setShowConfirmModal ] = useState(true);\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Adding roles to group',\n      dismissDelay: 8000,\n      dismissable: false,\n      description: 'Adding roles to group was canceled by the user.'\n    });\n    push(closeUrl);\n  };\n\n  const onSubmit = () => {\n    const rolesList = selectedRoles.map(role => role.uuid);\n    addRolesToGroup(uuid, rolesList, fetchRolesForGroup);\n    if (isDefault && !isChanged) {\n      onDefaultGroupChanged(true);\n    }\n\n    return push(closeUrl);\n  };\n\n  return (isDefault && !isChanged && showConfirmModal\n    ? <DefaultGroupChange\n      isOpen={ showConfirmModal }\n      onClose={ onCancel }\n      onSubmit={ () => setShowConfirmModal(false) }\n    />\n    : <Modal\n      title=\"Add roles to group\"\n      width={ '70%' }\n      isOpen\n      onClose={ () => {\n        onCancel();\n        setShowConfirmModal(true);\n      } }\n      actions={ [\n        <Button\n          aria-label=\"Save\"\n          variant=\"primary\"\n          key=\"confirm\"\n          isDisabled={ selectedRoles.length === 0 }\n          onClick={ onSubmit }>\n            Add to group\n        </Button>,\n        <Button\n          aria-label='Cancel'\n          variant='link'\n          key=\"cancel\"\n          onClick={ onCancel }>\n          Cancel\n        </Button>\n      ] }\n      isFooterLeftAligned>\n      <Stack gutter=\"md\">\n        { title && <StackItem>\n          <Title size=\"xl\">{ title }</Title>\n        </StackItem> }\n        <StackItem>\n          <TextContent>\n            <Text component={ TextVariants.h6 }>\n                  This role list has been <b> filtered </b> to <b> only show roles </b> that are <b> not currently </b> in <b> { name }</b>.\n            </Text>\n          </TextContent>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <ExcludedRolesList selectedRoles={ selectedRoles } setSelectedRoles={ setSelectedRoles }/>\n          </Card>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nAddGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.any,\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  selectedRoles: PropTypes.array,\n  setSelectedRoles: PropTypes.func,\n  addRolesToGroup: PropTypes.func,\n  closeUrl: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  addNotification: PropTypes.func,\n  onDefaultGroupChanged: PropTypes.func,\n  fetchRolesForGroup: PropTypes.func\n};\n\nexport default AddGroupRoles;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DefaultGroupChange from './default-group-change-modal';\nimport RemoveModal from '../../../presentational-components/shared/RemoveModal';\n\nconst RemoveRoles = ({ title, text, onClose, onSubmit, isOpen, confirmButtonLabel, isDefault, isChanged }) => {\n  const [ showConfirmModal, setShowConfirmModal ] = useState(true);\n\n  return (isDefault && !isChanged && showConfirmModal\n    ? <DefaultGroupChange\n      isOpen={ showConfirmModal && isOpen }\n      onClose={ () => {\n        onClose();\n      } }\n      onSubmit={ () => {\n        setShowConfirmModal(false);\n      } }\n    />\n    : <RemoveModal\n      text={ text }\n      title={ title }\n      isOpen={ isOpen }\n      confirmButtonLabel={ confirmButtonLabel }\n      onClose={ () => {\n        onClose();\n        setShowConfirmModal(true);\n      } }\n      onSubmit={ () => {\n        onSubmit();\n\n      } }\n    />);\n};\n\nRemoveRoles.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  confirmButtonLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  isOpen: PropTypes.bool,\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool\n};\n\nRemoveRoles.defaultProps = {\n  isDefault: false,\n  isChanged: false\n};\n\nexport default RemoveRoles;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { Section, DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { mappedProps } from '../../../helpers/shared/helpers';\nimport { defaultCompactSettings } from '../../../helpers/shared/pagination';\nimport { TableToolbarView } from '../../../presentational-components/shared/table-toolbar-view';\nimport { fetchRoles } from '../../../redux/actions/role-actions';\nimport { removeRolesFromGroup, addRolesToGroup, fetchRolesForGroup, fetchAddRolesForGroup, fetchGroup } from '../../../redux/actions/group-actions';\nimport AddGroupRoles from './add-group-roles';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport RemoveRole from './remove-role-modal';\nimport classNames from 'classnames';\nimport './group-roles.scss';\n\nconst columns = [\n  { title: 'Name', orderBy: 'name' },\n  { title: 'Description' },\n  { title: 'Last modified' }\n];\n\nconst createRows = (groupUuid, data, expanded, checkedRows = []) => {\n  return data ? data.reduce((acc, { uuid, name, description, modified }) => ([\n    ...acc, {\n      uuid,\n      title: name,\n      cells: [\n        <Fragment key={ `${uuid}-name` }>\n          <Link to={ `/groups/detail/${groupUuid}/roles/detail/${uuid}` }>\n            { name }\n          </Link>\n        </Fragment>,\n        description,\n        <Fragment key={ `${uuid}-modified` }>\n          <DateFormat date={ modified } type=\"relative\" />\n        </Fragment> ],\n      selected: Boolean(checkedRows && checkedRows.find(row => row.uuid === uuid))\n    }\n  ]), []) : [];\n};\n\nconst addRoleButton = (isDisabled) => (isDisabled\n  ? <Tooltip\n    content={ <div>All available roles have already been added to the group</div> }\n\n  >\n    <div>\n      <Button\n        variant=\"primary\"\n        aria-label=\"Add role\"\n        isDisabled={ isDisabled }\n      >\n      Add role\n      </Button>\n    </div>\n  </Tooltip>\n  : <Button\n    variant=\"primary\"\n    aria-label=\"Add role\"\n  >\n    Add role\n  </Button>);\n\nconst GroupRoles = ({\n  roles,\n  fetchRoles,\n  removeRoles,\n  addRoles,\n  fetchRolesForGroup,\n  isLoading,\n  pagination,\n  match: { params: { uuid }},\n  userIdentity,\n  name,\n  isDefault,\n  isChanged,\n  onDefaultGroupChanged,\n  fetchAddRolesForGroup,\n  disableAddRoles,\n  addNotification\n}) => {\n  const [ descriptionValue, setDescriptionValue ] = useState('');\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRoles, setSelectedRoles ] = useState([]);\n  const [ selectedAddRoles, setSelectedAddRoles ] = useState([]);\n  const [ showRemoveModal, setShowRemoveModal ] = useState(false);\n  const [ confirmDelete, setConfirmDelete ] = useState(() => null);\n  const [ deleteInfo, setDeleteInfo ] = useState({});\n\n  useEffect(() => {\n    fetchRolesForGroup(pagination)(uuid);\n  }, []);\n\n  useEffect(() => {\n    fetchAddRolesForGroup(uuid);\n  }, [ roles ]);\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRoles((roles) => {\n      return newSelection(roles).map(({ uuid, name, label }) => ({ uuid, label: label || name }));\n    });\n  };\n\n  const removeModalText = (name, role, plural) => (\n    <p>\n      Members in the <b>{ name }</b> group will lose the permissions in { plural ? 'these' : 'the' }\n      <b> { role }</b> role{ plural ? `s` : '' }.\n    </p>\n  );\n\n  const actionResolver = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        {\n          title: 'Remove',\n          onClick: (_event, _rowId, role) => {\n            setConfirmDelete(() => () => removeRoles(uuid, [ role.uuid ], () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)));\n            setDeleteInfo({\n              title: 'Remove role?',\n              confirmButtonLabel: 'Remove role',\n              text: removeModalText(name, role.title, false)\n            });\n            setShowRemoveModal(true);\n          }\n        }\n      ] : []\n  ];\n\n  const routes = () => <Fragment>\n    <Route path={ `/groups/detail/:uuid/roles/add_roles` }\n      render={ args => <AddGroupRoles\n        fetchData={ fetchRoles }\n        fetchRolesForGroup={ () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid) }\n        selectedRoles={ selectedAddRoles }\n        setSelectedRoles={ setSelectedAddRoles }\n        closeUrl={ `/groups/detail/${uuid}/roles` }\n        addRolesToGroup={ addRoles }\n        name={ name }\n        isDefault={ isDefault }\n        isChanged={ isChanged }\n        addNotification={ addNotification }\n        onDefaultGroupChanged= { onDefaultGroupChanged }\n        { ...args }\n      /> }\n    />\n  </Fragment>;\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link\n          className={ classNames({ 'ins-c-rbac__add-role-disabled': disableAddRoles }) }\n          to={ `/groups/detail/${uuid}/roles/add_roles` }\n          key=\"add-to-group\"\n          onClick={ (e) => disableAddRoles && e.preventDefault() }\n        >\n          { addRoleButton(disableAddRoles) }\n        </Link>,\n        {\n          label: 'Remove',\n          props: {\n            isDisabled: !selectedRoles || !selectedRoles.length > 0,\n            variant: 'danger'\n          },\n          onClick: () => {\n            const multipleRolesSelected = selectedRoles.length > 1;\n            setConfirmDelete(() => () => removeRoles(uuid, selectedRoles.map(role => role.uuid), () => fetchRolesForGroup({ ...pagination, offset: 0 })(uuid)));\n            setDeleteInfo({\n              title: multipleRolesSelected ? 'Remove roles?' : 'Remove role?',\n              confirmButtonLabel: selectedRoles.length > 1 ? 'Remove roles' : 'Remove role',\n              text: removeModalText(\n                name,\n                multipleRolesSelected ? selectedRoles.length : roles.find(role => role.uuid === selectedRoles[0].uuid).name,\n                multipleRolesSelected)\n            });\n\n            setShowRemoveModal(true);\n\n          }\n        }\n      ] : []\n  ];\n\n  return (\n    <React.Fragment>\n      <RemoveRole\n        text={ deleteInfo.text }\n        title={ deleteInfo.title }\n        isOpen={ showRemoveModal }\n        isChanged={ isChanged }\n        isDefault={ isDefault }\n        confirmButtonLabel={ deleteInfo.confirmButtonLabel }\n        onClose={ () => setShowRemoveModal(false) }\n\n        onSubmit={ () => {\n          setShowRemoveModal(false);\n          confirmDelete();\n          setSelectedRoles([]);\n          onDefaultGroupChanged(isDefault && !isChanged);\n        } }\n      />\n\n      <Section type=\"content\" id={ 'tab-roles' }>\n        <TableToolbarView\n          columns={ columns }\n          isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n          createRows={ (...props) => createRows(uuid, ...props) }\n          data={ roles }\n          filterValue={ filterValue }\n          fetchData={ (config) => {\n            fetchRolesForGroup(config)(uuid);\n          } }\n          setFilterValue={ ({ name, description }) => {\n            typeof name !== 'undefined' && setFilterValue(name);\n            typeof description !== 'undefined' && setDescriptionValue(description);\n          } }\n          isLoading={ isLoading }\n          pagination={ pagination }\n          checkedRows={ selectedRoles }\n          setCheckedItems={ setCheckedItems }\n          titlePlural=\"roles\"\n          titleSingular=\"role\"\n          toolbarButtons={ toolbarButtons }\n          actionResolver={ actionResolver }\n          routes={ routes }\n          emptyProps={ { title: 'There are no roles in this group', description: [ 'Add a role to configure user access.', '' ]} }\n          textFilters={ [\n            { key: 'name', value: filterValue },\n            { key: 'description', value: descriptionValue }\n          ] }\n        />\n      </Section>\n    </React.Fragment>\n\n  );\n};\n\nconst reloadWrapper = (event, callback) => {\n  event.payload.then(callback);\n  return event;\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, groups }}) => {\n  const roles = selectedGroup.roles;\n\n  return {\n    roles,\n    pagination: selectedGroup.pagination || { ...defaultSettings, count: roles && roles.length },\n    isLoading: !selectedGroup.loaded,\n    userIdentity: groups.identity,\n    name: selectedGroup.name,\n    isDefault: selectedGroup.platform_default,\n    isChanged: !selectedGroup.system,\n    disableAddRoles: !(selectedGroup.addRoles.pagination && selectedGroup.addRoles.pagination.count > 0)\n  };};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRoles: (apiProps) => {\n      dispatch(fetchRoles(mappedProps(apiProps)));\n    },\n    addRoles: (groupId, roles, callback) => dispatch(reloadWrapper(addRolesToGroup(groupId, roles), callback)),\n    removeRoles: (groupId, roles, callback) => dispatch(reloadWrapper(removeRolesFromGroup(groupId, roles), callback)),\n    fetchRolesForGroup: (config) => (groupId, options) => dispatch(fetchRolesForGroup(groupId, config, options)),\n    fetchAddRolesForGroup: (groupId) => dispatch(fetchAddRolesForGroup(groupId, {}, {})),\n    addNotification: (...props) => dispatch(addNotification(...props)),\n    fetchGroup: (apiProps) => dispatch(fetchGroup(apiProps))\n  };\n};\n\nGroupRoles.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }),\n  roles: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchFilter: PropTypes.string,\n  fetchRoles: PropTypes.func.isRequired,\n  fetchRolesForGroup: PropTypes.func.isRequired,\n  fetchAddRolesForGroup: PropTypes.func.isRequired,\n  selectedRoles: PropTypes.array,\n  addRoles: PropTypes.func,\n  name: PropTypes.string,\n  removeRoles: PropTypes.func,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    count: PropTypes.number\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired,\n  userIdentity: PropTypes.shape({\n    user: PropTypes.shape({\n      is_org_admin: PropTypes.bool\n    })\n  }),\n  isDefault: PropTypes.bool,\n  isChanged: PropTypes.bool,\n  onDefaultGroupChanged: PropTypes.func,\n  disableAddRoles: PropTypes.bool.isRequired,\n  addNotification: PropTypes.func\n};\n\nGroupRoles.defaultProps = {\n  roles: [],\n  pagination: defaultCompactSettings,\n  selectedRoles: [],\n  userIdentity: {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupRoles);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppTabs from '../app-tabs/app-tabs';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport GroupPrincipals from './principal/principals';\nimport GroupRoles from './role/group-roles';\nimport { fetchGroup } from '../../redux/actions/group-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { Alert, AlertActionCloseButton, Button, Popover, Split, SplitItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport './group.scss';\n\nimport EditGroup from './edit-group-modal';\n\nconst Group = ({\n  match: { params: { uuid }},\n  group,\n  fetchGroup,\n  isFetching\n}) => {\n  const breadcrumbsList = () => [\n    { title: 'Groups', to: '/groups' },\n    { title: group.name, isActive: true }\n  ];\n\n  const tabItems = [\n    { eventKey: 0, title: 'Roles', name: `/groups/detail/${uuid}/roles` },\n    { eventKey: 1, title: 'Members', name: `/groups/detail/${uuid}/members` }\n  ];\n  const [ showEdit, setShowEdit ] = useState(false);\n  const [ showDefaultGroupChangedInfo, setShowDefaultGroupChangedInfo ] = useState(false);\n\n  const fetchData = (apiProps) => {\n    fetchGroup(apiProps);\n  };\n\n  useEffect(() => {\n    fetchData(uuid);\n  }, []);\n\n  const defaultGroupChangedIcon = (name) => (\n    <div\n      style={ { display: 'inline-flex' } }>\n      { name }\n      <div className=\"pf-u-ml-sm\">\n        <Popover\n          aria-label=\"default-group-icon\"\n          bodyContent={ <div>Now that you have edited the <b>Default user access</b> group, the system will no longer update it with new default access roles.\n                The group name has changed to <b>Custom default user access</b>.</div> }\n        >\n          <InfoCircleIcon className=\"ins-c-rbac__default-group-info-icon\"/>\n        </Popover>\n\n      </div>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <TopToolbar breadcrumbs={ breadcrumbsList() }>\n        <Split gutter=\"md\">\n          <SplitItem isFilled>\n            <TopToolbarTitle\n              title={ !isFetching && group\n                ? <Fragment>{ group.platform_default && !group.system ? defaultGroupChangedIcon(group.name) : group.name }</Fragment>\n                : undefined }\n              description={ !isFetching && group ? group.description : undefined } />\n          </SplitItem>\n          <SplitItem>\n            { group.platform_default\n              ? null\n              : <Button onClick={ () => setShowEdit(true) } variant='secondary'>Edit group</Button>\n            }\n          </SplitItem>\n          <EditGroup\n            isOpen={ showEdit }\n            group={ group }\n            closeUrl={ `group/detail/${uuid}` }\n            onClose={ () => setShowEdit(false) }\n            postMethod={ () => {\n              fetchData(uuid);\n              setShowEdit(false);\n            } }\n          />\n\n        </Split>\n        { showDefaultGroupChangedInfo\n          ? <Alert\n            variant=\"info\"\n            isInline\n            title=\"Default user access group has changed\"\n            action={ <AlertActionCloseButton onClose={ () => setShowDefaultGroupChangedInfo(false) } /> }\n            className=\"pf-u-mb-lg pf-u-mt-sm\"\n          >\n            Now that you have edited the <b>Default user access</b> group, the system will no longer update it with new default access roles.\n                The group name has changed to <b>Custom default user access</b>.\n          </Alert>\n          : null\n        }\n      </TopToolbar>\n      <AppTabs isHeader tabItems={ tabItems } />\n      <Switch>\n        <Route\n          path={ `/groups/detail/:uuid/roles` }\n          render={ props => <GroupRoles { ...props } onDefaultGroupChanged={ setShowDefaultGroupChangedInfo }/> } />\n        <Route path={ `/groups/detail/:uuid/members` } component={ GroupPrincipals } />\n        <Route render={ () => <Redirect to={ `/groups/detail/${uuid}/roles` } /> } />\n      </Switch>\n      { !group && <ListLoader/> }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ groupReducer: { selectedGroup, isLoading }}) => ({\n  group: selectedGroup,\n  isFetching: isLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup\n}, dispatch);\n\nGroup.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  match: PropTypes.object,\n  group: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    platform_default: PropTypes.string,\n    system: PropTypes.string\n  }),\n  isFetching: PropTypes.bool,\n  fetchGroup: PropTypes.func\n};\n\nGroup.defaultProps = {\n  isFetching: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\n\n","import React from 'react';\nimport { RowWrapper } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nconst GroupRowWrapper = ({ className, row, ...props }) => {\n  return (\n    <RowWrapper\n      className={ clsx(className, {\n        'ins-c-rbac__group-default': row.isPlatformDefault\n      }) }\n      row={ row }\n      { ...props }\n    />\n  );\n};\n\nGroupRowWrapper.propTypes = {\n  row: PropTypes.shape({\n    isPlatformDefault: PropTypes.bool\n  }),\n  className: PropTypes.string\n};\n\nexport default GroupRowWrapper;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { Button, Stack, StackItem } from '@patternfly/react-core';\nimport AddGroupWizard from './add-group/add-group-wizard';\nimport EditGroup from './edit-group-modal';\nimport RemoveGroup from './remove-group-modal';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { createRows } from './group-table-helpers';\nimport { fetchGroups } from '../../redux/actions/group-actions';\nimport Group from './group';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport Role from '../role/role';\nimport GroupRowWrapper from './group-row-wrapper';\nimport './groups.scss';\n\nconst columns = [\n  { title: 'Name', key: 'name', transforms: [ sortable ]},\n  { title: 'Roles' },\n  { title: 'Members' },\n  { title: 'Last modified', key: 'modified', transforms: [ sortable ]}\n];\n\nconst Groups = () => {\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ selectedRows, setSelectedRows ] = useState([]);\n  const [ removeGroupsList, setRemoveGroupsList ] = useState([]);\n\n  const dispatch = useDispatch();\n  const { groups, pagination, userIdentity, isLoading } = useSelector(({ groupReducer: { groups, isLoading }}) => ({\n    groups: groups.data,\n    pagination: groups.meta,\n    userIdentity: groups.identity,\n    isLoading\n  }), shallowEqual);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'groups', secondaryNav: true });\n    dispatch(fetchGroups({ ...pagination, name: filterValue }));\n  }, []);\n\n  const history = useHistory();\n\n  const setCheckedItems = (newSelection) => {\n    setSelectedRows((rows) => newSelection(rows)\n    .filter(({ platform_default: isPlatformDefault }) => !isPlatformDefault)\n    .map(({ uuid, name }) => ({ uuid, label: name })));\n  };\n\n  const routes = () =>\n    <Fragment>\n      <Route exact path=\"/groups/add-group\">\n        <AddGroupWizard\n          postMethod={ config => {\n              dispatch(fetchGroups(config));\n              setFilterValue('');\n            } } />\n      </Route>\n      <Route exact path=\"/groups/edit/:id\">\n        <EditGroup\n          postMethod={ config =>\n            {\n              dispatch(fetchGroups(config));\n              setFilterValue('');\n            } } isOpen />\n      </Route>\n      <Route exact path=\"/groups/removegroups\">\n        <RemoveGroup\n          postMethod={ (ids) => {\n            dispatch(fetchGroups());\n            setSelectedRows(selectedRows.filter(row => (!ids.includes(row.uuid))));\n            setFilterValue('');\n          } }\n          isModalOpen\n          groupsUuid={ removeGroupsList }\n        />\n      </Route>\n    </Fragment>;\n\n  const actionResolver = ({ isPlatformDefault }) =>\n    isPlatformDefault || !(userIdentity && userIdentity.user && userIdentity.user.is_org_admin) ? null :\n      [\n        {\n          title: 'Edit group',\n          onClick: (_event, _rowId, group) => {\n            history.push(`/groups/edit/${group.uuid}`);}\n        },\n        {\n          title: 'Delete group',\n          onClick: (_event, _rowId, group) => {\n            setRemoveGroupsList([ group ]);\n            history.push(`/groups/removegroups`);\n          }\n        }\n      ];\n\n  const toolbarButtons = () => [\n    ...userIdentity && userIdentity.user && userIdentity.user.is_org_admin ?\n      [\n        <Link to=\"/groups/add-group\" key=\"add-group\">\n          <Button\n            variant=\"primary\"\n            aria-label=\"Create group\"\n          >\n        Create group\n          </Button>\n        </Link>,\n        {\n          label: 'Edit group',\n          props: {\n            isDisabled: !(selectedRows.length === 1)\n          },\n          onClick: () => history.push(`/groups/edit/${selectedRows[0].uuid}`)\n        },\n        {\n          label: 'Delete Group(s)',\n          props: {\n            isDisabled: !selectedRows.length > 0\n          },\n          onClick: () => {\n            setRemoveGroupsList(selectedRows);\n            history.push(`/groups/removegroups`);\n          }\n        }\n      ] : []\n  ];\n\n  const renderGroupsList = () =>\n    <Stack>\n      <StackItem>\n        <TopToolbar paddingBottom>\n          <TopToolbarTitle title=\"Groups\"/>\n        </TopToolbar>\n      </StackItem>\n      <StackItem>\n        <Section type=\"content\" id={ 'tab-groups' }>\n          <TableToolbarView\n            data={ groups.map(group => group.platform_default ? { ...group, principalCount: 'All' } : group) }\n            createRows={ createRows }\n            columns={ columns }\n            isSelectable={ userIdentity && userIdentity.user && userIdentity.user.is_org_admin }\n            checkedRows={ selectedRows }\n            setCheckedItems={ setCheckedItems }\n            routes={ routes }\n            actionResolver={ actionResolver }\n            titlePlural=\"groups\"\n            titleSingular=\"group\"\n            pagination={ pagination }\n            filterValue={ filterValue }\n            fetchData={ config => dispatch(fetchGroups(config)) }\n            setFilterValue={ ({ name }) => setFilterValue(name) }\n            toolbarButtons={ toolbarButtons }\n            isLoading={ isLoading }\n            filterPlaceholder=\"name\"\n            rowWrapper={ GroupRowWrapper }\n          />\n        </Section>\n      </StackItem>\n    </Stack>;\n  return (\n    <Switch>\n      <Route path={ '/groups/detail/:groupUuid/roles/detail/:uuid' } render={ props => <Role { ...props }/> } />\n      <Route path={ '/groups/detail/:uuid' } render={ props => <Group { ...props }/> } />\n      <Route path={ '/groups' } render={ () => renderGroupsList() } />\n    </Switch>\n  );\n};\n\nexport default Groups;\n"],"sourceRoot":""}